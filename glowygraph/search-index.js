var searchIndex = {};
searchIndex['glowygraph'] = {"items":[[0,"","glowygraph","",null,null],[3,"Node","","Node is used to pass nodes into the renderer.",null,null],[12,"position","","",0,null],[12,"color","","",0,null],[12,"falloff","","Decreasing falloff makes the nodes brightness more centered at the middle and increasing it makes it consistent.",0,null],[3,"Renderer","","",null,null],[11,"clone","","",0,{"inputs":[{"name":"node"}],"output":{"name":"node"}}],[11,"build_bindings","","",0,{"inputs":[{"name":"node"}],"output":{"name":"vertexformat"}}],[11,"new","","Make a new Renderer from a glium::Display.",1,{"inputs":[{"name":"renderer"},{"name":"display"}],"output":{"name":"self"}}],[11,"render_nodes","","Take a modelview matrix, projection matrix, and a series of nodes and draw them in parallel on the GPU.",1,null],[11,"render_edges","","Take a modelview matrix, projection matrix, and a series of lines (edges) and draw them in parallel on the GPU.",1,null]],"paths":[[3,"Node"],[3,"Renderer"]]};
searchIndex['glium'] = {"items":[[0,"","glium","Easy-to-use, high-level, OpenGL3+ wrapper.",null,null],[0,"glutin","","",null,null],[0,"os","glium::glutin","Contains traits with platform-specific methods in them.",null,null],[0,"unix","glium::glutin::os","",null,null],[8,"WindowExt","glium::glutin::os::unix","Additional methods on `Window` that are specific to unix.",null,null],[10,"get_xlib_window","","Returns a pointer to the `Window` object of xlib that is used by this window.",0,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_xlib_display","","Returns a pointer to the `Display` object of xlib that is used by this window.",0,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[11,"new","backend::glutin_backend::glutin","Creates a new OpenGL context, and a Window for platforms where this is appropriate.",1,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"set_title","","Modifies the title of the window.",1,null],[11,"show","","Shows the window if it was hidden.",1,null],[11,"hide","","Hides the window if it was visible.",1,null],[11,"get_position","","Returns the position of the top-left hand corner of the window relative to the\n top-left hand corner of the desktop.",1,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"set_position","","Modifies the position of the window.",1,null],[11,"get_inner_size","","Returns the size in points of the client area of the window.",1,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"get_inner_size_points","","Returns the size in points of the client area of the window.",1,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"get_inner_size_pixels","","Returns the size in pixels of the client area of the window.",1,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"get_outer_size","","Returns the size in pixels of the window.",1,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"set_inner_size","","Modifies the inner size of the window.",1,null],[11,"poll_events","","Returns an iterator that poll for the next event in the window's events queue.\nReturns `None` if there is no event in the queue.",1,{"inputs":[{"name":"window"}],"output":{"name":"polleventsiterator"}}],[11,"wait_events","","Returns an iterator that returns events one by one, blocking if necessary until one is\navailable.",1,{"inputs":[{"name":"window"}],"output":{"name":"waiteventsiterator"}}],[11,"make_current","","Sets the context as the current context.",1,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"is_current","","Returns true if this context is the current one in this thread.",1,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"get_proc_address","","Returns the address of an OpenGL function.",1,null],[11,"swap_buffers","","Swaps the buffers in case of double or triple buffering.",1,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"platform_display","","DEPRECATED. Gets the native platform specific display for this window.\nThis is typically only required when integrating with\nother libraries that need this information.",1,null],[11,"platform_window","","DEPRECATED. Gets the native platform specific window handle. This is\ntypically only required when integrating with other libraries\nthat need this information.",1,null],[11,"get_api","","Returns the API that is currently provided by this window.",1,{"inputs":[{"name":"window"}],"output":{"name":"api"}}],[11,"get_pixel_format","","Returns the pixel format of this window.",1,{"inputs":[{"name":"window"}],"output":{"name":"pixelformat"}}],[11,"create_window_proxy","","Create a window proxy for this window, that can be freely\npassed to different threads.",1,{"inputs":[{"name":"window"}],"output":{"name":"windowproxy"}}],[11,"set_window_resize_callback","","Sets a resize callback that is called by Mac (and potentially other\noperating systems) during resize operations. This can be used to repaint\nduring window resizing.",1,null],[11,"set_cursor","","Modifies the mouse cursor of the window.\nHas no effect on Android.",1,null],[11,"hidpi_factor","","Returns the ratio between the backing framebuffer resolution and the\nwindow size in screen pixels. This is typically one for a normal display\nand two for a retina display.",1,{"inputs":[{"name":"window"}],"output":{"name":"f32"}}],[11,"set_cursor_position","","Changes the position of the cursor in window coordinates.",1,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"set_cursor_state","","Sets how glutin handles the cursor. See the documentation of `CursorState` for details.",1,{"inputs":[{"name":"window"},{"name":"cursorstate"}],"output":{"name":"result"}}],[11,"open","backend::glutin_backend::glutin::api::caca::ffi","Tries to open the dynamic library.",2,{"inputs":[{"name":"libcaca"},{"name":"path"}],"output":{"name":"result"}}],[11,"try_loading","","Try loading the static symbols linked to this library.",2,{"inputs":[{"name":"libcaca"}],"output":{"name":"result"}}],[11,"clone","backend::glutin_backend::glutin::api::caca","",3,{"inputs":[{"name":"windowproxy"}],"output":{"name":"windowproxy"}}],[11,"wakeup_event_loop","","",3,null],[11,"get_name","","",4,{"inputs":[{"name":"monitorid"}],"output":{"name":"option"}}],[11,"get_native_identifier","","",4,{"inputs":[{"name":"monitorid"}],"output":{"name":"nativemonitorid"}}],[11,"get_dimensions","","",4,null],[11,"next","","",5,{"inputs":[{"name":"polleventsiterator"}],"output":{"name":"option"}}],[11,"next","","",6,{"inputs":[{"name":"waiteventsiterator"}],"output":{"name":"option"}}],[11,"new","","",7,{"inputs":[{"name":"window"},{"name":"windowattributes"},{"name":"pixelformatrequirements"},{"name":"glattributes"}],"output":{"name":"result"}}],[11,"set_title","","",7,null],[11,"show","","",7,null],[11,"hide","","",7,null],[11,"get_position","","",7,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"set_position","","",7,null],[11,"get_inner_size","","",7,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"get_outer_size","","",7,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"set_inner_size","","",7,null],[11,"create_window_proxy","","",7,{"inputs":[{"name":"window"}],"output":{"name":"windowproxy"}}],[11,"poll_events","","",7,{"inputs":[{"name":"window"}],"output":{"name":"polleventsiterator"}}],[11,"wait_events","","",7,{"inputs":[{"name":"window"}],"output":{"name":"waiteventsiterator"}}],[11,"platform_display","","",7,null],[11,"platform_window","","",7,null],[11,"get_pixel_format","","",7,{"inputs":[{"name":"window"}],"output":{"name":"pixelformat"}}],[11,"set_window_resize_callback","","",7,null],[11,"set_cursor","","",7,null],[11,"set_cursor_state","","",7,{"inputs":[{"name":"window"},{"name":"cursorstate"}],"output":{"name":"result"}}],[11,"hidpi_factor","","",7,{"inputs":[{"name":"window"}],"output":{"name":"f32"}}],[11,"set_cursor_position","","",7,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"make_current","","",7,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"is_current","","",7,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"get_proc_address","","",7,null],[11,"swap_buffers","","",7,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"get_api","","",7,{"inputs":[{"name":"window"}],"output":{"name":"api"}}],[11,"get_pixel_format","","",7,{"inputs":[{"name":"window"}],"output":{"name":"pixelformat"}}],[11,"drop","","",7,null],[11,"clone","backend::glutin_backend::glutin::api::egl::ffi::egl","",8,{"inputs":[{"name":"fnptr"}],"output":{"name":"fnptr"}}],[11,"is_loaded","","Returns `true` if the function has been successfully loaded.",8,{"inputs":[{"name":"fnptr"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"egl"}],"output":{"name":"egl"}}],[11,"load_with","","Load each OpenGL symbol using a custom load function. This allows for the\nuse of functions like `glfwGetProcAddress` or `SDL_GL_GetProcAddress`.",9,{"inputs":[{"name":"egl"},{"name":"f"}],"output":{"name":"egl"}}],[11,"BindAPI","","",9,{"inputs":[{"name":"egl"},{"name":"u32"}],"output":{"name":"u32"}}],[11,"BindTexImage","","",9,null],[11,"ChooseConfig","","",9,null],[11,"ClientWaitSync","","",9,null],[11,"CopyBuffers","","",9,null],[11,"CreateContext","","",9,null],[11,"CreateImage","","",9,null],[11,"CreatePbufferFromClientBuffer","","",9,null],[11,"CreatePbufferSurface","","",9,null],[11,"CreatePixmapSurface","","",9,null],[11,"CreatePlatformPixmapSurface","","",9,null],[11,"CreatePlatformPixmapSurfaceEXT","","",9,null],[11,"CreatePlatformWindowSurface","","",9,null],[11,"CreatePlatformWindowSurfaceEXT","","",9,null],[11,"CreateSync","","",9,null],[11,"CreateWindowSurface","","",9,null],[11,"DestroyContext","","",9,null],[11,"DestroyImage","","",9,null],[11,"DestroySurface","","",9,null],[11,"DestroySync","","",9,null],[11,"GetConfigAttrib","","",9,null],[11,"GetConfigs","","",9,null],[11,"GetCurrentContext","","",9,null],[11,"GetCurrentDisplay","","",9,null],[11,"GetCurrentSurface","","",9,null],[11,"GetDisplay","","",9,null],[11,"GetError","","",9,{"inputs":[{"name":"egl"}],"output":{"name":"i32"}}],[11,"GetPlatformDisplay","","",9,null],[11,"GetPlatformDisplayEXT","","",9,null],[11,"GetProcAddress","","",9,null],[11,"GetSyncAttrib","","",9,null],[11,"Initialize","","",9,null],[11,"MakeCurrent","","",9,null],[11,"QueryAPI","","",9,{"inputs":[{"name":"egl"}],"output":{"name":"u32"}}],[11,"QueryContext","","",9,null],[11,"QueryString","","",9,null],[11,"QuerySurface","","",9,null],[11,"ReleaseTexImage","","",9,null],[11,"ReleaseThread","","",9,{"inputs":[{"name":"egl"}],"output":{"name":"u32"}}],[11,"SurfaceAttrib","","",9,null],[11,"SwapBuffers","","",9,null],[11,"SwapInterval","","",9,null],[11,"Terminate","","",9,null],[11,"WaitClient","","",9,{"inputs":[{"name":"egl"}],"output":{"name":"u32"}}],[11,"WaitGL","","",9,{"inputs":[{"name":"egl"}],"output":{"name":"u32"}}],[11,"WaitNative","","",9,{"inputs":[{"name":"egl"},{"name":"i32"}],"output":{"name":"u32"}}],[11,"WaitSync","","",9,null],[11,"new","backend::glutin_backend::glutin::api::egl","Start building an EGL context.",10,{"inputs":[{"name":"context"},{"name":"egl"},{"name":"pixelformatrequirements"},{"name":"glattributes"},{"name":"nativedisplay"}],"output":{"name":"result"}}],[11,"make_current","","",10,{"inputs":[{"name":"context"}],"output":{"name":"result"}}],[11,"is_current","","",10,{"inputs":[{"name":"context"}],"output":{"name":"bool"}}],[11,"get_proc_address","","",10,null],[11,"swap_buffers","","",10,{"inputs":[{"name":"context"}],"output":{"name":"result"}}],[11,"get_api","","",10,{"inputs":[{"name":"context"}],"output":{"name":"api"}}],[11,"get_pixel_format","","",10,{"inputs":[{"name":"context"}],"output":{"name":"pixelformat"}}],[11,"drop","","",10,null],[11,"get_native_visual_id","","",11,{"inputs":[{"name":"contextprototype"}],"output":{"name":"i32"}}],[11,"finish","","",11,null],[11,"finish_pbuffer","","",11,null],[11,"new","backend::glutin_backend::glutin::api::glx","",12,null],[11,"make_current","","",12,{"inputs":[{"name":"context"}],"output":{"name":"result"}}],[11,"is_current","","",12,{"inputs":[{"name":"context"}],"output":{"name":"bool"}}],[11,"get_proc_address","","",12,null],[11,"swap_buffers","","",12,{"inputs":[{"name":"context"}],"output":{"name":"result"}}],[11,"get_api","","",12,{"inputs":[{"name":"context"}],"output":{"name":"api"}}],[11,"get_pixel_format","","",12,{"inputs":[{"name":"context"}],"output":{"name":"pixelformat"}}],[11,"drop","","",12,null],[11,"get_visual_infos","","",13,{"inputs":[{"name":"contextprototype"}],"output":{"name":"xvisualinfo"}}],[11,"finish","","",13,{"inputs":[{"name":"contextprototype"},{"name":"u64"}],"output":{"name":"result"}}],[11,"from","backend::glutin_backend::glutin::api::osmesa","",14,{"inputs":[{"name":"osmesacreationerror"},{"name":"creationerror"}],"output":{"name":"osmesacreationerror"}}],[11,"new","","",15,null],[11,"get_framebuffer","","",15,null],[11,"get_dimensions","","",15,null],[11,"set_window_resize_callback","","",15,null],[11,"make_current","","",15,{"inputs":[{"name":"osmesacontext"}],"output":{"name":"result"}}],[11,"is_current","","",15,{"inputs":[{"name":"osmesacontext"}],"output":{"name":"bool"}}],[11,"get_proc_address","","",15,null],[11,"swap_buffers","","",15,{"inputs":[{"name":"osmesacontext"}],"output":{"name":"result"}}],[11,"get_api","","",15,{"inputs":[{"name":"osmesacontext"}],"output":{"name":"api"}}],[11,"get_pixel_format","","",15,{"inputs":[{"name":"osmesacontext"}],"output":{"name":"pixelformat"}}],[11,"drop","","",15,null],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",16,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",16,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",16,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",16,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",16,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",16,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",16,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",16,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",16,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",16,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",16,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",16,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",16,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",16,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",16,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",16,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",16,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",16,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",16,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",16,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",16,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",16,null],[11,"cloned","","Maps an `Option<&T>` to an `Option<T>` by cloning the contents of the\noption.",16,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",16,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","core::num","",17,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"fmt","","",17,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",17,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",17,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",17,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",17,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",17,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",17,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",17,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",17,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",17,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",17,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",17,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",17,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",17,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",17,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",17,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",17,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",17,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",17,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",17,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",17,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",17,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",17,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",17,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",17,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",17,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",17,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",17,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",17,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",17,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",17,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",17,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"eq","core::num::flt2dec::decoder","",18,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"fmt","","",18,{"inputs":[{"name":"decoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"decoded"}],"output":{"name":"decoded"}}],[11,"eq","","",19,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"fmt","","",19,{"inputs":[{"name":"fulldecoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"fulldecoded"}],"output":{"name":"fulldecoded"}}],[11,"fmt","core::num::flt2dec","",20,{"inputs":[{"name":"part"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",20,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"part"}],"output":{"name":"part"}}],[11,"len","","Returns the exact byte length of given part.",20,{"inputs":[{"name":"part"}],"output":{"name":"usize"}}],[11,"write","","Writes a part into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",20,null],[11,"clone","","",21,{"inputs":[{"name":"formatted"}],"output":{"name":"formatted"}}],[11,"len","","Returns the exact byte length of combined formatted result.",21,{"inputs":[{"name":"formatted"}],"output":{"name":"usize"}}],[11,"write","","Writes all formatted parts into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",21,null],[11,"fmt","","",22,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","core::num::dec2flt::rawfp","",23,{"inputs":[{"name":"unpacked"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"unpacked"}],"output":{"name":"unpacked"}}],[11,"new","","",23,{"inputs":[{"name":"unpacked"},{"name":"u64"},{"name":"i16"}],"output":{"name":"unpacked"}}],[11,"fmt","core::num::dec2flt::parse","",24,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"fmt","","",25,{"inputs":[{"name":"decimal"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",25,null],[11,"eq","","",26,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"fmt","","",26,{"inputs":[{"name":"parseresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::dec2flt","",27,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",27,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"floaterrorkind"}],"output":{"name":"floaterrorkind"}}],[11,"fmt","","",28,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",27,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::bignum","Makes a bignum from one digit.",29,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"from_u64","","Makes a bignum from `u64` value.",29,{"inputs":[{"name":"big32x40"},{"name":"u64"}],"output":{"name":"big32x40"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",29,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",29,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",29,{"inputs":[{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",29,{"inputs":[{"name":"big32x40"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",29,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"add_small","","",29,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",29,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",29,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",29,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",29,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",29,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",29,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",29,null],[11,"eq","","",29,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",29,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"option"}}],[11,"cmp","","",29,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"ordering"}}],[11,"clone","","",29,{"inputs":[{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"fmt","","",29,{"inputs":[{"name":"big32x40"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::bignum::tests","Makes a bignum from one digit.",30,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"from_u64","","Makes a bignum from `u64` value.",30,{"inputs":[{"name":"big8x3"},{"name":"u64"}],"output":{"name":"big8x3"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",30,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",30,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",30,{"inputs":[{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",30,{"inputs":[{"name":"big8x3"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",30,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"add_small","","",30,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",30,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",30,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",30,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",30,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",30,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",30,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",30,null],[11,"eq","","",30,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",30,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"option"}}],[11,"cmp","","",30,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"ordering"}}],[11,"clone","","",30,{"inputs":[{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"fmt","","",30,{"inputs":[{"name":"big8x3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::num::diy_float","",31,{"inputs":[{"name":"fp"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"mul","","Returns a correctly rounded product of itself and `other`.",31,{"inputs":[{"name":"fp"},{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize","","Normalizes itself so that the resulting mantissa is at least `2^63`.",31,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize_to","","Normalizes itself to have the shared exponent.\nIt can only decrease the exponent (and thus increase the mantissa).",31,{"inputs":[{"name":"fp"},{"name":"i16"}],"output":{"name":"fp"}}],[11,"fmt","core::num","",32,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",33,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",33,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",33,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",34,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",34,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",34,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",33,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",35,null],[11,"fmt","","",35,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",35,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",35,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",35,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",35,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",35,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",35,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",35,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",35,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually \"non-zero\".",35,{"inputs":[{"name":"nonzero"},{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",35,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",36,null],[11,"get","","Dereferences the content.",36,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",36,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",36,null],[11,"fmt","","",36,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",37,null],[11,"clone","","",37,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",37,null],[11,"fmt","","",37,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::marker","",38,null],[11,"eq","","",38,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",38,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",38,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",38,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",39,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",39,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",39,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",40,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",40,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",40,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",41,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",41,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",41,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",42,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",42,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",42,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",43,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",43,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",43,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",43,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",43,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",43,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","glium","",44,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",44,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",44,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",44,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",44,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",44,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",44,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",44,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",45,null],[11,"fmt","","",45,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",45,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",45,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",45,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",46,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",47,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",48,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",49,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",50,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",46,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",46,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",46,null],[11,"swap","","Stores a value into the bool, returning the old value.",46,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",46,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",46,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",46,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",46,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",46,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",47,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",47,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",47,null],[11,"swap","","Stores a value into the isize, returning the old value.",47,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",47,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",47,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",47,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",47,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",47,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",47,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",48,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",48,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",48,null],[11,"swap","","Stores a value into the usize, returning the old value.",48,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",48,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",48,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",48,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",48,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",48,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",48,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",49,null],[11,"load","","Loads a value from the pointer.",49,null],[11,"store","","Stores a value into the pointer.",49,null],[11,"swap","","Stores a value into the pointer, returning the old value.",49,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",49,null],[11,"fmt","","",48,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",47,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",46,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",49,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",51,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",51,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",51,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",51,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",51,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",51,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",51,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",52,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",52,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",52,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",53,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",53,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",53,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",53,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",53,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",53,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",53,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",53,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",53,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",54,null],[11,"clone","","",54,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",55,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",55,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",55,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",55,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",56,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",56,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",57,null],[11,"deref","","",56,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",56,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",58,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",58,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",58,null],[11,"clone","core::char","",59,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",60,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",59,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"clone","","",61,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",62,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",61,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"clone","core::iter","",63,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",63,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"next_back","","",63,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",64,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",64,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"next_back","","",64,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",65,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",65,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",65,null],[11,"clone","","",66,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"clone","","",67,{"inputs":[{"name":"chainstate"}],"output":{"name":"chainstate"}}],[11,"next","","",66,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",66,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",66,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",66,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",66,null],[11,"next_back","","",66,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",68,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",68,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",68,null],[11,"next_back","","",68,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",69,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",69,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",69,null],[11,"next_back","","",69,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",70,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",70,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",70,null],[11,"next_back","","",70,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",71,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",71,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",71,null],[11,"next_back","","",71,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",72,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",72,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",72,null],[11,"nth","","",72,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",72,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",72,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",73,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",73,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",73,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",73,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",73,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",73,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",73,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",73,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",74,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",74,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",74,null],[11,"clone","","",75,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",75,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",75,null],[11,"clone","","",76,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",76,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",76,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",76,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",76,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",76,null],[11,"clone","","",77,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",77,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",77,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",77,null],[11,"clone","","",78,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",78,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",78,null],[11,"clone","","",79,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",79,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",79,null],[11,"next_back","","",79,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",80,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",80,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",80,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",80,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",80,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",80,null],[11,"next_back","","",80,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",81,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",81,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",81,null],[11,"next_back","","",81,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",82,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",41,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",40,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",82,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",82,null],[11,"clone","","",83,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",83,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",83,null],[11,"next_back","","",83,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",82,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",82,null],[11,"next","core::ops","",40,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",40,null],[11,"next_back","","",40,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",41,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",84,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",84,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",84,null],[11,"next_back","","",84,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",85,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",85,null],[11,"next_back","","",85,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",85,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",85,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",85,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",86,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",86,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",86,null],[11,"next_back","","",86,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",86,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::option","",16,null],[11,"fmt","","",16,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",16,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",16,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",16,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",16,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",16,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",16,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",16,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"default","","",16,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",16,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",87,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",87,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",87,null],[11,"next_back","","",87,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",88,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",88,null],[11,"next_back","","",88,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",88,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",89,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",89,null],[11,"next_back","","",89,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",90,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",90,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",90,null],[11,"next_back","","",90,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",16,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",91,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",92,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",93,null],[11,"fmt","","",93,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",93,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",93,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",93,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",93,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",93,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",93,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",93,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",93,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",93,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",93,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",93,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",93,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",93,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",93,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",93,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",93,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",93,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",93,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",93,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",93,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",93,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",93,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",93,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",93,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",93,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",93,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",93,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",93,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",93,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",93,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",93,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",94,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",94,null],[11,"next_back","","",94,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",94,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",95,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",95,null],[11,"next_back","","",95,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",96,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",96,null],[11,"next_back","","",96,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",93,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::simd","",97,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",97,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",98,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",98,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",99,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",99,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",100,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",100,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",101,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",101,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",102,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",102,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",103,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",103,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",104,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",104,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",105,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",105,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",106,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",106,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"add","","",101,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"add","","",102,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"add","","",103,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"add","","",104,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"add","","",97,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"add","","",98,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"add","","",99,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"add","","",100,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"add","","",105,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"add","","",106,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"sub","","",101,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"sub","","",102,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"sub","","",103,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"sub","","",104,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"sub","","",97,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"sub","","",98,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"sub","","",99,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"sub","","",100,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"sub","","",105,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"sub","","",106,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"mul","","",101,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"mul","","",102,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"mul","","",103,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"mul","","",104,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"mul","","",97,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"mul","","",98,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"mul","","",99,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"mul","","",100,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"mul","","",105,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"mul","","",106,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"div","","",105,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"div","","",106,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"shl","","",101,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shl","","",102,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shl","","",103,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shl","","",104,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shl","","",97,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shl","","",98,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shl","","",99,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shl","","",100,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"shr","","",101,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shr","","",102,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shr","","",103,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shr","","",104,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shr","","",97,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shr","","",98,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shr","","",99,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shr","","",100,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitand","","",101,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitand","","",102,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitand","","",103,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitand","","",104,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitand","","",97,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitand","","",98,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitand","","",99,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitand","","",100,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitor","","",101,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitor","","",102,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitor","","",103,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitor","","",104,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitor","","",97,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitor","","",98,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitor","","",99,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitor","","",100,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitxor","","",101,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitxor","","",102,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitxor","","",103,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitxor","","",104,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitxor","","",97,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitxor","","",98,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitxor","","",99,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitxor","","",100,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",107,null],[11,"next","","",107,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",107,null],[11,"count","","",107,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",107,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",107,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",107,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",107,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",108,null],[11,"next","","",108,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",108,null],[11,"count","","",108,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",108,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",108,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",108,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",109,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",109,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",109,null],[11,"next_back","","",109,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",109,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",110,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",110,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",110,null],[11,"next_back","","",110,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",111,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",111,null],[11,"next","","",112,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",112,null],[11,"next","","",113,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",113,null],[11,"next","","",114,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",114,null],[11,"next","","",115,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",115,null],[11,"clone","","",116,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",116,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",116,null],[11,"count","","",116,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"nth","","",116,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",116,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"next_back","","",116,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"clone","","",117,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",117,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",117,null],[11,"count","","",117,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"nth","","",117,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",117,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next_back","","",117,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next","","",118,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",118,null],[11,"count","","",118,{"inputs":[{"name":"chunksmut"}],"output":{"name":"usize"}}],[11,"nth","","",118,{"inputs":[{"name":"chunksmut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",118,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"next_back","","",118,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"fmt","core::str::pattern","",119,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",119,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",119,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",119,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",120,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",121,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",120,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",120,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",120,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",122,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",122,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",122,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",122,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",122,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",122,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",122,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",122,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",123,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",123,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",123,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",123,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",123,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",123,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",123,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",123,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",124,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",124,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",124,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",124,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",124,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",124,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",124,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",124,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",125,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",125,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",126,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",126,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",127,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",127,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",125,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",125,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",125,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",125,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",125,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",128,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",128,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",129,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",129,null],[11,"matching","","",129,null],[11,"use_early_reject","","",130,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",130,null],[11,"matching","","",130,null],[11,"eq","core::str","",131,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",131,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",131,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",131,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",131,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",132,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",132,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",132,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",132,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",132,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",132,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",133,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",133,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",133,null],[11,"next_back","","",133,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",133,{"inputs":[{"name":"chars"}],"output":{"name":"str"}}],[11,"clone","","",134,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",134,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",134,null],[11,"next_back","","",134,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",134,{"inputs":[{"name":"charindices"}],"output":{"name":"str"}}],[11,"clone","","",135,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"next","","",135,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",135,null],[11,"count","","",135,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"last","","",135,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"nth","","",135,{"inputs":[{"name":"bytes"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next_back","","",135,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",135,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",136,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",137,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",137,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",138,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",138,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",137,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",138,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",139,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",139,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",140,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",140,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",139,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",140,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",141,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",142,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",142,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",143,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",143,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",144,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",145,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",145,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",146,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",146,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",145,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",146,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",147,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",148,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",148,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",149,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",149,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",148,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",149,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",150,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",150,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",150,null],[11,"next_back","","",150,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",151,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",152,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",152,null],[11,"call_mut","","",152,null],[11,"call_once","","",152,null],[11,"next","","",151,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",151,null],[11,"next_back","","",151,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",153,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",154,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",154,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",154,null],[11,"finish","","",154,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",154,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",154,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"eq","core::fmt::num","",155,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",155,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",155,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",156,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",156,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",156,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",157,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",157,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",157,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",158,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",158,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",158,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",159,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",159,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",159,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",160,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",160,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",160,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",161,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",162,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",163,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Finishes output and returns any error encountered.",163,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",164,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Finishes output and returns any error encountered.",164,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"formatter","","Returns the wrapped `Formatter`.",164,{"inputs":[{"name":"debugtuple"}],"output":{"name":"formatter"}}],[11,"finish","","",165,null],[11,"entry","","Adds a new entry to the set output.",166,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"entries","","Adds the contents of an iterator of entries to the set output.",166,{"inputs":[{"name":"debugset"},{"name":"i"}],"output":{"name":"debugset"}}],[11,"finish","","Finishes output and returns any error encountered.",166,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the list output.",167,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"entries","","Adds the contents of an iterator of entries to the list output.",167,{"inputs":[{"name":"debuglist"},{"name":"i"}],"output":{"name":"debuglist"}}],[11,"finish","","Finishes output and returns any error encountered.",167,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",168,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"entries","","Adds the contents of an iterator of entries to the map output.",168,{"inputs":[{"name":"debugmap"},{"name":"i"}],"output":{"name":"debugmap"}}],[11,"finish","","Finishes output and returns any error encountered.",168,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"clone","core::fmt::rt::v1","",169,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",170,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",171,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",171,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",171,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",172,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",173,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","core::fmt","",174,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",174,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",175,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",176,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",177,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",177,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",177,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",178,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",178,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",178,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",178,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",178,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as 'fill' whenever there is alignment",178,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",178,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",178,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",178,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"sign_plus","","Determines if the `+` flag was specified.",178,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_minus","","Determines if the `-` flag was specified.",178,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"alternate","","Determines if the `#` flag was specified.",178,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",178,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",178,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",178,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",178,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",178,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",178,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"write_str","","",178,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",178,{"inputs":[{"name":"formatter"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","",178,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"fmt","","",174,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",38,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",51,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",53,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",56,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","backend::glutin_backend::glutin::api::wayland::context","",179,{"inputs":[{"name":"wayland_context"}],"output":{"name":"option"}}],[11,"init","","",180,null],[11,"rebind","","",180,{"inputs":[{"name":"innerenv"}],"output":{"name":"option"}}],[11,"rebind_id","","",180,{"inputs":[{"name":"innerenv"},{"name":"u32"}],"output":{"name":"option"}}],[11,"new_surface","","",181,{"inputs":[{"name":"waylandcontext"}],"output":{"name":"option"}}],[11,"dropped_surface","","",181,null],[11,"decorated_from","","",181,{"inputs":[{"name":"waylandcontext"},{"name":"wlsurface"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[11,"plain_from","","",181,{"inputs":[{"name":"waylandcontext"},{"name":"wlsurface"},{"name":"option"}],"output":{"name":"option"}}],[11,"display_ptr","","",181,null],[11,"dispatch_events","","",181,null],[11,"flush_events","","",181,{"inputs":[{"name":"waylandcontext"}],"output":{"name":"result"}}],[11,"read_events","","",181,{"inputs":[{"name":"waylandcontext"}],"output":{"name":"result"}}],[11,"monitor_ids","","",181,{"inputs":[{"name":"waylandcontext"}],"output":{"name":"vec"}}],[11,"monitor_name","","",181,{"inputs":[{"name":"waylandcontext"},{"name":"proxyid"}],"output":{"name":"option"}}],[11,"monitor_dimensions","","",181,{"inputs":[{"name":"waylandcontext"},{"name":"proxyid"}],"output":{"name":"option"}}],[11,"clone","backend::glutin_backend::glutin::api::wayland::monitor","",182,{"inputs":[{"name":"monitorid"}],"output":{"name":"monitorid"}}],[11,"get_name","","",182,{"inputs":[{"name":"monitorid"}],"output":{"name":"option"}}],[11,"get_native_identifier","","",182,{"inputs":[{"name":"monitorid"}],"output":{"name":"nativemonitorid"}}],[11,"get_dimensions","","",182,null],[11,"clone","backend::glutin_backend::glutin::api::wayland::window","",183,{"inputs":[{"name":"windowproxy"}],"output":{"name":"windowproxy"}}],[11,"wakeup_event_loop","","",183,null],[11,"next","","",184,{"inputs":[{"name":"polleventsiterator"}],"output":{"name":"option"}}],[11,"next","","",185,{"inputs":[{"name":"waiteventsiterator"}],"output":{"name":"option"}}],[11,"new","","",186,{"inputs":[{"name":"window"},{"name":"windowattributes"},{"name":"pixelformatrequirements"},{"name":"glattributes"}],"output":{"name":"result"}}],[11,"set_title","","",186,null],[11,"show","","",186,null],[11,"hide","","",186,null],[11,"get_position","","",186,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"set_position","","",186,null],[11,"get_inner_size","","",186,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"get_outer_size","","",186,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"set_inner_size","","",186,null],[11,"create_window_proxy","","",186,{"inputs":[{"name":"window"}],"output":{"name":"windowproxy"}}],[11,"poll_events","","",186,{"inputs":[{"name":"window"}],"output":{"name":"polleventsiterator"}}],[11,"wait_events","","",186,{"inputs":[{"name":"window"}],"output":{"name":"waiteventsiterator"}}],[11,"set_window_resize_callback","","",186,null],[11,"set_cursor","","",186,null],[11,"set_cursor_state","","",186,{"inputs":[{"name":"window"},{"name":"cursorstate"}],"output":{"name":"result"}}],[11,"hidpi_factor","","",186,{"inputs":[{"name":"window"}],"output":{"name":"f32"}}],[11,"set_cursor_position","","",186,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"platform_display","","",186,null],[11,"platform_window","","",186,null],[11,"make_current","","",186,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"is_current","","",186,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"get_proc_address","","",186,null],[11,"swap_buffers","","",186,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"get_api","","",186,{"inputs":[{"name":"window"}],"output":{"name":"api"}}],[11,"get_pixel_format","","",186,{"inputs":[{"name":"window"}],"output":{"name":"pixelformat"}}],[11,"drop","","",186,null],[11,"clone","backend::glutin_backend::glutin::api::x11::ffi::glx","",187,{"inputs":[{"name":"fnptr"}],"output":{"name":"fnptr"}}],[11,"is_loaded","","Returns `true` if the function has been successfully loaded.",187,{"inputs":[{"name":"fnptr"}],"output":{"name":"bool"}}],[11,"clone","","",188,{"inputs":[{"name":"glx"}],"output":{"name":"glx"}}],[11,"load_with","","Load each OpenGL symbol using a custom load function. This allows for the\nuse of functions like `glfwGetProcAddress` or `SDL_GL_GetProcAddress`.",188,{"inputs":[{"name":"glx"},{"name":"f"}],"output":{"name":"glx"}}],[11,"ChooseFBConfig","","",188,null],[11,"ChooseVisual","","",188,null],[11,"CopyContext","","",188,null],[11,"CreateContext","","",188,null],[11,"CreateGLXPixmap","","",188,null],[11,"CreateNewContext","","",188,null],[11,"CreatePbuffer","","",188,null],[11,"CreatePixmap","","",188,null],[11,"CreateWindow","","",188,null],[11,"DestroyContext","","",188,null],[11,"DestroyGLXPixmap","","",188,null],[11,"DestroyPbuffer","","",188,null],[11,"DestroyPixmap","","",188,null],[11,"DestroyWindow","","",188,null],[11,"GetClientString","","",188,null],[11,"GetConfig","","",188,null],[11,"GetCurrentContext","","",188,null],[11,"GetCurrentDisplay","","",188,null],[11,"GetCurrentDrawable","","",188,{"inputs":[{"name":"glx"}],"output":{"name":"u64"}}],[11,"GetCurrentReadDrawable","","",188,{"inputs":[{"name":"glx"}],"output":{"name":"u64"}}],[11,"GetFBConfigAttrib","","",188,null],[11,"GetFBConfigs","","",188,null],[11,"GetProcAddress","","",188,null],[11,"GetSelectedEvent","","",188,null],[11,"GetVisualFromFBConfig","","",188,null],[11,"IsDirect","","",188,null],[11,"MakeContextCurrent","","",188,null],[11,"MakeCurrent","","",188,null],[11,"QueryContext","","",188,null],[11,"QueryDrawable","","",188,null],[11,"QueryExtension","","",188,null],[11,"QueryExtensionsString","","",188,null],[11,"QueryServerString","","",188,null],[11,"QueryVersion","","",188,null],[11,"SelectEvent","","",188,null],[11,"SwapBuffers","","",188,null],[11,"UseXFont","","",188,null],[11,"WaitGL","","",188,null],[11,"WaitX","","",188,null],[11,"clone","backend::glutin_backend::glutin::api::x11::ffi::glx_extra","",189,{"inputs":[{"name":"fnptr"}],"output":{"name":"fnptr"}}],[11,"is_loaded","","Returns `true` if the function has been successfully loaded.",189,{"inputs":[{"name":"fnptr"}],"output":{"name":"bool"}}],[11,"clone","","",190,{"inputs":[{"name":"glx"}],"output":{"name":"glx"}}],[11,"load_with","","Load each OpenGL symbol using a custom load function. This allows for the\nuse of functions like `glfwGetProcAddress` or `SDL_GL_GetProcAddress`.",190,{"inputs":[{"name":"glx"},{"name":"f"}],"output":{"name":"glx"}}],[11,"ChooseFBConfig","","",190,null],[11,"ChooseVisual","","",190,null],[11,"CopyContext","","",190,null],[11,"CreateContextAttribsARB","","",190,null],[11,"CreateContext","","",190,null],[11,"CreateGLXPixmap","","",190,null],[11,"CreateNewContext","","",190,null],[11,"CreatePbuffer","","",190,null],[11,"CreatePixmap","","",190,null],[11,"CreateWindow","","",190,null],[11,"DestroyContext","","",190,null],[11,"DestroyGLXPixmap","","",190,null],[11,"DestroyPbuffer","","",190,null],[11,"DestroyPixmap","","",190,null],[11,"DestroyWindow","","",190,null],[11,"GetClientString","","",190,null],[11,"GetConfig","","",190,null],[11,"GetCurrentContext","","",190,null],[11,"GetCurrentDisplay","","",190,null],[11,"GetCurrentDrawable","","",190,{"inputs":[{"name":"glx"}],"output":{"name":"u64"}}],[11,"GetCurrentReadDrawable","","",190,{"inputs":[{"name":"glx"}],"output":{"name":"u64"}}],[11,"GetFBConfigAttrib","","",190,null],[11,"GetFBConfigs","","",190,null],[11,"GetProcAddress","","",190,null],[11,"GetSelectedEvent","","",190,null],[11,"GetVisualFromFBConfig","","",190,null],[11,"IsDirect","","",190,null],[11,"MakeContextCurrent","","",190,null],[11,"MakeCurrent","","",190,null],[11,"QueryContext","","",190,null],[11,"QueryDrawable","","",190,null],[11,"QueryExtension","","",190,null],[11,"QueryExtensionsString","","",190,null],[11,"QueryServerString","","",190,null],[11,"QueryVersion","","",190,null],[11,"SelectEvent","","",190,null],[11,"SwapBuffers","","",190,null],[11,"SwapIntervalEXT","","",190,null],[11,"SwapIntervalSGI","","",190,{"inputs":[{"name":"glx"},{"name":"i32"}],"output":{"name":"i32"}}],[11,"UseXFont","","",190,null],[11,"WaitGL","","",190,null],[11,"WaitX","","",190,null],[11,"fmt","backend::glutin_backend::glutin::api::x11::input","",191,{"inputs":[{"name":"axistype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",192,{"inputs":[{"name":"axis"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",193,{"inputs":[{"name":"axisvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",194,null],[11,"translate_key_event","","",194,{"inputs":[{"name":"xinputeventhandler"},{"name":"xkeyevent"}],"output":{"name":"vec"}}],[11,"translate_event","","",194,{"inputs":[{"name":"xinputeventhandler"},{"name":"xgenericeventcookie"}],"output":{"name":"option"}}],[11,"clone","backend::glutin_backend::glutin::api::x11::monitor","",195,{"inputs":[{"name":"monitorid"}],"output":{"name":"monitorid"}}],[11,"get_name","","",195,{"inputs":[{"name":"monitorid"}],"output":{"name":"option"}}],[11,"get_native_identifier","","",195,{"inputs":[{"name":"monitorid"}],"output":{"name":"nativemonitorid"}}],[11,"get_dimensions","","",195,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",196,{"inputs":[{"name":"mutex"},{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",196,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",196,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",196,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this mutex, returning the underlying data.",196,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",196,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"from","alloc::boxed","",197,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",197,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",197,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",197,{"inputs":[{"name":"box"},{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",131,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"str"}}],[11,"description","","",132,{"inputs":[{"name":"utf8error"}],"output":{"name":"str"}}],[11,"description","core::num","",33,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"description","core::num::dec2flt","",27,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"str"}}],[11,"description","collections::string","",198,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"str"}}],[11,"description","","",199,{"inputs":[{"name":"fromutf16error"}],"output":{"name":"str"}}],[11,"is","glium","Returns true if the boxed type is the same as `T`",200,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",200,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",200,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",200,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",200,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",200,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",200,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",200,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",200,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",200,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",200,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",200,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"next","std::ascii","",201,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",201,null],[11,"next_back","","",201,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"clone","std::thread::local","",202,{"inputs":[{"name":"localkeystate"}],"output":{"name":"localkeystate"}}],[11,"eq","","",202,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"ne","","",202,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"with","","Acquires a reference to the value in this TLS key.",203,{"inputs":[{"name":"localkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"state","","Query the current state of this key.",203,{"inputs":[{"name":"localkey"}],"output":{"name":"localkeystate"}}],[11,"new","std::thread::local::imp","",204,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"get","","",204,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"set","std::thread::scoped_tls","Inserts a value into this scoped thread local storage slot for a\nduration of a closure.",205,{"inputs":[{"name":"scopedkey"},{"name":"t"},{"name":"f"}],"output":{"name":"r"}}],[11,"with","","Gets a value out of this scoped variable.",205,{"inputs":[{"name":"scopedkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"is_set","","Test whether this TLS key has been `set` for the current thread.",205,{"inputs":[{"name":"scopedkey"}],"output":{"name":"bool"}}],[11,"new","std::thread::scoped_tls::imp","",206,{"inputs":[{"name":"keyinner"}],"output":{"name":"keyinner"}}],[11,"set","","",206,null],[11,"get","","",206,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",207,{"inputs":[{"name":"builder"}],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",207,{"inputs":[{"name":"builder"},{"name":"string"}],"output":{"name":"builder"}}],[11,"stack_size","","Sets the size of the stack for the new thread.",207,{"inputs":[{"name":"builder"},{"name":"usize"}],"output":{"name":"builder"}}],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",207,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"name":"result"}}],[11,"clone","","",208,{"inputs":[{"name":"thread"}],"output":{"name":"thread"}}],[11,"unpark","","Atomically makes the handle's token available if it is not already.",208,null],[11,"name","","Gets the thread's name.",208,{"inputs":[{"name":"thread"}],"output":{"name":"option"}}],[11,"fmt","","",208,{"inputs":[{"name":"thread"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",208,{"inputs":[{"name":"thread"},{"name":"option"}],"output":{"name":"thread"}}],[11,"thread","","Extracts a handle to the underlying thread",209,{"inputs":[{"name":"joinhandle"}],"output":{"name":"thread"}}],[11,"join","","Waits for the associated thread to finish.",209,{"inputs":[{"name":"joinhandle"}],"output":{"name":"result"}}],[11,"clone","std::collections::hash::table","",210,{"inputs":[{"name":"rawbucket"}],"output":{"name":"rawbucket"}}],[11,"clone","","",211,{"inputs":[{"name":"bucket"}],"output":{"name":"bucket"}}],[11,"clone","","",212,{"inputs":[{"name":"safehash"}],"output":{"name":"safehash"}}],[11,"eq","","",212,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"ne","","",212,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"inspect","","Peek at the hash value, which is guaranteed to be non-zero.",212,{"inputs":[{"name":"safehash"}],"output":{"name":"u64"}}],[11,"table","","Borrow a reference to the table.",213,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",213,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",213,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"table","","Borrow a reference to the table.",214,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",214,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",211,{"inputs":[{"name":"bucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",211,{"inputs":[{"name":"bucket"}],"output":{"name":"usize"}}],[11,"new","","",211,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"safehash"}],"output":{"name":"bucket"}}],[11,"at_index","","",211,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"usize"}],"output":{"name":"bucket"}}],[11,"first","","",211,{"inputs":[{"name":"bucket"},{"name":"m"}],"output":{"name":"bucket"}}],[11,"peek","","Reads a bucket at a given index, returning an enum indicating whether\nit's initialized or not. You need to match on this enum to get\nthe appropriate types to call most of the other functions in\nthis module.",211,{"inputs":[{"name":"bucket"}],"output":{"name":"bucketstate"}}],[11,"next","","Modifies the bucket pointer in place to make it point to the next slot.",211,null],[11,"next","","",214,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",214,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"gap_peek","","",214,{"inputs":[{"name":"emptybucket"}],"output":{"name":"option"}}],[11,"put","","Puts given key and value pair, along with the key's hash,\ninto this bucket in the hashtable. Note how `self` is 'moved' into\nthis function, because this slot will no longer be empty when\nwe return! A `FullBucket` is returned for later use, pointing to\nthe newly-filled slot in the hashtable.",214,{"inputs":[{"name":"emptybucket"},{"name":"safehash"},{"name":"k"},{"name":"v"}],"output":{"name":"fullbucket"}}],[11,"next","","",213,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",213,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"distance","","Get the distance between this bucket and the 'ideal' location\nas determined by the key's hash stored in it.",213,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"hash","","",213,{"inputs":[{"name":"fullbucket"}],"output":{"name":"safehash"}}],[11,"read","","Gets references to the key and value at a given index.",213,null],[11,"take","","Removes this bucket's key and value from the hashtable.",213,null],[11,"replace","","",213,null],[11,"read_mut","","Gets mutable references to the key and value at a given index.",213,null],[11,"into_refs","","Exchange a bucket state for immutable references into the table.\nBecause the underlying reference to the table is also consumed,\nno further changes to the structure of the table are possible;\nin exchange for this, the returned references have a longer lifetime\nthan the references returned by `read()`.",213,null],[11,"into_mut_refs","","This works similarly to `into_refs`, exchanging a bucket state\nfor mutable references into the table.",213,null],[11,"expect_full","","",215,{"inputs":[{"name":"bucketstate"}],"output":{"name":"fullbucket"}}],[11,"full","","",216,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"fullbucket"}}],[11,"shift","","",216,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"option"}}],[11,"new","","Creates a new raw table from a given capacity. All buckets are\ninitially empty.",217,{"inputs":[{"name":"rawtable"},{"name":"usize"}],"output":{"name":"rawtable"}}],[11,"capacity","","The hashtable's capacity, similar to a vector's.",217,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"size","","The number of elements ever `put` in the hashtable, minus the number\nof elements ever `take`n.",217,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"iter","","",217,{"inputs":[{"name":"rawtable"}],"output":{"name":"iter"}}],[11,"iter_mut","","",217,{"inputs":[{"name":"rawtable"}],"output":{"name":"itermut"}}],[11,"into_iter","","",217,{"inputs":[{"name":"rawtable"}],"output":{"name":"intoiter"}}],[11,"drain","","",217,{"inputs":[{"name":"rawtable"}],"output":{"name":"drain"}}],[11,"clone","","",218,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"rawbuckets"}}],[11,"next","","",218,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"option"}}],[11,"next","","",219,{"inputs":[{"name":"revmovebuckets"}],"output":{"name":"option"}}],[11,"clone","","",220,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",220,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",220,null],[11,"len","","",220,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",221,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",221,null],[11,"len","","",221,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",222,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",222,null],[11,"len","","",222,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",223,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",223,null],[11,"len","","",223,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"drop","","",223,null],[11,"clone","","",217,{"inputs":[{"name":"rawtable"}],"output":{"name":"rawtable"}}],[11,"drop","","",217,null],[11,"clone","std::collections::hash::map","",224,{"inputs":[{"name":"defaultresizepolicy"}],"output":{"name":"defaultresizepolicy"}}],[11,"clone","","",225,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"new","","Creates an empty HashMap.",225,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",225,{"inputs":[{"name":"hashmap"},{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hash_state","","Creates an empty hashmap which will use the given hasher to hash keys.",225,{"inputs":[{"name":"hashmap"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",225,{"inputs":[{"name":"hashmap"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",225,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",225,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",225,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&'a K`.",225,{"inputs":[{"name":"hashmap"}],"output":{"name":"keys"}}],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&'a V`.",225,{"inputs":[{"name":"hashmap"}],"output":{"name":"values"}}],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&'a K, &'a V)`.",225,{"inputs":[{"name":"hashmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&'a K, &'a mut V)`.",225,{"inputs":[{"name":"hashmap"}],"output":{"name":"itermut"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",225,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"len","","Returns the number of elements in the map.",225,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",225,{"inputs":[{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",225,{"inputs":[{"name":"hashmap"}],"output":{"name":"drain"}}],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",225,null],[11,"get","","Returns a reference to the value corresponding to the key.",225,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",225,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",225,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map.",225,{"inputs":[{"name":"hashmap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",225,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",225,{"inputs":[{"name":"hashmap"},{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"fmt","","",225,{"inputs":[{"name":"hashmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",225,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"index","","",225,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"v"}}],[11,"clone","","",226,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",227,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",228,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",225,{"inputs":[{"name":"hashmap"}],"output":{"name":"intoiter"}}],[11,"next","","",226,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",226,null],[11,"len","","",226,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",229,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",229,null],[11,"len","","",229,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",230,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",230,null],[11,"len","","",230,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",227,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",227,null],[11,"len","","",227,{"inputs":[{"name":"keys"}],"output":{"name":"usize"}}],[11,"next","","",228,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",228,null],[11,"len","","",228,{"inputs":[{"name":"values"}],"output":{"name":"usize"}}],[11,"next","","",231,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",231,null],[11,"len","","",231,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",232,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",232,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",233,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",233,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",233,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry, and returns the entry's old value",233,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value out of the entry, and returns it",233,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it",234,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","","",225,{"inputs":[{"name":"hashmap"},{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",225,null],[11,"extend","","",225,null],[11,"clone","","",235,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",235,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"hasher","","",235,{"inputs":[{"name":"randomstate"}],"output":{"name":"siphasher"}}],[11,"default","","",235,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"get","","",225,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"take","","",225,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"replace","","",225,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"option"}}],[11,"clone","std::collections::hash::set","",236,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"new","","Creates an empty HashSet.",236,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",236,{"inputs":[{"name":"hashset"},{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hash_state","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",236,{"inputs":[{"name":"hashset"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",236,{"inputs":[{"name":"hashset"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",236,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",236,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",236,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &'a T.",236,{"inputs":[{"name":"hashset"}],"output":{"name":"iter"}}],[11,"difference","","Visit the values representing the difference.",236,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",236,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visit the values representing the intersection.",236,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"intersection"}}],[11,"union","","Visit the values representing the union.",236,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",236,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",236,{"inputs":[{"name":"hashset"}],"output":{"name":"bool"}}],[11,"drain","","Clears the set, returning all elements in an iterator.",236,{"inputs":[{"name":"hashset"}],"output":{"name":"drain"}}],[11,"clear","","Clears the set, removing all values.",236,null],[11,"contains","","Returns `true` if the set contains a value.",236,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",236,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",236,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",236,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",236,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set.",236,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",236,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"option"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",236,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",236,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",236,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"fmt","","",236,{"inputs":[{"name":"hashset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",236,{"inputs":[{"name":"hashset"},{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",236,null],[11,"extend","","",236,null],[11,"default","","",236,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",236,{"inputs":[{"name":"hashset"}],"output":{"name":"intoiter"}}],[11,"clone","","",237,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",237,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",237,null],[11,"len","","",237,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",238,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",238,null],[11,"len","","",238,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",239,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",239,null],[11,"len","","",239,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"clone","","",240,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"next","","",240,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",240,null],[11,"clone","","",241,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"next","","",241,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",241,null],[11,"clone","","",242,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",242,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",242,null],[11,"clone","","",243,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"next","","",243,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",243,null],[11,"hasher","std::collections::hash::state","",244,{"inputs":[{"name":"defaultstate"}],"output":{"name":"h"}}],[11,"clone","","",244,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"default","","",244,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"clone","collections::linked_list","",245,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",246,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"from","","",247,{"inputs":[{"name":"rawlink"},{"name":"option"}],"output":{"name":"rawlink"}}],[11,"clone","","",247,{"inputs":[{"name":"rawlink"}],"output":{"name":"rawlink"}}],[11,"default","","",248,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",248,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",248,null],[11,"iter","","Provides a forward iterator.",248,{"inputs":[{"name":"linkedlist"}],"output":{"name":"iter"}}],[11,"iter_mut","","Provides a forward iterator with mutable references.",248,{"inputs":[{"name":"linkedlist"}],"output":{"name":"itermut"}}],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",248,{"inputs":[{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of the `LinkedList`.",248,{"inputs":[{"name":"linkedlist"}],"output":{"name":"usize"}}],[11,"clear","","Removes all elements from the `LinkedList`.",248,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",248,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",248,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",248,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",248,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_front","","Adds an element first in the list.",248,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",248,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_back","","Appends an element to the back of a list",248,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",248,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",248,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"linkedlist"}}],[11,"drop","","",248,null],[11,"next","","",245,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",245,null],[11,"next_back","","",245,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",249,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",249,null],[11,"next_back","","",249,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",249,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",249,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",246,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",246,null],[11,"next_back","","",246,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","",248,{"inputs":[{"name":"linkedlist"},{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",248,{"inputs":[{"name":"linkedlist"}],"output":{"name":"intoiter"}}],[11,"extend","","",248,null],[11,"extend","","",248,null],[11,"eq","","",248,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"ne","","",248,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",248,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"cmp","","",248,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"ordering"}}],[11,"clone","","",248,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"fmt","","",248,{"inputs":[{"name":"linkedlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",248,null],[11,"clone","collections::binary_heap","",250,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"clone_from","","",250,null],[11,"default","","",250,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"fmt","","",250,{"inputs":[{"name":"binaryheap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",250,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",250,{"inputs":[{"name":"binaryheap"},{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"from_vec","","Creates a `BinaryHeap` from a vector. This is sometimes called\n`heapifying` the vector.",250,{"inputs":[{"name":"binaryheap"},{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",250,{"inputs":[{"name":"binaryheap"}],"output":{"name":"iter"}}],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",250,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",250,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",250,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",250,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",250,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",250,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"push","","Pushes an item onto the binary heap.",250,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",250,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"t"}}],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",250,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"option"}}],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",250,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",250,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of the binary heap.",250,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"is_empty","","Checks if the binary heap is empty.",250,{"inputs":[{"name":"binaryheap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",250,{"inputs":[{"name":"binaryheap"}],"output":{"name":"drain"}}],[11,"clear","","Drops all items from the binary heap.",250,null],[11,"drop","","",251,null],[11,"clone","","",252,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",252,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",252,null],[11,"next_back","","",252,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",253,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",253,null],[11,"next_back","","",253,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"next","","",254,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",254,null],[11,"next_back","","",254,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"from","","",250,{"inputs":[{"name":"binaryheap"},{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",255,{"inputs":[{"name":"vec"},{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",250,{"inputs":[{"name":"binaryheap"},{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",250,{"inputs":[{"name":"binaryheap"}],"output":{"name":"intoiter"}}],[11,"extend","","",250,null],[11,"extend","","",250,null],[11,"clone","collections::vec_deque","",256,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"drop","","",256,null],[11,"default","","",256,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",256,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",256,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",256,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",256,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap","","Swaps elements at indices `i` and `j`.",256,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",256,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",256,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",256,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",256,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",256,null],[11,"iter","","Returns a front-to-back iterator.",256,{"inputs":[{"name":"vecdeque"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",256,{"inputs":[{"name":"vecdeque"}],"output":{"name":"itermut"}}],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",256,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",256,null],[11,"len","","Returns the number of elements in the `VecDeque`.",256,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the buffer contains no elements",256,{"inputs":[{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items from start to end. The element\nrange is removed even if the iterator is not consumed until the end.",256,{"inputs":[{"name":"vecdeque"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the buffer, removing all values.",256,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",256,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",256,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",256,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",256,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",256,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"push_front","","Inserts an element first in the sequence.",256,null],[11,"push_back","","Appends an element to the back of a buffer",256,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",256,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",256,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_back_remove","","deprecated",256,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",256,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_front_remove","","deprecated",256,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",256,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",256,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"split_off","","Splits the collection into two at the given index.",256,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",256,null],[11,"retain","","Retains only the elements specified by the predicate.",256,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",256,null],[11,"clone","","",257,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",257,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",257,null],[11,"next_back","","",257,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",258,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",258,null],[11,"next_back","","",258,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",259,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",259,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",259,null],[11,"next_back","","",259,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",260,null],[11,"next","","",260,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",260,null],[11,"next_back","","",260,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"eq","","",256,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",256,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"cmp","","",256,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"ordering"}}],[11,"hash","","",256,null],[11,"index","","",256,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"index_mut","","",256,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"from_iter","","",256,{"inputs":[{"name":"vecdeque"},{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",256,{"inputs":[{"name":"vecdeque"}],"output":{"name":"intoiter"}}],[11,"extend","","",256,null],[11,"extend","","",256,null],[11,"fmt","","",256,{"inputs":[{"name":"vecdeque"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","std::dynamic_lib","",261,null],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",261,{"inputs":[{"name":"dynamiclibrary"},{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process's search path for dynamic libraries",261,null],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",261,null],[11,"envvar","","Returns the environment variable for this process's dynamic library\nsearch path",261,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",261,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"vec"}}],[11,"symbol","","Accesses the value at the symbol of the dynamic library.",261,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}],[11,"next","std::env","",262,{"inputs":[{"name":"vars"}],"output":{"name":"option"}}],[11,"size_hint","","",262,null],[11,"next","","",263,{"inputs":[{"name":"varsos"}],"output":{"name":"option"}}],[11,"size_hint","","",263,null],[11,"clone","","",264,{"inputs":[{"name":"varerror"}],"output":{"name":"varerror"}}],[11,"eq","","",264,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"ne","","",264,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"fmt","","",264,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",264,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",264,{"inputs":[{"name":"varerror"}],"output":{"name":"str"}}],[11,"next","","",265,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",265,null],[11,"fmt","","",266,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",266,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",266,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",267,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",267,null],[11,"len","","",267,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",268,{"inputs":[{"name":"argsos"}],"output":{"name":"option"}}],[11,"size_hint","","",268,null],[11,"len","","",268,{"inputs":[{"name":"argsos"}],"output":{"name":"usize"}}],[11,"clone","std::ffi::c_str","",269,{"inputs":[{"name":"cstring"}],"output":{"name":"cstring"}}],[11,"hash","","",269,null],[11,"cmp","","",269,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",269,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"option"}}],[11,"lt","","",269,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"le","","",269,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"gt","","",269,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ge","","",269,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"eq","","",269,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ne","","",269,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"hash","","",270,null],[11,"fmt","","",271,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",271,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"ne","","",271,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"clone","","",271,{"inputs":[{"name":"nulerror"}],"output":{"name":"nulerror"}}],[11,"fmt","","",272,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",272,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"ne","","",272,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"clone","","",272,{"inputs":[{"name":"intostringerror"}],"output":{"name":"intostringerror"}}],[11,"new","","Creates a new C-compatible string from a container of bytes.",269,{"inputs":[{"name":"cstring"},{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",269,{"inputs":[{"name":"cstring"},{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_ptr","","Retakes ownership of a CString that was transferred to C.",269,null],[11,"from_raw","","Retakes ownership of a CString that was transferred to C.",269,null],[11,"into_ptr","","Transfers ownership of the string to a C caller.",269,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",269,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",269,{"inputs":[{"name":"cstring"}],"output":{"name":"result"}}],[11,"into_bytes","","Returns the underlying byte buffer.",269,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",269,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",269,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",269,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",270,null],[11,"as_ptr","","Returns the inner pointer to this C string.",270,null],[11,"to_bytes","","Converts this C string to a byte slice.",270,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",270,null],[11,"to_str","","Yields a `&str` slice if the `CStr` contains valid UTF-8.",270,{"inputs":[{"name":"cstr"}],"output":{"name":"result"}}],[11,"to_string_lossy","","Converts a `CStr` into a `Cow<str>`.",270,{"inputs":[{"name":"cstr"}],"output":{"name":"cow"}}],[11,"deref","","",269,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"fmt","","",269,{"inputs":[{"name":"cstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",270,{"inputs":[{"name":"cstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",269,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",271,{"inputs":[{"name":"nulerror"}],"output":{"name":"usize"}}],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",271,{"inputs":[{"name":"nulerror"}],"output":{"name":"vec"}}],[11,"description","","",271,{"inputs":[{"name":"nulerror"}],"output":{"name":"str"}}],[11,"fmt","","",271,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","std::io::error","",273,{"inputs":[{"name":"error"},{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",272,{"inputs":[{"name":"intostringerror"}],"output":{"name":"cstring"}}],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",272,{"inputs":[{"name":"intostringerror"}],"output":{"name":"utf8error"}}],[11,"description","","",272,{"inputs":[{"name":"intostringerror"}],"output":{"name":"str"}}],[11,"fmt","","",272,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",270,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",270,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"option"}}],[11,"cmp","","",270,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"ordering"}}],[11,"to_owned","","",270,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"clone","std::ffi::os_str","",274,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"new","","Constructs a new empty `OsString`.",274,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"from_bytes","","Constructs an `OsString` from a byte sequence.",274,{"inputs":[{"name":"osstring"},{"name":"b"}],"output":{"name":"option"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",274,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",274,{"inputs":[{"name":"osstring"}],"output":{"name":"result"}}],[11,"push","","Extends the string with the given `&OsStr` slice.",274,null],[11,"from","","",274,{"inputs":[{"name":"osstring"},{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",274,{"inputs":[{"name":"osstring"},{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",274,{"inputs":[{"name":"osstring"},{"name":"rangefull"}],"output":{"name":"osstr"}}],[11,"new","","Coerces into an `OsStr` slice.",275,{"inputs":[{"name":"osstr"},{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `OsStr` is valid unicode.",275,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow<str>`.",275,{"inputs":[{"name":"osstr"}],"output":{"name":"cow"}}],[11,"to_os_string","","Copies the slice into an owned `OsString`.",275,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"to_bytes","","Yields this `OsStr` as a byte slice.",275,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_cstring","","Creates a `CString` containing this `OsStr` data.",275,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"deref","","",274,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"fmt","","",274,{"inputs":[{"name":"osstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",274,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","","",274,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",274,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"lt","","",274,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"le","","",274,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"gt","","",274,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"ge","","",274,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",274,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",274,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"ordering"}}],[11,"hash","","",274,null],[11,"eq","","",275,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","","",275,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",275,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"lt","","",275,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"le","","",275,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"gt","","",275,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"ge","","",275,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",275,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",275,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"ordering"}}],[11,"hash","","",275,null],[11,"fmt","","",275,{"inputs":[{"name":"osstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",274,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"to_owned","","",275,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"as_ref","","",275,{"inputs":[{"name":"osstr"}],"output":{"name":"osstr"}}],[11,"as_ref","","",274,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"as_ref","collections::string","",276,{"inputs":[{"name":"string"}],"output":{"name":"osstr"}}],[11,"clone","std::fs","",277,{"inputs":[{"name":"metadata"}],"output":{"name":"metadata"}}],[11,"clone","","",278,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",279,{"inputs":[{"name":"permissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",279,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"ne","","",279,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"clone","","",279,{"inputs":[{"name":"permissions"}],"output":{"name":"permissions"}}],[11,"hash","","",280,null],[11,"eq","","",280,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",280,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",280,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"open","","Attempts to open a file in read-only mode.",281,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",281,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",281,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",281,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",281,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"metadata","","Queries metadata about the underlying file.",281,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fmt","","",281,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",281,null],[11,"read_to_end","","",281,{"inputs":[{"name":"file"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",281,null],[11,"flush","","",281,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",281,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"new","","Creates a blank net set of options ready for configuration.",278,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",278,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"write","","Sets the option for write access.",278,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"append","","Sets the option for the append mode.",278,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"truncate","","Sets the option for truncating a previous file.",278,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create","","Sets the option for creating a new file.",278,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"open","","Opens a file at `path` with the options specified by `self`.",278,{"inputs":[{"name":"openoptions"},{"name":"p"}],"output":{"name":"result"}}],[11,"file_type","","Returns the file type for this metadata.",277,{"inputs":[{"name":"metadata"}],"output":{"name":"filetype"}}],[11,"is_dir","","Returns whether this metadata is for a directory.",277,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether this metadata is for a regular file.",277,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",277,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"permissions","","Returns the permissions of the file this metadata is for.",277,{"inputs":[{"name":"metadata"}],"output":{"name":"permissions"}}],[11,"readonly","","Returns whether these permissions describe a readonly file.",279,{"inputs":[{"name":"permissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",279,null],[11,"is_dir","","Test whether this file type represents a directory.",280,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","Test whether this file type represents a regular file.",280,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","Test whether this file type represents a symbolic link.",280,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"next","","",282,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"path","","Returns the full path to the file that this entry represents.",283,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"metadata","","Return the metadata for the file that this entry points at.",283,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","Return the file type for the file that this entry points at.",283,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",283,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"next","","",284,{"inputs":[{"name":"walkdir"}],"output":{"name":"option"}}],[11,"metadata","std::path","",285,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","",285,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","",285,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","",285,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","",285,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","",285,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","",285,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","",285,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"new","std::fs","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",286,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",286,{"inputs":[{"name":"dirbuilder"},{"name":"bool"}],"output":{"name":"dirbuilder"}}],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",286,{"inputs":[{"name":"dirbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",287,{"inputs":[{"name":"bufreader"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",287,{"inputs":[{"name":"bufreader"},{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",287,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_mut","","Gets a mutable reference to the underlying reader.",287,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",287,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"read","","",287,null],[11,"fill_buf","","",287,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"consume","","",287,null],[11,"fmt","","",287,{"inputs":[{"name":"bufreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",287,{"inputs":[{"name":"bufreader"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fmt","","",288,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",289,{"inputs":[{"name":"bufwriter"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",289,{"inputs":[{"name":"bufwriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",289,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",289,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",289,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"write","","",289,null],[11,"flush","","",289,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"fmt","","",289,{"inputs":[{"name":"bufwriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",289,{"inputs":[{"name":"bufwriter"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"drop","","",289,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",288,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"into_inner","","Returns the buffered writer instance which generated the error.",288,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"w"}}],[11,"from","std::io::error","",273,{"inputs":[{"name":"error"},{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",288,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"str"}}],[11,"fmt","","",288,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `LineWriter`.",290,{"inputs":[{"name":"linewriter"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",290,{"inputs":[{"name":"linewriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",290,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",290,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",290,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"write","","",290,null],[11,"flush","","",290,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"fmt","","",290,{"inputs":[{"name":"linewriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",291,null],[11,"fmt","std::io::cursor","",292,{"inputs":[{"name":"cursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",292,{"inputs":[{"name":"cursor"}],"output":{"name":"cursor"}}],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",292,{"inputs":[{"name":"cursor"},{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",292,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",292,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",292,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"position","","Returns the current position of this cursor.",292,{"inputs":[{"name":"cursor"}],"output":{"name":"u64"}}],[11,"set_position","","Sets the position of this cursor.",292,null],[11,"seek","","",292,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"read","","",292,null],[11,"fill_buf","","",292,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",292,null],[11,"write","","",292,null],[11,"flush","","",292,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",292,null],[11,"flush","","",292,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",292,null],[11,"flush","","",292,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"fmt","std::io::error","",273,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",293,{"inputs":[{"name":"custom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",294,{"inputs":[{"name":"errorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",294,{"inputs":[{"name":"errorkind"}],"output":{"name":"errorkind"}}],[11,"eq","","",294,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",294,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",273,{"inputs":[{"name":"error"},{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",273,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",273,{"inputs":[{"name":"error"},{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",273,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",273,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",273,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",273,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",273,{"inputs":[{"name":"error"}],"output":{"name":"errorkind"}}],[11,"fmt","","",295,{"inputs":[{"name":"repr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",273,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",273,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",273,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"read","alloc::boxed","",197,null],[11,"read_to_end","","",197,{"inputs":[{"name":"box"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",197,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",197,null],[11,"write","","",197,null],[11,"flush","","",197,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"write_all","","",197,null],[11,"write_fmt","","",197,{"inputs":[{"name":"box"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"seek","","",197,{"inputs":[{"name":"box"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fill_buf","","",197,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"consume","","",197,null],[11,"read_until","","",197,{"inputs":[{"name":"box"},{"name":"u8"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_line","","",197,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","collections::vec","",255,null],[11,"write_all","","",255,null],[11,"flush","","",255,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"new","std::io::lazy","",296,null],[11,"get","","",296,{"inputs":[{"name":"lazy"}],"output":{"name":"option"}}],[11,"read","std::io::util","",297,null],[11,"fill_buf","","",297,{"inputs":[{"name":"empty"}],"output":{"name":"result"}}],[11,"consume","","",297,null],[11,"read","","",298,null],[11,"write","","",299,null],[11,"flush","","",299,{"inputs":[{"name":"sink"}],"output":{"name":"result"}}],[11,"read","std::io::stdio","",300,null],[11,"write","","",301,null],[11,"flush","","",301,{"inputs":[{"name":"stdoutraw"}],"output":{"name":"result"}}],[11,"write","","",302,null],[11,"flush","","",302,{"inputs":[{"name":"stderrraw"}],"output":{"name":"result"}}],[11,"write","","",303,null],[11,"flush","","",303,{"inputs":[{"name":"maybe"}],"output":{"name":"result"}}],[11,"read","","",303,null],[11,"lock","","Locks this handle to the standard input stream, returning a readable\nguard.",304,{"inputs":[{"name":"stdin"}],"output":{"name":"stdinlock"}}],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",304,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",304,null],[11,"read_to_end","","",304,{"inputs":[{"name":"stdin"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",304,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",304,null],[11,"read","","",305,null],[11,"read_to_end","","",305,{"inputs":[{"name":"stdinlock"},{"name":"vec"}],"output":{"name":"result"}}],[11,"fill_buf","","",305,{"inputs":[{"name":"stdinlock"}],"output":{"name":"result"}}],[11,"consume","","",305,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",306,{"inputs":[{"name":"stdout"}],"output":{"name":"stdoutlock"}}],[11,"write","","",306,null],[11,"flush","","",306,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write_all","","",306,null],[11,"write_fmt","","",306,{"inputs":[{"name":"stdout"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",307,null],[11,"flush","","",307,{"inputs":[{"name":"stdoutlock"}],"output":{"name":"result"}}],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",308,{"inputs":[{"name":"stderr"}],"output":{"name":"stderrlock"}}],[11,"write","","",308,null],[11,"flush","","",308,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write_all","","",308,null],[11,"write_fmt","","",308,{"inputs":[{"name":"stderr"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",309,null],[11,"flush","","",309,{"inputs":[{"name":"stderrlock"}],"output":{"name":"result"}}],[11,"fmt","std::io","",310,{"inputs":[{"name":"seekfrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",310,{"inputs":[{"name":"seekfrom"}],"output":{"name":"seekfrom"}}],[11,"eq","","",310,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"ne","","",310,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"write","","",311,null],[11,"flush","","",311,{"inputs":[{"name":"broadcast"}],"output":{"name":"result"}}],[11,"read","","",312,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",313,{"inputs":[{"name":"take"}],"output":{"name":"u64"}}],[11,"read","","",313,null],[11,"fill_buf","","",313,{"inputs":[{"name":"take"}],"output":{"name":"result"}}],[11,"consume","","",313,null],[11,"read","","",314,null],[11,"next","","",315,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"fmt","","",316,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",317,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"description","","",316,{"inputs":[{"name":"charserror"}],"output":{"name":"str"}}],[11,"cause","","",316,{"inputs":[{"name":"charserror"}],"output":{"name":"option"}}],[11,"fmt","","",316,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",318,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next","","",319,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"cmp","std::net::ip","",320,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",320,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"option"}}],[11,"lt","","",320,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"le","","",320,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"gt","","",320,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ge","","",320,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"hash","","",320,null],[11,"fmt","","",320,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",320,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ne","","",320,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"clone","","",320,{"inputs":[{"name":"ipaddr"}],"output":{"name":"ipaddr"}}],[11,"fmt","","",321,{"inputs":[{"name":"ipv6multicastscope"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",321,null],[11,"clone","","",321,{"inputs":[{"name":"ipv6multicastscope"}],"output":{"name":"ipv6multicastscope"}}],[11,"eq","","",321,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"ne","","",321,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",322,{"inputs":[{"name":"ipv4addr"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",322,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address 0.0.0.0.",322,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",322,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_private","","Returns true if this is a private address.",322,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",322,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",322,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_multicast","","Returns true if this is a multicast address.",322,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_broadcast","","Returns true if this is a broadcast address.",322,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",322,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",322,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",322,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"fmt","","",320,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",322,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",322,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",322,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv4addr"}}],[11,"eq","","",322,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"hash","","",322,null],[11,"partial_cmp","","",322,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"option"}}],[11,"cmp","","",322,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"ordering"}}],[11,"from","","",322,{"inputs":[{"name":"ipv4addr"},{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",323,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",323,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address ::.",323,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (::1).",323,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",323,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",323,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",323,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",323,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",323,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"multicast_scope","","Returns the address's multicast scope if the address is multicast.",323,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"is_multicast","","Returns true if this is a multicast address.",323,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",323,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"fmt","","",323,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",323,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",323,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6addr"}}],[11,"eq","","",323,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"hash","","",323,null],[11,"partial_cmp","","",323,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"cmp","","",323,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"ordering"}}],[11,"fmt","std::net::addr","",324,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",324,null],[11,"eq","","",324,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"ne","","",324,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"clone","","",324,{"inputs":[{"name":"socketaddr"}],"output":{"name":"socketaddr"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",324,{"inputs":[{"name":"socketaddr"},{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",324,{"inputs":[{"name":"socketaddr"}],"output":{"name":"ipaddr"}}],[11,"port","","Returns the port number associated with this socket address.",324,{"inputs":[{"name":"socketaddr"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",325,{"inputs":[{"name":"socketaddrv4"},{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",325,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"ipv4addr"}}],[11,"port","","Returns the port number associated with this socket address.",325,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",326,{"inputs":[{"name":"socketaddrv6"},{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",326,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"ipv6addr"}}],[11,"port","","Returns the port number associated with this socket address.",326,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u16"}}],[11,"flowinfo","","Returns scope ID associated with this address, corresponding to the\n`sin6_flowinfo` field in C.",326,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"scope_id","","Returns scope ID associated with this address, corresponding to the\n`sin6_scope_id` field in C.",326,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"fmt","","",324,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",325,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",325,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",326,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",326,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",325,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"socketaddrv4"}}],[11,"clone","","",326,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"socketaddrv6"}}],[11,"eq","","",325,{"inputs":[{"name":"socketaddrv4"},{"name":"socketaddrv4"}],"output":{"name":"bool"}}],[11,"eq","","",326,{"inputs":[{"name":"socketaddrv6"},{"name":"socketaddrv6"}],"output":{"name":"bool"}}],[11,"hash","","",325,null],[11,"hash","","",326,null],[11,"to_socket_addrs","","",324,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",325,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",326,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"result"}}],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",327,{"inputs":[{"name":"tcpstream"},{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",327,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",327,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",327,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",327,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",327,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",327,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",327,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",327,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",327,null],[11,"read_to_end","","",327,{"inputs":[{"name":"tcpstream"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",327,null],[11,"flush","","",327,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",327,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",328,{"inputs":[{"name":"tcplistener"},{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",328,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",328,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","Accept a new incoming connection from this listener.",328,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",328,{"inputs":[{"name":"tcplistener"}],"output":{"name":"incoming"}}],[11,"next","","",329,{"inputs":[{"name":"incoming"}],"output":{"name":"option"}}],[11,"fmt","","",328,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",330,{"inputs":[{"name":"udpsocket"},{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",330,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",330,null],[11,"local_addr","","Returns the socket address that this socket was created from.",330,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",330,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",330,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",330,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",330,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",330,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",330,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","std::net::ip","",320,{"inputs":[{"name":"ipaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",322,{"inputs":[{"name":"ipv4addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",323,{"inputs":[{"name":"ipv6addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",325,{"inputs":[{"name":"socketaddrv4"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",326,{"inputs":[{"name":"socketaddrv6"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",324,{"inputs":[{"name":"socketaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",331,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"ne","","",331,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"clone","","",331,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"addrparseerror"}}],[11,"fmt","","",331,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",331,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",331,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"str"}}],[11,"fmt","std::net","",332,{"inputs":[{"name":"shutdown"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",332,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"ne","","",332,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"clone","","",332,{"inputs":[{"name":"shutdown"}],"output":{"name":"shutdown"}}],[11,"next","","",333,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"clone","std::os::linux::raw::arch","",334,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"as_raw_fd","std::fs","",281,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",281,{"inputs":[{"name":"file"},{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",281,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::tcp","",327,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",328,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::udp","",330,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_raw_fd","std::net::tcp","",327,{"inputs":[{"name":"tcpstream"},{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",328,{"inputs":[{"name":"tcplistener"},{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",330,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",327,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",328,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"into_raw_fd","std::net::udp","",330,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_vec","std::ffi::os_str","",274,{"inputs":[{"name":"osstring"},{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",274,{"inputs":[{"name":"osstring"}],"output":{"name":"vec"}}],[11,"from_bytes","","",275,null],[11,"as_bytes","","",275,null],[11,"mode","std::fs","",279,{"inputs":[{"name":"permissions"}],"output":{"name":"u32"}}],[11,"set_mode","","",279,null],[11,"from_mode","","",279,{"inputs":[{"name":"permissions"},{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",278,{"inputs":[{"name":"openoptions"},{"name":"u32"}],"output":{"name":"openoptions"}}],[11,"dev","","",277,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"ino","","",277,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"mode","","",277,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"nlink","","",277,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"uid","","",277,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"gid","","",277,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"rdev","","",277,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"size","","",277,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime","","",277,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime_nsec","","",277,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime","","",277,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime_nsec","","",277,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime","","",277,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime_nsec","","",277,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blksize","","",277,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blocks","","",277,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"is_block_device","","",280,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_char_device","","",280,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_fifo","","",280,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_socket","","",280,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ino","","",283,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"mode","","",286,{"inputs":[{"name":"dirbuilder"},{"name":"u32"}],"output":{"name":"dirbuilder"}}],[11,"uid","std::process","",335,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"gid","","",335,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"session_leader","","",335,{"inputs":[{"name":"command"},{"name":"bool"}],"output":{"name":"command"}}],[11,"signal","","",336,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"from_raw_fd","","",337,{"inputs":[{"name":"stdio"},{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",338,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",339,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",340,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",338,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",339,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",340,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"eq","std::path","",341,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ne","","",341,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"cmp","","",341,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",341,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"option"}}],[11,"lt","","",341,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"le","","",341,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"gt","","",341,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ge","","",341,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"hash","","",341,null],[11,"fmt","","",341,{"inputs":[{"name":"prefix"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",341,{"inputs":[{"name":"prefix"}],"output":{"name":"prefix"}}],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",341,{"inputs":[{"name":"prefix"}],"output":{"name":"bool"}}],[11,"fmt","","",342,{"inputs":[{"name":"state"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",342,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"option"}}],[11,"lt","","",342,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"le","","",342,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"gt","","",342,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ge","","",342,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"eq","","",342,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",342,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",342,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"fmt","","",343,{"inputs":[{"name":"prefixcomponent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",343,null],[11,"clone","","",343,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefixcomponent"}}],[11,"kind","","The parsed prefix data.",343,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefix"}}],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",343,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"osstr"}}],[11,"eq","","",343,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",343,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"option"}}],[11,"cmp","","",343,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"ordering"}}],[11,"fmt","","",344,{"inputs":[{"name":"component"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",344,null],[11,"cmp","","",344,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",344,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"option"}}],[11,"lt","","",344,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"le","","",344,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"gt","","",344,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ge","","",344,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"eq","","",344,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ne","","",344,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"clone","","",344,{"inputs":[{"name":"component"}],"output":{"name":"component"}}],[11,"as_os_str","","Extracts the underlying `OsStr` slice",344,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"as_ref","","",344,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"clone","","",345,{"inputs":[{"name":"components"}],"output":{"name":"components"}}],[11,"clone","","",346,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",345,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"peek","","Examine the next component without consuming it.",345,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"as_ref","","",345,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"as_ref","","",345,{"inputs":[{"name":"components"}],"output":{"name":"osstr"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",346,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",346,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",346,{"inputs":[{"name":"iter"}],"output":{"name":"osstr"}}],[11,"next","","",346,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",346,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",345,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"next_back","","",345,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"eq","","",345,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",345,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"option"}}],[11,"cmp","","",345,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"ordering"}}],[11,"hash","","",347,null],[11,"clone","","",347,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"new","","Allocates an empty `PathBuf`.",347,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",347,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"push","","Extends `self` with `path`.",347,null],[11,"pop","","Truncate `self` to `self.parent()`.",347,{"inputs":[{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",347,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",347,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"bool"}}],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",347,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"from","","",347,{"inputs":[{"name":"pathbuf"},{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",347,{"inputs":[{"name":"pathbuf"},{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",347,{"inputs":[{"name":"pathbuf"},{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",347,{"inputs":[{"name":"pathbuf"},{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",347,null],[11,"fmt","","",347,{"inputs":[{"name":"pathbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Directly wrap a string slice as a `Path` slice.",285,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",285,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `Path` is valid unicode.",285,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts a `Path` to a `Cow<str>`.",285,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",285,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",285,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_relative","","A path is *relative* if it is not absolute.",285,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"prefix","","Returns the *prefix* of a path, if any.",285,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",285,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"parent","","The path without its final component, if any.",285,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"file_name","","The final component of the path, if it is a normal file.",285,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"relative_from","","Returns a path that, when joined onto `base`, yields `self`.",285,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"option"}}],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",285,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",285,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",285,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",285,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",285,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"pathbuf"}}],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",285,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",285,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"components","","Produce an iterator over the components of the path.",285,{"inputs":[{"name":"path"}],"output":{"name":"components"}}],[11,"iter","","Produce an iterator over the path's components viewed as `OsStr` slices.",285,{"inputs":[{"name":"path"}],"output":{"name":"iter"}}],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",285,{"inputs":[{"name":"path"}],"output":{"name":"display"}}],[11,"metadata","","Gets information on the file, directory, etc at this path.",285,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","Gets information on the file, directory, etc at this path.",285,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","Returns the canonical form of a path, normalizing all components and\neliminate all symlinks.",285,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","Reads the symlink at this path.",285,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","Reads the directory at this path.",285,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","Boolean value indicator whether the underlying file exists on the local\nfilesystem. Returns false in exactly the cases where `fs::stat` fails.",285,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","Whether the underlying implementation (be it a file path, or something\nelse) points at a \"regular file\" on the FS. Will return false for paths\nto non-existent locations or directories or other non-regular files\n(named pipes, etc). Follows links when making this determination.",285,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","Whether the underlying implementation (be it a file path, or something\nelse) is pointing at a directory in the underlying FS. Will return\nfalse for paths to non-existent locations or if the item is not a\ndirectory (eg files, named pipes, etc). Follows links when making this\ndetermination.",285,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"deref","","",347,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"borrow","","",347,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"into_cow","","",347,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","","",285,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"eq","","",347,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",347,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"cmp","","",347,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"ordering"}}],[11,"as_ref","","",347,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstr"}}],[11,"into","","",347,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"hash","","",285,null],[11,"as_ref","","",285,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"fmt","","",285,{"inputs":[{"name":"path"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",348,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",348,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",285,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",285,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[11,"cmp","","",285,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"ordering"}}],[11,"as_ref","","",285,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"as_ref","std::ffi::os_str","",275,{"inputs":[{"name":"osstr"}],"output":{"name":"path"}}],[11,"as_ref","","",274,{"inputs":[{"name":"osstring"}],"output":{"name":"path"}}],[11,"as_ref","collections::string","",276,{"inputs":[{"name":"string"}],"output":{"name":"path"}}],[11,"as_ref","std::path","",347,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"write","std::process","",338,null],[11,"flush","","",338,{"inputs":[{"name":"childstdin"}],"output":{"name":"result"}}],[11,"read","","",339,null],[11,"read","","",340,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",335,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",335,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"args","","Add multiple arguments to pass to the program.",335,null],[11,"env","","Inserts or updates an environment variable mapping.",335,{"inputs":[{"name":"command"},{"name":"k"},{"name":"v"}],"output":{"name":"command"}}],[11,"env_remove","","Removes an environment variable mapping.",335,{"inputs":[{"name":"command"},{"name":"k"}],"output":{"name":"command"}}],[11,"env_clear","","Clears the entire environment map for the child process.",335,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"current_dir","","Sets the working directory for the child process.",335,{"inputs":[{"name":"command"},{"name":"p"}],"output":{"name":"command"}}],[11,"stdin","","Configuration for the child process's stdin handle (file descriptor 0).",335,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stdout","","Configuration for the child process's stdout handle (file descriptor 1).",335,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stderr","","Configuration for the child process's stderr handle (file descriptor 2).",335,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"spawn","","Executes the command as a child process, returning a handle to it.",335,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",335,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",335,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",335,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",349,{"inputs":[{"name":"output"}],"output":{"name":"output"}}],[11,"eq","","",349,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"ne","","",349,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",337,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",337,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",337,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"fmt","","",336,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",336,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",336,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",336,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",336,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","Returns the exit code of the process, if any.",336,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",336,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",350,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"id","","Returns the OS-assigned process identifier associated with this child.",350,{"inputs":[{"name":"child"}],"output":{"name":"u32"}}],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",350,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning a `Output`\ninstance.",350,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"clone","std::sync::mpsc::blocking","",351,{"inputs":[{"name":"signaltoken"}],"output":{"name":"signaltoken"}}],[11,"signal","","",351,{"inputs":[{"name":"signaltoken"}],"output":{"name":"bool"}}],[11,"cast_to_usize","","Convert to an unsafe usize value. Useful for storing in a pipe's state\nflag.",351,{"inputs":[{"name":"signaltoken"}],"output":{"name":"usize"}}],[11,"cast_from_usize","","Convert from an unsafe usize value. Useful for retrieving a pipe's state\nflag.",351,{"inputs":[{"name":"signaltoken"},{"name":"usize"}],"output":{"name":"signaltoken"}}],[11,"wait","","",352,null],[11,"new","std::sync::mpsc::oneshot","",353,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",353,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"sent","","",353,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"recv","","",353,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",353,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"upgrade","","",353,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"drop_chan","","",353,null],[11,"drop_port","","",353,null],[11,"can_recv","","",353,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",353,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",353,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop","","",353,null],[11,"eq","std::sync::mpsc::select","",354,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"ne","","",354,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new selection structure. This set is initially empty.",355,{"inputs":[{"name":"select"}],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",355,{"inputs":[{"name":"select"},{"name":"receiver"}],"output":{"name":"handle"}}],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",355,{"inputs":[{"name":"select"}],"output":{"name":"usize"}}],[11,"id","","Retrieves the id of this handle.",356,{"inputs":[{"name":"handle"}],"output":{"name":"usize"}}],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",356,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",356,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",356,null],[11,"drop","","",355,null],[11,"drop","","",356,null],[11,"next","","",357,{"inputs":[{"name":"packets"}],"output":{"name":"option"}}],[11,"new","std::sync::mpsc::shared","",358,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"postinit_lock","","",358,{"inputs":[{"name":"packet"}],"output":{"name":"mutexguard"}}],[11,"inherit_blocker","","",358,null],[11,"send","","",358,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",358,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",358,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",358,null],[11,"drop_chan","","",358,null],[11,"drop_port","","",358,null],[11,"can_recv","","",358,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",358,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",358,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"drop","","",358,null],[11,"new","std::sync::mpsc::stream","",359,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",359,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"upgrade","","",359,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"recv","","",359,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",359,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop_chan","","",359,null],[11,"drop_port","","",359,null],[11,"can_recv","","",359,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",359,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",359,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"result"}}],[11,"drop","","",359,null],[11,"fmt","std::sync::mpsc::sync","",360,{"inputs":[{"name":"failure"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",361,{"inputs":[{"name":"packet"},{"name":"usize"}],"output":{"name":"packet"}}],[11,"send","","",361,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","",361,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",361,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",361,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",361,null],[11,"drop_chan","","",361,null],[11,"drop_port","","",361,null],[11,"can_recv","","",361,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",361,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",361,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"drop","","",361,null],[11,"new","std::sync::mpsc::mpsc_queue","Creates a new queue that is safe to share among multiple producers and\none consumer.",362,{"inputs":[{"name":"queue"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue.",362,null],[11,"pop","","Pops some data from this queue.",362,{"inputs":[{"name":"queue"}],"output":{"name":"popresult"}}],[11,"drop","","",362,null],[11,"new","std::sync::mpsc::spsc_queue","Creates a new queue.",363,{"inputs":[{"name":"queue"},{"name":"usize"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue. Note that to use this function\nsafely, it must be externally guaranteed that there is only one pusher.",363,null],[11,"pop","","Attempts to pop a value from this queue. Remember that to use this type\nsafely you must ensure that there is only one popper at a time.",363,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"peek","","Attempts to peek at the head of the queue, returning `None` if the queue\nhas no data currently",363,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"drop","","",363,null],[11,"clone","std::sync::mpsc","",364,{"inputs":[{"name":"senderror"}],"output":{"name":"senderror"}}],[11,"eq","","",364,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",364,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"fmt","","",365,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",365,{"inputs":[{"name":"recverror"}],"output":{"name":"recverror"}}],[11,"eq","","",365,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"ne","","",365,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"fmt","","",366,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",366,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"tryrecverror"}}],[11,"eq","","",366,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"ne","","",366,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"clone","","",367,{"inputs":[{"name":"trysenderror"}],"output":{"name":"trysenderror"}}],[11,"eq","","",367,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",367,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",368,{"inputs":[{"name":"sender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",368,{"inputs":[{"name":"sender"}],"output":{"name":"sender"}}],[11,"drop","","",368,null],[11,"send","","Sends a value on this synchronous channel.",369,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","Attempts to send a value on this channel without blocking.",369,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",369,{"inputs":[{"name":"syncsender"}],"output":{"name":"syncsender"}}],[11,"drop","","",369,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",370,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",370,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",370,{"inputs":[{"name":"receiver"}],"output":{"name":"iter"}}],[11,"next","","",371,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",372,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"into_iter","","",370,{"inputs":[{"name":"receiver"}],"output":{"name":"intoiter"}}],[11,"drop","","",370,null],[11,"fmt","","",364,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",364,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",364,{"inputs":[{"name":"senderror"}],"output":{"name":"str"}}],[11,"cause","","",364,{"inputs":[{"name":"senderror"}],"output":{"name":"option"}}],[11,"fmt","","",367,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",367,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",367,{"inputs":[{"name":"trysenderror"}],"output":{"name":"str"}}],[11,"cause","","",367,{"inputs":[{"name":"trysenderror"}],"output":{"name":"option"}}],[11,"fmt","","",365,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",365,{"inputs":[{"name":"recverror"}],"output":{"name":"str"}}],[11,"cause","","",365,{"inputs":[{"name":"recverror"}],"output":{"name":"option"}}],[11,"fmt","","",366,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",366,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"str"}}],[11,"cause","","",366,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"option"}}],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",373,{"inputs":[{"name":"barrier"},{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads has rendezvoused here.",373,{"inputs":[{"name":"barrier"}],"output":{"name":"barrierwaitresult"}}],[11,"is_leader","","Returns whether this thread from `wait` is the \"leader thread\".",374,{"inputs":[{"name":"barrierwaitresult"}],"output":{"name":"bool"}}],[11,"clone","std::sync::condvar","",375,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"waittimeoutresult"}}],[11,"eq","","",375,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"ne","","",375,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"fmt","","",375,{"inputs":[{"name":"waittimeoutresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"timed_out","","Returns whether the wait was known to have timed out.",375,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",376,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",376,{"inputs":[{"name":"condvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",376,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",376,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",376,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",376,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",376,null],[11,"drop","","",376,null],[11,"new","","Creates a new condition variable",377,{"inputs":[{"name":"staticcondvar"}],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",377,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",377,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",377,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",377,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",377,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",377,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",377,null],[11,"drop","std::sync::mutex","",196,null],[11,"fmt","","",196,{"inputs":[{"name":"mutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new mutex in an unlocked state ready for use.",378,{"inputs":[{"name":"staticmutex"}],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",378,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",378,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates resources associated with this static mutex.",378,null],[11,"deref","","",379,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",379,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"drop","","",379,null],[11,"new","std::sync::once","Creates a new `Once` value.",380,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",380,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock<T>` which is unlocked.",381,{"inputs":[{"name":"rwlock"},{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",381,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",381,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",381,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",381,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",381,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",381,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",381,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"drop","","",381,null],[11,"fmt","","",381,{"inputs":[{"name":"rwlock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new rwlock.",382,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",382,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this lock with shared read access.",382,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",382,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",382,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates all resources associated with this static lock.",382,null],[11,"deref","","",383,{"inputs":[{"name":"rwlockreadguard"}],"output":{"name":"t"}}],[11,"deref","","",384,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",384,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"drop","","",383,null],[11,"drop","","",384,null],[11,"new","std::sync::semaphore","Creates a new semaphore with the initial count specified.",385,{"inputs":[{"name":"semaphore"},{"name":"isize"}],"output":{"name":"semaphore"}}],[11,"acquire","","Acquires a resource of this semaphore, blocking the current thread until\nit can do so.",385,null],[11,"release","","Release a resource from this semaphore.",385,null],[11,"access","","Acquires a resource of this semaphore, returning an RAII guard to\nrelease the semaphore when dropped.",385,{"inputs":[{"name":"semaphore"}],"output":{"name":"semaphoreguard"}}],[11,"drop","","",386,null],[11,"fmt","std::time::duration","",387,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",387,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",387,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",387,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",387,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",387,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",387,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",387,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",387,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",387,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",387,{"inputs":[{"name":"duration"},{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",387,{"inputs":[{"name":"duration"},{"name":"f"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",387,{"inputs":[{"name":"duration"},{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",387,{"inputs":[{"name":"duration"},{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",387,{"inputs":[{"name":"duration"}],"output":{"name":"u64"}}],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",387,{"inputs":[{"name":"duration"}],"output":{"name":"u32"}}],[11,"add","","",387,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",387,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",387,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"div","","",387,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"new","std::sys_common::condvar","Creates a new condition variable for use.",388,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","Signals one waiter on this condition variable to wake up.",388,null],[11,"notify_all","","Awakens all current waiters on this condition variable.",388,null],[11,"wait","","Waits for a signal on the specified mutex.",388,null],[11,"wait_timeout","","Waits for a signal on the specified mutex with a timeout duration\nspecified by `dur` (a relative time into the future).",388,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","Deallocates all resources associated with this condition variable.",388,null],[11,"clone","std::sys_common::dwarf::eh","",389,{"inputs":[{"name":"ehcontext"}],"output":{"name":"ehcontext"}}],[11,"new","std::sys_common::dwarf","",390,null],[11,"read","","",390,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"t"}}],[11,"read_uleb128","","",390,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"u64"}}],[11,"read_sleb128","","",390,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"i64"}}],[11,"clone","std::sys_common::libunwind","",391,{"inputs":[{"name":"_unwind_action"}],"output":{"name":"_unwind_action"}}],[11,"clone","","",392,{"inputs":[{"name":"_unwind_reason_code"}],"output":{"name":"_unwind_reason_code"}}],[11,"new","std::sys_common::mutex","Creates a new mutex for use.",393,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","Locks the mutex blocking the current thread until it is available.",393,null],[11,"try_lock","","Attempts to lock the mutex without blocking, returning whether it was\nsuccessfully acquired or not.",393,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"unlock","","Unlocks the mutex.",393,null],[11,"destroy","","Deallocates all resources associated with this mutex.",393,null],[11,"next","std::sys_common::net","",394,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"drop","","",394,null],[11,"connect","","",395,{"inputs":[{"name":"tcpstream"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",395,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"into_socket","","",395,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"set_read_timeout","","",395,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",395,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",395,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","",395,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",395,null],[11,"write","","",395,null],[11,"peer_addr","","",395,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"socket_addr","","",395,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","",395,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"duplicate","","",395,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",395,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",396,{"inputs":[{"name":"tcplistener"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",396,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"into_socket","","",396,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"socket_addr","","",396,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","",396,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"duplicate","","",396,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"fmt","","",396,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",397,{"inputs":[{"name":"udpsocket"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",397,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"into_socket","","",397,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"socket_addr","","",397,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"recv_from","","",397,null],[11,"send_to","","",397,null],[11,"duplicate","","",397,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","",397,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",397,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",397,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","",397,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",397,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys_common::poison","",398,{"inputs":[{"name":"flag"}],"output":{"name":"flag"}}],[11,"borrow","","",398,{"inputs":[{"name":"flag"}],"output":{"name":"result"}}],[11,"done","","",398,null],[11,"get","","",398,{"inputs":[{"name":"flag"}],"output":{"name":"bool"}}],[11,"fmt","","",399,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",399,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",399,{"inputs":[{"name":"poisonerror"}],"output":{"name":"str"}}],[11,"new","","Creates a `PoisonError`.",399,{"inputs":[{"name":"poisonerror"},{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",399,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",399,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",399,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"from","","",400,{"inputs":[{"name":"trylockerror"},{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",400,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",400,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",400,{"inputs":[{"name":"trylockerror"}],"output":{"name":"str"}}],[11,"cause","","",400,{"inputs":[{"name":"trylockerror"}],"output":{"name":"option"}}],[11,"new","std::sys_common::remutex","Creates a new reentrant mutex in an unlocked state.",401,{"inputs":[{"name":"reentrantmutex"},{"name":"t"}],"output":{"name":"reentrantmutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",401,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",401,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"drop","","",401,null],[11,"fmt","","",401,{"inputs":[{"name":"reentrantmutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",402,{"inputs":[{"name":"reentrantmutexguard"}],"output":{"name":"t"}}],[11,"drop","","",402,null],[11,"new","std::sys_common::rwlock","Creates a new reader-writer lock for use.",403,{"inputs":[{"name":"rwlock"}],"output":{"name":"rwlock"}}],[11,"read","","Acquires shared access to the underlying lock, blocking the current\nthread to do so.",403,null],[11,"try_read","","Attempts to acquire shared access to this lock, returning whether it\nsucceeded or not.",403,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","Acquires write access to the underlying lock, blocking the current thread\nto do so.",403,null],[11,"try_write","","Attempts to acquire exclusive access to this lock, returning whether it\nsucceeded or not.",403,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","Unlocks previously acquired shared access to this lock.",403,null],[11,"write_unlock","","Unlocks previously acquired exclusive access to this lock.",403,null],[11,"destroy","","Destroys OS-related resources with this RWLock.",403,null],[11,"new","std::sys_common::thread_local","",404,{"inputs":[{"name":"statickey"},{"name":"option"}],"output":{"name":"statickey"}}],[11,"get","","Gets the value associated with this TLS key",404,null],[11,"set","","Sets this TLS key to a new value.",404,null],[11,"destroy","","Deallocates this OS TLS key.",404,null],[11,"new","","Creates a new managed OS TLS key.",405,{"inputs":[{"name":"key"},{"name":"option"}],"output":{"name":"key"}}],[11,"get","","See StaticKey::get",405,null],[11,"set","","See StaticKey::set",405,null],[11,"drop","","",405,null],[11,"clone","std::sys_common::wtf8","",406,{"inputs":[{"name":"codepoint"}],"output":{"name":"codepoint"}}],[11,"partial_cmp","","",406,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"option"}}],[11,"lt","","",406,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"le","","",406,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"gt","","",406,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ge","","",406,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"cmp","","",406,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"ordering"}}],[11,"eq","","",406,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ne","","",406,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"fmt","","",406,{"inputs":[{"name":"codepoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u32_unchecked","","Unsafely creates a new `CodePoint` without checking the value.",406,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"codepoint"}}],[11,"from_u32","","Creates a new `CodePoint` if the value is a valid code point.",406,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_char","","Creates a new `CodePoint` from a `char`.",406,{"inputs":[{"name":"codepoint"},{"name":"char"}],"output":{"name":"codepoint"}}],[11,"to_u32","","Returns the numeric value of the code point.",406,{"inputs":[{"name":"codepoint"}],"output":{"name":"u32"}}],[11,"to_char","","Optionally returns a Unicode scalar value for the code point.",406,{"inputs":[{"name":"codepoint"}],"output":{"name":"option"}}],[11,"to_char_lossy","","Returns a Unicode scalar value for the code point.",406,{"inputs":[{"name":"codepoint"}],"output":{"name":"char"}}],[11,"clone","","",407,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"partial_cmp","","",407,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"option"}}],[11,"lt","","",407,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"le","","",407,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"gt","","",407,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ge","","",407,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"cmp","","",407,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"ordering"}}],[11,"eq","","",407,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ne","","",407,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"from_str","","Creates a WTF-8 slice from a UTF-8 `&str` slice.",408,{"inputs":[{"name":"wtf8"},{"name":"str"}],"output":{"name":"wtf8"}}],[11,"len","","Returns the length, in WTF-8 bytes.",408,{"inputs":[{"name":"wtf8"}],"output":{"name":"usize"}}],[11,"ascii_byte_at","","Returns the code point at `position` if it is in the ASCII range,\nor `b'\\xFF' otherwise.",408,{"inputs":[{"name":"wtf8"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"code_points","","Returns an iterator for the string’s code points.",408,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8codepoints"}}],[11,"as_str","","Tries to convert the string to UTF-8 and return a `&str` slice.",408,{"inputs":[{"name":"wtf8"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Lossily converts the string to UTF-8.\nReturns a UTF-8 `&str` slice if the contents are well-formed in UTF-8.",408,{"inputs":[{"name":"wtf8"}],"output":{"name":"cow"}}],[11,"encode_wide","","Converts the WTF-8 string to potentially ill-formed UTF-16\nand return an iterator of 16-bit code units.",408,{"inputs":[{"name":"wtf8"}],"output":{"name":"encodewide"}}],[11,"deref","","",407,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"fmt","","",407,{"inputs":[{"name":"wtf8buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new, empty WTF-8 string.",407,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"with_capacity","","Creates a new, empty WTF-8 string with pre-allocated capacity for `n` bytes.",407,{"inputs":[{"name":"wtf8buf"},{"name":"usize"}],"output":{"name":"wtf8buf"}}],[11,"from_string","","Creates a WTF-8 string from a UTF-8 `String`.",407,{"inputs":[{"name":"wtf8buf"},{"name":"string"}],"output":{"name":"wtf8buf"}}],[11,"from_str","","Creates a WTF-8 string from a UTF-8 `&str` slice.",407,{"inputs":[{"name":"wtf8buf"},{"name":"str"}],"output":{"name":"wtf8buf"}}],[11,"from_wide","","Creates a WTF-8 string from a potentially ill-formed UTF-16 slice of 16-bit code units.",407,null],[11,"as_slice","","",407,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `Wtf8Buf`.\nThe collection may reserve more space to avoid frequent reallocations.",407,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without reallocating.",407,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"usize"}}],[11,"push_str","","Append a UTF-8 slice at the end of the string.",407,null],[11,"push_wtf8","","Append a WTF-8 slice at the end of the string.",407,null],[11,"push_char","","Append a Unicode scalar value at the end of the string.",407,null],[11,"push","","Append a code point at the end of the string.",407,null],[11,"truncate","","Shortens a string to the specified length.",407,null],[11,"into_string","","Consumes the WTF-8 string and tries to convert it to UTF-8.",407,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"result"}}],[11,"into_string_lossy","","Consumes the WTF-8 string and converts it lossily to UTF-8.",407,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"string"}}],[11,"from_iter","","",407,{"inputs":[{"name":"wtf8buf"},{"name":"t"}],"output":{"name":"wtf8buf"}}],[11,"extend","","",407,null],[11,"partial_cmp","","",408,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"option"}}],[11,"lt","","",408,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"le","","",408,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"gt","","",408,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ge","","",408,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"eq","","",408,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ne","","",408,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"cmp","","",408,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"ordering"}}],[11,"fmt","","",408,{"inputs":[{"name":"wtf8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",408,{"inputs":[{"name":"wtf8"},{"name":"range"}],"output":{"name":"wtf8"}}],[11,"index","","",408,{"inputs":[{"name":"wtf8"},{"name":"rangefrom"}],"output":{"name":"wtf8"}}],[11,"index","","",408,{"inputs":[{"name":"wtf8"},{"name":"rangeto"}],"output":{"name":"wtf8"}}],[11,"index","","",408,{"inputs":[{"name":"wtf8"},{"name":"rangefull"}],"output":{"name":"wtf8"}}],[11,"clone","","",409,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"wtf8codepoints"}}],[11,"next","","",409,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"option"}}],[11,"size_hint","","",409,null],[11,"clone","","",410,{"inputs":[{"name":"encodewide"}],"output":{"name":"encodewide"}}],[11,"next","","",410,{"inputs":[{"name":"encodewide"}],"output":{"name":"option"}}],[11,"size_hint","","",410,null],[11,"hash","","",406,null],[11,"hash","","",407,null],[11,"hash","","",408,null],[11,"is_ascii","","",408,{"inputs":[{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"to_ascii_uppercase","","",408,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"to_ascii_lowercase","","",408,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"eq_ignore_ascii_case","","",408,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"make_ascii_uppercase","","",408,null],[11,"make_ascii_lowercase","","",408,null],[11,"new","std::sys::condvar","",411,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","",411,null],[11,"notify_all","","",411,null],[11,"wait","","",411,null],[11,"wait_timeout","","",411,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","",411,null],[11,"new","std::sys::fd","",412,{"inputs":[{"name":"filedesc"},{"name":"i32"}],"output":{"name":"filedesc"}}],[11,"raw","","",412,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"into_raw","","Extracts the actual filedescriptor without closing it.",412,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"read","","",412,null],[11,"write","","",412,null],[11,"set_cloexec","","",412,null],[11,"drop","","",412,null],[11,"clone","std::sys::fs","",413,{"inputs":[{"name":"fileattr"}],"output":{"name":"fileattr"}}],[11,"clone","","",414,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",415,{"inputs":[{"name":"filepermissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",415,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"ne","","",415,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"clone","","",415,{"inputs":[{"name":"filepermissions"}],"output":{"name":"filepermissions"}}],[11,"hash","","",416,null],[11,"eq","","",416,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",416,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",416,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"size","","",413,{"inputs":[{"name":"fileattr"}],"output":{"name":"u64"}}],[11,"perm","","",413,{"inputs":[{"name":"fileattr"}],"output":{"name":"filepermissions"}}],[11,"file_type","","",413,{"inputs":[{"name":"fileattr"}],"output":{"name":"filetype"}}],[11,"as_raw_stat","std::fs","",277,{"inputs":[{"name":"metadata"}],"output":{"name":"stat"}}],[11,"readonly","std::sys::fs","",415,{"inputs":[{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","",415,null],[11,"mode","","",415,{"inputs":[{"name":"filepermissions"}],"output":{"name":"u32"}}],[11,"is_dir","","",416,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","",416,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","",416,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is","","",416,{"inputs":[{"name":"filetype"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"next","","",417,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"drop","","",418,null],[11,"path","","",419,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"file_name","","",419,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"metadata","","",419,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","",419,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"ino","","",419,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"new","","",414,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","",414,null],[11,"write","","",414,null],[11,"append","","",414,null],[11,"truncate","","",414,null],[11,"create","","",414,null],[11,"mode","","",414,null],[11,"open","","",420,{"inputs":[{"name":"file"},{"name":"path"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"open_c","","",420,{"inputs":[{"name":"file"},{"name":"cstr"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"file_attr","","",420,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fsync","","",420,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"datasync","","",420,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"truncate","","",420,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read","","",420,null],[11,"write","","",420,null],[11,"flush","","",420,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",420,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fd","","",420,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",420,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"new","","",421,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"mkdir","","",421,{"inputs":[{"name":"dirbuilder"},{"name":"path"}],"output":{"name":"result"}}],[11,"set_mode","","",421,null],[11,"fmt","","",420,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys::mutex","",422,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","",422,null],[11,"unlock","","",422,null],[11,"try_lock","","",422,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"destroy","","",422,null],[11,"uninitialized","","",423,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"reentrantmutex"}}],[11,"init","","",423,null],[11,"lock","","",423,null],[11,"try_lock","","",423,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"bool"}}],[11,"unlock","","",423,null],[11,"destroy","","",423,null],[11,"new","std::sys::net","",424,{"inputs":[{"name":"socket"},{"name":"socketaddr"},{"name":"i32"}],"output":{"name":"result"}}],[11,"accept","","",424,null],[11,"duplicate","","",424,{"inputs":[{"name":"socket"}],"output":{"name":"result"}}],[11,"read","","",424,null],[11,"set_timeout","","",424,{"inputs":[{"name":"socket"},{"name":"option"},{"name":"i32"}],"output":{"name":"result"}}],[11,"timeout","","",424,{"inputs":[{"name":"socket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"next","std::sys::os","",425,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",425,null],[11,"fmt","","",426,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",426,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",426,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",427,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",427,null],[11,"len","","",427,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",428,{"inputs":[{"name":"env"}],"output":{"name":"option"}}],[11,"size_hint","","",428,null],[11,"hash","std::sys::os_str","",429,null],[11,"clone","","",429,{"inputs":[{"name":"buf"}],"output":{"name":"buf"}}],[11,"fmt","","",430,{"inputs":[{"name":"slice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",429,{"inputs":[{"name":"buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_string","","",429,{"inputs":[{"name":"buf"},{"name":"string"}],"output":{"name":"buf"}}],[11,"as_slice","","",429,{"inputs":[{"name":"buf"}],"output":{"name":"slice"}}],[11,"into_string","","",429,{"inputs":[{"name":"buf"}],"output":{"name":"result"}}],[11,"push_slice","","",429,null],[11,"from_str","","",430,{"inputs":[{"name":"slice"},{"name":"str"}],"output":{"name":"slice"}}],[11,"to_str","","",430,{"inputs":[{"name":"slice"}],"output":{"name":"option"}}],[11,"to_string_lossy","","",430,{"inputs":[{"name":"slice"}],"output":{"name":"cow"}}],[11,"to_owned","","",430,{"inputs":[{"name":"slice"}],"output":{"name":"buf"}}],[11,"from_fd","std::sys::pipe","",431,{"inputs":[{"name":"anonpipe"},{"name":"i32"}],"output":{"name":"anonpipe"}}],[11,"read","","",431,null],[11,"write","","",431,null],[11,"raw","","",431,{"inputs":[{"name":"anonpipe"}],"output":{"name":"i32"}}],[11,"fd","","",431,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",431,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"clone","std::sys::process","",432,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"new","","",432,{"inputs":[{"name":"command"},{"name":"osstr"}],"output":{"name":"command"}}],[11,"arg","","",432,null],[11,"args","","",432,null],[11,"env","","",432,null],[11,"env_remove","","",432,null],[11,"env_clear","","",432,null],[11,"cwd","","",432,null],[11,"fmt","","",433,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",433,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",433,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",433,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","",433,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","",433,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",433,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","",434,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"spawn","","",434,{"inputs":[{"name":"process"},{"name":"command"},{"name":"stdio"},{"name":"stdio"},{"name":"stdio"}],"output":{"name":"result"}}],[11,"id","","",434,{"inputs":[{"name":"process"}],"output":{"name":"u32"}}],[11,"wait","","",434,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"try_wait","","",434,{"inputs":[{"name":"process"}],"output":{"name":"option"}}],[11,"new","std::sys::rwlock","",435,{"inputs":[{"name":"rwlock"}],"output":{"name":"rwlock"}}],[11,"read","","",435,null],[11,"try_read","","",435,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","",435,null],[11,"try_write","","",435,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","",435,null],[11,"write_unlock","","",435,null],[11,"destroy","","",435,null],[11,"new","std::sys::stack_overflow","",436,{"inputs":[{"name":"handler"}],"output":{"name":"handler"}}],[11,"drop","","",436,null],[11,"new","std::sys::thread","",437,{"inputs":[{"name":"thread"},{"name":"usize"},{"name":"box"}],"output":{"name":"result"}}],[11,"yield_now","","",437,null],[11,"set_name","","",437,null],[11,"sleep","","",437,null],[11,"join","","",437,null],[11,"drop","","",437,null],[11,"now","std::sys::time::inner","",438,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"new","std::sys::stdio","",439,{"inputs":[{"name":"stdin"}],"output":{"name":"result"}}],[11,"read","","",439,null],[11,"new","","",440,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write","","",440,null],[11,"new","","",441,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write","","",441,null],[11,"write","","",441,null],[11,"flush","","",441,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"new","std::rand::os::imp","Create a new `OsRng`.",442,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",442,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",442,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",442,null],[11,"new","std::rand::reader","Create a new `ReaderRng` from a `Read`.",443,{"inputs":[{"name":"readerrng"},{"name":"r"}],"output":{"name":"readerrng"}}],[11,"next_u32","","",443,{"inputs":[{"name":"readerrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",443,{"inputs":[{"name":"readerrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",443,null],[11,"clone","std::rand","",444,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",444,{"inputs":[{"name":"stdrng"}],"output":{"name":"result"}}],[11,"next_u32","","",444,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",444,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",444,null],[11,"from_seed","","",444,null],[11,"reseed","","",445,null],[11,"clone","","",446,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",446,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",446,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",446,null],[11,"new","alloc::rc","Constructs a new `Rc<T>`.",447,{"inputs":[{"name":"rc"},{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc<T>` has only one strong reference.\nThis will succeed even if there are outstanding weak references.",447,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",447,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Downgrades the `Rc<T>` to a `Weak<T>` reference.",447,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",447,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",447,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak<T>` values that share\nthe same inner value.",447,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc<T>` has\none strong reference and no weak references.",447,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"make_unique","","",447,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"make_mut","","Make a mutable reference into the given `Rc<T>` by cloning the inner\ndata if the `Rc<T>` doesn't have one strong reference and no weak\nreferences.",447,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",447,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Rc<T>`.",447,null],[11,"clone","","Makes a clone of the `Rc<T>`.",447,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"default","","Creates a new `Rc<T>`, with the `Default` value for `T`.",447,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc<T>`s.",447,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Rc<T>`s.",447,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Rc<T>`s.",447,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Rc<T>`s.",447,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"le","","'Less-than or equal to' comparison for two `Rc<T>`s.",447,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Rc<T>`s.",447,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ge","","'Greater-than or equal to' comparison for two `Rc<T>`s.",447,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"cmp","","Comparison for two `Rc<T>`s.",447,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"ordering"}}],[11,"hash","","",447,null],[11,"fmt","","",447,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",447,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",447,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",448,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Weak<T>`.",448,null],[11,"clone","","Makes a clone of the `Weak<T>`.",448,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"fmt","","",448,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",447,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"as_ref","","",447,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"next","rustc_unicode::char","",449,{"inputs":[{"name":"tolowercase"}],"output":{"name":"option"}}],[11,"next","","",450,{"inputs":[{"name":"touppercase"}],"output":{"name":"option"}}],[11,"next","","",451,{"inputs":[{"name":"casemappingiter"}],"output":{"name":"option"}}],[11,"clone","","",452,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"decodeutf16"}}],[11,"next","","",452,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"option"}}],[11,"size_hint","","",452,null],[11,"borrow","collections::vec","",255,null],[11,"borrow_mut","","",255,null],[11,"clone","collections::str","",453,{"inputs":[{"name":"utf16units"}],"output":{"name":"utf16units"}}],[11,"next","","",453,{"inputs":[{"name":"utf16units"}],"output":{"name":"option"}}],[11,"size_hint","","",453,null],[11,"borrow","collections::string","",276,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"borrow","collections::borrow","",454,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"clone","","",454,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",454,null],[11,"into_owned","","Extracts the owned data.",454,null],[11,"deref","","",454,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"cmp","","",454,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"ordering"}}],[11,"eq","","",454,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",454,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","","",454,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",454,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",454,null],[11,"into_cow","","",454,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"as_ref","","",454,{"inputs":[{"name":"cow"}],"output":{"name":"t"}}],[11,"new","collections::vec","Constructs a new, empty `Vec<T>`.",255,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec<T>` with the specified capacity.",255,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec<T>` directly from the raw components of another vector.",255,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",255,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec<T>`. The collection may reserve more space to avoid\nfrequent reallocations.",255,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec<T>`. Does nothing if the capacity is already\nsufficient.",255,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",255,null],[11,"into_boxed_slice","","Converts the vector into Box<[T]>.",255,{"inputs":[{"name":"vec"}],"output":{"name":"box"}}],[11,"truncate","","Shorten a vector, dropping excess elements.",255,null],[11,"as_slice","","Extracts a slice containing the entire vector.",255,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",255,null],[11,"set_len","","Sets the length of a vector.",255,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",255,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after position `i` one position to the right.",255,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after position `index` one position to the left.",255,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"retain","","Retains only the elements specified by the predicate.",255,null],[11,"push","","Appends an element to the back of a collection.",255,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",255,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",255,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",255,{"inputs":[{"name":"vec"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the vector, removing all values.",255,null],[11,"len","","Returns the number of elements in the vector.",255,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector contains no elements.",255,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"split_off","","Splits the collection into two at the given index.",255,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",255,null],[11,"push_all","","Appends all elements in a slice to the `Vec`.",255,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",255,null],[11,"clone","","",255,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"clone_from","","",255,null],[11,"hash","","",255,null],[11,"index","","",255,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",255,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index","","",255,null],[11,"index","","",255,null],[11,"index","","",255,null],[11,"index","","",255,null],[11,"index_mut","","",255,null],[11,"index_mut","","",255,null],[11,"index_mut","","",255,null],[11,"index_mut","","",255,null],[11,"deref","","",255,null],[11,"deref_mut","","",255,null],[11,"from_iter","","",255,{"inputs":[{"name":"vec"},{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",255,{"inputs":[{"name":"vec"}],"output":{"name":"intoiter"}}],[11,"extend","","",255,null],[11,"extend","","",255,null],[11,"eq","","",255,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",255,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","collections::borrow","",454,null],[11,"ne","","",454,null],[11,"eq","","",454,null],[11,"ne","","",454,null],[11,"eq","","",454,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",454,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","collections::vec","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"partial_cmp","","",255,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"option"}}],[11,"cmp","","",255,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"ordering"}}],[11,"drop","","",255,null],[11,"default","","",255,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"fmt","","",255,{"inputs":[{"name":"vec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",255,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_mut","","",255,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_ref","","",255,null],[11,"as_mut","","",255,null],[11,"from","","",255,null],[11,"from","","",255,{"inputs":[{"name":"vec"},{"name":"str"}],"output":{"name":"vec"}}],[11,"from_iter","collections::borrow","",454,{"inputs":[{"name":"cow"},{"name":"i"}],"output":{"name":"cow"}}],[11,"into_cow","collections::vec","",255,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"next","","",455,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",455,null],[11,"count","","",455,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next_back","","",455,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",455,null],[11,"next","","",456,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",456,null],[11,"next_back","","",456,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","","",456,null],[11,"cmp","collections::string","",276,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",276,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"option"}}],[11,"lt","","",276,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"le","","",276,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"gt","","",276,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ge","","",276,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"fmt","","",198,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",199,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new string buffer initialized with the empty string.",276,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new string buffer with the given capacity.\nThe string will be able to hold exactly `capacity` bytes without\nreallocating. If `capacity` is 0, the string will not allocate.",276,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",276,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a `String`, including invalid characters.",276,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `None`\nif `v` contains any invalid data.",276,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",276,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",276,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",276,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Returns the underlying byte buffer, encoded as UTF-8.",276,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"as_str","","Extracts a string slice containing the entire string.",276,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"push_str","","Pushes the given string onto this string buffer.",276,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without\nreallocating.",276,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `String`. The collection may reserve more space to avoid\nfrequent reallocations.",276,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bytes to be\ninserted in the given `String`. Does nothing if the capacity is already\nsufficient.",276,null],[11,"shrink_to_fit","","Shrinks the capacity of this string buffer to match its length.",276,null],[11,"push","","Adds the given character to the end of the string.",276,null],[11,"as_bytes","","Works with the underlying buffer as a byte slice.",276,null],[11,"truncate","","Shortens a string to the specified length.",276,null],[11,"pop","","Removes the last character from the string buffer and returns it.\nReturns `None` if this string buffer is empty.",276,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"remove","","Removes the character from the string buffer at byte position `idx` and\nreturns it.",276,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"char"}}],[11,"insert","","Inserts a character into the string buffer at byte position `idx`.",276,null],[11,"as_mut_vec","","Views the string buffer as a mutable sequence of bytes.",276,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"len","","Returns the number of bytes in this string.",276,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the string contains no bytes",276,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"clear","","Truncates the string, returning it to 0 length.",276,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",276,{"inputs":[{"name":"string"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_boxed_str","","Converts the string into `Box<str>`.",276,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_boxed_slice","","Converts the string into `Box<str>`.",276,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_bytes","","Consumes this error, returning the bytes that were attempted to make a\n`String` with.",198,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"vec"}}],[11,"utf8_error","","Access the underlying UTF8-error that was the cause of this error.",198,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"utf8error"}}],[11,"fmt","","",198,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",199,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",276,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"clone_from","","",276,null],[11,"from_iter","","",276,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",276,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",276,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",276,null],[11,"extend","","",276,null],[11,"extend","","",276,null],[11,"extend","","",276,null],[11,"eq","","",276,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",276,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",276,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",276,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",276,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",276,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",454,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",454,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",454,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",454,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",276,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"ne","","",276,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",454,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",454,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"default","collections::string","",276,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",276,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",276,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",276,null],[11,"add","","",276,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"index","","",276,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index","","",276,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index","","",276,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index","","",276,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"index_mut","","",276,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index_mut","","",276,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index_mut","","",276,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index_mut","","",276,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"deref","","",276,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"deref_mut","","",276,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"from_str","","",276,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",457,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"fmt","","",457,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",457,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"as_ref","","",276,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_ref","","",276,null],[11,"from","","",276,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",454,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",454,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",276,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"into_cow","","",276,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"write_str","","",276,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",276,{"inputs":[{"name":"string"},{"name":"char"}],"output":{"name":"result"}}],[11,"drop","","",458,null],[11,"next","","",458,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",458,null],[11,"next_back","","",458,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"clone","alloc::boxed","",459,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"exchangeheapsingleton"}}],[11,"pointer","","",460,null],[11,"make_place","","",460,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"intermediatebox"}}],[11,"finalize","","",460,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"finalize","","",197,{"inputs":[{"name":"box"},{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",459,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"intermediatebox"}}],[11,"drop","","",460,null],[11,"new","","Allocates memory on the heap and then moves `x` into it.",197,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from the raw pointer.",197,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",197,null],[11,"default","","",197,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"default","","",197,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box's contents.",197,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`'s contents into `self` without creating a new allocation.",197,null],[11,"clone","","",197,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"eq","","",197,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",197,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",197,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",197,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",197,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",197,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",197,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",197,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",197,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",197,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",197,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"fmt","","",197,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",197,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",197,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",197,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",197,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"next","","",197,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",197,null],[11,"next_back","","",197,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"call_once","","",197,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"call_once","","",197,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"clone","","",197,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"borrow","","",197,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"borrow_mut","","",197,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_ref","","",197,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_mut","","",197,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref","backend::glutin_backend::glutin::api::x11::window","",461,{"inputs":[{"name":"global_xopenim_lock"}],"output":{"name":"mutex"}}],[11,"drop","","",462,null],[11,"clone","","",463,{"inputs":[{"name":"windowproxy"}],"output":{"name":"windowproxy"}}],[11,"wakeup_event_loop","","",463,null],[11,"drop","","",464,null],[11,"next","","",465,{"inputs":[{"name":"polleventsiterator"}],"output":{"name":"option"}}],[11,"next","","",466,{"inputs":[{"name":"waiteventsiterator"}],"output":{"name":"option"}}],[11,"new","","",467,{"inputs":[{"name":"window"},{"name":"arc"},{"name":"windowattributes"},{"name":"pixelformatrequirements"},{"name":"glattributes"}],"output":{"name":"result"}}],[11,"set_title","","",467,null],[11,"show","","",467,null],[11,"hide","","",467,null],[11,"get_position","","",467,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"set_position","","",467,null],[11,"get_inner_size","","",467,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"get_outer_size","","",467,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"set_inner_size","","",467,null],[11,"create_window_proxy","","",467,{"inputs":[{"name":"window"}],"output":{"name":"windowproxy"}}],[11,"poll_events","","",467,{"inputs":[{"name":"window"}],"output":{"name":"polleventsiterator"}}],[11,"wait_events","","",467,{"inputs":[{"name":"window"}],"output":{"name":"waiteventsiterator"}}],[11,"get_xlib_display","","",467,null],[11,"platform_display","","",467,null],[11,"get_xlib_window","","",467,null],[11,"platform_window","","",467,null],[11,"set_window_resize_callback","","",467,null],[11,"set_cursor","","",467,null],[11,"set_cursor_state","","",467,{"inputs":[{"name":"window"},{"name":"cursorstate"}],"output":{"name":"result"}}],[11,"hidpi_factor","","",467,{"inputs":[{"name":"window"}],"output":{"name":"f32"}}],[11,"set_cursor_position","","",467,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"make_current","","",467,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"is_current","","",467,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"get_proc_address","","",467,null],[11,"swap_buffers","","",467,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"get_api","","",467,{"inputs":[{"name":"window"}],"output":{"name":"api"}}],[11,"get_pixel_format","","",467,{"inputs":[{"name":"window"}],"output":{"name":"pixelformat"}}],[11,"new","backend::glutin_backend::glutin::api::x11::xdisplay","",468,{"inputs":[{"name":"xconnection"},{"name":"option"}],"output":{"name":"result"}}],[11,"drop","","",468,null],[11,"fmt","","",469,{"inputs":[{"name":"xnotsupported"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",469,{"inputs":[{"name":"xnotsupported"}],"output":{"name":"xnotsupported"}}],[11,"from","","",469,{"inputs":[{"name":"xnotsupported"},{"name":"openerror"}],"output":{"name":"xnotsupported"}}],[11,"description","","",469,{"inputs":[{"name":"xnotsupported"}],"output":{"name":"str"}}],[11,"cause","","",469,{"inputs":[{"name":"xnotsupported"}],"output":{"name":"option"}}],[11,"fmt","","",469,{"inputs":[{"name":"xnotsupported"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","backend::glutin_backend::glutin::platform::platform::api_dispatch","",470,{"inputs":[{"name":"backend"}],"output":{"name":"backend"}}],[11,"clone","","",471,{"inputs":[{"name":"windowproxy"}],"output":{"name":"windowproxy"}}],[11,"wakeup_event_loop","","",471,null],[11,"clone","","",472,{"inputs":[{"name":"monitorid"}],"output":{"name":"monitorid"}}],[11,"get_name","","",472,{"inputs":[{"name":"monitorid"}],"output":{"name":"option"}}],[11,"get_native_identifier","","",472,{"inputs":[{"name":"monitorid"}],"output":{"name":"nativemonitorid"}}],[11,"get_dimensions","","",472,null],[11,"next","","",473,{"inputs":[{"name":"polleventsiterator"}],"output":{"name":"option"}}],[11,"next","","",474,{"inputs":[{"name":"waiteventsiterator"}],"output":{"name":"option"}}],[11,"new","","",475,{"inputs":[{"name":"window"},{"name":"windowattributes"},{"name":"pixelformatrequirements"},{"name":"glattributes"}],"output":{"name":"result"}}],[11,"set_title","","",475,null],[11,"show","","",475,null],[11,"hide","","",475,null],[11,"get_position","","",475,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"set_position","","",475,null],[11,"get_inner_size","","",475,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"get_outer_size","","",475,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"set_inner_size","","",475,null],[11,"create_window_proxy","","",475,{"inputs":[{"name":"window"}],"output":{"name":"windowproxy"}}],[11,"poll_events","","",475,{"inputs":[{"name":"window"}],"output":{"name":"polleventsiterator"}}],[11,"wait_events","","",475,{"inputs":[{"name":"window"}],"output":{"name":"waiteventsiterator"}}],[11,"set_window_resize_callback","","",475,null],[11,"set_cursor","","",475,null],[11,"set_cursor_state","","",475,{"inputs":[{"name":"window"},{"name":"cursorstate"}],"output":{"name":"result"}}],[11,"hidpi_factor","","",475,{"inputs":[{"name":"window"}],"output":{"name":"f32"}}],[11,"set_cursor_position","","",475,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"platform_display","","",475,null],[11,"platform_window","","",475,null],[11,"make_current","","",475,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"is_current","","",475,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"get_proc_address","","",475,null],[11,"swap_buffers","","",475,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"get_api","","",475,{"inputs":[{"name":"window"}],"output":{"name":"api"}}],[11,"get_pixel_format","","",475,{"inputs":[{"name":"window"}],"output":{"name":"pixelformat"}}],[11,"new","backend::glutin_backend::glutin::platform::platform","",476,null],[11,"make_current","","",476,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"result"}}],[11,"is_current","","",476,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"bool"}}],[11,"get_proc_address","","",476,null],[11,"swap_buffers","","",476,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"result"}}],[11,"get_api","","",476,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"api"}}],[11,"get_pixel_format","","",476,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"pixelformat"}}],[11,"fmt","backend::glutin_backend::glutin::events","",477,{"inputs":[{"name":"event"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",477,{"inputs":[{"name":"event"}],"output":{"name":"event"}}],[11,"clone","","",478,{"inputs":[{"name":"touchphase"}],"output":{"name":"touchphase"}}],[11,"eq","","",478,{"inputs":[{"name":"touchphase"},{"name":"touchphase"}],"output":{"name":"bool"}}],[11,"ne","","",478,{"inputs":[{"name":"touchphase"},{"name":"touchphase"}],"output":{"name":"bool"}}],[11,"hash","","",478,null],[11,"fmt","","",478,{"inputs":[{"name":"touchphase"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",479,{"inputs":[{"name":"touch"}],"output":{"name":"touch"}}],[11,"fmt","","",479,{"inputs":[{"name":"touch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",480,{"inputs":[{"name":"elementstate"}],"output":{"name":"elementstate"}}],[11,"eq","","",480,{"inputs":[{"name":"elementstate"},{"name":"elementstate"}],"output":{"name":"bool"}}],[11,"ne","","",480,{"inputs":[{"name":"elementstate"},{"name":"elementstate"}],"output":{"name":"bool"}}],[11,"hash","","",480,null],[11,"fmt","","",480,{"inputs":[{"name":"elementstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",481,{"inputs":[{"name":"mousebutton"}],"output":{"name":"mousebutton"}}],[11,"eq","","",481,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"ne","","",481,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"hash","","",481,null],[11,"fmt","","",481,{"inputs":[{"name":"mousebutton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",482,{"inputs":[{"name":"mousescrolldelta"},{"name":"mousescrolldelta"}],"output":{"name":"bool"}}],[11,"ne","","",482,{"inputs":[{"name":"mousescrolldelta"},{"name":"mousescrolldelta"}],"output":{"name":"bool"}}],[11,"clone","","",482,{"inputs":[{"name":"mousescrolldelta"}],"output":{"name":"mousescrolldelta"}}],[11,"fmt","","",482,{"inputs":[{"name":"mousescrolldelta"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",483,{"inputs":[{"name":"virtualkeycode"}],"output":{"name":"virtualkeycode"}}],[11,"eq","","",483,{"inputs":[{"name":"virtualkeycode"},{"name":"virtualkeycode"}],"output":{"name":"bool"}}],[11,"ne","","",483,{"inputs":[{"name":"virtualkeycode"},{"name":"virtualkeycode"}],"output":{"name":"bool"}}],[11,"hash","","",483,null],[11,"fmt","","",483,{"inputs":[{"name":"virtualkeycode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","backend::glutin_backend::glutin::headless","Initializes a new `HeadlessRendererBuilder` with default values.",484,{"inputs":[{"name":"headlessrendererbuilder"},{"name":"u32"},{"name":"u32"}],"output":{"name":"headlessrendererbuilder"}}],[11,"with_gl","","Sets how the backend should choose the OpenGL API and version.",484,{"inputs":[{"name":"headlessrendererbuilder"},{"name":"glrequest"}],"output":{"name":"headlessrendererbuilder"}}],[11,"with_gl_debug_flag","","Sets the *debug* flag for the OpenGL context.",484,{"inputs":[{"name":"headlessrendererbuilder"},{"name":"bool"}],"output":{"name":"headlessrendererbuilder"}}],[11,"with_gl_robustness","","Sets the robustness of the OpenGL context. See the docs of `Robustness`.",484,{"inputs":[{"name":"headlessrendererbuilder"},{"name":"robustness"}],"output":{"name":"headlessrendererbuilder"}}],[11,"build","","Builds the headless context.",484,{"inputs":[{"name":"headlessrendererbuilder"}],"output":{"name":"result"}}],[11,"build_strict","","Builds the headless context.",484,{"inputs":[{"name":"headlessrendererbuilder"}],"output":{"name":"result"}}],[11,"make_current","","Creates a new OpenGL context\nSets the context as the current context.",485,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"result"}}],[11,"is_current","","Returns true if this context is the current one in this thread.",485,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"bool"}}],[11,"get_proc_address","","Returns the address of an OpenGL function.",485,null],[11,"get_api","","Returns the API that is currently provided by this window.",485,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"api"}}],[11,"set_window_resize_callback","","",485,null],[11,"make_current","","",485,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"result"}}],[11,"is_current","","",485,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"bool"}}],[11,"get_proc_address","","",485,null],[11,"swap_buffers","","",485,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"result"}}],[11,"get_api","","",485,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"api"}}],[11,"get_pixel_format","","",485,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"pixelformat"}}],[11,"new","backend::glutin_backend::glutin::window","Initializes a new `WindowBuilder` with default values.",486,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"with_dimensions","","Requests the window to be of specific dimensions.",486,{"inputs":[{"name":"windowbuilder"},{"name":"u32"},{"name":"u32"}],"output":{"name":"windowbuilder"}}],[11,"with_min_dimensions","","Sets a minimum dimension size for the window",486,{"inputs":[{"name":"windowbuilder"},{"name":"u32"},{"name":"u32"}],"output":{"name":"windowbuilder"}}],[11,"with_max_dimensions","","Sets a maximum dimension size for the window",486,{"inputs":[{"name":"windowbuilder"},{"name":"u32"},{"name":"u32"}],"output":{"name":"windowbuilder"}}],[11,"with_title","","Requests a specific title for the window.",486,{"inputs":[{"name":"windowbuilder"},{"name":"string"}],"output":{"name":"windowbuilder"}}],[11,"with_fullscreen","","Requests fullscreen mode.",486,{"inputs":[{"name":"windowbuilder"},{"name":"monitorid"}],"output":{"name":"windowbuilder"}}],[11,"with_shared_lists","","The created window will share all its OpenGL objects with the window in the parameter.",486,{"inputs":[{"name":"windowbuilder"},{"name":"window"}],"output":{"name":"windowbuilder"}}],[11,"with_gl","","Sets how the backend should choose the OpenGL API and version.",486,{"inputs":[{"name":"windowbuilder"},{"name":"glrequest"}],"output":{"name":"windowbuilder"}}],[11,"with_gl_profile","","Sets the desired OpenGL context profile.",486,{"inputs":[{"name":"windowbuilder"},{"name":"glprofile"}],"output":{"name":"windowbuilder"}}],[11,"with_gl_debug_flag","","Sets the *debug* flag for the OpenGL context.",486,{"inputs":[{"name":"windowbuilder"},{"name":"bool"}],"output":{"name":"windowbuilder"}}],[11,"with_gl_robustness","","Sets the robustness of the OpenGL context. See the docs of `Robustness`.",486,{"inputs":[{"name":"windowbuilder"},{"name":"robustness"}],"output":{"name":"windowbuilder"}}],[11,"with_vsync","","Requests that the window has vsync enabled.",486,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"with_visibility","","Sets whether the window will be initially hidden or visible.",486,{"inputs":[{"name":"windowbuilder"},{"name":"bool"}],"output":{"name":"windowbuilder"}}],[11,"with_multisampling","","Sets the multisampling level to request.",486,{"inputs":[{"name":"windowbuilder"},{"name":"u16"}],"output":{"name":"windowbuilder"}}],[11,"with_depth_buffer","","Sets the number of bits in the depth buffer.",486,{"inputs":[{"name":"windowbuilder"},{"name":"u8"}],"output":{"name":"windowbuilder"}}],[11,"with_stencil_buffer","","Sets the number of bits in the stencil buffer.",486,{"inputs":[{"name":"windowbuilder"},{"name":"u8"}],"output":{"name":"windowbuilder"}}],[11,"with_pixel_format","","Sets the number of bits in the color buffer.",486,{"inputs":[{"name":"windowbuilder"},{"name":"u8"},{"name":"u8"}],"output":{"name":"windowbuilder"}}],[11,"with_stereoscopy","","Request the backend to be stereoscopic.",486,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"with_srgb","","Sets whether sRGB should be enabled on the window. `None` means \"I don't care\".",486,{"inputs":[{"name":"windowbuilder"},{"name":"option"}],"output":{"name":"windowbuilder"}}],[11,"with_transparency","","Sets whether the background of the window should be transparent.",486,{"inputs":[{"name":"windowbuilder"},{"name":"bool"}],"output":{"name":"windowbuilder"}}],[11,"with_decorations","","Sets whether the window should have a border, a title bar, etc.",486,{"inputs":[{"name":"windowbuilder"},{"name":"bool"}],"output":{"name":"windowbuilder"}}],[11,"with_multitouch","","Enables multitouch",486,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"build","","Builds the window.",486,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"result"}}],[11,"build_strict","","Builds the window.",486,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"result"}}],[11,"default","backend::glutin_backend::glutin","",1,{"inputs":[{"name":"window"}],"output":{"name":"window"}}],[11,"make_current","","",1,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"is_current","","",1,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"get_proc_address","","",1,null],[11,"swap_buffers","","",1,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"get_api","","",1,{"inputs":[{"name":"window"}],"output":{"name":"api"}}],[11,"get_pixel_format","","",1,{"inputs":[{"name":"window"}],"output":{"name":"pixelformat"}}],[11,"clone","backend::glutin_backend::glutin::window","",487,{"inputs":[{"name":"windowproxy"}],"output":{"name":"windowproxy"}}],[11,"wakeup_event_loop","","Triggers a blocked event loop to wake up. This is\ntypically called when another thread wants to wake\nup the blocked rendering thread to cause a refresh.",487,null],[11,"next","","",488,{"inputs":[{"name":"polleventsiterator"}],"output":{"name":"option"}}],[11,"size_hint","","",488,null],[11,"next","","",489,{"inputs":[{"name":"waiteventsiterator"}],"output":{"name":"option"}}],[11,"size_hint","","",489,null],[11,"next","","",490,{"inputs":[{"name":"availablemonitorsiter"}],"output":{"name":"option"}}],[11,"size_hint","","",490,null],[11,"get_name","","Returns a human-readable name of the monitor.",491,{"inputs":[{"name":"monitorid"}],"output":{"name":"option"}}],[11,"get_native_identifier","","Returns the native platform identifier for this monitor.",491,{"inputs":[{"name":"monitorid"}],"output":{"name":"nativemonitorid"}}],[11,"get_dimensions","","Returns the number of pixels currently displayed on the monitor.",491,null],[11,"get_xlib_window","backend::glutin_backend::glutin","",1,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"get_xlib_display","","",1,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"fmt","","",492,{"inputs":[{"name":"creationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",492,{"inputs":[{"name":"creationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",492,{"inputs":[{"name":"creationerror"}],"output":{"name":"str"}}],[11,"cause","","",492,{"inputs":[{"name":"creationerror"}],"output":{"name":"option"}}],[11,"fmt","","",493,{"inputs":[{"name":"contexterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",493,{"inputs":[{"name":"contexterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",493,{"inputs":[{"name":"contexterror"}],"output":{"name":"str"}}],[11,"eq","","",494,{"inputs":[{"name":"api"},{"name":"api"}],"output":{"name":"bool"}}],[11,"ne","","",494,{"inputs":[{"name":"api"},{"name":"api"}],"output":{"name":"bool"}}],[11,"clone","","",494,{"inputs":[{"name":"api"}],"output":{"name":"api"}}],[11,"fmt","","",494,{"inputs":[{"name":"api"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",495,{"inputs":[{"name":"glprofile"},{"name":"glprofile"}],"output":{"name":"bool"}}],[11,"ne","","",495,{"inputs":[{"name":"glprofile"},{"name":"glprofile"}],"output":{"name":"bool"}}],[11,"clone","","",495,{"inputs":[{"name":"glprofile"}],"output":{"name":"glprofile"}}],[11,"fmt","","",495,{"inputs":[{"name":"glprofile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",496,{"inputs":[{"name":"glrequest"}],"output":{"name":"glrequest"}}],[11,"fmt","","",496,{"inputs":[{"name":"glrequest"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_gl_version","","Extract the desktop GL version, if any.",496,{"inputs":[{"name":"glrequest"}],"output":{"name":"option"}}],[11,"eq","","",497,{"inputs":[{"name":"robustness"},{"name":"robustness"}],"output":{"name":"bool"}}],[11,"ne","","",497,{"inputs":[{"name":"robustness"},{"name":"robustness"}],"output":{"name":"bool"}}],[11,"clone","","",497,{"inputs":[{"name":"robustness"}],"output":{"name":"robustness"}}],[11,"fmt","","",497,{"inputs":[{"name":"robustness"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",498,{"inputs":[{"name":"releasebehavior"},{"name":"releasebehavior"}],"output":{"name":"bool"}}],[11,"ne","","",498,{"inputs":[{"name":"releasebehavior"},{"name":"releasebehavior"}],"output":{"name":"bool"}}],[11,"clone","","",498,{"inputs":[{"name":"releasebehavior"}],"output":{"name":"releasebehavior"}}],[11,"fmt","","",498,{"inputs":[{"name":"releasebehavior"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",499,{"inputs":[{"name":"mousecursor"}],"output":{"name":"mousecursor"}}],[11,"fmt","","",499,{"inputs":[{"name":"mousecursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",500,{"inputs":[{"name":"cursorstate"}],"output":{"name":"cursorstate"}}],[11,"fmt","","",500,{"inputs":[{"name":"cursorstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",501,{"inputs":[{"name":"pixelformat"}],"output":{"name":"pixelformat"}}],[11,"fmt","","",501,{"inputs":[{"name":"pixelformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",502,{"inputs":[{"name":"pixelformatrequirements"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",502,{"inputs":[{"name":"pixelformatrequirements"}],"output":{"name":"pixelformatrequirements"}}],[11,"default","","",502,{"inputs":[{"name":"pixelformatrequirements"}],"output":{"name":"pixelformatrequirements"}}],[11,"clone","","",503,{"inputs":[{"name":"windowattributes"}],"output":{"name":"windowattributes"}}],[11,"default","","",503,{"inputs":[{"name":"windowattributes"}],"output":{"name":"windowattributes"}}],[11,"clone","","",504,{"inputs":[{"name":"glattributes"}],"output":{"name":"glattributes"}}],[11,"map_sharing","","Turns the `sharing` parameter into another type by calling a closure.",504,{"inputs":[{"name":"glattributes"},{"name":"f"}],"output":{"name":"glattributes"}}],[11,"default","","",504,{"inputs":[{"name":"glattributes"}],"output":{"name":"glattributes"}}],[11,"eq","backend::glutin_backend::glutin::native_monitor","",505,{"inputs":[{"name":"nativemonitorid"},{"name":"nativemonitorid"}],"output":{"name":"bool"}}],[11,"ne","","",505,{"inputs":[{"name":"nativemonitorid"},{"name":"nativemonitorid"}],"output":{"name":"bool"}}],[11,"clone","","",505,{"inputs":[{"name":"nativemonitorid"}],"output":{"name":"nativemonitorid"}}],[3,"Window","glium::glutin","Represents an OpenGL context and the Window or environment around it.",null,null],[8,"GlContext","","Trait that describes objects that have access to an OpenGL context.",null,null],[10,"make_current","","Sets the context as the current context.",506,{"inputs":[{"name":"glcontext"}],"output":{"name":"result"}}],[10,"is_current","","Returns true if this context is the current one in this thread.",506,{"inputs":[{"name":"glcontext"}],"output":{"name":"bool"}}],[10,"get_proc_address","","Returns the address of an OpenGL function.",506,null],[10,"swap_buffers","","Swaps the buffers in case of double or triple buffering.",506,{"inputs":[{"name":"glcontext"}],"output":{"name":"result"}}],[10,"get_api","","Returns the OpenGL API being used.",506,{"inputs":[{"name":"glcontext"}],"output":{"name":"api"}}],[10,"get_pixel_format","","Returns the pixel format of the main framebuffer of the context.",506,{"inputs":[{"name":"glcontext"}],"output":{"name":"pixelformat"}}],[4,"CreationError","","Error that can happen while creating a window or a headless renderer.",null,null],[13,"OsError","","",492,null],[13,"NotSupported","","TODO: remove this error",492,null],[13,"NoBackendAvailable","","",492,null],[13,"RobustnessNotSupported","","",492,null],[13,"OpenGlVersionNotSupported","","",492,null],[13,"NoAvailablePixelFormat","","",492,null],[4,"ContextError","","Error that can happen when manipulating an OpenGL context.",null,null],[13,"IoError","","",493,null],[13,"ContextLost","","",493,null],[4,"Api","","All APIs related to OpenGL that you can possibly get while using glutin.",null,null],[13,"OpenGl","","The classical OpenGL. Available on Windows, Linux, OS/X.",494,null],[13,"OpenGlEs","","OpenGL embedded system. Available on Linux, Android.",494,null],[13,"WebGl","","OpenGL for the web. Very similar to OpenGL ES.",494,null],[4,"GlProfile","","Describes the requested OpenGL context profiles.",null,null],[13,"Compatibility","","Include all the immediate more functions and definitions.",495,null],[13,"Core","","Include all the future-compatible functions and definitions.",495,null],[4,"GlRequest","","Describes the OpenGL API and version that are being requested when a context is created.",null,null],[13,"Latest","","Request the latest version of the \"best\" API of this platform.",496,null],[13,"Specific","","Request a specific version of a specific API.",496,null],[13,"GlThenGles","","If OpenGL is available, create an OpenGL context with the specified `opengl_version`.\nElse if OpenGL ES or WebGL is available, create a context with the\nspecified `opengles_version`.",496,null],[12,"opengl_version","glium::glutin::GlRequest","",496,null],[12,"opengles_version","","",496,null],[7,"GL_CORE","glium::glutin","The minimum core profile GL context. Useful for getting the minimum\nrequired GL version while still running on OSX, which often forbids\nthe compatibility profile features.",null,null],[4,"Robustness","","Specifies the tolerance of the OpenGL context to faults. If you accept raw OpenGL commands\nand/or raw shader code from an untrusted source, you should definitely care about this.",null,null],[13,"NotRobust","","Not everything is checked. Your application can crash if you do something wrong with your\nshaders.",497,null],[13,"NoError","","The driver doesn't check anything. This option is very dangerous. Please know what you're\ndoing before using it. See the `GL_KHR_no_error` extension.",497,null],[13,"RobustNoResetNotification","","Everything is checked to avoid any crash. The driver will attempt to avoid any problem,\nbut if a problem occurs the behavior is implementation-defined. You are just guaranteed not\nto get a crash.",497,null],[13,"TryRobustNoResetNotification","","Same as `RobustNoResetNotification` but the context creation doesn't fail if it's not\nsupported.",497,null],[13,"RobustLoseContextOnReset","","Everything is checked to avoid any crash. If a problem occurs, the context will enter a\n\"context lost\" state. It must then be recreated. For the moment, glutin doesn't provide a\nway to recreate a context with the same window :-/",497,null],[13,"TryRobustLoseContextOnReset","","Same as `RobustLoseContextOnReset` but the context creation doesn't fail if it's not\nsupported.",497,null],[4,"ReleaseBehavior","","The behavior of the driver when you change the current context.",null,null],[13,"None","","Doesn't do anything. Most notably doesn't flush.",498,null],[13,"Flush","","Flushes the context that was previously current as if `glFlush` was called.",498,null],[4,"MouseCursor","","",null,null],[13,"Default","","The platform-dependent default cursor.",499,null],[13,"Crosshair","","A simple crosshair.",499,null],[13,"Hand","","A hand (often used to indicate links in web browsers).",499,null],[13,"Arrow","","Self explanatory.",499,null],[13,"Move","","Indicates something is to be moved.",499,null],[13,"Text","","Indicates text that may be selected or edited.",499,null],[13,"Wait","","Program busy indicator.",499,null],[13,"Help","","Help indicator (often rendered as a \"?\")",499,null],[13,"Progress","","Progress indicator. Shows that processing is being done. But in contrast\nwith \"Wait\" the user may still interact with the program. Often rendered\nas a spinning beach ball, or an arrow with a watch or hourglass.",499,null],[13,"NotAllowed","","Cursor showing that something cannot be done.",499,null],[13,"ContextMenu","","",499,null],[13,"NoneCursor","","",499,null],[13,"Cell","","",499,null],[13,"VerticalText","","",499,null],[13,"Alias","","",499,null],[13,"Copy","","",499,null],[13,"NoDrop","","",499,null],[13,"Grab","","",499,null],[13,"Grabbing","","",499,null],[13,"AllScroll","","",499,null],[13,"ZoomIn","","",499,null],[13,"ZoomOut","","",499,null],[13,"EResize","","Indicate that some edge is to be moved. For example, the 'SeResize' cursor\nis used when the movement starts from the south-east corner of the box.",499,null],[13,"NResize","","",499,null],[13,"NeResize","","",499,null],[13,"NwResize","","",499,null],[13,"SResize","","",499,null],[13,"SeResize","","",499,null],[13,"SwResize","","",499,null],[13,"WResize","","",499,null],[13,"EwResize","","",499,null],[13,"NsResize","","",499,null],[13,"NeswResize","","",499,null],[13,"NwseResize","","",499,null],[13,"ColResize","","",499,null],[13,"RowResize","","",499,null],[4,"CursorState","","Describes how glutin handles the cursor.",null,null],[13,"Normal","","Normal cursor behavior.",500,null],[13,"Hide","","The cursor will be invisible when over the window.",500,null],[13,"Grab","","Grabs the mouse cursor. The cursor's motion will be confined to this\nwindow and the window has exclusive access to further events regarding\nthe cursor.",500,null],[3,"PixelFormat","","Describes a possible format. Unused.",null,null],[12,"hardware_accelerated","","",501,null],[12,"color_bits","","",501,null],[12,"alpha_bits","","",501,null],[12,"depth_bits","","",501,null],[12,"stencil_bits","","",501,null],[12,"stereoscopy","","",501,null],[12,"double_buffer","","",501,null],[12,"multisampling","","",501,null],[12,"srgb","","",501,null],[3,"PixelFormatRequirements","","Describes how the backend should choose a pixel format.",null,null],[12,"hardware_accelerated","","If true, only hardware-accelerated formats will be conisdered. If false, only software\nrenderers. `None` means \"don't care\". Default is `Some(true)`.",502,null],[12,"color_bits","","Minimum number of bits for the color buffer, excluding alpha. `None` means \"don't care\".\nThe default is `Some(24)`.",502,null],[12,"float_color_buffer","","If true, the color buffer must be in a floating point format. Default is `false`.",502,null],[12,"alpha_bits","","Minimum number of bits for the alpha in the color buffer. `None` means \"don't care\".\nThe default is `Some(8)`.",502,null],[12,"depth_bits","","Minimum number of bits for the depth buffer. `None` means \"don't care\".\nThe default value is `Some(24)`.",502,null],[12,"stencil_bits","","Minimum number of bits for the depth buffer. `None` means \"don't care\".\nThe default value is `Some(8)`.",502,null],[12,"double_buffer","","If true, only double-buffered formats will be considered. If false, only single-buffer\nformats. `None` means \"don't care\". The default is `Some(true)`.",502,null],[12,"multisampling","","Contains the minimum number of samples per pixel in the color, depth and stencil buffers.\n`None` means \"don't care\". Default is `None`.\nA value of `Some(0)` indicates that multisampling must not be enabled.",502,null],[12,"stereoscopy","","If true, only stereoscopic formats will be considered. If false, only non-stereoscopic\nformats. The default is `false`.",502,null],[12,"srgb","","If true, only sRGB-capable formats will be considered. If false, don't care.\nThe default is `false`.",502,null],[12,"release_behavior","","The behavior when changing the current context. Default is `Flush`.",502,null],[3,"WindowAttributes","","Attributes to use when creating a window.",null,null],[12,"dimensions","","The dimensions of the window. If this is `None`, some platform-specific dimensions will be\nused.",503,null],[12,"min_dimensions","","The minimum dimensions a window can be, If this is `None`, the window will have no minimum dimensions (aside from reserved).",503,null],[12,"max_dimensions","","The maximum dimensions a window can be, If this is `None`, the maximum will have no maximum or will be set to the primary monitor's dimensions by the platform.",503,null],[12,"monitor","","If `Some`, the window will be in fullscreen mode with the given monitor.",503,null],[12,"title","","The title of the window in the title bar.",503,null],[12,"visible","","Whether the window should be immediately visible upon creation.",503,null],[12,"transparent","","Whether the the window should be transparent. If this is true, writing colors\nwith alpha values different than `1.0` will produce a transparent window.",503,null],[12,"decorations","","Whether the window should have borders and bars.",503,null],[12,"multitouch","","[iOS only] Enable multitouch, see [UIView#multipleTouchEnabled]\n(https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIView_Class/#//apple_ref/occ/instp/UIView/multipleTouchEnabled)",503,null],[3,"GlAttributes","","Attributes to use when creating an OpenGL context.",null,null],[12,"sharing","","An existing context to share the new the context with.",504,null],[12,"version","","Version to try create. See `GlRequest` for more infos.",504,null],[12,"profile","","OpenGL profile to use.",504,null],[12,"debug","","Whether to enable the `debug` flag of the context.",504,null],[12,"robustness","","How the OpenGL context should detect errors.",504,null],[12,"vsync","","Whether to use vsync. If vsync is enabled, calling `swap_buffers` will block until the\nscreen refreshes. This is typically used to prevent screen tearing.",504,null],[4,"MouseButton","","",null,null],[13,"Left","","",481,null],[13,"Right","","",481,null],[13,"Middle","","",481,null],[13,"Other","","",481,null],[4,"MouseScrollDelta","","",null,null],[13,"LineDelta","","Amount in lines or rows to scroll in the horizontal\nand vertical directions.",482,null],[13,"PixelDelta","","Amount in pixels to scroll in the horizontal and\nvertical direction.",482,null],[3,"WaitEventsIterator","","An iterator for the `wait_events` function.",null,null],[4,"Event","","",null,null],[13,"Resized","","The size of the window has changed.",477,null],[13,"Moved","","The position of the window has changed.",477,null],[13,"Closed","","The window has been closed.",477,null],[13,"DroppedFile","","A file has been dropped into the window.",477,null],[13,"ReceivedCharacter","","The window received a unicode character.",477,null],[13,"Focused","","The window gained or lost focus.",477,null],[13,"KeyboardInput","","An event from the keyboard has been received.",477,null],[13,"MouseMoved","","The cursor has moved on the window.",477,null],[13,"MouseWheel","","A mouse wheel movement or touchpad scroll occurred.",477,null],[13,"MouseInput","","An event from the mouse has been received.",477,null],[13,"Awakened","","The event loop was woken up by another thread.",477,null],[13,"Refresh","","The window needs to be redrawn.",477,null],[13,"Suspended","","App has been suspended or resumed.",477,null],[13,"Touch","","Touch event has been received",477,null],[3,"MonitorId","","Identifier for a monitor.",null,null],[5,"get_available_monitors","","Returns the list of all available monitors.",null,{"inputs":[],"output":{"name":"availablemonitorsiter"}}],[3,"HeadlessContext","","Represents a headless OpenGL context.",null,null],[3,"AvailableMonitorsIter","","An iterator for the list of available monitors.",null,null],[4,"NativeMonitorId","","Native platform identifier for a monitor. Different platforms use fundamentally different types\nto represent a monitor ID.",null,null],[13,"Numeric","","Cocoa and X11 use a numeric identifier to represent a monitor.",505,null],[13,"Name","","Win32 uses a Unicode string to represent a monitor.",505,null],[13,"Unavailable","","Other platforms (Android) don't support monitor identification.",505,null],[3,"Touch","","Represents touch event",null,null],[12,"phase","","",479,null],[12,"location","","",479,null],[12,"id","","unique identifier of a finger.",479,null],[4,"TouchPhase","","",null,null],[13,"Started","","",478,null],[13,"Moved","","",478,null],[13,"Ended","","",478,null],[13,"Cancelled","","",478,null],[3,"HeadlessRendererBuilder","","Object that allows you to build headless contexts.",null,null],[12,"dimensions","","The dimensions to use.",484,null],[12,"opengl","","The OpenGL attributes to build the context with.",484,null],[4,"VirtualKeyCode","","",null,null],[13,"Key1","","The '1' key over the letters.",483,null],[13,"Key2","","The '2' key over the letters.",483,null],[13,"Key3","","The '3' key over the letters.",483,null],[13,"Key4","","The '4' key over the letters.",483,null],[13,"Key5","","The '5' key over the letters.",483,null],[13,"Key6","","The '6' key over the letters.",483,null],[13,"Key7","","The '7' key over the letters.",483,null],[13,"Key8","","The '8' key over the letters.",483,null],[13,"Key9","","The '9' key over the letters.",483,null],[13,"Key0","","The '0' key over the 'O' and 'P' keys.",483,null],[13,"A","","",483,null],[13,"B","","",483,null],[13,"C","","",483,null],[13,"D","","",483,null],[13,"E","","",483,null],[13,"F","","",483,null],[13,"G","","",483,null],[13,"H","","",483,null],[13,"I","","",483,null],[13,"J","","",483,null],[13,"K","","",483,null],[13,"L","","",483,null],[13,"M","","",483,null],[13,"N","","",483,null],[13,"O","","",483,null],[13,"P","","",483,null],[13,"Q","","",483,null],[13,"R","","",483,null],[13,"S","","",483,null],[13,"T","","",483,null],[13,"U","","",483,null],[13,"V","","",483,null],[13,"W","","",483,null],[13,"X","","",483,null],[13,"Y","","",483,null],[13,"Z","","",483,null],[13,"Escape","","The Escape key, next to F1.",483,null],[13,"F1","","",483,null],[13,"F2","","",483,null],[13,"F3","","",483,null],[13,"F4","","",483,null],[13,"F5","","",483,null],[13,"F6","","",483,null],[13,"F7","","",483,null],[13,"F8","","",483,null],[13,"F9","","",483,null],[13,"F10","","",483,null],[13,"F11","","",483,null],[13,"F12","","",483,null],[13,"F13","","",483,null],[13,"F14","","",483,null],[13,"F15","","",483,null],[13,"Snapshot","","Print Screen/SysRq.",483,null],[13,"Scroll","","Scroll Lock.",483,null],[13,"Pause","","Pause/Break key, next to Scroll lock.",483,null],[13,"Insert","","`Insert`, next to Backspace.",483,null],[13,"Home","","",483,null],[13,"Delete","","",483,null],[13,"End","","",483,null],[13,"PageDown","","",483,null],[13,"PageUp","","",483,null],[13,"Left","","",483,null],[13,"Up","","",483,null],[13,"Right","","",483,null],[13,"Down","","",483,null],[13,"Back","","The Backspace key, right over Enter.",483,null],[13,"Return","","The Enter key.",483,null],[13,"Space","","The space bar.",483,null],[13,"Numlock","","",483,null],[13,"Numpad0","","",483,null],[13,"Numpad1","","",483,null],[13,"Numpad2","","",483,null],[13,"Numpad3","","",483,null],[13,"Numpad4","","",483,null],[13,"Numpad5","","",483,null],[13,"Numpad6","","",483,null],[13,"Numpad7","","",483,null],[13,"Numpad8","","",483,null],[13,"Numpad9","","",483,null],[13,"AbntC1","","",483,null],[13,"AbntC2","","",483,null],[13,"Add","","",483,null],[13,"Apostrophe","","",483,null],[13,"Apps","","",483,null],[13,"At","","",483,null],[13,"Ax","","",483,null],[13,"Backslash","","",483,null],[13,"Calculator","","",483,null],[13,"Capital","","",483,null],[13,"Colon","","",483,null],[13,"Comma","","",483,null],[13,"Convert","","",483,null],[13,"Decimal","","",483,null],[13,"Divide","","",483,null],[13,"Equals","","",483,null],[13,"Grave","","",483,null],[13,"Kana","","",483,null],[13,"Kanji","","",483,null],[13,"LAlt","","",483,null],[13,"LBracket","","",483,null],[13,"LControl","","",483,null],[13,"LMenu","","",483,null],[13,"LShift","","",483,null],[13,"LWin","","",483,null],[13,"Mail","","",483,null],[13,"MediaSelect","","",483,null],[13,"MediaStop","","",483,null],[13,"Minus","","",483,null],[13,"Multiply","","",483,null],[13,"Mute","","",483,null],[13,"MyComputer","","",483,null],[13,"NextTrack","","",483,null],[13,"NoConvert","","",483,null],[13,"NumpadComma","","",483,null],[13,"NumpadEnter","","",483,null],[13,"NumpadEquals","","",483,null],[13,"OEM102","","",483,null],[13,"Period","","",483,null],[13,"PlayPause","","",483,null],[13,"Power","","",483,null],[13,"PrevTrack","","",483,null],[13,"RAlt","","",483,null],[13,"RBracket","","",483,null],[13,"RControl","","",483,null],[13,"RMenu","","",483,null],[13,"RShift","","",483,null],[13,"RWin","","",483,null],[13,"Semicolon","","",483,null],[13,"Slash","","",483,null],[13,"Sleep","","",483,null],[13,"Stop","","",483,null],[13,"Subtract","","",483,null],[13,"Sysrq","","",483,null],[13,"Tab","","",483,null],[13,"Underline","","",483,null],[13,"Unlabeled","","",483,null],[13,"VolumeDown","","",483,null],[13,"VolumeUp","","",483,null],[13,"Wake","","",483,null],[13,"WebBack","","",483,null],[13,"WebFavorites","","",483,null],[13,"WebForward","","",483,null],[13,"WebHome","","",483,null],[13,"WebRefresh","","",483,null],[13,"WebSearch","","",483,null],[13,"WebStop","","",483,null],[13,"Yen","","",483,null],[3,"WindowProxy","","Represents a thread safe subset of operations that can be called\non a window. This structure can be safely cloned and sent between\nthreads.",null,null],[6,"ScanCode","","",null,null],[5,"get_primary_monitor","","Returns the primary monitor of the system.",null,{"inputs":[],"output":{"name":"monitorid"}}],[3,"PollEventsIterator","","An iterator for the `poll_events` function.",null,null],[3,"WindowBuilder","","Object that allows you to build windows.",null,null],[12,"window","","The attributes to use to create the window.",486,null],[12,"opengl","","The attributes to use to create the context.",486,null],[4,"ElementState","","",null,null],[13,"Pressed","","",480,null],[13,"Released","","",480,null],[3,"Blend","glium","Blend effect that the GPU will use for blending.",null,null],[12,"color","","The blending function for color channels.",507,null],[12,"alpha","","The blending function for alpha channels.",507,null],[12,"constant_value","","A constant color that can be used in the blending functions.",507,null],[3,"Depth","","Represents the depth parameters of a draw command.",null,null],[12,"test","","The function that the GPU will use to determine whether to write over an existing pixel\non the target. Don't forget to set `depth_write` appropriately if you use a depth test.",508,null],[12,"write","","Sets whether the GPU will write the depth values on the depth buffer if they pass the\ndepth test.",508,null],[12,"range","","The range of possible Z values in surface coordinates.",508,null],[12,"clamp","","Sets whether the depth values of samples should be clamped to `0.0` and `1.0`.",508,null],[3,"IndexBuffer","","A list of indices loaded in the graphics card's memory.",null,null],[3,"VertexBuffer","","A list of vertices loaded in the graphics card's memory.",null,null],[3,"Program","","A combination of shaders linked together.",null,null],[3,"LinearSyncFence","","Prototype for a `SyncFence`.",null,null],[3,"SyncFence","","Provides a way to wait for a server-side operation to be finished.",null,null],[3,"Version","","Describes a version.",null,null],[3,"Rect","","Area of a surface in pixels.",null,null],[12,"left","","Number of pixels between the left border of the surface and the left border of\nthe rectangle.",509,null],[12,"bottom","","Number of pixels between the bottom border of the surface and the bottom border\nof the rectangle.",509,null],[12,"width","","Width of the area in pixels.",509,null],[12,"height","","Height of the area in pixels.",509,null],[3,"BlitTarget","","Area of a surface in pixels. Similar to a `Rect` except that dimensions can be negative.",null,null],[12,"left","","Number of pixels between the left border of the surface and the left border of\nthe rectangle.",510,null],[12,"bottom","","Number of pixels between the bottom border of the surface and the bottom border\nof the rectangle.",510,null],[12,"width","","Width of the area in pixels. Can be negative.",510,null],[12,"height","","Height of the area in pixels. Can be negative.",510,null],[3,"Frame","","Implementation of `Surface`, targeting the default framebuffer.",null,null],[4,"Profile","","Describes the OpenGL context profile.",null,null],[13,"Core","","The context uses only future-compatible functions and definitions.",511,null],[13,"Compatibility","","The context includes all immediate mode functions and definitions.",511,null],[4,"BlendingFunction","","Function that the GPU will use for blending.",null,null],[13,"AlwaysReplace","","Simply overwrite the destination pixel with the source pixel.",512,null],[13,"Min","","For each individual component (red, green, blue, and alpha), the minimum value is chosen\nbetween the source and the destination.",512,null],[13,"Max","","For each individual component (red, green, blue, and alpha), the maximum value is chosen\nbetween the source and the destination.",512,null],[13,"Addition","","For each individual component (red, green, blue, and alpha), a weighted addition\nbetween the source and the destination.",512,null],[12,"source","glium::BlendingFunction","The factor to apply to the source pixel.",512,null],[12,"destination","","The factor to apply to the destination pixel.",512,null],[13,"Subtraction","glium","For each individual component (red, green, blue, and alpha), a weighted substraction\nof the source by the destination.",512,null],[12,"source","glium::BlendingFunction","The factor to apply to the source pixel.",512,null],[12,"destination","","The factor to apply to the destination pixel.",512,null],[13,"ReverseSubtraction","glium","For each individual component (red, green, blue, and alpha), a weighted substraction\nof the destination by the source.",512,null],[12,"source","glium::BlendingFunction","The factor to apply to the source pixel.",512,null],[12,"destination","","The factor to apply to the destination pixel.",512,null],[4,"LinearBlendingFactor","glium","Indicates which value to multiply each component with.",null,null],[13,"Zero","","Multiply the source or destination component by zero, which always\ngives `0.0`.",513,null],[13,"One","","Multiply the source or destination component by one, which always\ngives you the original value.",513,null],[13,"SourceColor","","Multiply the source or destination component by its corresponding value\nin the source.",513,null],[13,"OneMinusSourceColor","","Equivalent to `1 - SourceColor`.",513,null],[13,"DestinationColor","","Multiply the source or destination component by its corresponding value\nin the destination.",513,null],[13,"OneMinusDestinationColor","","Equivalent to `1 - DestinationColor`.",513,null],[13,"SourceAlpha","","Multiply the source or destination component by the alpha value of the source.",513,null],[13,"SourceAlphaSaturate","","Multiply the source or destination component by the smallest value of\n`SourceAlpha` and `1 - DestinationAlpha`.",513,null],[13,"OneMinusSourceAlpha","","Multiply the source or destination component by `1.0` minus the alpha value of the source.",513,null],[13,"DestinationAlpha","","Multiply the source or destination component by the alpha value of the destination.",513,null],[13,"OneMinusDestinationAlpha","","Multiply the source or destination component by `1.0` minus the alpha value of the\ndestination.",513,null],[13,"ConstantColor","","Multiply the source or destination component by the corresponding value\nin `Blend::const_value`.",513,null],[13,"OneMinusConstantColor","","Multiply the source or destination compoent by `1.0` minus the corresponding\nvalue in `Blend::const_value`.",513,null],[13,"ConstantAlpha","","Multiply the source or destination component by the alpha value of `Blend::const_value`.",513,null],[13,"OneMinusConstantAlpha","","Multiply the source or destination componet by `1.0` minus the alpha value of\n`Blend::const_value`.",513,null],[4,"DepthTest","","The function that the GPU will use to determine whether to write over an existing pixel\non the target.",null,null],[13,"Ignore","","Never replace the target pixel.",514,null],[13,"Overwrite","","Always replace the target pixel.",514,null],[13,"IfEqual","","Replace if the z-value of the source is equal to the destination.",514,null],[13,"IfNotEqual","","Replace if the z-value of the source is different than the destination.",514,null],[13,"IfMore","","Replace if the z-value of the source is more than the destination.",514,null],[13,"IfMoreOrEqual","","Replace if the z-value of the source is more than, or equal to the destination.",514,null],[13,"IfLess","","Replace if the z-value of the source is less than the destination.",514,null],[13,"IfLessOrEqual","","Replace if the z-value of the source is less than, or equal to the destination.",514,null],[4,"StencilTest","","Specifies which comparison the GPU will do to determine whether a sample passes the stencil\ntest. The general equation is `(ref & mask) CMP (stencil & mask)`, where `ref` is the reference\nvalue (`stencil_reference_value_clockwise` or `stencil_reference_value_counter_clockwise`),\n`CMP` is the comparison chosen, and `stencil` is the current value in the stencil buffer.",null,null],[13,"AlwaysPass","","The stencil test always passes.",515,null],[13,"AlwaysFail","","The stencil test always fails.",515,null],[13,"IfLess","","`(ref & mask) < (stencil & mask)`",515,null],[12,"mask","glium::StencilTest","The mask that is and'ed with the reference value and stencil buffer.",515,null],[13,"IfLessOrEqual","glium","`(ref & mask) <= (stencil & mask)`",515,null],[12,"mask","glium::StencilTest","The mask that is and'ed with the reference value and stencil buffer.",515,null],[13,"IfMore","glium","`(ref & mask) > (stencil & mask)`",515,null],[12,"mask","glium::StencilTest","The mask that is and'ed with the reference value and stencil buffer.",515,null],[13,"IfMoreOrEqual","glium","`(ref & mask) >= (stencil & mask)`",515,null],[12,"mask","glium::StencilTest","The mask that is and'ed with the reference value and stencil buffer.",515,null],[13,"IfEqual","glium","`(ref & mask) == (stencil & mask)`",515,null],[12,"mask","glium::StencilTest","The mask that is and'ed with the reference value and stencil buffer.",515,null],[13,"IfNotEqual","glium","`(ref & mask) != (stencil & mask)`",515,null],[12,"mask","glium::StencilTest","The mask that is and'ed with the reference value and stencil buffer.",515,null],[4,"StencilOperation","glium","Specificies which operation the GPU will do depending on the result of the stencil test.",null,null],[13,"Keep","","Keeps the value currently in the stencil buffer.",516,null],[13,"Zero","","Writes zero in the stencil buffer.",516,null],[13,"Replace","","Writes the reference value (`stencil_reference_value_clockwise` or\n`stencil_reference_value_counter_clockwise`) in the stencil buffer.",516,null],[13,"Increment","","Increments the value currently in the stencil buffer. If the value is the\nmaximum, don't do anything.",516,null],[13,"IncrementWrap","","Increments the value currently in the stencil buffer. If the value is the\nmaximum, wrap to `0`.",516,null],[13,"Decrement","","Decrements the value currently in the stencil buffer. If the value is `0`,\ndon't do anything.",516,null],[13,"DecrementWrap","","Decrements the value currently in the stencil buffer. If the value is `0`,\nwrap to `-1`.",516,null],[13,"Invert","","Inverts each bit of the value.",516,null],[4,"Api","","Describes an OpenGL-related API.",null,null],[13,"Gl","","Regular OpenGL.",517,null],[13,"GlEs","","OpenGL embedded system.",517,null],[4,"Handle","","Handle to a shader or a program.",null,null],[13,"Id","","A numberic identifier.",518,null],[13,"Handle","","A `GLhandleARB`.",518,null],[4,"DrawError","","Error that can happen while drawing.",null,null],[13,"NoDepthBuffer","","A depth function has been requested but no depth buffer is available.",519,null],[13,"AttributeTypeMismatch","","The type of a vertex attribute in the vertices source doesn't match what the\nprogram requires.",519,null],[13,"AttributeMissing","","One of the attributes required by the program is missing from the vertex format.",519,null],[13,"ViewportTooLarge","","The viewport's dimensions are not supported by the backend.",519,null],[13,"InvalidDepthRange","","The depth range is outside of the `(0, 1)` range.",519,null],[13,"UniformTypeMismatch","","The type of a uniform doesn't match what the program requires.",519,null],[12,"name","glium::DrawError","Name of the uniform you are trying to bind.",519,null],[12,"expected","","The expected type.",519,null],[13,"UniformBufferToValue","glium","Tried to bind a uniform buffer to a single uniform value.",519,null],[12,"name","glium::DrawError","Name of the uniform you are trying to bind.",519,null],[13,"UniformValueToBlock","glium","Tried to bind a single uniform value to a uniform block.",519,null],[12,"name","glium::DrawError","Name of the uniform you are trying to bind.",519,null],[13,"UniformBlockLayoutMismatch","glium","The layout of the content of the uniform buffer does not match the layout of the block.",519,null],[12,"name","glium::DrawError","Name of the block you are trying to bind.",519,null],[12,"err","","The error giving more details about the mismatch.",519,null],[13,"SubroutineUniformToValue","glium","Tried to bind a subroutine uniform like a regular uniform value.",519,null],[12,"name","glium::DrawError","Name of the uniform you are trying to bind.",519,null],[13,"SubroutineUniformMissing","glium","Not all subroutine uniforms of a shader stage were set.",519,null],[12,"stage","glium::DrawError","Shader stage with missing bindings.",519,null],[12,"expected_count","","The expected number of bindings.",519,null],[12,"real_count","","The number of bindings defined by the user.",519,null],[13,"SubroutineNotFound","glium","A non-existant subroutine was referenced.",519,null],[12,"stage","glium::DrawError","The stage the subroutine was searched for.",519,null],[12,"name","","The invalid name of the subroutine.",519,null],[13,"UnsupportedVerticesPerPatch","glium","The number of vertices per patch that has been requested is not supported.",519,null],[13,"TessellationNotSupported","","Trying to use tessellation, but this is not supported by the underlying hardware.",519,null],[13,"TessellationWithoutPatches","","Using a program which contains tessellation shaders, but without submitting patches.",519,null],[13,"SamplersNotSupported","","Trying to use a sampler, but they are not supported by the backend.",519,null],[13,"InstancesCountMismatch","","When you use instancing, all vertices sources must have the same size.",519,null],[13,"VerticesSourcesLengthMismatch","","If you don't use indices, then all vertices sources must have the same size.",519,null],[13,"TransformFeedbackNotSupported","","You requested not to draw primitives, but this is not supported by the backend.",519,null],[13,"WrongQueryOperation","","See the documentation of the `draw_parameters` module for infos.",519,null],[13,"SmoothingNotSupported","","You requested smoothing, but this is not supported by the backend.",519,null],[13,"ProvokingVertexNotSupported","","The requested provoking vertex is not supported by the backend.",519,null],[13,"RasterizerDiscardNotSupported","","Discarding rasterizer output isn't supported by the backend.",519,null],[13,"DepthClampNotSupported","","Depth clamping isn't supported by the backend.",519,null],[13,"BlendingParameterNotSupported","","One of the blending parameters is not supported by the backend.",519,null],[4,"SwapBuffersError","","Error that can happen when swapping buffers.",null,null],[13,"ContextLost","","The OpenGL context has been lost and needs to be recreated. The `Display` and all the\nobjects associated to it (textures, buffers, programs, etc.) need to be recreated from\nscratch.",520,null],[13,"AlreadySwapped","","The buffers have already been swapped.",520,null],[4,"GliumCreationError","","Error that can happen while creating a glium display.",null,null],[13,"BackendCreationError","","An error has happened while creating the backend.",521,null],[13,"IncompatibleOpenGl","","The OpenGL implementation is too old.",521,null],[5,"get_supported_glsl_version","","Given an API version, this function returns the GLSL version that the implementation is\nrequired to support.",null,{"inputs":[{"name":"version"}],"output":{"name":"version"}}],[0,"backend","","The `backend` module allows one to link between glium and the OpenGL context..",null,null],[3,"Context","glium::backend","Stores the state and information required for glium to execute commands. Most public glium\nfunctions require passing a `Rc<Context>`.",null,null],[4,"ReleaseBehavior","","Defines what happens when you change the current context.",null,null],[13,"None","","Nothing is done when using another context.",522,null],[13,"Flush","","The commands queue of the current context is flushed.",522,null],[0,"glutin_backend","","Backend implementation for the glutin library",null,null],[3,"GlutinFacade","glium::backend::glutin_backend","Facade implementation for glutin. Wraps both glium and glutin.",null,null],[3,"PollEventsIter","","Iterator for all the events received by the window.",null,null],[3,"WaitEventsIter","","Blocking iterator over all the events received by the window.",null,null],[3,"WinRef","","Borrow of the glutin window.",null,null],[3,"GlutinWindowBackend","","An implementation of the `Backend` trait for a glutin window.",null,null],[3,"GlutinHeadlessBackend","","An implementation of the `Backend` trait for a glutin headless context.",null,null],[11,"clone","","",523,{"inputs":[{"name":"glutinfacade"}],"output":{"name":"glutinfacade"}}],[11,"get_context","","",523,{"inputs":[{"name":"glutinfacade"}],"output":{"name":"rc"}}],[11,"next","","",524,{"inputs":[{"name":"polleventsiter"}],"output":{"name":"option"}}],[11,"next","","",525,{"inputs":[{"name":"waiteventsiter"}],"output":{"name":"option"}}],[11,"deref","","",526,{"inputs":[{"name":"winref"}],"output":{"name":"window"}}],[11,"poll_events","","Reads all events received by the window.",523,{"inputs":[{"name":"glutinfacade"}],"output":{"name":"polleventsiter"}}],[11,"wait_events","","Reads all events received by the window.",523,{"inputs":[{"name":"glutinfacade"}],"output":{"name":"waiteventsiter"}}],[11,"get_window","","Returns the underlying window, or `None` if glium uses a headless context.",523,{"inputs":[{"name":"glutinfacade"}],"output":{"name":"option"}}],[11,"draw","","Start drawing on the backbuffer.",523,{"inputs":[{"name":"glutinfacade"}],"output":{"name":"frame"}}],[11,"deref","","",523,{"inputs":[{"name":"glutinfacade"}],"output":{"name":"context"}}],[11,"build_glium_debug","glium::glutin","",486,{"inputs":[{"name":"windowbuilder"},{"name":"debugcallbackbehavior"}],"output":{"name":"result"}}],[11,"build_glium_unchecked_debug","","",486,{"inputs":[{"name":"windowbuilder"},{"name":"debugcallbackbehavior"}],"output":{"name":"result"}}],[11,"rebuild_glium","","",486,{"inputs":[{"name":"windowbuilder"},{"name":"glutinfacade"}],"output":{"name":"result"}}],[11,"build_glium_debug","","",484,{"inputs":[{"name":"headlessrendererbuilder"},{"name":"debugcallbackbehavior"}],"output":{"name":"result"}}],[11,"build_glium_unchecked_debug","","",484,{"inputs":[{"name":"headlessrendererbuilder"},{"name":"debugcallbackbehavior"}],"output":{"name":"result"}}],[11,"rebuild_glium","","",484,{"inputs":[{"name":"headlessrendererbuilder"},{"name":"glutinfacade"}],"output":{"name":"result"}}],[11,"swap_buffers","glium::backend::glutin_backend","",527,{"inputs":[{"name":"glutinwindowbackend"}],"output":{"name":"result"}}],[11,"get_proc_address","","",527,null],[11,"get_framebuffer_dimensions","","",527,null],[11,"is_current","","",527,{"inputs":[{"name":"glutinwindowbackend"}],"output":{"name":"bool"}}],[11,"make_current","","",527,{"inputs":[{"name":"glutinwindowbackend"}],"output":null}],[11,"new","","Builds a new backend from the builder.",527,{"inputs":[{"name":"glutinwindowbackend"},{"name":"windowbuilder"}],"output":{"name":"result"}}],[11,"get_window","","",527,{"inputs":[{"name":"glutinwindowbackend"}],"output":{"name":"window"}}],[11,"poll_events","","",527,{"inputs":[{"name":"glutinwindowbackend"}],"output":{"name":"polleventsiterator"}}],[11,"wait_events","","",527,{"inputs":[{"name":"glutinwindowbackend"}],"output":{"name":"waiteventsiterator"}}],[11,"rebuild","","",527,{"inputs":[{"name":"glutinwindowbackend"},{"name":"windowbuilder"}],"output":{"name":"result"}}],[11,"swap_buffers","","",528,{"inputs":[{"name":"glutinheadlessbackend"}],"output":{"name":"result"}}],[11,"get_proc_address","","",528,null],[11,"get_framebuffer_dimensions","","",528,null],[11,"is_current","","",528,{"inputs":[{"name":"glutinheadlessbackend"}],"output":{"name":"bool"}}],[11,"make_current","","",528,{"inputs":[{"name":"glutinheadlessbackend"}],"output":null}],[11,"new","","Builds a new backend from the builder.",528,{"inputs":[{"name":"glutinheadlessbackend"},{"name":"headlessrendererbuilder"}],"output":{"name":"result"}}],[8,"Backend","glium::backend","Trait for types that can be used as a backend for a glium context.",null,null],[10,"swap_buffers","","Swaps buffers at the end of a frame.",529,{"inputs":[{"name":"backend"}],"output":{"name":"result"}}],[10,"get_proc_address","","Returns the address of an OpenGL function.",529,null],[10,"get_framebuffer_dimensions","","Returns the dimensions of the window, or screen, etc.",529,null],[10,"is_current","","Returns true if the OpenGL context is the current one in the thread.",529,{"inputs":[{"name":"backend"}],"output":{"name":"bool"}}],[10,"make_current","","Makes the OpenGL context the current context in the current thread.",529,{"inputs":[{"name":"backend"}],"output":null}],[8,"Facade","","Trait for types that provide a safe access for glium functions.",null,null],[10,"get_context","","Returns an opaque type that contains the OpenGL state, extensions, version, etc.",530,{"inputs":[{"name":"facade"}],"output":{"name":"rc"}}],[11,"swap_buffers","alloc::rc","",447,{"inputs":[{"name":"rc"}],"output":{"name":"result"}}],[11,"get_proc_address","","",447,null],[11,"get_framebuffer_dimensions","","",447,null],[11,"is_current","","",447,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"make_current","","",447,{"inputs":[{"name":"rc"}],"output":null}],[11,"get_context","","",447,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[0,"buffer","glium","A buffer is a memory location accessible to the video card.",null,null],[3,"Buffer","glium::buffer","Represents a view of a buffer.",null,null],[3,"BufferAny","","Represents a sub-part of a buffer.",null,null],[3,"BufferMutSlice","","Represents a sub-part of a buffer.",null,null],[3,"BufferSlice","","Represents a sub-part of a buffer.",null,null],[3,"BufferAnySlice","","Slice of a `Buffer` without any type info.",null,null],[3,"Mapping","","A mapping of a buffer for reading and writing.",null,null],[3,"WriteMapping","","A mapping of a buffer for write only.",null,null],[3,"ReadMapping","","A mapping of a buffer for reading.",null,null],[3,"Inserter","","Allows inserting a fence in the list.",null,null],[3,"BufferView","","Represents a view of a buffer.",null,null],[3,"BufferViewSlice","","Represents a sub-part of a buffer.",null,null],[3,"BufferViewMutSlice","","Represents a sub-part of a buffer.",null,null],[3,"BufferViewAny","","Represents a sub-part of a buffer.",null,null],[3,"BufferViewAnySlice","","Slice of a `Buffer` without any type info.",null,null],[4,"ReadError","","Error that can happen when reading from a buffer.",null,null],[13,"NotSupported","","The backend doesn't support reading from a buffer.",531,null],[13,"ContextLost","","The context has been lost. Reading from the buffer would return garbage data.",531,null],[4,"CopyError","","Error that can happen when copying data between buffers.",null,null],[13,"NotSupported","","The backend doesn't support copying between buffers.",532,null],[4,"BufferCreationError","","Error that can happen when creating a buffer.",null,null],[13,"OutOfMemory","","Not enough memory to create the buffer.",533,null],[13,"BufferTypeNotSupported","","This type of buffer is not supported.",533,null],[4,"BufferMode","","How the buffer is created.",null,null],[13,"Default","","This is the default mode suitable for any usage. Will never be slow, will never be fast\neither.",534,null],[13,"Dynamic","","The mode to use when you modify a buffer multiple times per frame. Simiar to `Default` in\nthat it is suitable for most usages.",534,null],[13,"Persistent","","Optimized for when you modify a buffer exactly once per frame. You can modify it more than\nonce per frame, but if you modify it too often things will slow down.",534,null],[13,"Immutable","","Optimized when you will never touch the content of the buffer.",534,null],[5,"is_buffer_read_supported","","Returns true if reading from a buffer is supported by the backend.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[11,"clone","","",531,{"inputs":[{"name":"readerror"}],"output":{"name":"readerror"}}],[11,"fmt","","",531,{"inputs":[{"name":"readerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",531,{"inputs":[{"name":"readerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",531,{"inputs":[{"name":"readerror"}],"output":{"name":"str"}}],[11,"clone","","",532,{"inputs":[{"name":"copyerror"}],"output":{"name":"copyerror"}}],[11,"fmt","","",532,{"inputs":[{"name":"copyerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",532,{"inputs":[{"name":"copyerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",532,{"inputs":[{"name":"copyerror"}],"output":{"name":"str"}}],[11,"deref","","",535,{"inputs":[{"name":"mapping"}],"output":{"name":"d"}}],[11,"deref_mut","","",535,{"inputs":[{"name":"mapping"}],"output":{"name":"d"}}],[11,"deref","","",536,{"inputs":[{"name":"readmapping"}],"output":{"name":"d"}}],[11,"write","","Writes the whole content.",537,{"inputs":[{"name":"writemapping"},{"name":"d"}],"output":null}],[11,"len","","Returns the length of the mapping.",537,{"inputs":[{"name":"writemapping"}],"output":{"name":"usize"}}],[11,"set","","Changes an element of the mapping.",537,{"inputs":[{"name":"writemapping"},{"name":"usize"},{"name":"d"}],"output":null}],[11,"insert","","Inserts a new fence.",538,{"inputs":[{"name":"inserter"},{"name":"commandcontext"}],"output":null}],[11,"new","","Builds a new buffer containing the given data. The size of the buffer is equal to the size\nof the data.",539,{"inputs":[{"name":"buffer"},{"name":"f"},{"name":"t"},{"name":"buffertype"},{"name":"buffermode"}],"output":{"name":"result"}}],[11,"empty_unsized","","Builds a new buffer of the given size.",539,{"inputs":[{"name":"buffer"},{"name":"f"},{"name":"buffertype"},{"name":"usize"},{"name":"buffermode"}],"output":{"name":"result"}}],[11,"get_context","","Returns the context corresponding to this buffer.",539,{"inputs":[{"name":"buffer"}],"output":{"name":"rc"}}],[11,"get_size","","Returns the size in bytes of this buffer.",539,{"inputs":[{"name":"buffer"}],"output":{"name":"usize"}}],[11,"is_persistent","","Returns true if this buffer uses persistent mapping.",539,{"inputs":[{"name":"buffer"}],"output":{"name":"bool"}}],[11,"write","","Uploads some data in this buffer.",539,{"inputs":[{"name":"buffer"},{"name":"t"}],"output":null}],[11,"invalidate","","Invalidates the content of the buffer. The data becomes undefined.",539,{"inputs":[{"name":"buffer"}],"output":null}],[11,"read","","Reads the content of the buffer.",539,{"inputs":[{"name":"buffer"}],"output":{"name":"result"}}],[11,"map","","Maps the buffer in memory for both reading and writing.",539,{"inputs":[{"name":"buffer"}],"output":{"name":"mapping"}}],[11,"map_read","","Maps the buffer in memory for reading.",539,{"inputs":[{"name":"buffer"}],"output":{"name":"readmapping"}}],[11,"map_write","","Maps the buffer in memory for writing only.",539,{"inputs":[{"name":"buffer"}],"output":{"name":"writemapping"}}],[11,"copy_to","","Copies the content of the buffer to another buffer.",539,{"inputs":[{"name":"buffer"},{"name":"s"}],"output":{"name":"result"}}],[11,"slice_custom","","Builds a slice that contains an element from inside the buffer.",539,{"inputs":[{"name":"buffer"},{"name":"f"}],"output":{"name":"bufferslice"}}],[11,"slice_custom_mut","","Same as `slice_custom` but returns a mutable slice.",539,{"inputs":[{"name":"buffer"},{"name":"f"}],"output":{"name":"buffermutslice"}}],[11,"as_slice","","Builds a slice containing the whole subbuffer.",539,{"inputs":[{"name":"buffer"}],"output":{"name":"bufferslice"}}],[11,"as_mut_slice","","Builds a slice containing the whole subbuffer.",539,{"inputs":[{"name":"buffer"}],"output":{"name":"buffermutslice"}}],[11,"as_slice_any","","Builds a slice-any containing the whole subbuffer.",539,{"inputs":[{"name":"buffer"}],"output":{"name":"bufferanyslice"}}],[11,"empty","","Builds a new buffer of the given size.",539,{"inputs":[{"name":"buffer"},{"name":"f"},{"name":"buffertype"},{"name":"buffermode"}],"output":{"name":"result"}}],[11,"empty_array","","Builds a new buffer of the given size.",539,{"inputs":[{"name":"buffer"},{"name":"f"},{"name":"buffertype"},{"name":"usize"},{"name":"buffermode"}],"output":{"name":"result"}}],[11,"len","","Returns the number of elements in this buffer.",539,{"inputs":[{"name":"buffer"}],"output":{"name":"usize"}}],[11,"slice","","Builds a slice of this subbuffer. Returns `None` if out of range.",539,{"inputs":[{"name":"buffer"},{"name":"r"}],"output":{"name":"option"}}],[11,"slice_mut","","Builds a slice of this subbuffer. Returns `None` if out of range.",539,{"inputs":[{"name":"buffer"},{"name":"r"}],"output":{"name":"option"}}],[11,"read_as_texture_1d","","Reads the content of the buffer.",539,{"inputs":[{"name":"buffer"}],"output":{"name":"result"}}],[11,"fmt","","",539,{"inputs":[{"name":"buffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",539,{"inputs":[{"name":"buffer"}],"output":null}],[11,"clone","","",540,{"inputs":[{"name":"bufferslice"}],"output":{"name":"bufferslice"}}],[11,"get_size","","Returns the size in bytes of this slice.",540,{"inputs":[{"name":"bufferslice"}],"output":{"name":"usize"}}],[11,"get_context","","Returns the context corresponding to this buffer.",540,{"inputs":[{"name":"bufferslice"}],"output":{"name":"rc"}}],[11,"write","","Uploads some data in this buffer.",540,{"inputs":[{"name":"bufferslice"},{"name":"t"}],"output":null}],[11,"invalidate","","Invalidates the content of the slice. The data becomes undefined.",540,{"inputs":[{"name":"bufferslice"}],"output":null}],[11,"read","","Reads the content of the buffer.",540,{"inputs":[{"name":"bufferslice"}],"output":{"name":"result"}}],[11,"copy_to","","Copies the content of this slice to another slice.",540,{"inputs":[{"name":"bufferslice"},{"name":"s"}],"output":{"name":"result"}}],[11,"slice_custom","","Builds a slice that contains an element from inside the buffer.",540,{"inputs":[{"name":"bufferslice"},{"name":"f"}],"output":{"name":"bufferslice"}}],[11,"as_slice_any","","Builds a slice-any containing the whole subbuffer.",540,{"inputs":[{"name":"bufferslice"}],"output":{"name":"bufferanyslice"}}],[11,"len","","Returns the number of elements in this slice.",540,{"inputs":[{"name":"bufferslice"}],"output":{"name":"usize"}}],[11,"slice","","Builds a subslice of this slice. Returns `None` if out of range.",540,{"inputs":[{"name":"bufferslice"},{"name":"r"}],"output":{"name":"option"}}],[11,"read_as_texture_1d","","Reads the content of the buffer.",540,{"inputs":[{"name":"bufferslice"}],"output":{"name":"result"}}],[11,"fmt","","",540,{"inputs":[{"name":"bufferslice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",540,{"inputs":[{"name":"bufferslice"},{"name":"buffermutslice"}],"output":{"name":"bufferslice"}}],[11,"from","","",540,{"inputs":[{"name":"bufferslice"},{"name":"buffer"}],"output":{"name":"bufferslice"}}],[11,"from","","",540,{"inputs":[{"name":"bufferslice"},{"name":"buffer"}],"output":{"name":"bufferslice"}}],[11,"get_size","","Returns the size in bytes of this slice.",541,{"inputs":[{"name":"buffermutslice"}],"output":{"name":"usize"}}],[11,"map","","Maps the buffer in memory for both reading and writing.",541,{"inputs":[{"name":"buffermutslice"}],"output":{"name":"mapping"}}],[11,"map_read","","Maps the buffer in memory for reading.",541,{"inputs":[{"name":"buffermutslice"}],"output":{"name":"readmapping"}}],[11,"map_write","","Maps the buffer in memory for writing only.",541,{"inputs":[{"name":"buffermutslice"}],"output":{"name":"writemapping"}}],[11,"write","","Uploads some data in this buffer.",541,{"inputs":[{"name":"buffermutslice"},{"name":"t"}],"output":null}],[11,"invalidate","","Invalidates the content of the slice. The data becomes undefined.",541,{"inputs":[{"name":"buffermutslice"}],"output":null}],[11,"read","","Reads the content of the buffer.",541,{"inputs":[{"name":"buffermutslice"}],"output":{"name":"result"}}],[11,"copy_to","","Copies the content of this slice to another slice.",541,{"inputs":[{"name":"buffermutslice"},{"name":"s"}],"output":{"name":"result"}}],[11,"slice_custom","","Builds a slice that contains an element from inside the buffer.",541,{"inputs":[{"name":"buffermutslice"},{"name":"f"}],"output":{"name":"buffermutslice"}}],[11,"as_slice_any","","Builds a slice-any containing the whole subbuffer.",541,{"inputs":[{"name":"buffermutslice"}],"output":{"name":"bufferanyslice"}}],[11,"len","","Returns the number of elements in this slice.",541,{"inputs":[{"name":"buffermutslice"}],"output":{"name":"usize"}}],[11,"slice","","Builds a subslice of this slice. Returns `None` if out of range.",541,{"inputs":[{"name":"buffermutslice"},{"name":"r"}],"output":{"name":"option"}}],[11,"read_as_texture_1d","","Reads the content of the buffer.",541,{"inputs":[{"name":"buffermutslice"}],"output":{"name":"result"}}],[11,"fmt","","",541,{"inputs":[{"name":"buffermutslice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",541,{"inputs":[{"name":"buffermutslice"},{"name":"buffer"}],"output":{"name":"buffermutslice"}}],[11,"as_slice_any","","Builds a slice-any containing the whole subbuffer.",542,{"inputs":[{"name":"bufferany"}],"output":{"name":"bufferanyslice"}}],[11,"get_elements_size","","Returns the size in bytes of each element in the buffer.",542,{"inputs":[{"name":"bufferany"}],"output":{"name":"usize"}}],[11,"get_elements_count","","Returns the number of elements in the buffer.",542,{"inputs":[{"name":"bufferany"}],"output":{"name":"usize"}}],[11,"get_context","","Returns the context corresponding to this buffer.",542,{"inputs":[{"name":"bufferany"}],"output":{"name":"rc"}}],[11,"get_size","","Returns the number of bytes in this subbuffer.",542,{"inputs":[{"name":"bufferany"}],"output":{"name":"usize"}}],[11,"invalidate","","Invalidates the content of the buffer. The data becomes undefined.",542,{"inputs":[{"name":"bufferany"}],"output":null}],[11,"read","","UNSTABLE. This function can be removed at any moment without any further notice.",542,{"inputs":[{"name":"bufferany"}],"output":{"name":"result"}}],[11,"from","","",542,{"inputs":[{"name":"bufferany"},{"name":"buffer"}],"output":{"name":"bufferany"}}],[11,"drop","","",542,{"inputs":[{"name":"bufferany"}],"output":null}],[11,"fmt","","",542,{"inputs":[{"name":"bufferany"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",543,{"inputs":[{"name":"bufferanyslice"}],"output":{"name":"bufferanyslice"}}],[11,"get_size","","Returns the number of bytes in this slice.",543,{"inputs":[{"name":"bufferanyslice"}],"output":{"name":"usize"}}],[11,"get_elements_size","","Returns the size in bytes of each element in the buffer.",543,{"inputs":[{"name":"bufferanyslice"}],"output":{"name":"usize"}}],[11,"get_elements_count","","Returns the number of elements in the buffer.",543,{"inputs":[{"name":"bufferanyslice"}],"output":{"name":"usize"}}],[11,"invalidate","","Invalidates the content of the slice. The data becomes undefined.",543,{"inputs":[{"name":"bufferanyslice"}],"output":null}],[11,"get_context","","Returns the context corresponding to this buffer.",543,{"inputs":[{"name":"bufferanyslice"}],"output":{"name":"rc"}}],[11,"fmt","","",543,{"inputs":[{"name":"bufferanyslice"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"Content","","Trait for types of data that can be put inside buffers.",null,null],[16,"Owned","","A type that holds a sized version of the content.",544,null],[10,"read","","Prepares an output buffer, then turns this buffer into an `Owned`.",544,{"inputs":[{"name":"content"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"get_elements_size","","Returns the size of each element.",544,{"inputs":[{"name":"content"}],"output":{"name":"usize"}}],[10,"to_void_ptr","","Produces a pointer to the data.",544,null],[10,"ref_from_ptr","","Builds a pointer to this type from a raw pointer.",544,null],[10,"is_size_suitable","","Returns true if the size is suitable to store a type like this.",544,{"inputs":[{"name":"content"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"clone","","",533,{"inputs":[{"name":"buffercreationerror"}],"output":{"name":"buffercreationerror"}}],[11,"fmt","","",533,{"inputs":[{"name":"buffercreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",533,{"inputs":[{"name":"buffercreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",533,{"inputs":[{"name":"buffercreationerror"}],"output":{"name":"str"}}],[11,"eq","","",534,{"inputs":[{"name":"buffermode"},{"name":"buffermode"}],"output":{"name":"bool"}}],[11,"ne","","",534,{"inputs":[{"name":"buffermode"},{"name":"buffermode"}],"output":{"name":"bool"}}],[11,"clone","","",534,{"inputs":[{"name":"buffermode"}],"output":{"name":"buffermode"}}],[11,"fmt","","",534,{"inputs":[{"name":"buffermode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",534,{"inputs":[{"name":"buffermode"}],"output":{"name":"buffermode"}}],[0,"debug","glium","",null,null],[3,"TimestampQuery","glium::debug","Allows you to obtain the timestamp inside the OpenGL commands queue.",null,null],[4,"DebugCallbackBehavior","","Describes the behavior that the debug output should have.",null,null],[13,"Ignore","","Don't do anything. This is the default behavior in release.",545,null],[13,"DebugMessageOnError","","Print a message on stdout on error, except in some circumstances like when compiling\nshaders. This is the default behavior in debug mode.",545,null],[13,"PrintAll","","Print every single output received by the driver.",545,null],[13,"Custom","","Use a custom callback.",545,null],[12,"callback","glium::debug::DebugCallbackBehavior","The function to be called.",545,null],[12,"synchronous","","Whether or not it should be called immediately (true) or asynchronously (false).",545,null],[4,"Severity","glium::debug","Severity of a debug message.",null,null],[13,"Notification","","Anything that isn't an error or performance issue.",546,null],[13,"Low","","Redundant state-change performance warning, or unimportant undefined behavior.",546,null],[13,"Medium","","Major performance warnings, shader compilation/linking warnings,\nor the use of deprecated functionality.",546,null],[13,"High","","All OpenGL Errors, shader compilation/linking errors,\nor highly-dangerous undefined behavior.",546,null],[4,"Source","","Source of a debug message.",null,null],[13,"Api","","Calls to the OpenGL API.",547,null],[13,"WindowSystem","","Calls to a window-system API.",547,null],[13,"ShaderCompiler","","A compiler for a shading language.",547,null],[13,"ThirdParty","","An application associated with Openctxt.gl.",547,null],[13,"Application","","Explicitly generated by Glium or the application.",547,null],[13,"OtherSource","","",547,null],[4,"MessageType","","Type of a debug message.",null,null],[13,"Error","","An error, typically from the API",548,null],[13,"DeprecatedBehavior","","Some behavior marked deprecated has been used",548,null],[13,"UndefinedBehavior","","Something has invoked undefined behavior",548,null],[13,"Portability","","Some functionality the user relies upon is not portable",548,null],[13,"Performance","","Code has triggered possible performance issues",548,null],[13,"Marker","","Command stream annotation",548,null],[13,"PushGroup","","Entering a debug group",548,null],[13,"PopGroup","","Leaving a debug group",548,null],[13,"Other","","Any other event",548,null],[6,"DebugCallback","","Represents a callback that can be used for the debug output feature of OpenGL.",null,null],[11,"eq","","",546,{"inputs":[{"name":"severity"},{"name":"severity"}],"output":{"name":"bool"}}],[11,"ne","","",546,{"inputs":[{"name":"severity"},{"name":"severity"}],"output":{"name":"bool"}}],[11,"fmt","","",546,{"inputs":[{"name":"severity"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",546,{"inputs":[{"name":"severity"}],"output":{"name":"severity"}}],[11,"fmt","","",547,{"inputs":[{"name":"source"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",547,{"inputs":[{"name":"source"}],"output":{"name":"source"}}],[11,"fmt","","",548,{"inputs":[{"name":"messagetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",548,{"inputs":[{"name":"messagetype"}],"output":{"name":"messagetype"}}],[11,"new","","Creates a new `TimestampQuery`. Returns `None` if the backend doesn't support it.",549,{"inputs":[{"name":"timestampquery"},{"name":"f"}],"output":{"name":"option"}}],[11,"is_ready","","Queries the counter to see if the timestamp is already available.",549,{"inputs":[{"name":"timestampquery"}],"output":{"name":"bool"}}],[11,"get","","Returns the value of the timestamp. Blocks until it is available.",549,{"inputs":[{"name":"timestampquery"}],"output":{"name":"u64"}}],[0,"draw_parameters","glium","Describes miscellaneous parameters to be used when drawing.",null,null],[3,"Blend","glium::draw_parameters","Blend effect that the GPU will use for blending.",null,null],[12,"color","","The blending function for color channels.",507,null],[12,"alpha","","The blending function for alpha channels.",507,null],[12,"constant_value","","A constant color that can be used in the blending functions.",507,null],[3,"Depth","","Represents the depth parameters of a draw command.",null,null],[12,"test","","The function that the GPU will use to determine whether to write over an existing pixel\non the target. Don't forget to set `depth_write` appropriately if you use a depth test.",508,null],[12,"write","","Sets whether the GPU will write the depth values on the depth buffer if they pass the\ndepth test.",508,null],[12,"range","","The range of possible Z values in surface coordinates.",508,null],[12,"clamp","","Sets whether the depth values of samples should be clamped to `0.0` and `1.0`.",508,null],[3,"SamplesPassedQuery","","A query that allows you to know the number of samples written to the output during the\ndraw operations where this query was active.",null,null],[3,"TimeElapsedQuery","","A query that allows you to know the number of nanoseconds that have elapsed\nduring the draw operations.",null,null],[3,"PrimitivesGeneratedQuery","","Query that allows you to know the number of primitives generated by the geometry shader.\nWill stay at `0` if you use it without any active geometry shader.",null,null],[3,"AnySamplesPassedQuery","","A query type that allows you to know whether any sample has been written to the output during\nthe operations executed with this query.",null,null],[3,"TransformFeedbackPrimitivesWrittenQuery","","Query that allows you to know the number of primitives generated by transform feedback.",null,null],[3,"Stencil","","Describes the parameters that must be used for the stencil operations when drawing.",null,null],[12,"test_clockwise","","A comparison against the existing value in the stencil buffer.",550,null],[12,"reference_value_clockwise","","Reference value that is used by `stencil_test_clockwise`, `stencil_fail_operation_clockwise`,\n`stencil_pass_depth_fail_operation_clockwise` and `stencil_depth_pass_operation_clockwise`.",550,null],[12,"write_mask_clockwise","","Allows specifying a mask when writing data on the stencil buffer.",550,null],[12,"fail_operation_clockwise","","Specifies the operation to do when a fragment fails the stencil test.",550,null],[12,"pass_depth_fail_operation_clockwise","","Specifies the operation to do when a fragment passes the stencil test but fails\nthe depth test.",550,null],[12,"depth_pass_operation_clockwise","","Specifies the operation to do when a fragment passes both the stencil and depth tests.",550,null],[12,"test_counter_clockwise","","A comparaison against the existing value in the stencil buffer.",550,null],[12,"reference_value_counter_clockwise","","Reference value that is used by `stencil_test_counter_clockwise`,\n`stencil_fail_operation_counter_clockwise`,\n`stencil_pass_depth_fail_operation_counter_clockwise` and\n`stencil_depth_pass_operation_counter_clockwise`.",550,null],[12,"write_mask_counter_clockwise","","Allows specifying a mask when writing data on the stencil buffer.",550,null],[12,"fail_operation_counter_clockwise","","Specifies the operation to do when a fragment fails the stencil test.",550,null],[12,"pass_depth_fail_operation_counter_clockwise","","Specifies the operation to do when a fragment passes the stencil test but fails\nthe depth test.",550,null],[12,"depth_pass_operation_counter_clockwise","","Specifies the operation to do when a fragment passes both the stencil and depth tests.",550,null],[3,"DrawParameters","","Represents the parameters to use when drawing.",null,null],[12,"depth","","How the fragment will interact with the depth buffer.",551,null],[12,"stencil","","How the fragment will interact with the stencil buffer.",551,null],[12,"blend","","The effect that the GPU will use to merge the existing pixel with the pixel that is\nbeing written.",551,null],[12,"color_mask","","Allows you to disable some color components.",551,null],[12,"line_width","","Width in pixels of the lines to draw when drawing lines.",551,null],[12,"point_size","","Diameter in pixels of the points to draw when drawing points.",551,null],[12,"backface_culling","","Whether or not the GPU should filter out some faces.",551,null],[12,"polygon_mode","","How to render polygons. The default value is `Fill`.",551,null],[12,"multisampling","","Whether multisample antialiasing (MSAA) should be used. Default value is `true`.",551,null],[12,"dithering","","Whether dithering is activated. Default value is `true`.",551,null],[12,"viewport","","The viewport to use when drawing.",551,null],[12,"scissor","","If specified, only pixels in this rect will be displayed. Default is `None`.",551,null],[12,"draw_primitives","","If `false`, the pipeline will stop after the primitives generation stage. The default\nvalue is `true`.",551,null],[12,"samples_passed_query","","If set, each sample (ie. usually each pixel) written to the output adds one to the\ncounter of the `SamplesPassedQuery`.",551,null],[12,"time_elapsed_query","","If set, the time it took for the GPU to execute this draw command is added to the total\nstored inside the `TimeElapsedQuery`.",551,null],[12,"primitives_generated_query","","If set, the number of primitives generated is added to the total stored inside the query.",551,null],[12,"transform_feedback_primitives_written_query","","If set, the number of vertices written by transform feedback.",551,null],[12,"condition","","If set, the commands will only be executed if the specified query contains `true` or\na number different than 0.",551,null],[12,"transform_feedback","","If set, then the generated primitives will be written back to a buffer.",551,null],[12,"smooth","","If set, then the generated primitives will be smoothed.",551,null],[12,"provoking_vertex","","In your vertex shader or geometry shader, you have the possibility to mark some output\nvaryings as `flat`. If this is the case, the value of one of the vertices will be used\nfor the whole primitive. This variable allows you to specify which vertex.",551,null],[12,"primitive_bounding_box","","Hint for the GPU of the bounding box of the geometry.",551,null],[3,"ConditionalRendering","","Condition whether to render or not.",null,null],[12,"query","","The query to use.",552,null],[12,"wait","","If true, the GPU will wait until the query result has been obtained. If false, the GPU\nis free to ignore the query and draw anyway.",552,null],[12,"per_region","","If true, only samples that match those that were written with the query active will\nbe drawn.",552,null],[4,"BlendingFunction","","Function that the GPU will use for blending.",null,null],[13,"AlwaysReplace","","Simply overwrite the destination pixel with the source pixel.",512,null],[13,"Min","","For each individual component (red, green, blue, and alpha), the minimum value is chosen\nbetween the source and the destination.",512,null],[13,"Max","","For each individual component (red, green, blue, and alpha), the maximum value is chosen\nbetween the source and the destination.",512,null],[13,"Addition","","For each individual component (red, green, blue, and alpha), a weighted addition\nbetween the source and the destination.",512,null],[12,"source","glium::draw_parameters::BlendingFunction","The factor to apply to the source pixel.",512,null],[12,"destination","","The factor to apply to the destination pixel.",512,null],[13,"Subtraction","glium::draw_parameters","For each individual component (red, green, blue, and alpha), a weighted substraction\nof the source by the destination.",512,null],[12,"source","glium::draw_parameters::BlendingFunction","The factor to apply to the source pixel.",512,null],[12,"destination","","The factor to apply to the destination pixel.",512,null],[13,"ReverseSubtraction","glium::draw_parameters","For each individual component (red, green, blue, and alpha), a weighted substraction\nof the destination by the source.",512,null],[12,"source","glium::draw_parameters::BlendingFunction","The factor to apply to the source pixel.",512,null],[12,"destination","","The factor to apply to the destination pixel.",512,null],[4,"LinearBlendingFactor","glium::draw_parameters","Indicates which value to multiply each component with.",null,null],[13,"Zero","","Multiply the source or destination component by zero, which always\ngives `0.0`.",513,null],[13,"One","","Multiply the source or destination component by one, which always\ngives you the original value.",513,null],[13,"SourceColor","","Multiply the source or destination component by its corresponding value\nin the source.",513,null],[13,"OneMinusSourceColor","","Equivalent to `1 - SourceColor`.",513,null],[13,"DestinationColor","","Multiply the source or destination component by its corresponding value\nin the destination.",513,null],[13,"OneMinusDestinationColor","","Equivalent to `1 - DestinationColor`.",513,null],[13,"SourceAlpha","","Multiply the source or destination component by the alpha value of the source.",513,null],[13,"SourceAlphaSaturate","","Multiply the source or destination component by the smallest value of\n`SourceAlpha` and `1 - DestinationAlpha`.",513,null],[13,"OneMinusSourceAlpha","","Multiply the source or destination component by `1.0` minus the alpha value of the source.",513,null],[13,"DestinationAlpha","","Multiply the source or destination component by the alpha value of the destination.",513,null],[13,"OneMinusDestinationAlpha","","Multiply the source or destination component by `1.0` minus the alpha value of the\ndestination.",513,null],[13,"ConstantColor","","Multiply the source or destination component by the corresponding value\nin `Blend::const_value`.",513,null],[13,"OneMinusConstantColor","","Multiply the source or destination compoent by `1.0` minus the corresponding\nvalue in `Blend::const_value`.",513,null],[13,"ConstantAlpha","","Multiply the source or destination component by the alpha value of `Blend::const_value`.",513,null],[13,"OneMinusConstantAlpha","","Multiply the source or destination componet by `1.0` minus the alpha value of\n`Blend::const_value`.",513,null],[4,"DepthTest","","The function that the GPU will use to determine whether to write over an existing pixel\non the target.",null,null],[13,"Ignore","","Never replace the target pixel.",514,null],[13,"Overwrite","","Always replace the target pixel.",514,null],[13,"IfEqual","","Replace if the z-value of the source is equal to the destination.",514,null],[13,"IfNotEqual","","Replace if the z-value of the source is different than the destination.",514,null],[13,"IfMore","","Replace if the z-value of the source is more than the destination.",514,null],[13,"IfMoreOrEqual","","Replace if the z-value of the source is more than, or equal to the destination.",514,null],[13,"IfLess","","Replace if the z-value of the source is less than the destination.",514,null],[13,"IfLessOrEqual","","Replace if the z-value of the source is less than, or equal to the destination.",514,null],[4,"DepthClamp","","Specifies whether the depth value of samples should be clamped to `0.0` or `1.0`.",null,null],[13,"NoClamp","","Do not clamp. Samples with values outside of the `[0.0, 1.0]` range will be discarded.",553,null],[13,"Clamp","","Clamp the depth values. All samples will always be drawn.",553,null],[13,"ClampNear","","Depth values inferior to `0.0` will be clamped to `0.0`.",553,null],[13,"ClampFar","","Depth values superior to `1.0` will be clamped to `1.0`.",553,null],[4,"QueryCreationError","","Error that can happen when creating a query object.",null,null],[13,"NotSupported","","The given query type is not supported.",554,null],[4,"StencilTest","","Specifies which comparison the GPU will do to determine whether a sample passes the stencil\ntest. The general equation is `(ref & mask) CMP (stencil & mask)`, where `ref` is the reference\nvalue (`stencil_reference_value_clockwise` or `stencil_reference_value_counter_clockwise`),\n`CMP` is the comparison chosen, and `stencil` is the current value in the stencil buffer.",null,null],[13,"AlwaysPass","","The stencil test always passes.",515,null],[13,"AlwaysFail","","The stencil test always fails.",515,null],[13,"IfLess","","`(ref & mask) < (stencil & mask)`",515,null],[12,"mask","glium::draw_parameters::StencilTest","The mask that is and'ed with the reference value and stencil buffer.",515,null],[13,"IfLessOrEqual","glium::draw_parameters","`(ref & mask) <= (stencil & mask)`",515,null],[12,"mask","glium::draw_parameters::StencilTest","The mask that is and'ed with the reference value and stencil buffer.",515,null],[13,"IfMore","glium::draw_parameters","`(ref & mask) > (stencil & mask)`",515,null],[12,"mask","glium::draw_parameters::StencilTest","The mask that is and'ed with the reference value and stencil buffer.",515,null],[13,"IfMoreOrEqual","glium::draw_parameters","`(ref & mask) >= (stencil & mask)`",515,null],[12,"mask","glium::draw_parameters::StencilTest","The mask that is and'ed with the reference value and stencil buffer.",515,null],[13,"IfEqual","glium::draw_parameters","`(ref & mask) == (stencil & mask)`",515,null],[12,"mask","glium::draw_parameters::StencilTest","The mask that is and'ed with the reference value and stencil buffer.",515,null],[13,"IfNotEqual","glium::draw_parameters","`(ref & mask) != (stencil & mask)`",515,null],[12,"mask","glium::draw_parameters::StencilTest","The mask that is and'ed with the reference value and stencil buffer.",515,null],[4,"StencilOperation","glium::draw_parameters","Specificies which operation the GPU will do depending on the result of the stencil test.",null,null],[13,"Keep","","Keeps the value currently in the stencil buffer.",516,null],[13,"Zero","","Writes zero in the stencil buffer.",516,null],[13,"Replace","","Writes the reference value (`stencil_reference_value_clockwise` or\n`stencil_reference_value_counter_clockwise`) in the stencil buffer.",516,null],[13,"Increment","","Increments the value currently in the stencil buffer. If the value is the\nmaximum, don't do anything.",516,null],[13,"IncrementWrap","","Increments the value currently in the stencil buffer. If the value is the\nmaximum, wrap to `0`.",516,null],[13,"Decrement","","Decrements the value currently in the stencil buffer. If the value is `0`,\ndon't do anything.",516,null],[13,"DecrementWrap","","Decrements the value currently in the stencil buffer. If the value is `0`,\nwrap to `-1`.",516,null],[13,"Invert","","Inverts each bit of the value.",516,null],[4,"BackfaceCullingMode","","Describes how triangles should be filtered before the fragment processing. Backface culling\nis purely an optimization. If you don't know what this does, just use `CullingDisabled`.",null,null],[13,"CullingDisabled","","All triangles are always drawn.",555,null],[13,"CullCounterClockwise","","Triangles whose vertices are counterclockwise won't be drawn.",555,null],[13,"CullClockwise","","Triangles whose vertices are clockwise won't be drawn.",555,null],[4,"PolygonMode","","Defines how the device should render polygons.",null,null],[13,"Point","","Only draw a single point at each vertex.",556,null],[13,"Line","","Only draw a line in the boundaries of each polygon.",556,null],[13,"Fill","","Fill the content of the polygon. This is the default mode.",556,null],[4,"Smooth","","Specifies a hint for the smoothing.",null,null],[13,"Fastest","","The most efficient option should be chosen.",557,null],[13,"Nicest","","The most correct, or highest quality, option should be chosen.",557,null],[13,"DontCare","","No preference.",557,null],[4,"ProvokingVertex","","The vertex to use for flat shading.",null,null],[13,"LastVertex","","Use the last vertex of each primitive.",558,null],[13,"FirstVertex","","Use the first vertex of each primitive.",558,null],[4,"SamplesQueryParam","","The query to use for samples counting.",null,null],[13,"SamplesPassedQuery","","A `SamplesPassedQuery`.",559,null],[13,"AnySamplesPassedQuery","","A `AnySamplesPassedQuery`.",559,null],[5,"validate","","DEPRECATED. Checks parameters and returns an error if something is wrong.",null,{"inputs":[{"name":"context"},{"name":"drawparameters"}],"output":{"name":"result"}}],[11,"eq","glium","",507,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ne","","",507,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"fmt","","",507,{"inputs":[{"name":"blend"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",507,{"inputs":[{"name":"blend"}],"output":{"name":"blend"}}],[11,"alpha_blending","","Returns a blend effect to add transparent objects over others.",507,{"inputs":[{"name":"blend"}],"output":{"name":"blend"}}],[11,"default","","",507,{"inputs":[{"name":"blend"}],"output":{"name":"blend"}}],[11,"eq","","",512,{"inputs":[{"name":"blendingfunction"},{"name":"blendingfunction"}],"output":{"name":"bool"}}],[11,"ne","","",512,{"inputs":[{"name":"blendingfunction"},{"name":"blendingfunction"}],"output":{"name":"bool"}}],[11,"fmt","","",512,{"inputs":[{"name":"blendingfunction"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",512,{"inputs":[{"name":"blendingfunction"}],"output":{"name":"blendingfunction"}}],[11,"eq","","",513,{"inputs":[{"name":"linearblendingfactor"},{"name":"linearblendingfactor"}],"output":{"name":"bool"}}],[11,"ne","","",513,{"inputs":[{"name":"linearblendingfactor"},{"name":"linearblendingfactor"}],"output":{"name":"bool"}}],[11,"fmt","","",513,{"inputs":[{"name":"linearblendingfactor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",513,{"inputs":[{"name":"linearblendingfactor"}],"output":{"name":"linearblendingfactor"}}],[11,"clone","","",508,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"fmt","","",508,{"inputs":[{"name":"depth"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",508,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"eq","","",514,{"inputs":[{"name":"depthtest"},{"name":"depthtest"}],"output":{"name":"bool"}}],[11,"ne","","",514,{"inputs":[{"name":"depthtest"},{"name":"depthtest"}],"output":{"name":"bool"}}],[11,"fmt","","",514,{"inputs":[{"name":"depthtest"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",514,{"inputs":[{"name":"depthtest"}],"output":{"name":"depthtest"}}],[11,"requires_depth_buffer","","Returns true if the function requires a depth buffer to be used.",514,{"inputs":[{"name":"depthtest"}],"output":{"name":"bool"}}],[11,"eq","glium::draw_parameters","",553,{"inputs":[{"name":"depthclamp"},{"name":"depthclamp"}],"output":{"name":"bool"}}],[11,"ne","","",553,{"inputs":[{"name":"depthclamp"},{"name":"depthclamp"}],"output":{"name":"bool"}}],[11,"fmt","","",553,{"inputs":[{"name":"depthclamp"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",553,{"inputs":[{"name":"depthclamp"}],"output":{"name":"depthclamp"}}],[11,"fmt","","",554,{"inputs":[{"name":"querycreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",554,{"inputs":[{"name":"querycreationerror"}],"output":{"name":"querycreationerror"}}],[11,"fmt","","",554,{"inputs":[{"name":"querycreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",554,{"inputs":[{"name":"querycreationerror"}],"output":{"name":"str"}}],[11,"fmt","","",560,{"inputs":[{"name":"samplespassedquery"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Builds a new query.",560,{"inputs":[{"name":"samplespassedquery"},{"name":"f"}],"output":{"name":"result"}}],[11,"is_ready","","Queries the counter to see if the result is already available.",560,{"inputs":[{"name":"samplespassedquery"}],"output":{"name":"bool"}}],[11,"get","","Returns the value of the query. Blocks until it is available.",560,{"inputs":[{"name":"samplespassedquery"}],"output":{"name":"u32"}}],[11,"to_buffer_u32","","Writes the result of the query to a buffer when it is available.",560,{"inputs":[{"name":"samplespassedquery"},{"name":"bufferslice"}],"output":{"name":"result"}}],[11,"get_id","","",560,{"inputs":[{"name":"samplespassedquery"}],"output":{"name":"gluint"}}],[11,"fmt","","",561,{"inputs":[{"name":"timeelapsedquery"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Builds a new query.",561,{"inputs":[{"name":"timeelapsedquery"},{"name":"f"}],"output":{"name":"result"}}],[11,"is_ready","","Queries the counter to see if the result is already available.",561,{"inputs":[{"name":"timeelapsedquery"}],"output":{"name":"bool"}}],[11,"get","","Returns the value of the query. Blocks until it is available.",561,{"inputs":[{"name":"timeelapsedquery"}],"output":{"name":"u32"}}],[11,"to_buffer_u32","","Writes the result of the query to a buffer when it is available.",561,{"inputs":[{"name":"timeelapsedquery"},{"name":"bufferslice"}],"output":{"name":"result"}}],[11,"get_id","","",561,{"inputs":[{"name":"timeelapsedquery"}],"output":{"name":"gluint"}}],[11,"fmt","","",562,{"inputs":[{"name":"anysamplespassedquery"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Builds a new query.",562,{"inputs":[{"name":"anysamplespassedquery"},{"name":"f"},{"name":"bool"}],"output":{"name":"result"}}],[11,"is_ready","","Queries the counter to see if the result is already available.",562,{"inputs":[{"name":"anysamplespassedquery"}],"output":{"name":"bool"}}],[11,"get","","Returns the value of the query. Blocks until it is available.",562,{"inputs":[{"name":"anysamplespassedquery"}],"output":{"name":"bool"}}],[11,"to_buffer_u32","","Writes the result of the query to a buffer when it is available.",562,{"inputs":[{"name":"anysamplespassedquery"},{"name":"bufferslice"}],"output":{"name":"result"}}],[11,"get_id","","",562,{"inputs":[{"name":"anysamplespassedquery"}],"output":{"name":"gluint"}}],[11,"fmt","","",563,{"inputs":[{"name":"primitivesgeneratedquery"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Builds a new query.",563,{"inputs":[{"name":"primitivesgeneratedquery"},{"name":"f"}],"output":{"name":"result"}}],[11,"is_ready","","Queries the counter to see if the result is already available.",563,{"inputs":[{"name":"primitivesgeneratedquery"}],"output":{"name":"bool"}}],[11,"get","","Returns the value of the query. Blocks until it is available.",563,{"inputs":[{"name":"primitivesgeneratedquery"}],"output":{"name":"u32"}}],[11,"to_buffer_u32","","Writes the result of the query to a buffer when it is available.",563,{"inputs":[{"name":"primitivesgeneratedquery"},{"name":"bufferslice"}],"output":{"name":"result"}}],[11,"get_id","","",563,{"inputs":[{"name":"primitivesgeneratedquery"}],"output":{"name":"gluint"}}],[11,"fmt","","",564,{"inputs":[{"name":"transformfeedbackprimitiveswrittenquery"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Builds a new query.",564,{"inputs":[{"name":"transformfeedbackprimitiveswrittenquery"},{"name":"f"}],"output":{"name":"result"}}],[11,"is_ready","","Queries the counter to see if the result is already available.",564,{"inputs":[{"name":"transformfeedbackprimitiveswrittenquery"}],"output":{"name":"bool"}}],[11,"get","","Returns the value of the query. Blocks until it is available.",564,{"inputs":[{"name":"transformfeedbackprimitiveswrittenquery"}],"output":{"name":"u32"}}],[11,"to_buffer_u32","","Writes the result of the query to a buffer when it is available.",564,{"inputs":[{"name":"transformfeedbackprimitiveswrittenquery"},{"name":"bufferslice"}],"output":{"name":"result"}}],[11,"get_id","","",564,{"inputs":[{"name":"transformfeedbackprimitiveswrittenquery"}],"output":{"name":"gluint"}}],[11,"fmt","","",550,{"inputs":[{"name":"stencil"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",550,{"inputs":[{"name":"stencil"}],"output":{"name":"stencil"}}],[11,"default","","",550,{"inputs":[{"name":"stencil"}],"output":{"name":"stencil"}}],[11,"eq","glium","",515,{"inputs":[{"name":"stenciltest"},{"name":"stenciltest"}],"output":{"name":"bool"}}],[11,"ne","","",515,{"inputs":[{"name":"stenciltest"},{"name":"stenciltest"}],"output":{"name":"bool"}}],[11,"fmt","","",515,{"inputs":[{"name":"stenciltest"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",515,{"inputs":[{"name":"stenciltest"}],"output":{"name":"stenciltest"}}],[11,"eq","","",516,{"inputs":[{"name":"stenciloperation"},{"name":"stenciloperation"}],"output":{"name":"bool"}}],[11,"ne","","",516,{"inputs":[{"name":"stenciloperation"},{"name":"stenciloperation"}],"output":{"name":"bool"}}],[11,"fmt","","",516,{"inputs":[{"name":"stenciloperation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",516,{"inputs":[{"name":"stenciloperation"}],"output":{"name":"stenciloperation"}}],[11,"eq","glium::draw_parameters","",555,{"inputs":[{"name":"backfacecullingmode"},{"name":"backfacecullingmode"}],"output":{"name":"bool"}}],[11,"ne","","",555,{"inputs":[{"name":"backfacecullingmode"},{"name":"backfacecullingmode"}],"output":{"name":"bool"}}],[11,"fmt","","",555,{"inputs":[{"name":"backfacecullingmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",555,{"inputs":[{"name":"backfacecullingmode"}],"output":{"name":"backfacecullingmode"}}],[11,"eq","","",556,{"inputs":[{"name":"polygonmode"},{"name":"polygonmode"}],"output":{"name":"bool"}}],[11,"ne","","",556,{"inputs":[{"name":"polygonmode"},{"name":"polygonmode"}],"output":{"name":"bool"}}],[11,"fmt","","",556,{"inputs":[{"name":"polygonmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",556,{"inputs":[{"name":"polygonmode"}],"output":{"name":"polygonmode"}}],[11,"eq","","",557,{"inputs":[{"name":"smooth"},{"name":"smooth"}],"output":{"name":"bool"}}],[11,"ne","","",557,{"inputs":[{"name":"smooth"},{"name":"smooth"}],"output":{"name":"bool"}}],[11,"fmt","","",557,{"inputs":[{"name":"smooth"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",557,{"inputs":[{"name":"smooth"}],"output":{"name":"smooth"}}],[11,"eq","","",558,{"inputs":[{"name":"provokingvertex"},{"name":"provokingvertex"}],"output":{"name":"bool"}}],[11,"ne","","",558,{"inputs":[{"name":"provokingvertex"},{"name":"provokingvertex"}],"output":{"name":"bool"}}],[11,"fmt","","",558,{"inputs":[{"name":"provokingvertex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",558,{"inputs":[{"name":"provokingvertex"}],"output":{"name":"provokingvertex"}}],[11,"fmt","","",551,{"inputs":[{"name":"drawparameters"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",551,{"inputs":[{"name":"drawparameters"}],"output":{"name":"drawparameters"}}],[11,"clone","","",552,{"inputs":[{"name":"conditionalrendering"}],"output":{"name":"conditionalrendering"}}],[11,"fmt","","",552,{"inputs":[{"name":"conditionalrendering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",559,{"inputs":[{"name":"samplesqueryparam"}],"output":{"name":"samplesqueryparam"}}],[11,"fmt","","",559,{"inputs":[{"name":"samplesqueryparam"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",559,{"inputs":[{"name":"samplesqueryparam"},{"name":"samplespassedquery"}],"output":{"name":"samplesqueryparam"}}],[11,"from","","",559,{"inputs":[{"name":"samplesqueryparam"},{"name":"anysamplespassedquery"}],"output":{"name":"samplesqueryparam"}}],[11,"default","","",551,{"inputs":[{"name":"drawparameters"}],"output":{"name":"drawparameters"}}],[0,"framebuffer","glium","Framebuffers allow you to customize the color, depth and stencil buffers you will draw on.",null,null],[3,"DefaultFramebuffer","glium::framebuffer","A framebuffer which has only one color attachment.",null,null],[3,"RenderBuffer","","A render buffer is similar to a texture, but is optimized for usage as a draw target.",null,null],[3,"RenderBufferAny","","A RenderBuffer of indeterminate type.",null,null],[3,"DepthRenderBuffer","","A render buffer is similar to a texture, but is optimized for usage as a draw target.",null,null],[3,"StencilRenderBuffer","","A render buffer is similar to a texture, but is optimized for usage as a draw target.",null,null],[3,"DepthStencilRenderBuffer","","A render buffer is similar to a texture, but is optimized for usage as a draw target.",null,null],[3,"SimpleFrameBuffer","","A framebuffer which has only one color attachment.",null,null],[3,"MultiOutputFrameBuffer","","This struct is useless for the moment.",null,null],[3,"EmptyFrameBuffer","","A framebuffer with no attachment at all.",null,null],[4,"DefaultFramebufferAttachment","","One of the color attachments on the default framebuffer.",null,null],[13,"BackLeft","","The backbuffer for the left eye. Equivalent to the backbuffer if stereoscopy is disabled.",565,null],[13,"BackRight","","The backbuffer for the right eye. May not be present.",565,null],[13,"FrontLeft","","The frontbuffer for the left eye. Equivalent to the frontbuffer if stereoscopy is disabled.\nMay not be accessible.",565,null],[13,"FrontRight","","The frontbuffer for the right eye. May not be present or accessible.",565,null],[4,"RenderBufferCreationError","","Error while creating a render buffer.",null,null],[13,"FormatNotSupported","","The requested format is not supported.",566,null],[4,"ValidationError","","An error that can happen while validating attachments.",null,null],[13,"EmptyFramebufferObjectsNotSupported","","You requested an empty framebuffer object, but they are not supported.",567,null],[13,"EmptyFramebufferUnsupportedDimensions","","The requested characteristics of an empty framebuffer object are out of range.",567,null],[13,"DimensionsMismatchNotSupported","","The backend doesn't support attachments with various dimensions.",567,null],[13,"SamplesCountMismatch","","All attachments must have the same number of samples.",567,null],[13,"TooManyColorAttachments","","Backends only support a certain number of color attachments.",567,null],[12,"maximum","glium::framebuffer::ValidationError","Maximum number of attachments.",567,null],[12,"obtained","","Number of attachments that were given.",567,null],[4,"ColorAttachment","glium::framebuffer","Describes an attachment for a color buffer.",null,null],[13,"Texture","","A texture.",568,null],[13,"RenderBuffer","","A render buffer.",568,null],[4,"DepthAttachment","","Describes an attachment for a depth buffer.",null,null],[13,"Texture","","A texture.",569,null],[13,"RenderBuffer","","A render buffer.",569,null],[4,"StencilAttachment","","Describes an attachment for a stencil buffer.",null,null],[13,"Texture","","A texture.",570,null],[13,"RenderBuffer","","A render buffer.",570,null],[4,"DepthStencilAttachment","","Describes an attachment for a depth and stencil buffer.",null,null],[13,"Texture","","A texture.",571,null],[13,"RenderBuffer","","A render buffer.",571,null],[5,"is_dimensions_mismatch_supported","","Returns true if the backend supports attachments with varying dimensions.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[11,"fmt","","",565,{"inputs":[{"name":"defaultframebufferattachment"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",565,{"inputs":[{"name":"defaultframebufferattachment"}],"output":{"name":"defaultframebufferattachment"}}],[11,"back_left","","Creates a `DefaultFramebuffer` with the back left buffer.",572,{"inputs":[{"name":"defaultframebuffer"},{"name":"f"}],"output":{"name":"defaultframebuffer"}}],[11,"clear","","",572,{"inputs":[{"name":"defaultframebuffer"},{"name":"option"},{"name":"option"},{"name":"bool"},{"name":"option"},{"name":"option"}],"output":null}],[11,"get_dimensions","","",572,null],[11,"get_depth_buffer_bits","","",572,{"inputs":[{"name":"defaultframebuffer"}],"output":{"name":"option"}}],[11,"get_stencil_buffer_bits","","",572,{"inputs":[{"name":"defaultframebuffer"}],"output":{"name":"option"}}],[11,"draw","","",572,{"inputs":[{"name":"defaultframebuffer"},{"name":"v"},{"name":"i"},{"name":"program"},{"name":"u"},{"name":"drawparameters"}],"output":{"name":"result"}}],[11,"blit_color","","",572,{"inputs":[{"name":"defaultframebuffer"},{"name":"rect"},{"name":"s"},{"name":"blittarget"},{"name":"magnifysamplerfilter"}],"output":null}],[11,"blit_from_frame","","",572,{"inputs":[{"name":"defaultframebuffer"},{"name":"rect"},{"name":"blittarget"},{"name":"magnifysamplerfilter"}],"output":null}],[11,"blit_from_simple_framebuffer","","",572,{"inputs":[{"name":"defaultframebuffer"},{"name":"simpleframebuffer"},{"name":"rect"},{"name":"blittarget"},{"name":"magnifysamplerfilter"}],"output":null}],[11,"blit_from_multioutput_framebuffer","","",572,{"inputs":[{"name":"defaultframebuffer"},{"name":"multioutputframebuffer"},{"name":"rect"},{"name":"blittarget"},{"name":"magnifysamplerfilter"}],"output":null}],[11,"fmt","","",566,{"inputs":[{"name":"renderbuffercreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",566,{"inputs":[{"name":"renderbuffercreationerror"}],"output":{"name":"creationerror"}}],[11,"fmt","","",566,{"inputs":[{"name":"renderbuffercreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",566,{"inputs":[{"name":"renderbuffercreationerror"}],"output":{"name":"str"}}],[11,"from","","",566,{"inputs":[{"name":"renderbuffercreationerror"},{"name":"formatnotsupportederror"}],"output":{"name":"creationerror"}}],[11,"new","","Builds a new render buffer.",573,{"inputs":[{"name":"renderbuffer"},{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"deref","","",573,{"inputs":[{"name":"renderbuffer"}],"output":{"name":"renderbufferany"}}],[11,"deref_mut","","",573,{"inputs":[{"name":"renderbuffer"}],"output":{"name":"renderbufferany"}}],[11,"get_id","","",573,{"inputs":[{"name":"renderbuffer"}],"output":{"name":"gluint"}}],[11,"new","","Builds a new render buffer.",574,{"inputs":[{"name":"depthrenderbuffer"},{"name":"f"},{"name":"depthformat"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"deref","","",574,{"inputs":[{"name":"depthrenderbuffer"}],"output":{"name":"renderbufferany"}}],[11,"deref_mut","","",574,{"inputs":[{"name":"depthrenderbuffer"}],"output":{"name":"renderbufferany"}}],[11,"get_id","","",574,{"inputs":[{"name":"depthrenderbuffer"}],"output":{"name":"gluint"}}],[11,"new","","Builds a new render buffer.",575,{"inputs":[{"name":"stencilrenderbuffer"},{"name":"f"},{"name":"stencilformat"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"deref","","",575,{"inputs":[{"name":"stencilrenderbuffer"}],"output":{"name":"renderbufferany"}}],[11,"deref_mut","","",575,{"inputs":[{"name":"stencilrenderbuffer"}],"output":{"name":"renderbufferany"}}],[11,"get_id","","",575,{"inputs":[{"name":"stencilrenderbuffer"}],"output":{"name":"gluint"}}],[11,"new","","Builds a new render buffer.",576,{"inputs":[{"name":"depthstencilrenderbuffer"},{"name":"f"},{"name":"depthstencilformat"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"deref","","",576,{"inputs":[{"name":"depthstencilrenderbuffer"}],"output":{"name":"renderbufferany"}}],[11,"deref_mut","","",576,{"inputs":[{"name":"depthstencilrenderbuffer"}],"output":{"name":"renderbufferany"}}],[11,"get_id","","",576,{"inputs":[{"name":"depthstencilrenderbuffer"}],"output":{"name":"gluint"}}],[11,"get_dimensions","","Returns the dimensions of the render buffer.",577,null],[11,"get_samples","","Returns the number of samples of the render buffer, or `None` if multisampling isn't\nenabled.",577,{"inputs":[{"name":"renderbufferany"}],"output":{"name":"option"}}],[11,"get_context","","Returns the context used to create this renderbuffer.",577,{"inputs":[{"name":"renderbufferany"}],"output":{"name":"rc"}}],[11,"kind","","Returns the kind of renderbuffer.",577,{"inputs":[{"name":"renderbufferany"}],"output":{"name":"texturekind"}}],[11,"drop","","",577,{"inputs":[{"name":"renderbufferany"}],"output":null}],[11,"get_id","","",577,{"inputs":[{"name":"renderbufferany"}],"output":{"name":"gluint"}}],[8,"ToColorAttachment","","Trait for objects that can be used as color attachments.",null,null],[10,"to_color_attachment","","Builds the `ColorAttachment`.",578,{"inputs":[{"name":"tocolorattachment"}],"output":{"name":"colorattachment"}}],[8,"ToDepthAttachment","","Trait for objects that can be used as depth attachments.",null,null],[10,"to_depth_attachment","","Builds the `DepthAttachment`.",579,{"inputs":[{"name":"todepthattachment"}],"output":{"name":"depthattachment"}}],[8,"ToStencilAttachment","","Trait for objects that can be used as stencil attachments.",null,null],[10,"to_stencil_attachment","","Builds the `StencilAttachment`.",580,{"inputs":[{"name":"tostencilattachment"}],"output":{"name":"stencilattachment"}}],[8,"ToDepthStencilAttachment","","Trait for objects that can be used as depth and stencil attachments.",null,null],[10,"to_depth_stencil_attachment","","Builds the `DepthStencilAttachment`.",581,{"inputs":[{"name":"todepthstencilattachment"}],"output":{"name":"depthstencilattachment"}}],[11,"new","","Creates a `SimpleFrameBuffer` with a single color attachment and no depth\nnor stencil buffer.",582,{"inputs":[{"name":"simpleframebuffer"},{"name":"f"},{"name":"c"}],"output":{"name":"result"}}],[11,"with_depth_buffer","","Creates a `SimpleFrameBuffer` with a single color attachment and a depth\nbuffer, but no stencil buffer.",582,{"inputs":[{"name":"simpleframebuffer"},{"name":"f"},{"name":"c"},{"name":"d"}],"output":{"name":"result"}}],[11,"depth_only","","Creates a `SimpleFrameBuffer` with a single color attachment and no depth\nnor stencil buffer.",582,{"inputs":[{"name":"simpleframebuffer"},{"name":"f"},{"name":"d"}],"output":{"name":"result"}}],[11,"with_depth_and_stencil_buffer","","Creates a `SimpleFrameBuffer` with a single color attachment, a depth\nbuffer, and a stencil buffer.",582,{"inputs":[{"name":"simpleframebuffer"},{"name":"f"},{"name":"c"},{"name":"d"},{"name":"s"}],"output":{"name":"result"}}],[11,"depth_and_stencil_only","","Creates a `SimpleFrameBuffer` with a single color attachment and no depth\nnor stencil buffer.",582,{"inputs":[{"name":"simpleframebuffer"},{"name":"f"},{"name":"d"},{"name":"s"}],"output":{"name":"result"}}],[11,"with_stencil_buffer","","Creates a `SimpleFrameBuffer` with a single color attachment and a stencil\nbuffer, but no depth buffer.",582,{"inputs":[{"name":"simpleframebuffer"},{"name":"f"},{"name":"c"},{"name":"s"}],"output":{"name":"result"}}],[11,"stencil_only","","Creates a `SimpleFrameBuffer` with a single color attachment and a stencil\nbuffer, but no depth buffer.",582,{"inputs":[{"name":"simpleframebuffer"},{"name":"f"},{"name":"s"}],"output":{"name":"result"}}],[11,"with_depth_stencil_buffer","","Creates a `SimpleFrameBuffer` with a single color attachment and a depth-stencil buffer.",582,{"inputs":[{"name":"simpleframebuffer"},{"name":"f"},{"name":"c"},{"name":"d"}],"output":{"name":"result"}}],[11,"depth_stencil_only","","Creates a `SimpleFrameBuffer` with a single color attachment and a depth-stencil buffer.",582,{"inputs":[{"name":"simpleframebuffer"},{"name":"f"},{"name":"d"}],"output":{"name":"result"}}],[11,"clear","","",582,{"inputs":[{"name":"simpleframebuffer"},{"name":"option"},{"name":"option"},{"name":"bool"},{"name":"option"},{"name":"option"}],"output":null}],[11,"get_dimensions","","",582,null],[11,"get_depth_buffer_bits","","",582,{"inputs":[{"name":"simpleframebuffer"}],"output":{"name":"option"}}],[11,"get_stencil_buffer_bits","","",582,{"inputs":[{"name":"simpleframebuffer"}],"output":{"name":"option"}}],[11,"draw","","",582,{"inputs":[{"name":"simpleframebuffer"},{"name":"v"},{"name":"i"},{"name":"program"},{"name":"u"},{"name":"drawparameters"}],"output":{"name":"result"}}],[11,"blit_color","","",582,{"inputs":[{"name":"simpleframebuffer"},{"name":"rect"},{"name":"s"},{"name":"blittarget"},{"name":"magnifysamplerfilter"}],"output":null}],[11,"blit_from_frame","","",582,{"inputs":[{"name":"simpleframebuffer"},{"name":"rect"},{"name":"blittarget"},{"name":"magnifysamplerfilter"}],"output":null}],[11,"blit_from_simple_framebuffer","","",582,{"inputs":[{"name":"simpleframebuffer"},{"name":"simpleframebuffer"},{"name":"rect"},{"name":"blittarget"},{"name":"magnifysamplerfilter"}],"output":null}],[11,"blit_from_multioutput_framebuffer","","",582,{"inputs":[{"name":"simpleframebuffer"},{"name":"multioutputframebuffer"},{"name":"rect"},{"name":"blittarget"},{"name":"magnifysamplerfilter"}],"output":null}],[11,"new","","Creates a new `MultiOutputFrameBuffer`.",583,{"inputs":[{"name":"multioutputframebuffer"},{"name":"f"},{"name":"i"}],"output":{"name":"result"}}],[11,"with_depth_buffer","","Creates a `MultiOutputFrameBuffer` with a depth buffer.",583,{"inputs":[{"name":"multioutputframebuffer"},{"name":"f"},{"name":"i"},{"name":"d"}],"output":{"name":"result"}}],[11,"with_depth_and_stencil_buffer","","Creates a `MultiOutputFrameBuffer` with a depth buffer, and a stencil buffer.",583,{"inputs":[{"name":"multioutputframebuffer"},{"name":"f"},{"name":"i"},{"name":"d"},{"name":"s"}],"output":{"name":"result"}}],[11,"with_stencil_buffer","","Creates a `MultiOutputFrameBuffer` with a stencil buffer, but no depth buffer.",583,{"inputs":[{"name":"multioutputframebuffer"},{"name":"f"},{"name":"i"},{"name":"s"}],"output":{"name":"result"}}],[11,"with_depth_stencil_buffer","","Creates a `MultiOutputFrameBuffer` with a depth-stencil buffer.",583,{"inputs":[{"name":"multioutputframebuffer"},{"name":"f"},{"name":"i"},{"name":"d"}],"output":{"name":"result"}}],[11,"clear","","",583,{"inputs":[{"name":"multioutputframebuffer"},{"name":"option"},{"name":"option"},{"name":"bool"},{"name":"option"},{"name":"option"}],"output":null}],[11,"get_dimensions","","",583,null],[11,"get_depth_buffer_bits","","",583,{"inputs":[{"name":"multioutputframebuffer"}],"output":{"name":"option"}}],[11,"get_stencil_buffer_bits","","",583,{"inputs":[{"name":"multioutputframebuffer"}],"output":{"name":"option"}}],[11,"draw","","",583,{"inputs":[{"name":"multioutputframebuffer"},{"name":"v"},{"name":"i"},{"name":"program"},{"name":"u"},{"name":"drawparameters"}],"output":{"name":"result"}}],[11,"blit_color","","",583,{"inputs":[{"name":"multioutputframebuffer"},{"name":"rect"},{"name":"s"},{"name":"blittarget"},{"name":"magnifysamplerfilter"}],"output":null}],[11,"blit_from_frame","","",583,{"inputs":[{"name":"multioutputframebuffer"},{"name":"rect"},{"name":"blittarget"},{"name":"magnifysamplerfilter"}],"output":null}],[11,"blit_from_simple_framebuffer","","",583,{"inputs":[{"name":"multioutputframebuffer"},{"name":"simpleframebuffer"},{"name":"rect"},{"name":"blittarget"},{"name":"magnifysamplerfilter"}],"output":null}],[11,"blit_from_multioutput_framebuffer","","",583,{"inputs":[{"name":"multioutputframebuffer"},{"name":"multioutputframebuffer"},{"name":"rect"},{"name":"blittarget"},{"name":"magnifysamplerfilter"}],"output":null}],[11,"is_supported","","Returns true if empty framebuffers are supported by the backend.",584,{"inputs":[{"name":"emptyframebuffer"},{"name":"c"}],"output":{"name":"bool"}}],[11,"is_layered_supported","","Returns true if layered empty framebuffers are supported by the backend.",584,{"inputs":[{"name":"emptyframebuffer"},{"name":"c"}],"output":{"name":"bool"}}],[11,"get_max_supported_width","","Returns the maximum width of empty framebuffers that the backend supports, or `None` if\nempty framebuffers are not supported.",584,{"inputs":[{"name":"emptyframebuffer"},{"name":"c"}],"output":{"name":"option"}}],[11,"get_max_supported_height","","Returns the maximum height of empty framebuffers that the backend supports, or `None` if\nempty framebuffers are not supported.",584,{"inputs":[{"name":"emptyframebuffer"},{"name":"c"}],"output":{"name":"option"}}],[11,"get_max_supported_samples","","Returns the maximum number of samples of empty framebuffers that the backend supports,\nor `None` if empty framebuffers are not supported.",584,{"inputs":[{"name":"emptyframebuffer"},{"name":"c"}],"output":{"name":"option"}}],[11,"get_max_supported_layers","","Returns the maximum number of layers of empty framebuffers that the backend supports,\nor `None` if layered empty framebuffers are not supported.",584,{"inputs":[{"name":"emptyframebuffer"},{"name":"c"}],"output":{"name":"option"}}],[11,"new","","Creates a `EmptyFrameBuffer`.",584,{"inputs":[{"name":"emptyframebuffer"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"option"},{"name":"option"},{"name":"bool"}],"output":{"name":"result"}}],[11,"clear","","",584,{"inputs":[{"name":"emptyframebuffer"},{"name":"option"},{"name":"option"},{"name":"bool"},{"name":"option"},{"name":"option"}],"output":null}],[11,"get_dimensions","","",584,null],[11,"get_depth_buffer_bits","","",584,{"inputs":[{"name":"emptyframebuffer"}],"output":{"name":"option"}}],[11,"get_stencil_buffer_bits","","",584,{"inputs":[{"name":"emptyframebuffer"}],"output":{"name":"option"}}],[11,"draw","","",584,{"inputs":[{"name":"emptyframebuffer"},{"name":"v"},{"name":"i"},{"name":"program"},{"name":"u"},{"name":"drawparameters"}],"output":{"name":"result"}}],[11,"blit_color","","",584,{"inputs":[{"name":"emptyframebuffer"},{"name":"rect"},{"name":"s"},{"name":"blittarget"},{"name":"magnifysamplerfilter"}],"output":null}],[11,"blit_from_frame","","",584,{"inputs":[{"name":"emptyframebuffer"},{"name":"rect"},{"name":"blittarget"},{"name":"magnifysamplerfilter"}],"output":null}],[11,"blit_from_simple_framebuffer","","",584,{"inputs":[{"name":"emptyframebuffer"},{"name":"simpleframebuffer"},{"name":"rect"},{"name":"blittarget"},{"name":"magnifysamplerfilter"}],"output":null}],[11,"blit_from_multioutput_framebuffer","","",584,{"inputs":[{"name":"emptyframebuffer"},{"name":"multioutputframebuffer"},{"name":"rect"},{"name":"blittarget"},{"name":"magnifysamplerfilter"}],"output":null}],[11,"clone","","",568,{"inputs":[{"name":"colorattachment"}],"output":{"name":"colorattachment"}}],[11,"to_color_attachment","","",568,{"inputs":[{"name":"colorattachment"}],"output":{"name":"colorattachment"}}],[11,"clone","","",569,{"inputs":[{"name":"depthattachment"}],"output":{"name":"depthattachment"}}],[11,"to_depth_attachment","","",569,{"inputs":[{"name":"depthattachment"}],"output":{"name":"depthattachment"}}],[11,"clone","","",570,{"inputs":[{"name":"stencilattachment"}],"output":{"name":"stencilattachment"}}],[11,"to_stencil_attachment","","",570,{"inputs":[{"name":"stencilattachment"}],"output":{"name":"stencilattachment"}}],[11,"clone","","",571,{"inputs":[{"name":"depthstencilattachment"}],"output":{"name":"depthstencilattachment"}}],[11,"to_depth_stencil_attachment","","",571,{"inputs":[{"name":"depthstencilattachment"}],"output":{"name":"depthstencilattachment"}}],[0,"index","glium","In order to draw, you need to provide a way for the video card to know how to link primitives\ntogether.",null,null],[3,"IndexBuffer","glium::index","A list of indices loaded in the graphics card's memory.",null,null],[3,"IndexBufferSlice","","Slice of an `IndexBuffer`.",null,null],[3,"IndexBufferAny","","An `IndexBuffer` without any type information.",null,null],[3,"DrawCommandsNoIndicesBuffer","","A buffer containing a list of draw commands.",null,null],[3,"DrawCommandNoIndices","","Represents an element in a list of draw commands.",null,null],[12,"count","","Number of vertices to draw.",585,null],[12,"instance_count","","Number of instances to draw. If it's `0`, nothing will be drawn.",585,null],[12,"first_index","","First vertex to draw in the vertices source.",585,null],[12,"base_instance","","Numero of the first instance to draw.",585,null],[3,"DrawCommandsIndicesBuffer","","A buffer containing a list of draw commands.",null,null],[3,"DrawCommandIndices","","Represents an element in a list of draw commands.",null,null],[12,"count","","Number of indices to use in the index buffer.",586,null],[12,"instance_count","","Number of instances to draw. If it's `0`, nothing will be drawn.",586,null],[12,"first_index","","First index to draw in the index buffer.",586,null],[12,"base_vertex","","Value to add to each index.",586,null],[12,"base_instance","","Numero of the first instance to draw.",586,null],[3,"NoIndices","","Marker that can be used as an indices source when you don't need indices.",null,null],[4,"BufferCreationError","","Error that can happen while creating an index buffer.",null,null],[13,"IndexTypeNotSupported","","The type of index is not supported by the backend.",587,null],[13,"PrimitiveTypeNotSupported","","The type of primitives is not supported by the backend.",587,null],[13,"BufferCreationError","","An error happened while creating the buffer.",587,null],[4,"IndicesSource","","Describes a source of indices used for drawing.",null,null],[13,"IndexBuffer","","A buffer uploaded in video memory.",588,null],[12,"buffer","glium::index::IndicesSource","The buffer.",588,null],[12,"data_type","","Type of indices in the buffer.",588,null],[12,"primitives","","Type of primitives contained in the vertex source.",588,null],[13,"MultidrawArray","glium::index","Use a multidraw indirect buffer without indices.",588,null],[12,"buffer","glium::index::IndicesSource","The buffer.",588,null],[12,"primitives","","Type of primitives contained in the vertex source.",588,null],[13,"MultidrawElement","glium::index","Use a multidraw indirect buffer with indices.",588,null],[12,"commands","glium::index::IndicesSource","The buffer of the commands.",588,null],[12,"indices","","The buffer of the indices.",588,null],[12,"data_type","","Type of indices in the buffer.",588,null],[12,"primitives","","Type of primitives contained in the vertex source.",588,null],[13,"NoIndices","glium::index","Don't use indices. Assemble primitives by using the order in which the vertices are in\nthe vertices source.",588,null],[12,"primitives","glium::index::IndicesSource","Type of primitives contained in the vertex source.",588,null],[4,"PrimitiveType","glium::index","List of available primitives.",null,null],[13,"Points","","Each vertex is an invidiual point.",589,null],[13,"LinesList","","Vertices are grouped by chunks of two vertices. Each chunk represents a line.",589,null],[13,"LinesListAdjacency","","Vertices are grouped by chunks of four vertices. The second and third vertices of each\nchunk represents the line.",589,null],[13,"LineStrip","","Each vertex (except the last one) forms a line with the next vertex.",589,null],[13,"LineStripAdjacency","","Similar to `LineStrip`, but with an additional vertex at the beginning and at the end\nthat represent the vertices adjacent to the first and last ones.",589,null],[13,"LineLoop","","Each vertex forms a line with the next vertex. The last vertex form a line with the first\none.",589,null],[13,"TrianglesList","","Vertices are grouped by chunks of three vertices. Each chunk represents a triangle.",589,null],[13,"TrianglesListAdjacency","","Vertices are grouped by chunks of six vertices. The first, third and fifth vertices\nrepresent a triangle.",589,null],[13,"TriangleStrip","","Each vertex (except the first one and the last one) forms a triangle with the previous\nand the next vertices.",589,null],[13,"TriangleStripAdjacency","","Each even vertex forms a triangle with vertices `n+2` and `n+4`.",589,null],[13,"TriangleFan","","Starting at the second vertex, each vertex forms a triangle with the next and the first\nvertices.",589,null],[13,"Patches","","Vertices are grouped by chunks of `vertices_per_patch` vertices.",589,null],[12,"vertices_per_patch","glium::index::PrimitiveType","Number of vertices per patch.",589,null],[4,"IndexType","glium::index","Type of the indices in an index source.",null,null],[13,"U8","","u8",590,null],[13,"U16","","u16",590,null],[13,"U32","","u32",590,null],[11,"clone","","",587,{"inputs":[{"name":"buffercreationerror"}],"output":{"name":"creationerror"}}],[11,"fmt","","",587,{"inputs":[{"name":"buffercreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",587,{"inputs":[{"name":"buffercreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",587,{"inputs":[{"name":"buffercreationerror"}],"output":{"name":"str"}}],[11,"cause","","",587,{"inputs":[{"name":"buffercreationerror"}],"output":{"name":"option"}}],[11,"from","","",587,{"inputs":[{"name":"buffercreationerror"},{"name":"buffercreationerror"}],"output":{"name":"creationerror"}}],[11,"fmt","glium","",591,{"inputs":[{"name":"indexbuffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Builds a new index buffer from a list of indices and a primitive type.",591,null],[11,"dynamic","","Builds a new index buffer from a list of indices and a primitive type.",591,null],[11,"persistent","","Builds a new index buffer from a list of indices and a primitive type.",591,null],[11,"immutable","","Builds a new index buffer from a list of indices and a primitive type.",591,null],[11,"empty","","Builds a new empty index buffer.",591,{"inputs":[{"name":"indexbuffer"},{"name":"f"},{"name":"primitivetype"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_dynamic","","Builds a new empty index buffer.",591,{"inputs":[{"name":"indexbuffer"},{"name":"f"},{"name":"primitivetype"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_persistent","","Builds a new empty index buffer.",591,{"inputs":[{"name":"indexbuffer"},{"name":"f"},{"name":"primitivetype"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_immutable","","Builds a new empty index buffer.",591,{"inputs":[{"name":"indexbuffer"},{"name":"f"},{"name":"primitivetype"},{"name":"usize"}],"output":{"name":"result"}}],[11,"get_primitives_type","","Returns the type of primitives associated with this index buffer.",591,{"inputs":[{"name":"indexbuffer"}],"output":{"name":"primitivetype"}}],[11,"get_indices_type","","Returns the data type of the indices inside this index buffer.",591,{"inputs":[{"name":"indexbuffer"}],"output":{"name":"indextype"}}],[11,"slice","","Returns `None` if out of range.",591,{"inputs":[{"name":"indexbuffer"},{"name":"r"}],"output":{"name":"option"}}],[11,"deref","","",591,{"inputs":[{"name":"indexbuffer"}],"output":{"name":"buffer"}}],[11,"deref_mut","","",591,{"inputs":[{"name":"indexbuffer"}],"output":{"name":"buffer"}}],[11,"from","glium::buffer","",540,{"inputs":[{"name":"bufferslice"},{"name":"indexbuffer"}],"output":{"name":"bufferslice"}}],[11,"from","","",541,{"inputs":[{"name":"buffermutslice"},{"name":"indexbuffer"}],"output":{"name":"buffermutslice"}}],[11,"get_id","glium","",591,{"inputs":[{"name":"indexbuffer"}],"output":{"name":"gluint"}}],[11,"from","glium::index","",588,{"inputs":[{"name":"indicessource"},{"name":"indexbuffer"}],"output":{"name":"indicessource"}}],[11,"fmt","","",592,{"inputs":[{"name":"indexbufferslice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_primitives_type","","Returns the type of primitives associated with this index buffer.",592,{"inputs":[{"name":"indexbufferslice"}],"output":{"name":"primitivetype"}}],[11,"get_indices_type","","Returns the data type of the indices inside this index buffer.",592,{"inputs":[{"name":"indexbufferslice"}],"output":{"name":"indextype"}}],[11,"slice","","Returns `None` if out of range.",592,{"inputs":[{"name":"indexbufferslice"},{"name":"r"}],"output":{"name":"option"}}],[11,"deref","","",592,{"inputs":[{"name":"indexbufferslice"}],"output":{"name":"bufferslice"}}],[11,"deref_mut","","",592,{"inputs":[{"name":"indexbufferslice"}],"output":{"name":"bufferslice"}}],[11,"from","glium::buffer","",540,{"inputs":[{"name":"bufferslice"},{"name":"indexbufferslice"}],"output":{"name":"bufferslice"}}],[11,"from","glium::index","",588,{"inputs":[{"name":"indicessource"},{"name":"indexbufferslice"}],"output":{"name":"indicessource"}}],[11,"from","","",588,{"inputs":[{"name":"indicessource"},{"name":"indexbufferslice"}],"output":{"name":"indicessource"}}],[11,"fmt","","",593,{"inputs":[{"name":"indexbufferany"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_primitives_type","","Returns the type of primitives associated with this index buffer.",593,{"inputs":[{"name":"indexbufferany"}],"output":{"name":"primitivetype"}}],[11,"get_indices_type","","Returns the data type of the indices inside this index buffer.",593,{"inputs":[{"name":"indexbufferany"}],"output":{"name":"indextype"}}],[11,"deref","","",593,{"inputs":[{"name":"indexbufferany"}],"output":{"name":"bufferany"}}],[11,"deref_mut","","",593,{"inputs":[{"name":"indexbufferany"}],"output":{"name":"bufferany"}}],[11,"from","","",593,{"inputs":[{"name":"indexbufferany"},{"name":"indexbuffer"}],"output":{"name":"indexbufferany"}}],[11,"from","","",588,{"inputs":[{"name":"indicessource"},{"name":"indexbufferany"}],"output":{"name":"indicessource"}}],[11,"clone","","",585,{"inputs":[{"name":"drawcommandnoindices"}],"output":{"name":"drawcommandnoindices"}}],[11,"fmt","","",585,{"inputs":[{"name":"drawcommandnoindices"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"matches","","",585,{"inputs":[{"name":"drawcommandnoindices"},{"name":"blocklayout"},{"name":"usize"}],"output":{"name":"result"}}],[11,"build_layout","","",585,{"inputs":[{"name":"drawcommandnoindices"},{"name":"usize"}],"output":{"name":"blocklayout"}}],[11,"clone","","",586,{"inputs":[{"name":"drawcommandindices"}],"output":{"name":"drawcommandindices"}}],[11,"fmt","","",586,{"inputs":[{"name":"drawcommandindices"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"matches","","",586,{"inputs":[{"name":"drawcommandindices"},{"name":"blocklayout"},{"name":"usize"}],"output":{"name":"result"}}],[11,"build_layout","","",586,{"inputs":[{"name":"drawcommandindices"},{"name":"usize"}],"output":{"name":"blocklayout"}}],[11,"empty","","Builds an empty buffer.",594,{"inputs":[{"name":"drawcommandsnoindicesbuffer"},{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_dynamic","","Builds an empty buffer.",594,{"inputs":[{"name":"drawcommandsnoindicesbuffer"},{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_persistent","","Builds an empty buffer.",594,{"inputs":[{"name":"drawcommandsnoindicesbuffer"},{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_immutable","","Builds an empty buffer.",594,{"inputs":[{"name":"drawcommandsnoindicesbuffer"},{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"with_primitive_type","","Builds an indices source from this buffer and a primitives type. This indices source can\nbe passed to the `draw()` function.",594,{"inputs":[{"name":"drawcommandsnoindicesbuffer"},{"name":"primitivetype"}],"output":{"name":"indicessource"}}],[11,"deref","","",594,{"inputs":[{"name":"drawcommandsnoindicesbuffer"}],"output":{"name":"buffer"}}],[11,"deref_mut","","",594,{"inputs":[{"name":"drawcommandsnoindicesbuffer"}],"output":{"name":"buffer"}}],[11,"from","glium::buffer","",540,{"inputs":[{"name":"bufferslice"},{"name":"drawcommandsnoindicesbuffer"}],"output":{"name":"bufferslice"}}],[11,"from","","",541,{"inputs":[{"name":"buffermutslice"},{"name":"drawcommandsnoindicesbuffer"}],"output":{"name":"buffermutslice"}}],[11,"empty","glium::index","Builds an empty buffer.",595,{"inputs":[{"name":"drawcommandsindicesbuffer"},{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_dynamic","","Builds an empty buffer.",595,{"inputs":[{"name":"drawcommandsindicesbuffer"},{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_persistent","","Builds an empty buffer.",595,{"inputs":[{"name":"drawcommandsindicesbuffer"},{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_immutable","","Builds an empty buffer.",595,{"inputs":[{"name":"drawcommandsindicesbuffer"},{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"with_index_buffer","","Builds an indices source from this buffer and a primitives type. This indices source can\nbe passed to the `draw()` function.",595,{"inputs":[{"name":"drawcommandsindicesbuffer"},{"name":"indexbuffer"}],"output":{"name":"indicessource"}}],[11,"deref","","",595,{"inputs":[{"name":"drawcommandsindicesbuffer"}],"output":{"name":"buffer"}}],[11,"deref_mut","","",595,{"inputs":[{"name":"drawcommandsindicesbuffer"}],"output":{"name":"buffer"}}],[11,"from","glium::buffer","",540,{"inputs":[{"name":"bufferslice"},{"name":"drawcommandsindicesbuffer"}],"output":{"name":"bufferslice"}}],[11,"from","","",541,{"inputs":[{"name":"buffermutslice"},{"name":"drawcommandsindicesbuffer"}],"output":{"name":"buffermutslice"}}],[8,"Index","glium::index","An index from the index buffer.",null,null],[10,"get_type","","Returns the `IndexType` corresponding to this type.",596,{"inputs":[{"name":"index"}],"output":{"name":"indextype"}}],[11,"is_supported","","Returns true if this type of index is supported by the backend.",596,{"inputs":[{"name":"index"},{"name":"c"}],"output":{"name":"bool"}}],[11,"clone","","",588,{"inputs":[{"name":"indicessource"}],"output":{"name":"indicessource"}}],[11,"get_primitives_type","","Returns the type of the primitives.",588,{"inputs":[{"name":"indicessource"}],"output":{"name":"primitivetype"}}],[11,"eq","","",589,{"inputs":[{"name":"primitivetype"},{"name":"primitivetype"}],"output":{"name":"bool"}}],[11,"ne","","",589,{"inputs":[{"name":"primitivetype"},{"name":"primitivetype"}],"output":{"name":"bool"}}],[11,"clone","","",589,{"inputs":[{"name":"primitivetype"}],"output":{"name":"primitivetype"}}],[11,"fmt","","",589,{"inputs":[{"name":"primitivetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_supported","","Returns true if the backend supports this type of primitives.",589,{"inputs":[{"name":"primitivetype"},{"name":"c"}],"output":{"name":"bool"}}],[11,"fmt","","",597,{"inputs":[{"name":"noindices"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",597,{"inputs":[{"name":"noindices"}],"output":{"name":"noindices"}}],[11,"from","","",588,{"inputs":[{"name":"indicessource"},{"name":"noindices"}],"output":{"name":"indicessource"}}],[11,"from","","",588,{"inputs":[{"name":"indicessource"},{"name":"noindices"}],"output":{"name":"indicessource"}}],[11,"eq","","",590,{"inputs":[{"name":"indextype"},{"name":"indextype"}],"output":{"name":"bool"}}],[11,"ne","","",590,{"inputs":[{"name":"indextype"},{"name":"indextype"}],"output":{"name":"bool"}}],[11,"clone","","",590,{"inputs":[{"name":"indextype"}],"output":{"name":"indextype"}}],[11,"fmt","","",590,{"inputs":[{"name":"indextype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_size","","Returns the size in bytes of each index of this type.",590,{"inputs":[{"name":"indextype"}],"output":{"name":"usize"}}],[11,"is_supported","","Returns true if the backend supports this type of index.",590,{"inputs":[{"name":"indextype"},{"name":"c"}],"output":{"name":"bool"}}],[0,"pixel_buffer","glium","DEPRECATED. Moved to the `texture` module.",null,null],[0,"program","","",null,null],[3,"ComputeShader","glium::program","A combination of compute shaders linked together.",null,null],[3,"ComputeCommand","","Represents a compute shader command waiting to be dispatched.",null,null],[12,"num_groups_x","","Number of X groups.",598,null],[12,"num_groups_y","","Number of Y groups.",598,null],[12,"num_groups_z","","Number of Z groups.",598,null],[3,"Program","","A combination of shaders linked together.",null,null],[3,"Uniform","","Information about a uniform (except its name).",null,null],[12,"location","","The location of the uniform.",599,null],[12,"ty","","Type of the uniform.",599,null],[12,"size","","If it is an array, the number of elements.",599,null],[3,"UniformBlock","","Information about a uniform block (except its name).",null,null],[12,"id","","Indentifier of the block.",600,null],[12,"initial_binding","","Initial bind point of the block.",600,null],[12,"size","","Size in bytes of the data in the block.",600,null],[12,"layout","","Layout of the block.",600,null],[3,"Attribute","","Information about an attribute of a program (except its name).",null,null],[12,"location","","The index of the uniform.",601,null],[12,"ty","","Type of the attribute.",601,null],[12,"size","","Number of elements of the attribute.",601,null],[3,"TransformFeedbackVarying","","Describes a varying that is being output with transform feedback.",null,null],[12,"name","","Name of the variable.",602,null],[12,"offset","","Number of bytes between the start of the first element and the start of this one.",602,null],[12,"size","","Size in bytes of this value.",602,null],[12,"ty","","Type of the value.",602,null],[3,"TransformFeedbackBuffer","","Describes the layout of a buffer that can receive transform feedback output.",null,null],[12,"id","","Slot of this buffer.",603,null],[12,"elements","","List of elements inside the buffer.",603,null],[12,"stride","","Size in bytes between two consecutive elements.",603,null],[3,"SubroutineData","","Contains all subroutine data of a program.",null,null],[12,"location_counts","","Number of subroutine uniform locations per shader stage.\nThis is *not* equal to the number of subroutine uniforms per stage,\nbecause users can use `#layout(location=...)`.",604,null],[12,"subroutine_uniforms","","The list of all subroutine uniforms of the program stored in a structured way to enable fast lookups.\nA subroutine uniform is uniquely defined by a name and a shader stage.",604,null],[3,"SubroutineUniform","","Information about a Subroutine Uniform (except name)",null,null],[12,"index","","The index of the subroutine uniform.\nNeeded to query information from the OpenGL backend.",605,null],[12,"location","","The location of the uniform.\nThis is used to bind subroutines to this subroutine uniform.",605,null],[12,"size","","If the uniform is an array, the size of the array.",605,null],[12,"compatible_subroutines","","A list of subroutines that can potentially be used with this uniform.",605,null],[3,"SourceCode","","Represents the source code of a program.",null,null],[12,"vertex_shader","","Source code of the vertex shader.",606,null],[12,"tessellation_control_shader","","Source code of the optional tessellation control shader.",606,null],[12,"tessellation_evaluation_shader","","Source code of the optional tessellation evaluation shader.",606,null],[12,"geometry_shader","","Source code of the optional geometry shader.",606,null],[12,"fragment_shader","","Source code of the fragment shader.",606,null],[3,"Binary","","Represents the compiled binary data of a program.",null,null],[12,"format","","An implementation-defined format.",607,null],[12,"content","","The binary data.",607,null],[4,"BlockLayout","","Layout of a shader storage buffer or a uniform buffer.",null,null],[13,"Struct","","Multiple elements, each having a name.",608,null],[12,"members","glium::program::BlockLayout","The list of elements, with `name`/`layout` pairs.",608,null],[13,"BasicType","glium::program","A basic element.",608,null],[12,"ty","glium::program::BlockLayout","Type of data.",608,null],[12,"offset_in_buffer","","Offset of this element in bytes from the start of the buffer.",608,null],[13,"Array","glium::program","A fixed-size array.",608,null],[12,"content","glium::program::BlockLayout","Type of data of each element.",608,null],[12,"length","","Number of elements in the array.",608,null],[13,"DynamicSizedArray","glium::program","An array whose size isn't known at compile-time. Can only be used as the last element of\na buffer.",608,null],[12,"content","glium::program::BlockLayout","Type of data of each element.",608,null],[4,"OutputPrimitives","glium::program","Type of primitives that is being output by transform feedback.",null,null],[13,"Points","","Points.",609,null],[13,"Lines","","Lines.",609,null],[13,"Triangles","","Triangles.",609,null],[13,"Quads","","Quads.",609,null],[4,"TransformFeedbackMode","","Type of transform feedback. Only used with the legacy interface.",null,null],[13,"Interleaved","","Each value is interleaved in the same buffer.",610,null],[13,"Separate","","Each value will go in a separate buffer.",610,null],[4,"ShaderStage","","The different stages of the program pipeline.",null,null],[13,"Vertex","","",611,null],[13,"Fragment","","",611,null],[13,"TessellationControl","","",611,null],[13,"TessellationEvaluation","","",611,null],[13,"Geometry","","",611,null],[4,"ProgramCreationError","","Error that can be triggered when creating a `Program`.",null,null],[13,"CompilationError","","Error while compiling one of the shaders.",612,null],[13,"LinkingError","","Error while linking the program.",612,null],[13,"ShaderTypeNotSupported","","One of the requested shader types is not supported by the backend.",612,null],[13,"CompilationNotSupported","","The OpenGL implementation doesn't provide a compiler.",612,null],[13,"TransformFeedbackNotSupported","","You have requested transform feedback varyings, but transform feedback is not supported\nby the backend.",612,null],[13,"PointSizeNotSupported","","You have requested point size setting from the shader, but it's not\nsupported by the backend.",612,null],[13,"BinaryHeaderError","","The glium-specific binary header was not found or is corrupt.",612,null],[4,"ProgramChooserCreationError","","Error type that is returned by the `program!` macro.",null,null],[13,"NoVersion","","No available version has been found.",613,null],[13,"ProgramCreationError","","A version has been found but it triggered the given error.",613,null],[4,"GetBinaryError","","Error while retreiving the binary representation of a program.",null,null],[13,"NotSupported","","The backend doesn't support binary.",614,null],[13,"NoFormats","","The backend does not supply any binary formats.",614,null],[4,"ProgramCreationInput","","Input when creating a program.",null,null],[13,"SourceCode","","Use GLSL source code.",615,null],[12,"vertex_shader","glium::program::ProgramCreationInput","Source code of the vertex shader.",615,null],[12,"tessellation_control_shader","","Source code of the optional tessellation control shader.",615,null],[12,"tessellation_evaluation_shader","","Source code of the optional tessellation evaluation shader.",615,null],[12,"geometry_shader","","Source code of the optional geometry shader.",615,null],[12,"fragment_shader","","Source code of the fragment shader.",615,null],[12,"transform_feedback_varyings","","The list of variables and mode to use for transform feedback.",615,null],[12,"outputs_srgb","","Whether the fragment shader outputs colors in `sRGB` or `RGB`. This is false by default,\nmeaning that the program outputs `RGB`.",615,null],[12,"uses_point_size","","Whether the shader uses point size.",615,null],[13,"Binary","glium::program","Use a precompiled binary.",615,null],[12,"data","glium::program::ProgramCreationInput","The data.",615,null],[12,"outputs_srgb","","See `SourceCode::outputs_srgb`.",615,null],[12,"uses_point_size","","Whether the shader uses point size.",615,null],[5,"is_geometry_shader_supported","glium::program","Returns true if the backend supports geometry shaders.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[5,"is_tessellation_shader_supported","","Returns true if the backend supports tessellation shaders.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[5,"is_binary_supported","","Returns true if the backend supports creating and retreiving binary format.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[5,"is_subroutine_supported","","Returns true if the backend supports shader subroutines.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[11,"is_supported","","Returns true if the backend supports compute shaders.",616,{"inputs":[{"name":"computeshader"},{"name":"c"}],"output":{"name":"bool"}}],[11,"from_source","","Builds a new compute shader from some source code.",616,{"inputs":[{"name":"computeshader"},{"name":"f"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_binary","","Builds a new compute shader from some binary.",616,{"inputs":[{"name":"computeshader"},{"name":"f"},{"name":"binary"}],"output":{"name":"result"}}],[11,"execute","","Executes the compute shader.",616,{"inputs":[{"name":"computeshader"},{"name":"u"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"execute_indirect","","Executes the compute shader.",616,{"inputs":[{"name":"computeshader"},{"name":"u"},{"name":"bufferslice"}],"output":null}],[11,"get_binary","","Returns the program's compiled binary.",616,{"inputs":[{"name":"computeshader"}],"output":{"name":"result"}}],[11,"get_uniform","","Returns informations about a uniform variable, if it exists.",616,{"inputs":[{"name":"computeshader"},{"name":"str"}],"output":{"name":"option"}}],[11,"uniforms","","Returns an iterator to the list of uniforms.",616,{"inputs":[{"name":"computeshader"}],"output":{"name":"iter"}}],[11,"get_uniform_blocks","","Returns a list of uniform blocks.",616,{"inputs":[{"name":"computeshader"}],"output":{"name":"hashmap"}}],[11,"get_shader_storage_blocks","","Returns the list of shader storage blocks.",616,{"inputs":[{"name":"computeshader"}],"output":{"name":"hashmap"}}],[11,"fmt","","",616,{"inputs":[{"name":"computeshader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_id","","",616,{"inputs":[{"name":"computeshader"}],"output":{"name":"handle"}}],[11,"clone","","",598,{"inputs":[{"name":"computecommand"}],"output":{"name":"computecommand"}}],[11,"fmt","","",598,{"inputs":[{"name":"computecommand"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"matches","","",598,{"inputs":[{"name":"computecommand"},{"name":"blocklayout"},{"name":"usize"}],"output":{"name":"result"}}],[11,"build_layout","","",598,{"inputs":[{"name":"computecommand"},{"name":"usize"}],"output":{"name":"blocklayout"}}],[11,"new","glium","Builds a new program.",617,{"inputs":[{"name":"program"},{"name":"f"},{"name":"i"}],"output":{"name":"result"}}],[11,"from_source","","Builds a new program from GLSL source code.",617,{"inputs":[{"name":"program"},{"name":"f"},{"name":"str"},{"name":"str"},{"name":"option"}],"output":{"name":"result"}}],[11,"get_binary","","Returns the program's compiled binary.",617,{"inputs":[{"name":"program"}],"output":{"name":"result"}}],[11,"get_frag_data_location","","Returns the *location* of an output fragment, if it exists.",617,{"inputs":[{"name":"program"},{"name":"str"}],"output":{"name":"option"}}],[11,"get_uniform","","Returns informations about a uniform variable, if it exists.",617,{"inputs":[{"name":"program"},{"name":"str"}],"output":{"name":"option"}}],[11,"uniforms","","Returns an iterator to the list of uniforms.",617,{"inputs":[{"name":"program"}],"output":{"name":"iter"}}],[11,"get_uniform_blocks","","Returns a list of uniform blocks.",617,{"inputs":[{"name":"program"}],"output":{"name":"hashmap"}}],[11,"get_transform_feedback_buffers","","Returns the list of transform feedback varyings.",617,null],[11,"transform_feedback_matches","","True if the transform feedback output of this program matches the specified `VertexFormat`\nand `stride`.",617,{"inputs":[{"name":"program"},{"name":"vertexformat"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"get_output_primitives","","Returns the type of geometry that transform feedback would generate, or `None` if it\ndepends on the vertex/index data passed when drawing.",617,{"inputs":[{"name":"program"}],"output":{"name":"option"}}],[11,"has_tessellation_shaders","","Returns true if the program contains a tessellation stage.",617,{"inputs":[{"name":"program"}],"output":{"name":"bool"}}],[11,"has_tessellation_control_shader","","Returns true if the program contains a tessellation control stage.",617,{"inputs":[{"name":"program"}],"output":{"name":"bool"}}],[11,"has_tessellation_evaluation_shader","","Returns true if the program contains a tessellation evaluation stage.",617,{"inputs":[{"name":"program"}],"output":{"name":"bool"}}],[11,"has_geometry_shader","","Returns true if the program contains a geometry shader.",617,{"inputs":[{"name":"program"}],"output":{"name":"bool"}}],[11,"get_attribute","","Returns informations about an attribute, if it exists.",617,{"inputs":[{"name":"program"},{"name":"str"}],"output":{"name":"option"}}],[11,"attributes","","Returns an iterator to the list of attributes.",617,{"inputs":[{"name":"program"}],"output":{"name":"iter"}}],[11,"has_srgb_output","","Returns true if the program has been configured to output sRGB instead of RGB.",617,{"inputs":[{"name":"program"}],"output":{"name":"bool"}}],[11,"get_shader_storage_blocks","","Returns the list of shader storage blocks.",617,{"inputs":[{"name":"program"}],"output":{"name":"hashmap"}}],[11,"get_subroutine_uniforms","","Returns the subroutine uniforms of this program.",617,{"inputs":[{"name":"program"}],"output":{"name":"hashmap"}}],[11,"uses_point_size","","Returns true if the program has been configured to use the `gl_PointSize` variable.",617,{"inputs":[{"name":"program"}],"output":{"name":"bool"}}],[11,"fmt","","",617,{"inputs":[{"name":"program"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_id","","",617,{"inputs":[{"name":"program"}],"output":{"name":"handle"}}],[11,"clone","glium::program","",599,{"inputs":[{"name":"uniform"}],"output":{"name":"uniform"}}],[11,"fmt","","",599,{"inputs":[{"name":"uniform"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",600,{"inputs":[{"name":"uniformblock"}],"output":{"name":"uniformblock"}}],[11,"fmt","","",600,{"inputs":[{"name":"uniformblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",608,{"inputs":[{"name":"blocklayout"},{"name":"blocklayout"}],"output":{"name":"bool"}}],[11,"ne","","",608,{"inputs":[{"name":"blocklayout"},{"name":"blocklayout"}],"output":{"name":"bool"}}],[11,"clone","","",608,{"inputs":[{"name":"blocklayout"}],"output":{"name":"blocklayout"}}],[11,"fmt","","",608,{"inputs":[{"name":"blocklayout"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",601,{"inputs":[{"name":"attribute"}],"output":{"name":"attribute"}}],[11,"fmt","","",601,{"inputs":[{"name":"attribute"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",603,{"inputs":[{"name":"transformfeedbackbuffer"},{"name":"transformfeedbackbuffer"}],"output":{"name":"bool"}}],[11,"ne","","",603,{"inputs":[{"name":"transformfeedbackbuffer"},{"name":"transformfeedbackbuffer"}],"output":{"name":"bool"}}],[11,"clone","","",603,{"inputs":[{"name":"transformfeedbackbuffer"}],"output":{"name":"transformfeedbackbuffer"}}],[11,"fmt","","",603,{"inputs":[{"name":"transformfeedbackbuffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",602,{"inputs":[{"name":"transformfeedbackvarying"},{"name":"transformfeedbackvarying"}],"output":{"name":"bool"}}],[11,"ne","","",602,{"inputs":[{"name":"transformfeedbackvarying"},{"name":"transformfeedbackvarying"}],"output":{"name":"bool"}}],[11,"clone","","",602,{"inputs":[{"name":"transformfeedbackvarying"}],"output":{"name":"transformfeedbackvarying"}}],[11,"fmt","","",602,{"inputs":[{"name":"transformfeedbackvarying"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",610,{"inputs":[{"name":"transformfeedbackmode"},{"name":"transformfeedbackmode"}],"output":{"name":"bool"}}],[11,"ne","","",610,{"inputs":[{"name":"transformfeedbackmode"},{"name":"transformfeedbackmode"}],"output":{"name":"bool"}}],[11,"clone","","",610,{"inputs":[{"name":"transformfeedbackmode"}],"output":{"name":"transformfeedbackmode"}}],[11,"fmt","","",610,{"inputs":[{"name":"transformfeedbackmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",609,{"inputs":[{"name":"outputprimitives"},{"name":"outputprimitives"}],"output":{"name":"bool"}}],[11,"ne","","",609,{"inputs":[{"name":"outputprimitives"},{"name":"outputprimitives"}],"output":{"name":"bool"}}],[11,"clone","","",609,{"inputs":[{"name":"outputprimitives"}],"output":{"name":"outputprimitives"}}],[11,"fmt","","",609,{"inputs":[{"name":"outputprimitives"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",604,{"inputs":[{"name":"subroutinedata"}],"output":{"name":"subroutinedata"}}],[11,"fmt","","",604,{"inputs":[{"name":"subroutinedata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",605,{"inputs":[{"name":"subroutineuniform"}],"output":{"name":"subroutineuniform"}}],[11,"fmt","","",605,{"inputs":[{"name":"subroutineuniform"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",611,null],[11,"eq","","",611,{"inputs":[{"name":"shaderstage"},{"name":"shaderstage"}],"output":{"name":"bool"}}],[11,"ne","","",611,{"inputs":[{"name":"shaderstage"},{"name":"shaderstage"}],"output":{"name":"bool"}}],[11,"clone","","",611,{"inputs":[{"name":"shaderstage"}],"output":{"name":"shaderstage"}}],[11,"fmt","","",611,{"inputs":[{"name":"shaderstage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_gl_enum","","Converts the `ShaderStage` to its GLenum equivalent",611,{"inputs":[{"name":"shaderstage"}],"output":{"name":"glenum"}}],[11,"fmt","","",612,{"inputs":[{"name":"programcreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",612,{"inputs":[{"name":"programcreationerror"}],"output":{"name":"programcreationerror"}}],[11,"fmt","","",612,{"inputs":[{"name":"programcreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",612,{"inputs":[{"name":"programcreationerror"}],"output":{"name":"str"}}],[11,"fmt","","",613,{"inputs":[{"name":"programchoosercreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",613,{"inputs":[{"name":"programchoosercreationerror"}],"output":{"name":"programchoosercreationerror"}}],[11,"fmt","","",613,{"inputs":[{"name":"programchoosercreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",613,{"inputs":[{"name":"programchoosercreationerror"}],"output":{"name":"str"}}],[11,"cause","","",613,{"inputs":[{"name":"programchoosercreationerror"}],"output":{"name":"option"}}],[11,"from","","",613,{"inputs":[{"name":"programchoosercreationerror"},{"name":"programcreationerror"}],"output":{"name":"programchoosercreationerror"}}],[11,"fmt","","",614,{"inputs":[{"name":"getbinaryerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",614,{"inputs":[{"name":"getbinaryerror"}],"output":{"name":"getbinaryerror"}}],[11,"fmt","","",614,{"inputs":[{"name":"getbinaryerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",614,{"inputs":[{"name":"getbinaryerror"}],"output":{"name":"str"}}],[11,"from","","",615,{"inputs":[{"name":"programcreationinput"},{"name":"sourcecode"}],"output":{"name":"programcreationinput"}}],[11,"from","","",615,{"inputs":[{"name":"programcreationinput"},{"name":"binary"}],"output":{"name":"programcreationinput"}}],[0,"uniforms","glium","A uniform is a global variable in your program. In order to draw something, you will need to\ngive `glium` the values of all your uniforms. Objects that implement the `Uniform` trait are\nhere to do that.",null,null],[3,"UniformBuffer","glium::uniforms","Buffer that contains a uniform block.",null,null],[3,"Sampler","","A sampler.",null,null],[3,"SamplerBehavior","","Behavior of a sampler.",null,null],[12,"wrap_function","","Functions to use for the X, Y, and Z coordinates.",618,null],[12,"minify_filter","","Filter to use when minifying the texture.",618,null],[12,"magnify_filter","","Filter to use when magnifying the texture.",618,null],[12,"max_anisotropy","","`1` means no anisotropic filtering, any value above `1` sets the max anisotropy.",618,null],[3,"EmptyUniforms","","Object that can be used when you don't have any uniforms.",null,null],[3,"UniformsStorage","","Stores uniforms.",null,null],[4,"SamplerWrapFunction","","Function to use for out-of-bounds samples.",null,null],[13,"Repeat","","Samples at coord `x + 1` map to coord `x`.",619,null],[13,"Mirror","","Samples at coord `x + 1` map to coord `1 - x`.",619,null],[13,"Clamp","","Samples at coord `x + 1` map to coord `1`.",619,null],[13,"MirrorClamp","","Same as Mirror, but only for one repetition,",619,null],[4,"MagnifySamplerFilter","","The function that the GPU will use when loading the value of a texel.",null,null],[13,"Nearest","","The nearest texel will be loaded.",620,null],[13,"Linear","","All nearby texels will be loaded and their values will be merged.",620,null],[4,"MinifySamplerFilter","","The function that the GPU will use when loading the value of a texel.",null,null],[13,"Nearest","","The nearest texel will be loaded.",621,null],[13,"Linear","","All nearby texels will be loaded and their values will be merged.",621,null],[13,"NearestMipmapNearest","","The nearest texel of the nearest mipmap will be loaded.",621,null],[13,"LinearMipmapNearest","","Takes the nearest texel from the two nearest mipmaps, and merges them.",621,null],[13,"NearestMipmapLinear","","Same as `Linear`, but from the nearest mipmap.",621,null],[13,"LinearMipmapLinear","","Same as `Linear`, but from the two nearest mipmaps.",621,null],[4,"UniformValue","","Represents a value to bind to a uniform.",null,null],[13,"Block","","Contains a handle to the buffer, and a function that indicates whether this buffer\ncan be binded on a block with the given layout.\nThe last parameter is a sender which must be used to send a `SyncFence` that expires when\nthe buffer has finished being used.",622,null],[13,"Subroutine","","",622,null],[13,"SignedInt","","",622,null],[13,"UnsignedInt","","",622,null],[13,"Float","","",622,null],[13,"Mat2","","2x2 column-major matrix.",622,null],[13,"Mat3","","3x3 column-major matrix.",622,null],[13,"Mat4","","4x4 column-major matrix.",622,null],[13,"Vec2","","",622,null],[13,"Vec3","","",622,null],[13,"Vec4","","",622,null],[13,"IntVec2","","",622,null],[13,"IntVec3","","",622,null],[13,"IntVec4","","",622,null],[13,"UnsignedIntVec2","","",622,null],[13,"UnsignedIntVec3","","",622,null],[13,"UnsignedIntVec4","","",622,null],[13,"Bool","","",622,null],[13,"BoolVec2","","",622,null],[13,"BoolVec3","","",622,null],[13,"BoolVec4","","",622,null],[13,"Double","","",622,null],[13,"DoubleVec2","","",622,null],[13,"DoubleVec3","","",622,null],[13,"DoubleVec4","","",622,null],[13,"DoubleMat2","","",622,null],[13,"DoubleMat3","","",622,null],[13,"DoubleMat4","","",622,null],[13,"Int64","","",622,null],[13,"Int64Vec2","","",622,null],[13,"Int64Vec3","","",622,null],[13,"Int64Vec4","","",622,null],[13,"UnsignedInt64","","",622,null],[13,"UnsignedInt64Vec2","","",622,null],[13,"UnsignedInt64Vec3","","",622,null],[13,"UnsignedInt64Vec4","","",622,null],[13,"Texture1d","","",622,null],[13,"CompressedTexture1d","","",622,null],[13,"SrgbTexture1d","","",622,null],[13,"CompressedSrgbTexture1d","","",622,null],[13,"IntegralTexture1d","","",622,null],[13,"UnsignedTexture1d","","",622,null],[13,"DepthTexture1d","","",622,null],[13,"Texture2d","","",622,null],[13,"CompressedTexture2d","","",622,null],[13,"SrgbTexture2d","","",622,null],[13,"CompressedSrgbTexture2d","","",622,null],[13,"IntegralTexture2d","","",622,null],[13,"UnsignedTexture2d","","",622,null],[13,"DepthTexture2d","","",622,null],[13,"Texture2dMultisample","","",622,null],[13,"SrgbTexture2dMultisample","","",622,null],[13,"IntegralTexture2dMultisample","","",622,null],[13,"UnsignedTexture2dMultisample","","",622,null],[13,"DepthTexture2dMultisample","","",622,null],[13,"Texture3d","","",622,null],[13,"CompressedTexture3d","","",622,null],[13,"SrgbTexture3d","","",622,null],[13,"CompressedSrgbTexture3d","","",622,null],[13,"IntegralTexture3d","","",622,null],[13,"UnsignedTexture3d","","",622,null],[13,"DepthTexture3d","","",622,null],[13,"Texture1dArray","","",622,null],[13,"CompressedTexture1dArray","","",622,null],[13,"SrgbTexture1dArray","","",622,null],[13,"CompressedSrgbTexture1dArray","","",622,null],[13,"IntegralTexture1dArray","","",622,null],[13,"UnsignedTexture1dArray","","",622,null],[13,"DepthTexture1dArray","","",622,null],[13,"Texture2dArray","","",622,null],[13,"CompressedTexture2dArray","","",622,null],[13,"SrgbTexture2dArray","","",622,null],[13,"CompressedSrgbTexture2dArray","","",622,null],[13,"IntegralTexture2dArray","","",622,null],[13,"UnsignedTexture2dArray","","",622,null],[13,"DepthTexture2dArray","","",622,null],[13,"Texture2dMultisampleArray","","",622,null],[13,"SrgbTexture2dMultisampleArray","","",622,null],[13,"IntegralTexture2dMultisampleArray","","",622,null],[13,"UnsignedTexture2dMultisampleArray","","",622,null],[13,"DepthTexture2dMultisampleArray","","",622,null],[13,"Cubemap","","",622,null],[13,"CompressedCubemap","","",622,null],[13,"SrgbCubemap","","",622,null],[13,"CompressedSrgbCubemap","","",622,null],[13,"IntegralCubemap","","",622,null],[13,"UnsignedCubemap","","",622,null],[13,"DepthCubemap","","",622,null],[13,"CubemapArray","","",622,null],[13,"CompressedCubemapArray","","",622,null],[13,"SrgbCubemapArray","","",622,null],[13,"CompressedSrgbCubemapArray","","",622,null],[13,"IntegralCubemapArray","","",622,null],[13,"UnsignedCubemapArray","","",622,null],[13,"DepthCubemapArray","","",622,null],[13,"BufferTexture","","",622,null],[4,"UniformType","","Type of a uniform in a program.",null,null],[13,"Float","","",623,null],[13,"FloatVec2","","",623,null],[13,"FloatVec3","","",623,null],[13,"FloatVec4","","",623,null],[13,"Double","","",623,null],[13,"DoubleVec2","","",623,null],[13,"DoubleVec3","","",623,null],[13,"DoubleVec4","","",623,null],[13,"Int","","",623,null],[13,"IntVec2","","",623,null],[13,"IntVec3","","",623,null],[13,"IntVec4","","",623,null],[13,"UnsignedInt","","",623,null],[13,"UnsignedIntVec2","","",623,null],[13,"UnsignedIntVec3","","",623,null],[13,"UnsignedIntVec4","","",623,null],[13,"Int64","","",623,null],[13,"Int64Vec2","","",623,null],[13,"Int64Vec3","","",623,null],[13,"Int64Vec4","","",623,null],[13,"UnsignedInt64","","",623,null],[13,"UnsignedInt64Vec2","","",623,null],[13,"UnsignedInt64Vec3","","",623,null],[13,"UnsignedInt64Vec4","","",623,null],[13,"Bool","","",623,null],[13,"BoolVec2","","",623,null],[13,"BoolVec3","","",623,null],[13,"BoolVec4","","",623,null],[13,"FloatMat2","","",623,null],[13,"FloatMat3","","",623,null],[13,"FloatMat4","","",623,null],[13,"FloatMat2x3","","",623,null],[13,"FloatMat2x4","","",623,null],[13,"FloatMat3x2","","",623,null],[13,"FloatMat3x4","","",623,null],[13,"FloatMat4x2","","",623,null],[13,"FloatMat4x3","","",623,null],[13,"DoubleMat2","","",623,null],[13,"DoubleMat3","","",623,null],[13,"DoubleMat4","","",623,null],[13,"DoubleMat2x3","","",623,null],[13,"DoubleMat2x4","","",623,null],[13,"DoubleMat3x2","","",623,null],[13,"DoubleMat3x4","","",623,null],[13,"DoubleMat4x2","","",623,null],[13,"DoubleMat4x3","","",623,null],[13,"Sampler1d","","",623,null],[13,"ISampler1d","","",623,null],[13,"USampler1d","","",623,null],[13,"Sampler2d","","",623,null],[13,"ISampler2d","","",623,null],[13,"USampler2d","","",623,null],[13,"Sampler3d","","",623,null],[13,"ISampler3d","","",623,null],[13,"USampler3d","","",623,null],[13,"Sampler1dArray","","",623,null],[13,"ISampler1dArray","","",623,null],[13,"USampler1dArray","","",623,null],[13,"Sampler2dArray","","",623,null],[13,"ISampler2dArray","","",623,null],[13,"USampler2dArray","","",623,null],[13,"SamplerCube","","",623,null],[13,"ISamplerCube","","",623,null],[13,"USamplerCube","","",623,null],[13,"Sampler2dRect","","",623,null],[13,"ISampler2dRect","","",623,null],[13,"USampler2dRect","","",623,null],[13,"Sampler2dRectShadow","","",623,null],[13,"SamplerCubeArray","","",623,null],[13,"ISamplerCubeArray","","",623,null],[13,"USamplerCubeArray","","",623,null],[13,"SamplerBuffer","","",623,null],[13,"ISamplerBuffer","","",623,null],[13,"USamplerBuffer","","",623,null],[13,"Sampler2dMultisample","","",623,null],[13,"ISampler2dMultisample","","",623,null],[13,"USampler2dMultisample","","",623,null],[13,"Sampler2dMultisampleArray","","",623,null],[13,"ISampler2dMultisampleArray","","",623,null],[13,"USampler2dMultisampleArray","","",623,null],[13,"Sampler1dShadow","","",623,null],[13,"Sampler2dShadow","","",623,null],[13,"SamplerCubeShadow","","",623,null],[13,"Sampler1dArrayShadow","","",623,null],[13,"Sampler2dArrayShadow","","",623,null],[13,"SamplerCubeArrayShadow","","",623,null],[13,"Image1d","","",623,null],[13,"IImage1d","","",623,null],[13,"UImage1d","","",623,null],[13,"Image2d","","",623,null],[13,"IImage2d","","",623,null],[13,"UImage2d","","",623,null],[13,"Image3d","","",623,null],[13,"IImage3d","","",623,null],[13,"UImage3d","","",623,null],[13,"Image2dRect","","",623,null],[13,"IImage2dRect","","",623,null],[13,"UImage2dRect","","",623,null],[13,"ImageCube","","",623,null],[13,"IImageCube","","",623,null],[13,"UImageCube","","",623,null],[13,"ImageBuffer","","",623,null],[13,"IImageBuffer","","",623,null],[13,"UImageBuffer","","",623,null],[13,"Image1dArray","","",623,null],[13,"IImage1dArray","","",623,null],[13,"UImage1dArray","","",623,null],[13,"Image2dArray","","",623,null],[13,"IImage2dArray","","",623,null],[13,"UImage2dArray","","",623,null],[13,"Image2dMultisample","","",623,null],[13,"IImage2dMultisample","","",623,null],[13,"UImage2dMultisample","","",623,null],[13,"Image2dMultisampleArray","","",623,null],[13,"IImage2dMultisampleArray","","",623,null],[13,"UImage2dMultisampleArray","","",623,null],[13,"AtomicCounterUint","","",623,null],[4,"LayoutMismatchError","","Error about a block layout mismatch.",null,null],[13,"TypeMismatch","","There is a mismatch in the type of one element.",624,null],[12,"expected","glium::uniforms::LayoutMismatchError","Type expected by the shader.",624,null],[12,"obtained","","Type that you gave.",624,null],[13,"LayoutMismatch","glium::uniforms","The expected layout is totally different from what we have.",624,null],[12,"expected","glium::uniforms::LayoutMismatchError","Layout expected by the shader.",624,null],[12,"obtained","","Layout of the input.",624,null],[13,"OffsetMismatch","glium::uniforms","The type of data is good, but there is a misalignment.",624,null],[12,"expected","glium::uniforms::LayoutMismatchError","Expected offset of a member.",624,null],[12,"obtained","","Offset of the same member in the input.",624,null],[13,"MemberMismatch","glium::uniforms","There is a mismatch in a submember of this layout.",624,null],[12,"member","glium::uniforms::LayoutMismatchError","Name of the field.",624,null],[12,"err","","The sub-error.",624,null],[13,"MissingField","glium::uniforms","A field is missing in either the expected of the input data layout.",624,null],[12,"name","glium::uniforms::LayoutMismatchError","Name of the field.",624,null],[11,"fmt","glium::uniforms","",625,{"inputs":[{"name":"uniformbuffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Uploads data in the uniforms buffer.",625,{"inputs":[{"name":"uniformbuffer"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"dynamic","","Uploads data in the uniforms buffer.",625,{"inputs":[{"name":"uniformbuffer"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"persistent","","Uploads data in the uniforms buffer.",625,{"inputs":[{"name":"uniformbuffer"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"immutable","","Uploads data in the uniforms buffer.",625,{"inputs":[{"name":"uniformbuffer"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty buffer.",625,{"inputs":[{"name":"uniformbuffer"},{"name":"f"}],"output":{"name":"result"}}],[11,"empty_dynamic","","Creates an empty buffer.",625,{"inputs":[{"name":"uniformbuffer"},{"name":"f"}],"output":{"name":"result"}}],[11,"empty_persistent","","Creates an empty buffer.",625,{"inputs":[{"name":"uniformbuffer"},{"name":"f"}],"output":{"name":"result"}}],[11,"empty_immutable","","Creates an empty buffer.",625,{"inputs":[{"name":"uniformbuffer"},{"name":"f"}],"output":{"name":"result"}}],[11,"empty_unsized","","Creates an empty buffer.",625,{"inputs":[{"name":"uniformbuffer"},{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_unsized_dynamic","","Creates an empty buffer.",625,{"inputs":[{"name":"uniformbuffer"},{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_unsized_persistent","","Creates an empty buffer.",625,{"inputs":[{"name":"uniformbuffer"},{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_unsized_immutable","","Creates an empty buffer.",625,{"inputs":[{"name":"uniformbuffer"},{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"deref","","",625,{"inputs":[{"name":"uniformbuffer"}],"output":{"name":"buffer"}}],[11,"deref_mut","","",625,{"inputs":[{"name":"uniformbuffer"}],"output":{"name":"buffer"}}],[11,"from","glium::buffer","",540,{"inputs":[{"name":"bufferslice"},{"name":"uniformbuffer"}],"output":{"name":"bufferslice"}}],[11,"from","","",541,{"inputs":[{"name":"buffermutslice"},{"name":"uniformbuffer"}],"output":{"name":"buffermutslice"}}],[11,"eq","glium::uniforms","",619,{"inputs":[{"name":"samplerwrapfunction"},{"name":"samplerwrapfunction"}],"output":{"name":"bool"}}],[11,"ne","","",619,{"inputs":[{"name":"samplerwrapfunction"},{"name":"samplerwrapfunction"}],"output":{"name":"bool"}}],[11,"hash","","",619,null],[11,"clone","","",619,{"inputs":[{"name":"samplerwrapfunction"}],"output":{"name":"samplerwrapfunction"}}],[11,"fmt","","",619,{"inputs":[{"name":"samplerwrapfunction"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",620,{"inputs":[{"name":"magnifysamplerfilter"},{"name":"magnifysamplerfilter"}],"output":{"name":"bool"}}],[11,"ne","","",620,{"inputs":[{"name":"magnifysamplerfilter"},{"name":"magnifysamplerfilter"}],"output":{"name":"bool"}}],[11,"hash","","",620,null],[11,"clone","","",620,{"inputs":[{"name":"magnifysamplerfilter"}],"output":{"name":"magnifysamplerfilter"}}],[11,"fmt","","",620,{"inputs":[{"name":"magnifysamplerfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",621,{"inputs":[{"name":"minifysamplerfilter"},{"name":"minifysamplerfilter"}],"output":{"name":"bool"}}],[11,"ne","","",621,{"inputs":[{"name":"minifysamplerfilter"},{"name":"minifysamplerfilter"}],"output":{"name":"bool"}}],[11,"hash","","",621,null],[11,"clone","","",621,{"inputs":[{"name":"minifysamplerfilter"}],"output":{"name":"minifysamplerfilter"}}],[11,"fmt","","",621,{"inputs":[{"name":"minifysamplerfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",626,{"inputs":[{"name":"sampler"},{"name":"sampler"}],"output":{"name":"bool"}}],[11,"ne","","",626,{"inputs":[{"name":"sampler"},{"name":"sampler"}],"output":{"name":"bool"}}],[11,"hash","","",626,null],[11,"fmt","","",626,{"inputs":[{"name":"sampler"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Builds a new `Sampler` with default parameters.",626,{"inputs":[{"name":"sampler"},{"name":"t"}],"output":{"name":"sampler"}}],[11,"wrap_function","","Changes the wrap functions of all three coordinates.",626,{"inputs":[{"name":"sampler"},{"name":"samplerwrapfunction"}],"output":{"name":"sampler"}}],[11,"minify_filter","","Changes the minifying filter of the sampler.",626,{"inputs":[{"name":"sampler"},{"name":"minifysamplerfilter"}],"output":{"name":"sampler"}}],[11,"magnify_filter","","Changes the magnifying filter of the sampler.",626,{"inputs":[{"name":"sampler"},{"name":"magnifysamplerfilter"}],"output":{"name":"sampler"}}],[11,"anisotropy","","Changes the magnifying filter of the sampler.",626,{"inputs":[{"name":"sampler"},{"name":"u16"}],"output":{"name":"sampler"}}],[11,"clone","","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"self"}}],[11,"eq","","",618,{"inputs":[{"name":"samplerbehavior"},{"name":"samplerbehavior"}],"output":{"name":"bool"}}],[11,"ne","","",618,{"inputs":[{"name":"samplerbehavior"},{"name":"samplerbehavior"}],"output":{"name":"bool"}}],[11,"hash","","",618,null],[11,"clone","","",618,{"inputs":[{"name":"samplerbehavior"}],"output":{"name":"samplerbehavior"}}],[11,"fmt","","",618,{"inputs":[{"name":"samplerbehavior"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",618,{"inputs":[{"name":"samplerbehavior"}],"output":{"name":"samplerbehavior"}}],[11,"clone","","",627,{"inputs":[{"name":"emptyuniforms"}],"output":{"name":"emptyuniforms"}}],[11,"fmt","","",627,{"inputs":[{"name":"emptyuniforms"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"visit_values","","",627,{"inputs":[{"name":"emptyuniforms"},{"name":"f"}],"output":null}],[11,"new","","Builds a new storage with a value.",628,{"inputs":[{"name":"uniformsstorage"},{"name":"str"},{"name":"t"}],"output":{"name":"uniformsstorage"}}],[11,"add","","Adds a value to the storage.",628,{"inputs":[{"name":"uniformsstorage"},{"name":"str"},{"name":"u"}],"output":{"name":"uniformsstorage"}}],[11,"visit_values","","",628,{"inputs":[{"name":"uniformsstorage"},{"name":"f"}],"output":null}],[11,"eq","","",623,{"inputs":[{"name":"uniformtype"},{"name":"uniformtype"}],"output":{"name":"bool"}}],[11,"ne","","",623,{"inputs":[{"name":"uniformtype"},{"name":"uniformtype"}],"output":{"name":"bool"}}],[11,"fmt","","",623,{"inputs":[{"name":"uniformtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",623,{"inputs":[{"name":"uniformtype"}],"output":{"name":"uniformtype"}}],[11,"clone","","",622,{"inputs":[{"name":"uniformvalue"}],"output":{"name":"uniformvalue"}}],[11,"is_usable_with","","Returns true if this value can be used with a uniform of the given type.",622,{"inputs":[{"name":"uniformvalue"},{"name":"uniformtype"}],"output":{"name":"bool"}}],[8,"Uniforms","","Object that contains the values of all the uniforms to bind to a program.",null,null],[10,"visit_values","","Calls the parameter once with the name and value of each uniform.",629,{"inputs":[{"name":"uniforms"},{"name":"f"}],"output":null}],[8,"AsUniformValue","","Value that can be used as the value of a uniform.",null,null],[10,"as_uniform_value","","Builds a `UniformValue`.",630,{"inputs":[{"name":"asuniformvalue"}],"output":{"name":"uniformvalue"}}],[8,"UniformBlock","","Objects that are suitable for being inside a uniform block or a SSBO.",null,null],[10,"matches","","Checks whether the uniforms' layout matches the given block if `Self` starts at\nthe given offset.",631,{"inputs":[{"name":"uniformblock"},{"name":"blocklayout"},{"name":"usize"}],"output":{"name":"result"}}],[10,"build_layout","","Builds the `BlockLayout` corresponding to the current object.",631,{"inputs":[{"name":"uniformblock"},{"name":"usize"}],"output":{"name":"blocklayout"}}],[11,"fmt","","",624,{"inputs":[{"name":"layoutmismatcherror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",624,{"inputs":[{"name":"layoutmismatcherror"}],"output":{"name":"layoutmismatcherror"}}],[11,"description","","",624,{"inputs":[{"name":"layoutmismatcherror"}],"output":{"name":"str"}}],[11,"cause","","",624,{"inputs":[{"name":"layoutmismatcherror"}],"output":{"name":"option"}}],[11,"fmt","","",624,{"inputs":[{"name":"layoutmismatcherror"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"vertex","glium","Contains everything related to vertex sources.",null,null],[3,"VertexBuffer","glium::vertex","A list of vertices loaded in the graphics card's memory.",null,null],[3,"VertexBufferAny","","A list of vertices loaded in the graphics card's memory.",null,null],[3,"VertexBufferSlice","","Represents a slice of a `VertexBuffer`.",null,null],[3,"TransformFeedbackSession","","Transform feedback allows you to obtain in a buffer the list of the vertices generated by\nthe vertex shader, geometry shader, or tessellation evaluation shader of your program. This\nis usually used to cache the result in order to draw the vertices multiple times with multiple\ndifferent fragment shaders.",null,null],[3,"EmptyVertexAttributes","","Marker that can be passed instead of a buffer to indicate an empty list of buffers.",null,null],[12,"len","","Number of phantom vertices.",632,null],[3,"EmptyInstanceAttributes","","Marker that can be passed instead of a buffer to indicate an empty list of buffers.",null,null],[12,"len","","Number of phantom vertices.",633,null],[3,"PerInstance","","Marker that instructs glium that the buffer is to be used per instance.",null,null],[4,"BufferCreationError","","Error that can happen when creating a vertex buffer.",null,null],[13,"FormatNotSupported","","The vertex format is not supported by the backend.",634,null],[13,"BufferCreationError","","Error while creating the vertex buffer.",634,null],[4,"AttributeType","","",null,null],[13,"I8","","",635,null],[13,"I8I8","","",635,null],[13,"I8I8I8","","",635,null],[13,"I8I8I8I8","","",635,null],[13,"U8","","",635,null],[13,"U8U8","","",635,null],[13,"U8U8U8","","",635,null],[13,"U8U8U8U8","","",635,null],[13,"I16","","",635,null],[13,"I16I16","","",635,null],[13,"I16I16I16","","",635,null],[13,"I16I16I16I16","","",635,null],[13,"U16","","",635,null],[13,"U16U16","","",635,null],[13,"U16U16U16","","",635,null],[13,"U16U16U16U16","","",635,null],[13,"I32","","",635,null],[13,"I32I32","","",635,null],[13,"I32I32I32","","",635,null],[13,"I32I32I32I32","","",635,null],[13,"U32","","",635,null],[13,"U32U32","","",635,null],[13,"U32U32U32","","",635,null],[13,"U32U32U32U32","","",635,null],[13,"I64","","",635,null],[13,"I64I64","","",635,null],[13,"I64I64I64","","",635,null],[13,"I64I64I64I64","","",635,null],[13,"U64","","",635,null],[13,"U64U64","","",635,null],[13,"U64U64U64","","",635,null],[13,"U64U64U64U64","","",635,null],[13,"F16","","",635,null],[13,"F16F16","","",635,null],[13,"F16F16F16","","",635,null],[13,"F16F16F16F16","","",635,null],[13,"F16x2x2","","2x2 matrix of `f16`s",635,null],[13,"F16x2x3","","2x3 matrix of `f16`s",635,null],[13,"F16x2x4","","2x3 matrix of `f16`s",635,null],[13,"F16x3x2","","3x2 matrix of `f16`s",635,null],[13,"F16x3x3","","3x3 matrix of `f16`s",635,null],[13,"F16x3x4","","3x4 matrix of `f16`s",635,null],[13,"F16x4x2","","4x2 matrix of `f16`s",635,null],[13,"F16x4x3","","4x3 matrix of `f16`s",635,null],[13,"F16x4x4","","4x4 matrix of `f16`s",635,null],[13,"F32","","",635,null],[13,"F32F32","","",635,null],[13,"F32F32F32","","",635,null],[13,"F32F32F32F32","","",635,null],[13,"F32x2x2","","2x2 matrix of `f32`s",635,null],[13,"F32x2x3","","2x3 matrix of `f32`s",635,null],[13,"F32x2x4","","2x3 matrix of `f32`s",635,null],[13,"F32x3x2","","3x2 matrix of `f32`s",635,null],[13,"F32x3x3","","3x3 matrix of `f32`s",635,null],[13,"F32x3x4","","3x4 matrix of `f32`s",635,null],[13,"F32x4x2","","4x2 matrix of `f32`s",635,null],[13,"F32x4x3","","4x3 matrix of `f32`s",635,null],[13,"F32x4x4","","4x4 matrix of `f32`s",635,null],[13,"F64","","Warning: using `f64`s can be very slow.",635,null],[13,"F64F64","","Warning: using `f64`s can be very slow.",635,null],[13,"F64F64F64","","Warning: using `f64`s can be very slow.",635,null],[13,"F64F64F64F64","","Warning: using `f64`s can be very slow.",635,null],[13,"F64x2x2","","2x2 matrix of `f64`s\nWarning: using `f64`s can be very slow.",635,null],[13,"F64x2x3","","2x3 matrix of `f64`s\nWarning: using `f64`s can be very slow.",635,null],[13,"F64x2x4","","2x3 matrix of `f64`s\nWarning: using `f64`s can be very slow.",635,null],[13,"F64x3x2","","3x2 matrix of `f64`s\nWarning: using `f64`s can be very slow.",635,null],[13,"F64x3x3","","3x3 matrix of `f64`s\nWarning: using `f64`s can be very slow.",635,null],[13,"F64x3x4","","3x4 matrix of `f64`s\nWarning: using `f64`s can be very slow.",635,null],[13,"F64x4x2","","4x2 matrix of `f64`s\nWarning: using `f64`s can be very slow.",635,null],[13,"F64x4x3","","4x3 matrix of `f64`s\nWarning: using `f64`s can be very slow.",635,null],[13,"F64x4x4","","4x4 matrix of `f64`s\nWarning: using `f64`s can be very slow.",635,null],[13,"I2I10I10I10Reversed","","From MSB to LSB: two bits for the alpha, ten bits for the blue, ten bits for the green,\nten bits for the red.",635,null],[13,"U2U10U10U10Reversed","","From MSB to LSB: two bits for the alpha, ten bits for the blue, ten bits for the green,\nten bits for the red.",635,null],[13,"I10I10I10I2","","Corresponds to `GL_INT_10_10_10_2`.",635,null],[13,"U10U10U10U2","","Corresponds to `GL_UNSIGNED_INT_10_10_10_2`.",635,null],[13,"F10F11F11UnsignedIntReversed","","Three floating points values turned into unsigned integers./",635,null],[13,"FixedFloatI16U16","","Fixed floating points. A 16bits signed value followed by the 16bits unsigned exponent.",635,null],[4,"VerticesSource","","Describes the source to use for the vertices when drawing.",null,null],[13,"VertexBuffer","","A buffer uploaded in the video memory.",636,null],[13,"Marker","","A marker indicating a \"phantom list of attributes\".",636,null],[12,"len","glium::vertex::VerticesSource","Number of attributes.",636,null],[12,"per_instance","","Whether or not this buffer is \"per instance\" (true) or \"per vertex\" (false).",636,null],[5,"is_transform_feedback_supported","glium::vertex","Returns true if transform feedback is supported by the OpenGL implementation.",null,{"inputs":[{"name":"f"}],"output":{"name":"bool"}}],[11,"fmt","","",634,{"inputs":[{"name":"buffercreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",634,{"inputs":[{"name":"buffercreationerror"}],"output":{"name":"creationerror"}}],[11,"from","","",634,{"inputs":[{"name":"buffercreationerror"},{"name":"buffercreationerror"}],"output":{"name":"creationerror"}}],[11,"fmt","","",634,{"inputs":[{"name":"buffercreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",634,{"inputs":[{"name":"buffercreationerror"}],"output":{"name":"str"}}],[11,"cause","","",634,{"inputs":[{"name":"buffercreationerror"}],"output":{"name":"option"}}],[11,"fmt","glium","",637,{"inputs":[{"name":"vertexbuffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"per_instance","glium::vertex","Creates a marker that instructs glium to use multiple instances.",638,{"inputs":[{"name":"vertexbufferslice"}],"output":{"name":"result"}}],[11,"new","glium","Builds a new vertex buffer.",637,null],[11,"dynamic","","Builds a new vertex buffer.",637,null],[11,"persistent","","Builds a new vertex buffer.",637,null],[11,"immutable","","Builds a new vertex buffer.",637,null],[11,"empty","","Builds an empty vertex buffer.",637,{"inputs":[{"name":"vertexbuffer"},{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_dynamic","","Builds an empty vertex buffer.",637,{"inputs":[{"name":"vertexbuffer"},{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_persistent","","Builds an empty vertex buffer.",637,{"inputs":[{"name":"vertexbuffer"},{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"empty_immutable","","Builds an empty vertex buffer.",637,{"inputs":[{"name":"vertexbuffer"},{"name":"f"},{"name":"usize"}],"output":{"name":"result"}}],[11,"new_raw","","Builds a new vertex buffer from an indeterminate data type and bindings.",637,null],[11,"new_raw_dynamic","","Dynamic version of `new_raw`.",637,null],[11,"slice","","Accesses a slice of the buffer.",637,{"inputs":[{"name":"vertexbuffer"},{"name":"r"}],"output":{"name":"option"}}],[11,"get_bindings","","Returns the associated `VertexFormat`.",637,{"inputs":[{"name":"vertexbuffer"}],"output":{"name":"vertexformat"}}],[11,"per_instance","","Creates a marker that instructs glium to use multiple instances.",637,{"inputs":[{"name":"vertexbuffer"}],"output":{"name":"result"}}],[11,"into_vertex_buffer_any","","DEPRECATED: use `.into()` instead.\nDiscard the type information and turn the vertex buffer into a `VertexBufferAny`.",637,{"inputs":[{"name":"vertexbuffer"}],"output":{"name":"vertexbufferany"}}],[11,"from","","",637,{"inputs":[{"name":"vertexbuffer"},{"name":"buffer"}],"output":{"name":"vertexbuffer"}}],[11,"deref","","",637,{"inputs":[{"name":"vertexbuffer"}],"output":{"name":"buffer"}}],[11,"deref_mut","","",637,{"inputs":[{"name":"vertexbuffer"}],"output":{"name":"buffer"}}],[11,"from","glium::buffer","",540,{"inputs":[{"name":"bufferslice"},{"name":"vertexbuffer"}],"output":{"name":"bufferslice"}}],[11,"from","","",541,{"inputs":[{"name":"buffermutslice"},{"name":"vertexbuffer"}],"output":{"name":"buffermutslice"}}],[11,"deref","glium::vertex","",638,{"inputs":[{"name":"vertexbufferslice"}],"output":{"name":"bufferslice"}}],[11,"deref_mut","","",638,{"inputs":[{"name":"vertexbufferslice"}],"output":{"name":"bufferslice"}}],[11,"from","glium::buffer","",540,{"inputs":[{"name":"bufferslice"},{"name":"vertexbufferslice"}],"output":{"name":"bufferslice"}}],[11,"into_vertices_source","glium::vertex","",638,{"inputs":[{"name":"vertexbufferslice"}],"output":{"name":"verticessource"}}],[11,"fmt","","",639,{"inputs":[{"name":"vertexbufferany"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_elements_size","","Returns the number of bytes between two consecutive elements in the buffer.",639,{"inputs":[{"name":"vertexbufferany"}],"output":{"name":"usize"}}],[11,"len","","Returns the number of elements in the buffer.",639,{"inputs":[{"name":"vertexbufferany"}],"output":{"name":"usize"}}],[11,"get_bindings","","Returns the associated `VertexFormat`.",639,{"inputs":[{"name":"vertexbufferany"}],"output":{"name":"vertexformat"}}],[11,"into_vertex_buffer","","Turns the vertex buffer into a `VertexBuffer` without checking the type.",639,{"inputs":[{"name":"vertexbufferany"}],"output":{"name":"vertexbuffer"}}],[11,"per_instance","","Creates a marker that instructs glium to use multiple instances.",639,{"inputs":[{"name":"vertexbufferany"}],"output":{"name":"result"}}],[11,"from","","",639,{"inputs":[{"name":"vertexbufferany"},{"name":"vertexbuffer"}],"output":{"name":"vertexbufferany"}}],[11,"from","","",639,{"inputs":[{"name":"vertexbufferany"},{"name":"buffer"}],"output":{"name":"vertexbufferany"}}],[11,"eq","","",635,{"inputs":[{"name":"attributetype"},{"name":"attributetype"}],"output":{"name":"bool"}}],[11,"ne","","",635,{"inputs":[{"name":"attributetype"},{"name":"attributetype"}],"output":{"name":"bool"}}],[11,"fmt","","",635,{"inputs":[{"name":"attributetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",635,{"inputs":[{"name":"attributetype"}],"output":{"name":"attributetype"}}],[11,"is_supported","","Returns true if the backend supports this type of attribute.",635,{"inputs":[{"name":"attributetype"},{"name":"c"}],"output":{"name":"bool"}}],[11,"get_size_bytes","","Returns the size in bytes of a value of this type.",635,{"inputs":[{"name":"attributetype"}],"output":{"name":"usize"}}],[11,"get_num_components","","Returns the number of values for this type.",635,{"inputs":[{"name":"attributetype"}],"output":{"name":"usize"}}],[11,"fmt","","",640,{"inputs":[{"name":"transformfeedbacksession"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Builds a new transform feedback session.",640,{"inputs":[{"name":"transformfeedbacksession"},{"name":"f"},{"name":"program"},{"name":"buffer"}],"output":{"name":"result"}}],[11,"drop","","",640,{"inputs":[{"name":"transformfeedbacksession"}],"output":null}],[6,"VertexFormat","","Describes the layout of each vertex in a vertex buffer.",null,null],[8,"IntoVerticesSource","","Objects that can be used as vertex sources.",null,null],[10,"into_vertices_source","","Builds the `VerticesSource`.",641,{"inputs":[{"name":"intoverticessource"}],"output":{"name":"verticessource"}}],[8,"MultiVerticesSource","","Objects that describe multiple vertex sources.",null,null],[16,"Iterator","","Iterator that enumerates each source.",642,null],[10,"iter","","Iterates over the `VerticesSource`.",642,{"inputs":[{"name":"multiverticessource"}],"output":{"name":"iterator"}}],[8,"Vertex","","Trait for structures that represent a vertex.",null,null],[10,"build_bindings","","Builds the `VertexFormat` representing the layout of this element.",643,{"inputs":[{"name":"vertex"}],"output":{"name":"vertexformat"}}],[11,"is_supported","","Returns true if the backend supports this vertex format.",643,{"inputs":[{"name":"vertex"},{"name":"c"}],"output":{"name":"bool"}}],[8,"Attribute","","Trait for types that can be used as vertex attributes.",null,null],[10,"get_type","","Get the type of data.",644,{"inputs":[{"name":"attribute"}],"output":{"name":"attributetype"}}],[11,"is_supported","","Returns true if the backend supports this type of attribute.",644,{"inputs":[{"name":"attribute"},{"name":"c"}],"output":{"name":"bool"}}],[11,"clone","","",636,{"inputs":[{"name":"verticessource"}],"output":{"name":"verticessource"}}],[11,"into_vertices_source","","",636,{"inputs":[{"name":"verticessource"}],"output":{"name":"verticessource"}}],[11,"into_vertices_source","","",632,{"inputs":[{"name":"emptyvertexattributes"}],"output":{"name":"verticessource"}}],[11,"into_vertices_source","","",633,{"inputs":[{"name":"emptyinstanceattributes"}],"output":{"name":"verticessource"}}],[11,"into_vertices_source","","",645,{"inputs":[{"name":"perinstance"}],"output":{"name":"verticessource"}}],[0,"texture","glium","A texture is an image loaded in video memory, which can be sampled in your shaders.",null,null],[3,"TextureAny","glium::texture","A texture whose type isn't fixed at compile-time.",null,null],[3,"TextureAnyMipmap","","Represents a specific mipmap of a texture.",null,null],[3,"TextureAnyLayer","","Represents a specific layer of an array texture and 3D textures.",null,null],[3,"TextureAnyLayerMipmap","","Represents a specific layer of a specific mipmap. This is the same as `TextureAnyImage`, except\nfor 3D textures, cubemaps and cubemap arrays.",null,null],[3,"TextureAnyImage","","Represents a specific 2D image of a texture. 1D textures are considered as having a height of 1.",null,null],[3,"RawImage1d","","Represents raw data for a two-dimensional image.",null,null],[12,"data","","A contiguous array of pixel data.",646,null],[12,"width","","Number of pixels per column.",646,null],[12,"format","","Formats of the pixels.",646,null],[3,"RawImage2d","","Represents raw data for a two-dimensional image.",null,null],[12,"data","","A contiguous array of pixel data.",647,null],[12,"width","","Number of pixels per column.",647,null],[12,"height","","Number of pixels per row.",647,null],[12,"format","","Formats of the pixels.",647,null],[3,"RawImage3d","","Represents raw data for a two-dimensional image.",null,null],[12,"data","","A contiguous array of pixel data.",648,null],[12,"width","","Number of pixels per column.",648,null],[12,"height","","Number of pixels per row.",648,null],[12,"depth","","Number of pixels per depth.",648,null],[12,"format","","Formats of the pixels.",648,null],[4,"ClientFormat","","List of client-side pixel formats.",null,null],[13,"U8","","",649,null],[13,"U8U8","","",649,null],[13,"U8U8U8","","",649,null],[13,"U8U8U8U8","","",649,null],[13,"I8","","",649,null],[13,"I8I8","","",649,null],[13,"I8I8I8","","",649,null],[13,"I8I8I8I8","","",649,null],[13,"U16","","",649,null],[13,"U16U16","","",649,null],[13,"U16U16U16","","",649,null],[13,"U16U16U16U16","","",649,null],[13,"I16","","",649,null],[13,"I16I16","","",649,null],[13,"I16I16I16","","",649,null],[13,"I16I16I16I16","","",649,null],[13,"U32","","",649,null],[13,"U32U32","","",649,null],[13,"U32U32U32","","",649,null],[13,"U32U32U32U32","","",649,null],[13,"I32","","",649,null],[13,"I32I32","","",649,null],[13,"I32I32I32","","",649,null],[13,"I32I32I32I32","","",649,null],[13,"U3U3U2","","",649,null],[13,"U5U6U5","","",649,null],[13,"U4U4U4U4","","",649,null],[13,"U5U5U5U1","","",649,null],[13,"U10U10U10U2","","",649,null],[13,"F16","","",649,null],[13,"F16F16","","",649,null],[13,"F16F16F16","","",649,null],[13,"F16F16F16F16","","",649,null],[13,"F32","","",649,null],[13,"F32F32","","",649,null],[13,"F32F32F32","","",649,null],[13,"F32F32F32F32","","",649,null],[4,"TextureFormat","","Format of the internal representation of a texture.",null,null],[13,"UncompressedFloat","","",650,null],[13,"UncompressedIntegral","","",650,null],[13,"UncompressedUnsigned","","",650,null],[13,"Srgb","","",650,null],[13,"CompressedFormat","","",650,null],[13,"CompressedSrgbFormat","","",650,null],[13,"DepthFormat","","",650,null],[13,"StencilFormat","","",650,null],[13,"DepthStencilFormat","","",650,null],[4,"UncompressedFloatFormat","","List of uncompressed pixel formats that contain floating-point-like data.",null,null],[13,"U8","","",651,null],[13,"I8","","",651,null],[13,"U16","","",651,null],[13,"I16","","",651,null],[13,"U8U8","","",651,null],[13,"I8I8","","",651,null],[13,"U16U16","","",651,null],[13,"I16I16","","",651,null],[13,"U3U3U2","","",651,null],[13,"U4U4U4","","",651,null],[13,"U5U5U5","","",651,null],[13,"U8U8U8","","",651,null],[13,"I8I8I8","","",651,null],[13,"U10U10U10","","",651,null],[13,"U12U12U12","","",651,null],[13,"U16U16U16","","",651,null],[13,"I16I16I16","","",651,null],[13,"U2U2U2U2","","",651,null],[13,"U4U4U4U4","","",651,null],[13,"U5U5U5U1","","",651,null],[13,"U8U8U8U8","","",651,null],[13,"I8I8I8I8","","",651,null],[13,"U10U10U10U2","","",651,null],[13,"U12U12U12U12","","",651,null],[13,"U16U16U16U16","","",651,null],[13,"I16I16I16I16","","",651,null],[13,"F16","","",651,null],[13,"F16F16","","",651,null],[13,"F16F16F16","","",651,null],[13,"F16F16F16F16","","",651,null],[13,"F32","","",651,null],[13,"F32F32","","",651,null],[13,"F32F32F32","","",651,null],[13,"F32F32F32F32","","",651,null],[13,"F11F11F10","","",651,null],[13,"F9F9F9","","Uses three components of 9 bits of precision that all share the same exponent.",651,null],[4,"UncompressedIntFormat","","List of uncompressed pixel formats that contain signed integral data.",null,null],[13,"I8","","",652,null],[13,"I16","","",652,null],[13,"I32","","",652,null],[13,"I8I8","","",652,null],[13,"I16I16","","",652,null],[13,"I32I32","","",652,null],[13,"I8I8I8","","",652,null],[13,"I16I16I16","","May not be supported by renderbuffers.",652,null],[13,"I32I32I32","","May not be supported by renderbuffers.",652,null],[13,"I8I8I8I8","","May not be supported by renderbuffers.",652,null],[13,"I16I16I16I16","","",652,null],[13,"I32I32I32I32","","",652,null],[4,"UncompressedUintFormat","","List of uncompressed pixel formats that contain unsigned integral data.",null,null],[13,"U8","","",653,null],[13,"U16","","",653,null],[13,"U32","","",653,null],[13,"U8U8","","",653,null],[13,"U16U16","","",653,null],[13,"U32U32","","",653,null],[13,"U8U8U8","","",653,null],[13,"U16U16U16","","May not be supported by renderbuffers.",653,null],[13,"U32U32U32","","May not be supported by renderbuffers.",653,null],[13,"U8U8U8U8","","May not be supported by renderbuffers.",653,null],[13,"U16U16U16U16","","",653,null],[13,"U32U32U32U32","","",653,null],[13,"U10U10U10U2","","",653,null],[4,"CompressedFormat","","List of compressed texture formats.",null,null],[13,"RgtcFormatU","","Red/green compressed texture with one unsigned component.",654,null],[13,"RgtcFormatI","","Red/green compressed texture with one signed component.",654,null],[13,"RgtcFormatUU","","Red/green compressed texture with two unsigned components.",654,null],[13,"RgtcFormatII","","Red/green compressed texture with two signed components.",654,null],[13,"BptcUnorm4","","BPTC format with four components represented as integers.",654,null],[13,"BptcSignedFloat3","","BPTC format with three components (no alpha) represented as signed floats.",654,null],[13,"BptcUnsignedFloat3","","BPTC format with three components (no alpha) represented as unsigned floats.",654,null],[13,"S3tcDxt1NoAlpha","","S3TC DXT1 without alpha, see https://www.opengl.org/wiki/S3_Texture_Compression.",654,null],[13,"S3tcDxt1Alpha","","S3TC DXT1 with 1-bit alpha, see https://www.opengl.org/wiki/S3_Texture_Compression.",654,null],[13,"S3tcDxt3Alpha","","S3TC DXT3, see https://www.opengl.org/wiki/S3_Texture_Compression.",654,null],[13,"S3tcDxt5Alpha","","S3TC DXT5, see https://www.opengl.org/wiki/S3_Texture_Compression.",654,null],[4,"DepthFormat","","List of formats available for depth textures.",null,null],[13,"I16","","",655,null],[13,"I24","","",655,null],[13,"I32","","May not be supported by all hardware.",655,null],[13,"F32","","",655,null],[4,"DepthStencilFormat","","List of formats available for depth-stencil textures.",null,null],[13,"I24I8","","",656,null],[13,"F32I8","","",656,null],[4,"StencilFormat","","List of formats available for stencil textures.",null,null],[13,"I1","","",657,null],[13,"I4","","",657,null],[13,"I8","","",657,null],[13,"I16","","",657,null],[4,"CompressedSrgbFormat","","List of compressed pixel formats in the sRGB color space.",null,null],[13,"Bptc","","BPTC format. sRGB with alpha. Also called `BC7` by DirectX.",658,null],[13,"S3tcDxt1NoAlpha","","",658,null],[13,"S3tcDxt1Alpha","","",658,null],[13,"S3tcDxt3Alpha","","",658,null],[13,"S3tcDxt5Alpha","","",658,null],[4,"SrgbFormat","","List of uncompressed pixel formats that contain floating-point data in the sRGB color space.",null,null],[13,"U8U8U8","","",659,null],[13,"U8U8U8U8","","",659,null],[4,"Dimensions","","Type of a texture.",null,null],[13,"Texture1d","","",660,null],[12,"width","glium::texture::Dimensions","",660,null],[13,"Texture1dArray","glium::texture","",660,null],[12,"width","glium::texture::Dimensions","",660,null],[12,"array_size","","",660,null],[13,"Texture2d","glium::texture","",660,null],[12,"width","glium::texture::Dimensions","",660,null],[12,"height","","",660,null],[13,"Texture2dArray","glium::texture","",660,null],[12,"width","glium::texture::Dimensions","",660,null],[12,"height","","",660,null],[12,"array_size","","",660,null],[13,"Texture2dMultisample","glium::texture","",660,null],[12,"width","glium::texture::Dimensions","",660,null],[12,"height","","",660,null],[12,"samples","","",660,null],[13,"Texture2dMultisampleArray","glium::texture","",660,null],[12,"width","glium::texture::Dimensions","",660,null],[12,"height","","",660,null],[12,"array_size","","",660,null],[12,"samples","","",660,null],[13,"Texture3d","glium::texture","",660,null],[12,"width","glium::texture::Dimensions","",660,null],[12,"height","","",660,null],[12,"depth","","",660,null],[13,"Cubemap","glium::texture","",660,null],[12,"dimension","glium::texture::Dimensions","",660,null],[13,"CubemapArray","glium::texture","",660,null],[12,"dimension","glium::texture::Dimensions","",660,null],[12,"array_size","","",660,null],[4,"InternalFormat","glium::texture","Internal format of a texture.",null,null],[13,"OneComponent","","The format has one component.",661,null],[12,"ty1","glium::texture::InternalFormat","Type of the first component of the format.",661,null],[12,"bits1","","Number of bits of the first component.",661,null],[13,"TwoComponents","glium::texture","The format has two components.",661,null],[12,"ty1","glium::texture::InternalFormat","Type of the first component of the format.",661,null],[12,"bits1","","Number of bits of the first component.",661,null],[12,"ty2","","Type of the second component.",661,null],[12,"bits2","","Number of bits of the second component.",661,null],[13,"ThreeComponents","glium::texture","The format has three components.",661,null],[12,"ty1","glium::texture::InternalFormat","Type of the first component of the format.",661,null],[12,"bits1","","Number of bits of the first component.",661,null],[12,"ty2","","Type of the second component.",661,null],[12,"bits2","","Number of bits of the second component.",661,null],[12,"ty3","","Type of the third component.",661,null],[12,"bits3","","Number of bits of the third component.",661,null],[13,"FourComponents","glium::texture","The format has four components.",661,null],[12,"ty1","glium::texture::InternalFormat","Type of the first component of the format.",661,null],[12,"bits1","","Number of bits of the first component.",661,null],[12,"ty2","","Type of the second component.",661,null],[12,"bits2","","Number of bits of the second component.",661,null],[12,"ty3","","Type of the third component.",661,null],[12,"bits3","","Number of bits of the third component.",661,null],[12,"ty4","","Type of the fourth component.",661,null],[12,"bits4","","Number of bits of the fourth component.",661,null],[4,"InternalFormatType","glium::texture","Format of a component of an internal format.",null,null],[13,"SignedNormalized","","Floating point texture with signed components.",662,null],[13,"UnsignedNormalized","","Floating point texture with unsigned components.",662,null],[13,"Float","","Floating point texture with floats.",662,null],[13,"Int","","Integral texture.",662,null],[13,"UnsignedInt","","Unsigned texture.",662,null],[4,"GetFormatError","","Error that can happen when retrieving the internal format of a texture.",null,null],[13,"NotSupported","","The backend doesn't support retrieving the internal format.",663,null],[4,"CubeLayer","","Represents a layer of a cubemap.",null,null],[13,"PositiveX","","",664,null],[13,"NegativeX","","",664,null],[13,"PositiveY","","",664,null],[13,"NegativeY","","",664,null],[13,"PositiveZ","","",664,null],[13,"NegativeZ","","",664,null],[4,"TextureKind","","Represents a kind of texture.",null,null],[13,"Float","","",665,null],[13,"Integral","","",665,null],[13,"Unsigned","","",665,null],[13,"Depth","","",665,null],[13,"Stencil","","",665,null],[13,"DepthStencil","","",665,null],[4,"MipmapsOption","","Describes what to do about mipmaps during texture creation.",null,null],[13,"NoMipmap","","No mipmap will be allocated or generated.",666,null],[13,"EmptyMipmaps","","Allocates space for all the possible amount of mipmaps given the texture dimensions.",666,null],[13,"EmptyMipmapsMax","","Allocates space for the specified amount of mipmaps (excluding the top level) but does not\ngenerate mipmaps.",666,null],[13,"AutoGeneratedMipmaps","","Allocates and generates mipmaps for all the possible levels given the texture dimensions.",666,null],[13,"AutoGeneratedMipmapsMax","","Allocates and generates mipmaps for the specified amount of mipmaps (excluding the top level)\nthe possible levels given the texture dimensions.",666,null],[4,"CompressedMipmapsOption","","Describes what to do about mipmaps during compressed texture creation.",null,null],[13,"NoMipmap","","No mipmaps will be allocated or generated.",667,null],[13,"EmptyMipmaps","","Allocates space for all the possible amount of mipmaps given the texture dimensions.",667,null],[13,"EmptyMipmapsMax","","Allocates space for the specified amount of mipmaps (excluding the top level) but does not\ngenerate mipmaps.",667,null],[4,"TextureCreationError","","Error that can happen when creating a texture.",null,null],[13,"FormatNotSupported","","The requested format is not supported by the backend.",668,null],[13,"DimensionsNotSupported","","The requested texture dimensions are not supported.",668,null],[13,"TypeNotSupported","","The texture format is not supported by the backend.",668,null],[5,"is_texture_1d_supported","","Returns true is one-dimensional textures are supported.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[5,"is_texture_2d_supported","","Returns true is two-dimensional textures are supported.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[5,"is_texture_3d_supported","","Returns true is three-dimensional textures are supported.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[5,"is_texture_1d_array_supported","","Returns true is one-dimensional texture arrays are supported.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[5,"is_texture_2d_array_supported","","Returns true is two-dimensional texture arrays are supported.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[5,"is_texture_2d_multisample_supported","","Returns true is two-dimensional multisample textures are supported.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[5,"is_texture_2d_multisample_array_supported","","Returns true is two-dimensional multisample texture arrays are supported.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[5,"is_cubemaps_supported","","Returns true is cubemaps are supported.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[5,"is_cubemap_arrays_supported","","Returns true is cubemap arrays are supported.",null,{"inputs":[{"name":"c"}],"output":{"name":"bool"}}],[0,"bindless","","Without bindless textures, using a texture in a shader requires binding the texture to a specific\nbind point before drawing. This not only slows down rendering, but may also prevent you from\ngrouping multiple draw calls into one because of the limitation to the number of available\ntexture units.",null,null],[3,"ResidentTexture","glium::texture::bindless","A texture that is resident in video memory. This allows you to use bindless textures in your\nshaders.",null,null],[3,"TextureHandle","","Represents a handle to a texture. Contains a raw pointer to a texture that is hidden from you.",null,null],[3,"BindlessTexturesNotSupportedError","","Bindless textures are not supported.",null,null],[11,"new","","Takes ownership of the given texture and makes it resident.",669,{"inputs":[{"name":"residenttexture"},{"name":"textureany"}],"output":{"name":"result"}}],[11,"into_inner","","Unwraps the texture and restores it.",669,{"inputs":[{"name":"residenttexture"}],"output":{"name":"textureany"}}],[11,"deref","","",669,{"inputs":[{"name":"residenttexture"}],"output":{"name":"textureany"}}],[11,"deref_mut","","",669,{"inputs":[{"name":"residenttexture"}],"output":{"name":"textureany"}}],[11,"drop","","",669,{"inputs":[{"name":"residenttexture"}],"output":null}],[11,"clone","","",670,{"inputs":[{"name":"texturehandle"}],"output":{"name":"texturehandle"}}],[11,"new","","Builds a new handle.",670,{"inputs":[{"name":"texturehandle"},{"name":"residenttexture"},{"name":"samplerbehavior"}],"output":{"name":"texturehandle"}}],[11,"set","","Sets the value to the given texture.",670,{"inputs":[{"name":"texturehandle"},{"name":"residenttexture"},{"name":"samplerbehavior"}],"output":null}],[11,"as_uniform_value","","",670,{"inputs":[{"name":"texturehandle"}],"output":{"name":"uniformvalue"}}],[11,"matches","","",670,{"inputs":[{"name":"texturehandle"},{"name":"blocklayout"},{"name":"usize"}],"output":{"name":"result"}}],[11,"build_layout","","",670,{"inputs":[{"name":"texturehandle"},{"name":"usize"}],"output":{"name":"blocklayout"}}],[11,"clone","","",671,{"inputs":[{"name":"bindlesstexturesnotsupportederror"}],"output":{"name":"bindlesstexturesnotsupportederror"}}],[11,"fmt","","",671,{"inputs":[{"name":"bindlesstexturesnotsupportederror"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"buffer_texture","glium::texture","A `BufferTexture` is a special kind of one-dimensional texture that gets its data from a buffer.\nBuffer textures have very limited capabilities compared to other texture types.",null,null],[3,"BufferTexture","glium::texture::buffer_texture","A one-dimensional texture that gets its data from a buffer.",null,null],[3,"BufferTextureRef","","Holds a reference to a `BufferTexture`.",null,null],[4,"TextureCreationError","","Error that can happen while building the texture part of a buffer texture.",null,null],[13,"NotSupported","","Buffer textures are not supported at all.",672,null],[13,"FormatNotSupported","","The requested format is not supported in combination with the given texture buffer type.",672,null],[13,"TooLarge","","The size of the buffer that you are trying to bind exceeds `GL_MAX_TEXTURE_BUFFER_SIZE`.",672,null],[4,"CreationError","","Error that can happen while building a buffer texture.",null,null],[13,"BufferCreationError","","Failed to create the buffer.",673,null],[13,"TextureCreationError","","Failed to create the texture.",673,null],[4,"BufferTextureType","","Type of a buffer texture.",null,null],[13,"Float","","The texture will behave as if it contained floating-point data. It can be sampled with\na `samplerBuffer` in your GLSL code.",674,null],[13,"Integral","","The texture will behave as if it contained signed integral data. It can be sampled with\na `isamplerBuffer` in your GLSL code.",674,null],[13,"Unsigned","","The texture will behave as if it contained unsigned integral data. It can be sampled with\na `usamplerBuffer` in your GLSL code.",674,null],[4,"TextureBufferContentType","","",null,null],[13,"U8","","",675,null],[13,"I8","","",675,null],[13,"U16","","",675,null],[13,"I16","","",675,null],[13,"U32","","",675,null],[13,"I32","","",675,null],[13,"U8U8","","",675,null],[13,"I8I8","","",675,null],[13,"U16U16","","",675,null],[13,"I16I16","","",675,null],[13,"U32U32","","",675,null],[13,"I32I32","","",675,null],[13,"U32U32U32","","",675,null],[13,"I32I32I32","","",675,null],[13,"U8U8U8U8","","",675,null],[13,"I8I8I8I8","","",675,null],[13,"U16U16U16U16","","",675,null],[13,"I16I16I16I16","","",675,null],[13,"U32U32U32U32","","",675,null],[13,"I32I32I32I32","","",675,null],[13,"F16","","",675,null],[13,"F32","","",675,null],[13,"F16F16","","",675,null],[13,"F32F32","","",675,null],[13,"F32F32F32","","",675,null],[13,"F16F16F16F16","","",675,null],[13,"F32F32F32F32","","",675,null],[8,"TextureBufferContent","","Trait for data types that can be interpreted by a buffer texture.",null,null],[10,"get_type","","Returns the enumeration corresponding to elements of this data type.",676,{"inputs":[{"name":"texturebuffercontent"}],"output":{"name":"texturebuffercontenttype"}}],[11,"fmt","","",672,{"inputs":[{"name":"texturecreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",672,{"inputs":[{"name":"texturecreationerror"}],"output":{"name":"texturecreationerror"}}],[11,"fmt","","",672,{"inputs":[{"name":"texturecreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",672,{"inputs":[{"name":"texturecreationerror"}],"output":{"name":"str"}}],[11,"fmt","","",673,{"inputs":[{"name":"creationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",673,{"inputs":[{"name":"creationerror"}],"output":{"name":"creationerror"}}],[11,"fmt","","",673,{"inputs":[{"name":"creationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",673,{"inputs":[{"name":"creationerror"}],"output":{"name":"str"}}],[11,"cause","","",673,{"inputs":[{"name":"creationerror"}],"output":{"name":"option"}}],[11,"from","","",673,{"inputs":[{"name":"creationerror"},{"name":"buffercreationerror"}],"output":{"name":"creationerror"}}],[11,"from","","",673,{"inputs":[{"name":"creationerror"},{"name":"texturecreationerror"}],"output":{"name":"creationerror"}}],[11,"eq","","",674,{"inputs":[{"name":"buffertexturetype"},{"name":"buffertexturetype"}],"output":{"name":"bool"}}],[11,"ne","","",674,{"inputs":[{"name":"buffertexturetype"},{"name":"buffertexturetype"}],"output":{"name":"bool"}}],[11,"fmt","","",674,{"inputs":[{"name":"buffertexturetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",674,{"inputs":[{"name":"buffertexturetype"}],"output":{"name":"buffertexturetype"}}],[11,"new","","Builds a new texture buffer from data.",677,null],[11,"dynamic","","Builds a new texture buffer from data.",677,null],[11,"persistent","","Builds a new texture buffer from data.",677,null],[11,"immutable","","Builds a new texture buffer from data.",677,null],[11,"empty","","Builds a new empty buffer buffer.",677,{"inputs":[{"name":"buffertexture"},{"name":"f"},{"name":"usize"},{"name":"buffertexturetype"}],"output":{"name":"result"}}],[11,"empty_dynamic","","Builds a new empty buffer buffer.",677,{"inputs":[{"name":"buffertexture"},{"name":"f"},{"name":"usize"},{"name":"buffertexturetype"}],"output":{"name":"result"}}],[11,"empty_persistent","","Builds a new empty buffer buffer.",677,{"inputs":[{"name":"buffertexture"},{"name":"f"},{"name":"usize"},{"name":"buffertexturetype"}],"output":{"name":"result"}}],[11,"empty_immutable","","Builds a new empty buffer buffer.",677,{"inputs":[{"name":"buffertexture"},{"name":"f"},{"name":"usize"},{"name":"buffertexturetype"}],"output":{"name":"result"}}],[11,"from_buffer","","Builds a new buffer texture by taking ownership of a buffer.",677,{"inputs":[{"name":"buffertexture"},{"name":"f"},{"name":"buffer"},{"name":"buffertexturetype"}],"output":{"name":"result"}}],[11,"deref","","",677,{"inputs":[{"name":"buffertexture"}],"output":{"name":"buffer"}}],[11,"deref_mut","","",677,{"inputs":[{"name":"buffertexture"}],"output":{"name":"buffer"}}],[11,"drop","","",677,{"inputs":[{"name":"buffertexture"}],"output":null}],[11,"as_buffer_texture_ref","","Builds a `BufferTextureRef`.",677,{"inputs":[{"name":"buffertexture"}],"output":{"name":"buffertextureref"}}],[11,"as_uniform_value","","",677,{"inputs":[{"name":"buffertexture"}],"output":{"name":"uniformvalue"}}],[11,"clone","","",678,{"inputs":[{"name":"buffertextureref"}],"output":{"name":"buffertextureref"}}],[11,"get_texture_type","","Return the type of the texture.",678,{"inputs":[{"name":"buffertextureref"}],"output":{"name":"buffertexturetype"}}],[0,"pixel_buffer","glium::texture","Pixel buffers are buffers that contain two-dimensional texture data.",null,null],[3,"PixelBuffer","glium::texture::pixel_buffer","Buffer that stores the content of a texture.",null,null],[11,"new_empty","","Builds a new buffer with an uninitialized content.",679,{"inputs":[{"name":"pixelbuffer"},{"name":"f"},{"name":"usize"}],"output":{"name":"pixelbuffer"}}],[11,"read_as_texture_2d","","Reads the content of the pixel buffer.",679,{"inputs":[{"name":"pixelbuffer"}],"output":{"name":"result"}}],[11,"deref","","",679,{"inputs":[{"name":"pixelbuffer"}],"output":{"name":"buffer"}}],[11,"deref_mut","","",679,{"inputs":[{"name":"pixelbuffer"}],"output":{"name":"buffer"}}],[11,"get_id","","",679,{"inputs":[{"name":"pixelbuffer"}],"output":{"name":"gluint"}}],[11,"eq","glium::texture","",660,{"inputs":[{"name":"dimensions"},{"name":"dimensions"}],"output":{"name":"bool"}}],[11,"ne","","",660,{"inputs":[{"name":"dimensions"},{"name":"dimensions"}],"output":{"name":"bool"}}],[11,"fmt","","",660,{"inputs":[{"name":"dimensions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",660,{"inputs":[{"name":"dimensions"}],"output":{"name":"dimensions"}}],[11,"get_width","","Returns the width of the texture.",680,{"inputs":[{"name":"textureany"}],"output":{"name":"u32"}}],[11,"get_height","","Returns the height of the texture.",680,{"inputs":[{"name":"textureany"}],"output":{"name":"option"}}],[11,"get_depth","","Returns the depth of the texture.",680,{"inputs":[{"name":"textureany"}],"output":{"name":"option"}}],[11,"kind","","Returns the kind of texture.",680,{"inputs":[{"name":"textureany"}],"output":{"name":"texturekind"}}],[11,"dimensions","","Returns the dimensions of the texture.",680,{"inputs":[{"name":"textureany"}],"output":{"name":"dimensions"}}],[11,"get_array_size","","Returns the array size of the texture.",680,{"inputs":[{"name":"textureany"}],"output":{"name":"option"}}],[11,"get_samples","","Returns the number of samples of the texture if it is a multisampling texture.",680,{"inputs":[{"name":"textureany"}],"output":{"name":"option"}}],[11,"first_layer","","Returns a structure that represents the first layer of the texture. All textures have a\nfirst layer.",680,{"inputs":[{"name":"textureany"}],"output":{"name":"textureanylayer"}}],[11,"layer","","Returns a structure that represents a specific layer of the texture.",680,{"inputs":[{"name":"textureany"},{"name":"u32"}],"output":{"name":"option"}}],[11,"get_texture_type","","Returns the type of the texture (1D, 2D, 3D, etc.).",680,{"inputs":[{"name":"textureany"}],"output":{"name":"dimensions"}}],[11,"get_internal_format","","Determines the internal format of this texture.",680,{"inputs":[{"name":"textureany"}],"output":{"name":"result"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",680,{"inputs":[{"name":"textureany"}],"output":{"name":"u32"}}],[11,"main_level","","Returns a structure that represents the main mipmap level of the texture.",680,{"inputs":[{"name":"textureany"}],"output":{"name":"textureanymipmap"}}],[11,"mipmap","","Returns a structure that represents a specific mipmap of the texture.",680,{"inputs":[{"name":"textureany"},{"name":"u32"}],"output":{"name":"option"}}],[11,"get_id","","",680,{"inputs":[{"name":"textureany"}],"output":{"name":"gluint"}}],[11,"fmt","","",680,{"inputs":[{"name":"textureany"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",680,{"inputs":[{"name":"textureany"}],"output":null}],[11,"clone","","",681,{"inputs":[{"name":"textureanylayer"}],"output":{"name":"textureanylayer"}}],[11,"get_texture","","Returns the texture.",681,{"inputs":[{"name":"textureanylayer"}],"output":{"name":"textureany"}}],[11,"get_samples","","Returns the number of samples of the texture.",681,{"inputs":[{"name":"textureanylayer"}],"output":{"name":"option"}}],[11,"get_layer","","Returns the layer of the texture.",681,{"inputs":[{"name":"textureanylayer"}],"output":{"name":"u32"}}],[11,"main_level","","Returns a structure that represents the main mipmap level of this layer of the texture.",681,{"inputs":[{"name":"textureanylayer"}],"output":{"name":"textureanylayermipmap"}}],[11,"mipmap","","Returns a structure that represents a specific mipmap of this layer of the texture.",681,{"inputs":[{"name":"textureanylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",682,{"inputs":[{"name":"textureanymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"get_width","","Returns the width of the mipmap.",682,{"inputs":[{"name":"textureanymipmap"}],"output":{"name":"u32"}}],[11,"get_height","","Returns the height of the mipmap.",682,{"inputs":[{"name":"textureanymipmap"}],"output":{"name":"option"}}],[11,"get_depth","","Returns the depth of the mipmap.",682,{"inputs":[{"name":"textureanymipmap"}],"output":{"name":"option"}}],[11,"get_samples","","Returns the number of samples of the texture.",682,{"inputs":[{"name":"textureanymipmap"}],"output":{"name":"option"}}],[11,"get_texture","","Returns the texture.",682,{"inputs":[{"name":"textureanymipmap"}],"output":{"name":"textureany"}}],[11,"get_level","","Returns the level of the texture.",682,{"inputs":[{"name":"textureanymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Returns a structure that represents the first layer of this mipmap of the texture. All\ntextures have a first layer.",682,{"inputs":[{"name":"textureanymipmap"}],"output":{"name":"textureanylayermipmap"}}],[11,"layer","","Returns a structure that represents a specific layer of this mipmap of the texture.",682,{"inputs":[{"name":"textureanymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"get_array_size","","Returns the array size of the texture.",682,{"inputs":[{"name":"textureanymipmap"}],"output":{"name":"option"}}],[11,"raw_upload_from_pixel_buffer","","Uploads data to the texture from a buffer.",682,{"inputs":[{"name":"textureanymipmap"},{"name":"bufferslice"},{"name":"range"},{"name":"range"},{"name":"range"}],"output":null}],[11,"raw_upload_from_pixel_buffer_inverted","","Uploads data to the texture from a buffer. The R, G and B components are flipped.",682,{"inputs":[{"name":"textureanymipmap"},{"name":"bufferslice"},{"name":"range"},{"name":"range"},{"name":"range"}],"output":null}],[11,"clone","","",683,{"inputs":[{"name":"textureanylayermipmap"}],"output":{"name":"textureanylayermipmap"}}],[11,"get_texture","","Returns the texture.",683,{"inputs":[{"name":"textureanylayermipmap"}],"output":{"name":"textureany"}}],[11,"get_level","","Returns the level of the texture.",683,{"inputs":[{"name":"textureanylayermipmap"}],"output":{"name":"u32"}}],[11,"get_layer","","Returns the layer of the texture.",683,{"inputs":[{"name":"textureanylayermipmap"}],"output":{"name":"u32"}}],[11,"get_width","","Returns the width of this texture slice.",683,{"inputs":[{"name":"textureanylayermipmap"}],"output":{"name":"u32"}}],[11,"get_height","","Returns the height of this texture slice.",683,{"inputs":[{"name":"textureanylayermipmap"}],"output":{"name":"option"}}],[11,"get_samples","","Returns the number of samples of the texture.",683,{"inputs":[{"name":"textureanylayermipmap"}],"output":{"name":"option"}}],[11,"into_image","","Turns this into an image.",683,{"inputs":[{"name":"textureanylayermipmap"},{"name":"option"}],"output":{"name":"option"}}],[11,"clone","","",684,{"inputs":[{"name":"textureanyimage"}],"output":{"name":"textureanyimage"}}],[11,"get_texture","","Returns the texture.",684,{"inputs":[{"name":"textureanyimage"}],"output":{"name":"textureany"}}],[11,"get_level","","Returns the level of the texture.",684,{"inputs":[{"name":"textureanyimage"}],"output":{"name":"u32"}}],[11,"get_layer","","Returns the layer of the texture.",684,{"inputs":[{"name":"textureanyimage"}],"output":{"name":"u32"}}],[11,"get_cubemap_layer","","Returns the cubemap layer of this image, or `None` if the texture is not a cubemap.",684,{"inputs":[{"name":"textureanyimage"}],"output":{"name":"option"}}],[11,"get_width","","Returns the width of this texture slice.",684,{"inputs":[{"name":"textureanyimage"}],"output":{"name":"u32"}}],[11,"get_height","","Returns the height of this texture slice.",684,{"inputs":[{"name":"textureanyimage"}],"output":{"name":"option"}}],[11,"get_samples","","Returns the number of samples of the texture.",684,{"inputs":[{"name":"textureanyimage"}],"output":{"name":"option"}}],[11,"raw_read","","Reads the content of the image.",684,{"inputs":[{"name":"textureanyimage"},{"name":"rect"}],"output":{"name":"t"}}],[11,"raw_read_to_pixel_buffer","","Reads the content of the image to a pixel buffer.",684,{"inputs":[{"name":"textureanyimage"},{"name":"rect"},{"name":"pixelbuffer"}],"output":null}],[11,"raw_clear_buffer","","Clears the content of the texture to a specific value.",684,{"inputs":[{"name":"textureanyimage"},{"name":"d"}],"output":null}],[11,"fmt","","",663,{"inputs":[{"name":"getformaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",663,{"inputs":[{"name":"getformaterror"}],"output":{"name":"getformaterror"}}],[11,"fmt","","",663,{"inputs":[{"name":"getformaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",663,{"inputs":[{"name":"getformaterror"}],"output":{"name":"str"}}],[11,"eq","","",661,{"inputs":[{"name":"internalformat"},{"name":"internalformat"}],"output":{"name":"bool"}}],[11,"ne","","",661,{"inputs":[{"name":"internalformat"},{"name":"internalformat"}],"output":{"name":"bool"}}],[11,"fmt","","",661,{"inputs":[{"name":"internalformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",661,{"inputs":[{"name":"internalformat"}],"output":{"name":"internalformat"}}],[11,"get_total_bits","","Returns the total number of bits of this format.",661,{"inputs":[{"name":"internalformat"}],"output":{"name":"usize"}}],[11,"eq","","",662,{"inputs":[{"name":"internalformattype"},{"name":"internalformattype"}],"output":{"name":"bool"}}],[11,"ne","","",662,{"inputs":[{"name":"internalformattype"},{"name":"internalformattype"}],"output":{"name":"bool"}}],[11,"fmt","","",662,{"inputs":[{"name":"internalformattype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",662,{"inputs":[{"name":"internalformattype"}],"output":{"name":"internalformattype"}}],[0,"texture1d","","Contains the implementation of `Texture1d`.",null,null],[3,"Texture1d","glium::texture::texture1d","A one-dimensional texture  containing floating-point data.",null,null],[3,"Texture1dMipmap","","Represents a single mipmap level of a `Texture1d`.",null,null],[11,"get_id","","",685,{"inputs":[{"name":"texture1d"}],"output":{"name":"gluint"}}],[11,"fmt","","",685,{"inputs":[{"name":"texture1d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",685,{"inputs":[{"name":"texture1d"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::texture1d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",685,{"inputs":[{"name":"texture1d"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",685,{"inputs":[{"name":"texture1d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",685,{"inputs":[{"name":"texture1d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",685,{"inputs":[{"name":"texture1d"},{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",685,{"inputs":[{"name":"texture1d"},{"name":"f"},{"name":"t"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",685,{"inputs":[{"name":"texture1d"},{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",685,{"inputs":[{"name":"texture1d"},{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",685,{"inputs":[{"name":"texture1d"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",685,{"inputs":[{"name":"texture1d"},{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"texture1d"}}],[11,"width","","Returns the width of that image.",685,{"inputs":[{"name":"texture1d"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",685,{"inputs":[{"name":"texture1d"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",685,{"inputs":[{"name":"texture1d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",685,{"inputs":[{"name":"texture1d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",685,{"inputs":[{"name":"texture1d"}],"output":{"name":"texture1dmipmap"}}],[11,"clone","","",686,{"inputs":[{"name":"texture1dmipmap"}],"output":{"name":"texture1dmipmap"}}],[11,"deref","","",686,{"inputs":[{"name":"texture1dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",686,{"inputs":[{"name":"texture1dmipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",686,{"inputs":[{"name":"texture1dmipmap"}],"output":{"name":"texture1d"}}],[11,"get_level","","Returns the texture level.",686,{"inputs":[{"name":"texture1dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",686,{"inputs":[{"name":"texture1dmipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",686,{"inputs":[{"name":"texture1dmipmap"}],"output":{"name":"colorattachment"}}],[0,"compressed_texture1d","glium::texture","Contains the implementation of `CompressedTexture1d`.",null,null],[3,"CompressedTexture1d","glium::texture::compressed_texture1d","A compressed one-dimensional texture  containing floating-point data.",null,null],[3,"CompressedTexture1dMipmap","","Represents a single mipmap level of a `CompressedTexture1d`.",null,null],[11,"get_id","","",687,{"inputs":[{"name":"compressedtexture1d"}],"output":{"name":"gluint"}}],[11,"fmt","","",687,{"inputs":[{"name":"compressedtexture1d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",687,{"inputs":[{"name":"compressedtexture1d"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::compressed_texture1d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",687,{"inputs":[{"name":"compressedtexture1d"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",687,{"inputs":[{"name":"compressedtexture1d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",687,{"inputs":[{"name":"compressedtexture1d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",687,{"inputs":[{"name":"compressedtexture1d"},{"name":"f"},{"name":"t"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_compressed_data","","Builds a new texture with a specific format. The input data must also be of the\nspecified compressed format.",687,null],[11,"with_format","","Builds a new texture with a specific format.",687,{"inputs":[{"name":"compressedtexture1d"},{"name":"f"},{"name":"t"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",687,{"inputs":[{"name":"compressedtexture1d"},{"name":"f"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",687,{"inputs":[{"name":"compressedtexture1d"},{"name":"f"},{"name":"compressedformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedtexture1d"}}],[11,"width","","Returns the width of that image.",687,{"inputs":[{"name":"compressedtexture1d"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",687,{"inputs":[{"name":"compressedtexture1d"}],"output":{"name":"u32"}}],[11,"read_compressed_data","","Reads the content of the texture to RAM without decompressing it before.",687,{"inputs":[{"name":"compressedtexture1d"}],"output":{"name":"option"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",687,{"inputs":[{"name":"compressedtexture1d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",687,{"inputs":[{"name":"compressedtexture1d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",687,{"inputs":[{"name":"compressedtexture1d"}],"output":{"name":"compressedtexture1dmipmap"}}],[11,"clone","","",688,{"inputs":[{"name":"compressedtexture1dmipmap"}],"output":{"name":"compressedtexture1dmipmap"}}],[11,"deref","","",688,{"inputs":[{"name":"compressedtexture1dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",688,{"inputs":[{"name":"compressedtexture1dmipmap"}],"output":{"name":"u32"}}],[11,"read_compressed_data","","Reads the content of the texture level to RAM without decompressing it before.",688,{"inputs":[{"name":"compressedtexture1dmipmap"}],"output":{"name":"option"}}],[11,"get_texture","","Returns the corresponding texture.",688,{"inputs":[{"name":"compressedtexture1dmipmap"}],"output":{"name":"compressedtexture1d"}}],[11,"get_level","","Returns the texture level.",688,{"inputs":[{"name":"compressedtexture1dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",688,{"inputs":[{"name":"compressedtexture1dmipmap"}],"output":{"name":"textureanyimage"}}],[0,"srgb_texture1d","glium::texture","Contains the implementation of `SrgbTexture1d`.",null,null],[3,"SrgbTexture1d","glium::texture::srgb_texture1d","A one-dimensional texture  containing sRGB floating-point data.",null,null],[3,"SrgbTexture1dMipmap","","Represents a single mipmap level of a `SrgbTexture1d`.",null,null],[11,"get_id","","",689,{"inputs":[{"name":"srgbtexture1d"}],"output":{"name":"gluint"}}],[11,"fmt","","",689,{"inputs":[{"name":"srgbtexture1d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",689,{"inputs":[{"name":"srgbtexture1d"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::srgb_texture1d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",689,{"inputs":[{"name":"srgbtexture1d"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",689,{"inputs":[{"name":"srgbtexture1d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",689,{"inputs":[{"name":"srgbtexture1d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",689,{"inputs":[{"name":"srgbtexture1d"},{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",689,{"inputs":[{"name":"srgbtexture1d"},{"name":"f"},{"name":"t"},{"name":"srgbformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",689,{"inputs":[{"name":"srgbtexture1d"},{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",689,{"inputs":[{"name":"srgbtexture1d"},{"name":"f"},{"name":"srgbformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",689,{"inputs":[{"name":"srgbtexture1d"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",689,{"inputs":[{"name":"srgbtexture1d"},{"name":"f"},{"name":"srgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"srgbtexture1d"}}],[11,"width","","Returns the width of that image.",689,{"inputs":[{"name":"srgbtexture1d"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",689,{"inputs":[{"name":"srgbtexture1d"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",689,{"inputs":[{"name":"srgbtexture1d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",689,{"inputs":[{"name":"srgbtexture1d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",689,{"inputs":[{"name":"srgbtexture1d"}],"output":{"name":"srgbtexture1dmipmap"}}],[11,"clone","","",690,{"inputs":[{"name":"srgbtexture1dmipmap"}],"output":{"name":"srgbtexture1dmipmap"}}],[11,"deref","","",690,{"inputs":[{"name":"srgbtexture1dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",690,{"inputs":[{"name":"srgbtexture1dmipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",690,{"inputs":[{"name":"srgbtexture1dmipmap"}],"output":{"name":"srgbtexture1d"}}],[11,"get_level","","Returns the texture level.",690,{"inputs":[{"name":"srgbtexture1dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",690,{"inputs":[{"name":"srgbtexture1dmipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",690,{"inputs":[{"name":"srgbtexture1dmipmap"}],"output":{"name":"colorattachment"}}],[0,"compressed_srgb_texture1d","glium::texture","Contains the implementation of `CompressedSrgbTexture1d`.",null,null],[3,"CompressedSrgbTexture1d","glium::texture::compressed_srgb_texture1d","A compressed one-dimensional texture  containing sRGB floating-point data.",null,null],[3,"CompressedSrgbTexture1dMipmap","","Represents a single mipmap level of a `CompressedSrgbTexture1d`.",null,null],[11,"get_id","","",691,{"inputs":[{"name":"compressedsrgbtexture1d"}],"output":{"name":"gluint"}}],[11,"fmt","","",691,{"inputs":[{"name":"compressedsrgbtexture1d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",691,{"inputs":[{"name":"compressedsrgbtexture1d"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::compressed_srgb_texture1d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",691,{"inputs":[{"name":"compressedsrgbtexture1d"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",691,{"inputs":[{"name":"compressedsrgbtexture1d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",691,{"inputs":[{"name":"compressedsrgbtexture1d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",691,{"inputs":[{"name":"compressedsrgbtexture1d"},{"name":"f"},{"name":"t"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_compressed_data","","Builds a new texture with a specific format. The input data must also be of the\nspecified compressed format.",691,null],[11,"with_format","","Builds a new texture with a specific format.",691,{"inputs":[{"name":"compressedsrgbtexture1d"},{"name":"f"},{"name":"t"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",691,{"inputs":[{"name":"compressedsrgbtexture1d"},{"name":"f"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",691,{"inputs":[{"name":"compressedsrgbtexture1d"},{"name":"f"},{"name":"compressedsrgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedsrgbtexture1d"}}],[11,"width","","Returns the width of that image.",691,{"inputs":[{"name":"compressedsrgbtexture1d"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",691,{"inputs":[{"name":"compressedsrgbtexture1d"}],"output":{"name":"u32"}}],[11,"read_compressed_data","","Reads the content of the texture to RAM without decompressing it before.",691,{"inputs":[{"name":"compressedsrgbtexture1d"}],"output":{"name":"option"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",691,{"inputs":[{"name":"compressedsrgbtexture1d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",691,{"inputs":[{"name":"compressedsrgbtexture1d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",691,{"inputs":[{"name":"compressedsrgbtexture1d"}],"output":{"name":"compressedsrgbtexture1dmipmap"}}],[11,"clone","","",692,{"inputs":[{"name":"compressedsrgbtexture1dmipmap"}],"output":{"name":"compressedsrgbtexture1dmipmap"}}],[11,"deref","","",692,{"inputs":[{"name":"compressedsrgbtexture1dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",692,{"inputs":[{"name":"compressedsrgbtexture1dmipmap"}],"output":{"name":"u32"}}],[11,"read_compressed_data","","Reads the content of the texture level to RAM without decompressing it before.",692,{"inputs":[{"name":"compressedsrgbtexture1dmipmap"}],"output":{"name":"option"}}],[11,"get_texture","","Returns the corresponding texture.",692,{"inputs":[{"name":"compressedsrgbtexture1dmipmap"}],"output":{"name":"compressedsrgbtexture1d"}}],[11,"get_level","","Returns the texture level.",692,{"inputs":[{"name":"compressedsrgbtexture1dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",692,{"inputs":[{"name":"compressedsrgbtexture1dmipmap"}],"output":{"name":"textureanyimage"}}],[0,"integral_texture1d","glium::texture","Contains the implementation of `IntegralTexture1d`.",null,null],[3,"IntegralTexture1d","glium::texture::integral_texture1d","A one-dimensional texture  containing signed integral data.",null,null],[3,"IntegralTexture1dMipmap","","Represents a single mipmap level of a `IntegralTexture1d`.",null,null],[11,"get_id","","",693,{"inputs":[{"name":"integraltexture1d"}],"output":{"name":"gluint"}}],[11,"fmt","","",693,{"inputs":[{"name":"integraltexture1d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",693,{"inputs":[{"name":"integraltexture1d"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::integral_texture1d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",693,{"inputs":[{"name":"integraltexture1d"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",693,{"inputs":[{"name":"integraltexture1d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",693,{"inputs":[{"name":"integraltexture1d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",693,{"inputs":[{"name":"integraltexture1d"},{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",693,{"inputs":[{"name":"integraltexture1d"},{"name":"f"},{"name":"t"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",693,{"inputs":[{"name":"integraltexture1d"},{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",693,{"inputs":[{"name":"integraltexture1d"},{"name":"f"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",693,{"inputs":[{"name":"integraltexture1d"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",693,{"inputs":[{"name":"integraltexture1d"},{"name":"f"},{"name":"uncompressedintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"integraltexture1d"}}],[11,"width","","Returns the width of that image.",693,{"inputs":[{"name":"integraltexture1d"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",693,{"inputs":[{"name":"integraltexture1d"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",693,{"inputs":[{"name":"integraltexture1d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",693,{"inputs":[{"name":"integraltexture1d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",693,{"inputs":[{"name":"integraltexture1d"}],"output":{"name":"integraltexture1dmipmap"}}],[11,"clone","","",694,{"inputs":[{"name":"integraltexture1dmipmap"}],"output":{"name":"integraltexture1dmipmap"}}],[11,"deref","","",694,{"inputs":[{"name":"integraltexture1dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",694,{"inputs":[{"name":"integraltexture1dmipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",694,{"inputs":[{"name":"integraltexture1dmipmap"}],"output":{"name":"integraltexture1d"}}],[11,"get_level","","Returns the texture level.",694,{"inputs":[{"name":"integraltexture1dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",694,{"inputs":[{"name":"integraltexture1dmipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",694,{"inputs":[{"name":"integraltexture1dmipmap"}],"output":{"name":"colorattachment"}}],[0,"unsigned_texture1d","glium::texture","Contains the implementation of `UnsignedTexture1d`.",null,null],[3,"UnsignedTexture1d","glium::texture::unsigned_texture1d","A one-dimensional texture  containing unsigned integral data.",null,null],[3,"UnsignedTexture1dMipmap","","Represents a single mipmap level of a `UnsignedTexture1d`.",null,null],[11,"get_id","","",695,{"inputs":[{"name":"unsignedtexture1d"}],"output":{"name":"gluint"}}],[11,"fmt","","",695,{"inputs":[{"name":"unsignedtexture1d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",695,{"inputs":[{"name":"unsignedtexture1d"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::unsigned_texture1d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",695,{"inputs":[{"name":"unsignedtexture1d"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",695,{"inputs":[{"name":"unsignedtexture1d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",695,{"inputs":[{"name":"unsignedtexture1d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",695,{"inputs":[{"name":"unsignedtexture1d"},{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",695,{"inputs":[{"name":"unsignedtexture1d"},{"name":"f"},{"name":"t"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",695,{"inputs":[{"name":"unsignedtexture1d"},{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",695,{"inputs":[{"name":"unsignedtexture1d"},{"name":"f"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",695,{"inputs":[{"name":"unsignedtexture1d"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",695,{"inputs":[{"name":"unsignedtexture1d"},{"name":"f"},{"name":"uncompresseduintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"unsignedtexture1d"}}],[11,"width","","Returns the width of that image.",695,{"inputs":[{"name":"unsignedtexture1d"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",695,{"inputs":[{"name":"unsignedtexture1d"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",695,{"inputs":[{"name":"unsignedtexture1d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",695,{"inputs":[{"name":"unsignedtexture1d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",695,{"inputs":[{"name":"unsignedtexture1d"}],"output":{"name":"unsignedtexture1dmipmap"}}],[11,"clone","","",696,{"inputs":[{"name":"unsignedtexture1dmipmap"}],"output":{"name":"unsignedtexture1dmipmap"}}],[11,"deref","","",696,{"inputs":[{"name":"unsignedtexture1dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",696,{"inputs":[{"name":"unsignedtexture1dmipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",696,{"inputs":[{"name":"unsignedtexture1dmipmap"}],"output":{"name":"unsignedtexture1d"}}],[11,"get_level","","Returns the texture level.",696,{"inputs":[{"name":"unsignedtexture1dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",696,{"inputs":[{"name":"unsignedtexture1dmipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",696,{"inputs":[{"name":"unsignedtexture1dmipmap"}],"output":{"name":"colorattachment"}}],[0,"depth_texture1d","glium::texture","Contains the implementation of `DepthTexture1d`.",null,null],[3,"DepthTexture1d","glium::texture::depth_texture1d","A one-dimensional texture  containing depth data.",null,null],[3,"DepthTexture1dMipmap","","Represents a single mipmap level of a `DepthTexture1d`.",null,null],[11,"get_id","","",697,{"inputs":[{"name":"depthtexture1d"}],"output":{"name":"gluint"}}],[11,"fmt","","",697,{"inputs":[{"name":"depthtexture1d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",697,{"inputs":[{"name":"depthtexture1d"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::depth_texture1d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",697,{"inputs":[{"name":"depthtexture1d"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",697,{"inputs":[{"name":"depthtexture1d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",697,{"inputs":[{"name":"depthtexture1d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",697,{"inputs":[{"name":"depthtexture1d"},{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",697,{"inputs":[{"name":"depthtexture1d"},{"name":"f"},{"name":"t"},{"name":"depthformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",697,{"inputs":[{"name":"depthtexture1d"},{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",697,{"inputs":[{"name":"depthtexture1d"},{"name":"f"},{"name":"depthformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",697,{"inputs":[{"name":"depthtexture1d"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",697,{"inputs":[{"name":"depthtexture1d"},{"name":"f"},{"name":"depthformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthtexture1d"}}],[11,"width","","Returns the width of that image.",697,{"inputs":[{"name":"depthtexture1d"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",697,{"inputs":[{"name":"depthtexture1d"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",697,{"inputs":[{"name":"depthtexture1d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",697,{"inputs":[{"name":"depthtexture1d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",697,{"inputs":[{"name":"depthtexture1d"}],"output":{"name":"depthtexture1dmipmap"}}],[11,"clone","","",698,{"inputs":[{"name":"depthtexture1dmipmap"}],"output":{"name":"depthtexture1dmipmap"}}],[11,"deref","","",698,{"inputs":[{"name":"depthtexture1dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",698,{"inputs":[{"name":"depthtexture1dmipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",698,{"inputs":[{"name":"depthtexture1dmipmap"}],"output":{"name":"depthtexture1d"}}],[11,"get_level","","Returns the texture level.",698,{"inputs":[{"name":"depthtexture1dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",698,{"inputs":[{"name":"depthtexture1dmipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_depth_attachment","","",698,{"inputs":[{"name":"depthtexture1dmipmap"}],"output":{"name":"depthattachment"}}],[0,"stencil_texture1d","glium::texture","Contains the implementation of `StencilTexture1d`.",null,null],[3,"StencilTexture1d","glium::texture::stencil_texture1d","A one-dimensional texture  containing stencil data.",null,null],[3,"StencilTexture1dMipmap","","Represents a single mipmap level of a `StencilTexture1d`.",null,null],[11,"get_id","","",699,{"inputs":[{"name":"stenciltexture1d"}],"output":{"name":"gluint"}}],[11,"fmt","","",699,{"inputs":[{"name":"stenciltexture1d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",699,{"inputs":[{"name":"stenciltexture1d"}],"output":{"name":"textureany"}}],[11,"get_internal_format","","Determines the internal format of this texture.",699,{"inputs":[{"name":"stenciltexture1d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",699,{"inputs":[{"name":"stenciltexture1d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",699,{"inputs":[{"name":"stenciltexture1d"},{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",699,{"inputs":[{"name":"stenciltexture1d"},{"name":"f"},{"name":"t"},{"name":"stencilformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",699,{"inputs":[{"name":"stenciltexture1d"},{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",699,{"inputs":[{"name":"stenciltexture1d"},{"name":"f"},{"name":"stencilformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",699,{"inputs":[{"name":"stenciltexture1d"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",699,{"inputs":[{"name":"stenciltexture1d"},{"name":"f"},{"name":"stencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"stenciltexture1d"}}],[11,"width","","Returns the width of that image.",699,{"inputs":[{"name":"stenciltexture1d"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",699,{"inputs":[{"name":"stenciltexture1d"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",699,{"inputs":[{"name":"stenciltexture1d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",699,{"inputs":[{"name":"stenciltexture1d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",699,{"inputs":[{"name":"stenciltexture1d"}],"output":{"name":"stenciltexture1dmipmap"}}],[11,"clone","","",700,{"inputs":[{"name":"stenciltexture1dmipmap"}],"output":{"name":"stenciltexture1dmipmap"}}],[11,"deref","","",700,{"inputs":[{"name":"stenciltexture1dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",700,{"inputs":[{"name":"stenciltexture1dmipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",700,{"inputs":[{"name":"stenciltexture1dmipmap"}],"output":{"name":"stenciltexture1d"}}],[11,"get_level","","Returns the texture level.",700,{"inputs":[{"name":"stenciltexture1dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",700,{"inputs":[{"name":"stenciltexture1dmipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_stencil_attachment","","",700,{"inputs":[{"name":"stenciltexture1dmipmap"}],"output":{"name":"stencilattachment"}}],[0,"depth_stencil_texture1d","glium::texture","Contains the implementation of `DepthStencilTexture1d`.",null,null],[3,"DepthStencilTexture1d","glium::texture::depth_stencil_texture1d","A one-dimensional texture  containing both depth and stencil data.",null,null],[3,"DepthStencilTexture1dMipmap","","Represents a single mipmap level of a `DepthStencilTexture1d`.",null,null],[11,"get_id","","",701,{"inputs":[{"name":"depthstenciltexture1d"}],"output":{"name":"gluint"}}],[11,"fmt","","",701,{"inputs":[{"name":"depthstenciltexture1d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",701,{"inputs":[{"name":"depthstenciltexture1d"}],"output":{"name":"textureany"}}],[11,"get_internal_format","","Determines the internal format of this texture.",701,{"inputs":[{"name":"depthstenciltexture1d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",701,{"inputs":[{"name":"depthstenciltexture1d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",701,{"inputs":[{"name":"depthstenciltexture1d"},{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",701,{"inputs":[{"name":"depthstenciltexture1d"},{"name":"f"},{"name":"t"},{"name":"depthstencilformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",701,{"inputs":[{"name":"depthstenciltexture1d"},{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",701,{"inputs":[{"name":"depthstenciltexture1d"},{"name":"f"},{"name":"depthstencilformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",701,{"inputs":[{"name":"depthstenciltexture1d"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",701,{"inputs":[{"name":"depthstenciltexture1d"},{"name":"f"},{"name":"depthstencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthstenciltexture1d"}}],[11,"width","","Returns the width of that image.",701,{"inputs":[{"name":"depthstenciltexture1d"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",701,{"inputs":[{"name":"depthstenciltexture1d"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",701,{"inputs":[{"name":"depthstenciltexture1d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",701,{"inputs":[{"name":"depthstenciltexture1d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",701,{"inputs":[{"name":"depthstenciltexture1d"}],"output":{"name":"depthstenciltexture1dmipmap"}}],[11,"clone","","",702,{"inputs":[{"name":"depthstenciltexture1dmipmap"}],"output":{"name":"depthstenciltexture1dmipmap"}}],[11,"deref","","",702,{"inputs":[{"name":"depthstenciltexture1dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",702,{"inputs":[{"name":"depthstenciltexture1dmipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",702,{"inputs":[{"name":"depthstenciltexture1dmipmap"}],"output":{"name":"depthstenciltexture1d"}}],[11,"get_level","","Returns the texture level.",702,{"inputs":[{"name":"depthstenciltexture1dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",702,{"inputs":[{"name":"depthstenciltexture1dmipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_depth_stencil_attachment","","",702,{"inputs":[{"name":"depthstenciltexture1dmipmap"}],"output":{"name":"depthstencilattachment"}}],[0,"texture2d","glium::texture","Contains the implementation of `Texture2d`.",null,null],[3,"Texture2d","glium::texture::texture2d","A two-dimensional texture  containing floating-point data.",null,null],[3,"Texture2dMipmap","","Represents a single mipmap level of a `Texture2d`.",null,null],[11,"get_id","","",703,{"inputs":[{"name":"texture2d"}],"output":{"name":"gluint"}}],[11,"fmt","","",703,{"inputs":[{"name":"texture2d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",703,{"inputs":[{"name":"texture2d"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::texture2d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",703,{"inputs":[{"name":"texture2d"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",703,{"inputs":[{"name":"texture2d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",703,{"inputs":[{"name":"texture2d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",703,{"inputs":[{"name":"texture2d"},{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",703,{"inputs":[{"name":"texture2d"},{"name":"f"},{"name":"t"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",703,{"inputs":[{"name":"texture2d"},{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",703,{"inputs":[{"name":"texture2d"},{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",703,{"inputs":[{"name":"texture2d"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",703,{"inputs":[{"name":"texture2d"},{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"texture2d"}}],[11,"width","","Returns the width of that image.",703,{"inputs":[{"name":"texture2d"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",703,{"inputs":[{"name":"texture2d"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",703,null],[11,"as_surface","","Starts drawing on the texture.",703,{"inputs":[{"name":"texture2d"}],"output":{"name":"simpleframebuffer"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",703,{"inputs":[{"name":"texture2d"}],"output":{"name":"u32"}}],[11,"read","","Reads the content of the texture to RAM.",703,{"inputs":[{"name":"texture2d"}],"output":{"name":"t"}}],[11,"read_to_pixel_buffer","","Reads the content of the texture into a buffer in video memory.",703,{"inputs":[{"name":"texture2d"}],"output":{"name":"pixelbuffer"}}],[11,"write","","Uploads some data in the texture.",703,{"inputs":[{"name":"texture2d"},{"name":"rect"},{"name":"t"}],"output":null}],[11,"resident","","Turns the texture into a `ResidentTexture`.",703,{"inputs":[{"name":"texture2d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",703,{"inputs":[{"name":"texture2d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",703,{"inputs":[{"name":"texture2d"}],"output":{"name":"texture2dmipmap"}}],[11,"clone","","",704,{"inputs":[{"name":"texture2dmipmap"}],"output":{"name":"texture2dmipmap"}}],[11,"deref","","",704,{"inputs":[{"name":"texture2dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",704,{"inputs":[{"name":"texture2dmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",704,{"inputs":[{"name":"texture2dmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",704,null],[11,"write","","Uploads some data in the texture level.",704,{"inputs":[{"name":"texture2dmipmap"},{"name":"rect"},{"name":"t"}],"output":null}],[11,"get_texture","","Returns the corresponding texture.",704,{"inputs":[{"name":"texture2dmipmap"}],"output":{"name":"texture2d"}}],[11,"get_level","","Returns the texture level.",704,{"inputs":[{"name":"texture2dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",704,{"inputs":[{"name":"texture2dmipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",704,{"inputs":[{"name":"texture2dmipmap"}],"output":{"name":"colorattachment"}}],[0,"compressed_texture2d","glium::texture","Contains the implementation of `CompressedTexture2d`.",null,null],[3,"CompressedTexture2d","glium::texture::compressed_texture2d","A compressed two-dimensional texture  containing floating-point data.",null,null],[3,"CompressedTexture2dMipmap","","Represents a single mipmap level of a `CompressedTexture2d`.",null,null],[11,"get_id","","",705,{"inputs":[{"name":"compressedtexture2d"}],"output":{"name":"gluint"}}],[11,"fmt","","",705,{"inputs":[{"name":"compressedtexture2d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",705,{"inputs":[{"name":"compressedtexture2d"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::compressed_texture2d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",705,{"inputs":[{"name":"compressedtexture2d"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",705,{"inputs":[{"name":"compressedtexture2d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",705,{"inputs":[{"name":"compressedtexture2d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",705,{"inputs":[{"name":"compressedtexture2d"},{"name":"f"},{"name":"t"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_compressed_data","","Builds a new texture with a specific format. The input data must also be of the\nspecified compressed format.",705,null],[11,"with_format","","Builds a new texture with a specific format.",705,{"inputs":[{"name":"compressedtexture2d"},{"name":"f"},{"name":"t"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",705,{"inputs":[{"name":"compressedtexture2d"},{"name":"f"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",705,{"inputs":[{"name":"compressedtexture2d"},{"name":"f"},{"name":"compressedformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedtexture2d"}}],[11,"width","","Returns the width of that image.",705,{"inputs":[{"name":"compressedtexture2d"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",705,{"inputs":[{"name":"compressedtexture2d"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",705,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",705,{"inputs":[{"name":"compressedtexture2d"}],"output":{"name":"u32"}}],[11,"read","","Reads the content of the texture to RAM.",705,{"inputs":[{"name":"compressedtexture2d"}],"output":{"name":"t"}}],[11,"read_to_pixel_buffer","","Reads the content of the texture into a buffer in video memory.",705,{"inputs":[{"name":"compressedtexture2d"}],"output":{"name":"pixelbuffer"}}],[11,"read_compressed_data","","Reads the content of the texture to RAM without decompressing it before.",705,{"inputs":[{"name":"compressedtexture2d"}],"output":{"name":"option"}}],[11,"write","","Uploads some data in the texture.",705,{"inputs":[{"name":"compressedtexture2d"},{"name":"rect"},{"name":"t"}],"output":null}],[11,"write_compressed_data","","Uploads some data in the texture by using a compressed format as input.",705,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",705,{"inputs":[{"name":"compressedtexture2d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",705,{"inputs":[{"name":"compressedtexture2d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",705,{"inputs":[{"name":"compressedtexture2d"}],"output":{"name":"compressedtexture2dmipmap"}}],[11,"clone","","",706,{"inputs":[{"name":"compressedtexture2dmipmap"}],"output":{"name":"compressedtexture2dmipmap"}}],[11,"deref","","",706,{"inputs":[{"name":"compressedtexture2dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",706,{"inputs":[{"name":"compressedtexture2dmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",706,{"inputs":[{"name":"compressedtexture2dmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",706,null],[11,"write","","Uploads some data in the texture level.",706,{"inputs":[{"name":"compressedtexture2dmipmap"},{"name":"rect"},{"name":"t"}],"output":null}],[11,"write_compressed_data","","Uploads some data in the texture level by using a compressed format as input.",706,null],[11,"read_compressed_data","","Reads the content of the texture level to RAM without decompressing it before.",706,{"inputs":[{"name":"compressedtexture2dmipmap"}],"output":{"name":"option"}}],[11,"get_texture","","Returns the corresponding texture.",706,{"inputs":[{"name":"compressedtexture2dmipmap"}],"output":{"name":"compressedtexture2d"}}],[11,"get_level","","Returns the texture level.",706,{"inputs":[{"name":"compressedtexture2dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",706,{"inputs":[{"name":"compressedtexture2dmipmap"}],"output":{"name":"textureanyimage"}}],[0,"srgb_texture2d","glium::texture","Contains the implementation of `SrgbTexture2d`.",null,null],[3,"SrgbTexture2d","glium::texture::srgb_texture2d","A two-dimensional texture  containing sRGB floating-point data.",null,null],[3,"SrgbTexture2dMipmap","","Represents a single mipmap level of a `SrgbTexture2d`.",null,null],[11,"get_id","","",707,{"inputs":[{"name":"srgbtexture2d"}],"output":{"name":"gluint"}}],[11,"fmt","","",707,{"inputs":[{"name":"srgbtexture2d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",707,{"inputs":[{"name":"srgbtexture2d"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::srgb_texture2d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",707,{"inputs":[{"name":"srgbtexture2d"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",707,{"inputs":[{"name":"srgbtexture2d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",707,{"inputs":[{"name":"srgbtexture2d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",707,{"inputs":[{"name":"srgbtexture2d"},{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",707,{"inputs":[{"name":"srgbtexture2d"},{"name":"f"},{"name":"t"},{"name":"srgbformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",707,{"inputs":[{"name":"srgbtexture2d"},{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",707,{"inputs":[{"name":"srgbtexture2d"},{"name":"f"},{"name":"srgbformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",707,{"inputs":[{"name":"srgbtexture2d"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",707,{"inputs":[{"name":"srgbtexture2d"},{"name":"f"},{"name":"srgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"srgbtexture2d"}}],[11,"width","","Returns the width of that image.",707,{"inputs":[{"name":"srgbtexture2d"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",707,{"inputs":[{"name":"srgbtexture2d"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",707,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",707,{"inputs":[{"name":"srgbtexture2d"}],"output":{"name":"u32"}}],[11,"read","","Reads the content of the texture to RAM.",707,{"inputs":[{"name":"srgbtexture2d"}],"output":{"name":"t"}}],[11,"read_to_pixel_buffer","","Reads the content of the texture into a buffer in video memory.",707,{"inputs":[{"name":"srgbtexture2d"}],"output":{"name":"pixelbuffer"}}],[11,"write","","Uploads some data in the texture.",707,{"inputs":[{"name":"srgbtexture2d"},{"name":"rect"},{"name":"t"}],"output":null}],[11,"resident","","Turns the texture into a `ResidentTexture`.",707,{"inputs":[{"name":"srgbtexture2d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",707,{"inputs":[{"name":"srgbtexture2d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",707,{"inputs":[{"name":"srgbtexture2d"}],"output":{"name":"srgbtexture2dmipmap"}}],[11,"clone","","",708,{"inputs":[{"name":"srgbtexture2dmipmap"}],"output":{"name":"srgbtexture2dmipmap"}}],[11,"deref","","",708,{"inputs":[{"name":"srgbtexture2dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",708,{"inputs":[{"name":"srgbtexture2dmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",708,{"inputs":[{"name":"srgbtexture2dmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",708,null],[11,"write","","Uploads some data in the texture level.",708,{"inputs":[{"name":"srgbtexture2dmipmap"},{"name":"rect"},{"name":"t"}],"output":null}],[11,"get_texture","","Returns the corresponding texture.",708,{"inputs":[{"name":"srgbtexture2dmipmap"}],"output":{"name":"srgbtexture2d"}}],[11,"get_level","","Returns the texture level.",708,{"inputs":[{"name":"srgbtexture2dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",708,{"inputs":[{"name":"srgbtexture2dmipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",708,{"inputs":[{"name":"srgbtexture2dmipmap"}],"output":{"name":"colorattachment"}}],[0,"compressed_srgb_texture2d","glium::texture","Contains the implementation of `CompressedSrgbTexture2d`.",null,null],[3,"CompressedSrgbTexture2d","glium::texture::compressed_srgb_texture2d","A compressed two-dimensional texture  containing sRGB floating-point data.",null,null],[3,"CompressedSrgbTexture2dMipmap","","Represents a single mipmap level of a `CompressedSrgbTexture2d`.",null,null],[11,"get_id","","",709,{"inputs":[{"name":"compressedsrgbtexture2d"}],"output":{"name":"gluint"}}],[11,"fmt","","",709,{"inputs":[{"name":"compressedsrgbtexture2d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",709,{"inputs":[{"name":"compressedsrgbtexture2d"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::compressed_srgb_texture2d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",709,{"inputs":[{"name":"compressedsrgbtexture2d"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",709,{"inputs":[{"name":"compressedsrgbtexture2d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",709,{"inputs":[{"name":"compressedsrgbtexture2d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",709,{"inputs":[{"name":"compressedsrgbtexture2d"},{"name":"f"},{"name":"t"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_compressed_data","","Builds a new texture with a specific format. The input data must also be of the\nspecified compressed format.",709,null],[11,"with_format","","Builds a new texture with a specific format.",709,{"inputs":[{"name":"compressedsrgbtexture2d"},{"name":"f"},{"name":"t"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",709,{"inputs":[{"name":"compressedsrgbtexture2d"},{"name":"f"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",709,{"inputs":[{"name":"compressedsrgbtexture2d"},{"name":"f"},{"name":"compressedsrgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedsrgbtexture2d"}}],[11,"width","","Returns the width of that image.",709,{"inputs":[{"name":"compressedsrgbtexture2d"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",709,{"inputs":[{"name":"compressedsrgbtexture2d"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",709,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",709,{"inputs":[{"name":"compressedsrgbtexture2d"}],"output":{"name":"u32"}}],[11,"read","","Reads the content of the texture to RAM.",709,{"inputs":[{"name":"compressedsrgbtexture2d"}],"output":{"name":"t"}}],[11,"read_to_pixel_buffer","","Reads the content of the texture into a buffer in video memory.",709,{"inputs":[{"name":"compressedsrgbtexture2d"}],"output":{"name":"pixelbuffer"}}],[11,"read_compressed_data","","Reads the content of the texture to RAM without decompressing it before.",709,{"inputs":[{"name":"compressedsrgbtexture2d"}],"output":{"name":"option"}}],[11,"write","","Uploads some data in the texture.",709,{"inputs":[{"name":"compressedsrgbtexture2d"},{"name":"rect"},{"name":"t"}],"output":null}],[11,"write_compressed_data","","Uploads some data in the texture by using a compressed format as input.",709,null],[11,"resident","","Turns the texture into a `ResidentTexture`.",709,{"inputs":[{"name":"compressedsrgbtexture2d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",709,{"inputs":[{"name":"compressedsrgbtexture2d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",709,{"inputs":[{"name":"compressedsrgbtexture2d"}],"output":{"name":"compressedsrgbtexture2dmipmap"}}],[11,"clone","","",710,{"inputs":[{"name":"compressedsrgbtexture2dmipmap"}],"output":{"name":"compressedsrgbtexture2dmipmap"}}],[11,"deref","","",710,{"inputs":[{"name":"compressedsrgbtexture2dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",710,{"inputs":[{"name":"compressedsrgbtexture2dmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",710,{"inputs":[{"name":"compressedsrgbtexture2dmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",710,null],[11,"write","","Uploads some data in the texture level.",710,{"inputs":[{"name":"compressedsrgbtexture2dmipmap"},{"name":"rect"},{"name":"t"}],"output":null}],[11,"write_compressed_data","","Uploads some data in the texture level by using a compressed format as input.",710,null],[11,"read_compressed_data","","Reads the content of the texture level to RAM without decompressing it before.",710,{"inputs":[{"name":"compressedsrgbtexture2dmipmap"}],"output":{"name":"option"}}],[11,"get_texture","","Returns the corresponding texture.",710,{"inputs":[{"name":"compressedsrgbtexture2dmipmap"}],"output":{"name":"compressedsrgbtexture2d"}}],[11,"get_level","","Returns the texture level.",710,{"inputs":[{"name":"compressedsrgbtexture2dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",710,{"inputs":[{"name":"compressedsrgbtexture2dmipmap"}],"output":{"name":"textureanyimage"}}],[0,"integral_texture2d","glium::texture","Contains the implementation of `IntegralTexture2d`.",null,null],[3,"IntegralTexture2d","glium::texture::integral_texture2d","A two-dimensional texture  containing signed integral data.",null,null],[3,"IntegralTexture2dMipmap","","Represents a single mipmap level of a `IntegralTexture2d`.",null,null],[11,"get_id","","",711,{"inputs":[{"name":"integraltexture2d"}],"output":{"name":"gluint"}}],[11,"fmt","","",711,{"inputs":[{"name":"integraltexture2d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",711,{"inputs":[{"name":"integraltexture2d"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::integral_texture2d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",711,{"inputs":[{"name":"integraltexture2d"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",711,{"inputs":[{"name":"integraltexture2d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",711,{"inputs":[{"name":"integraltexture2d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",711,{"inputs":[{"name":"integraltexture2d"},{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",711,{"inputs":[{"name":"integraltexture2d"},{"name":"f"},{"name":"t"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",711,{"inputs":[{"name":"integraltexture2d"},{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",711,{"inputs":[{"name":"integraltexture2d"},{"name":"f"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",711,{"inputs":[{"name":"integraltexture2d"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",711,{"inputs":[{"name":"integraltexture2d"},{"name":"f"},{"name":"uncompressedintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"integraltexture2d"}}],[11,"width","","Returns the width of that image.",711,{"inputs":[{"name":"integraltexture2d"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",711,{"inputs":[{"name":"integraltexture2d"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",711,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",711,{"inputs":[{"name":"integraltexture2d"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",711,{"inputs":[{"name":"integraltexture2d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",711,{"inputs":[{"name":"integraltexture2d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",711,{"inputs":[{"name":"integraltexture2d"}],"output":{"name":"integraltexture2dmipmap"}}],[11,"clone","","",712,{"inputs":[{"name":"integraltexture2dmipmap"}],"output":{"name":"integraltexture2dmipmap"}}],[11,"deref","","",712,{"inputs":[{"name":"integraltexture2dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",712,{"inputs":[{"name":"integraltexture2dmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",712,{"inputs":[{"name":"integraltexture2dmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",712,null],[11,"get_texture","","Returns the corresponding texture.",712,{"inputs":[{"name":"integraltexture2dmipmap"}],"output":{"name":"integraltexture2d"}}],[11,"get_level","","Returns the texture level.",712,{"inputs":[{"name":"integraltexture2dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",712,{"inputs":[{"name":"integraltexture2dmipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",712,{"inputs":[{"name":"integraltexture2dmipmap"}],"output":{"name":"colorattachment"}}],[0,"unsigned_texture2d","glium::texture","Contains the implementation of `UnsignedTexture2d`.",null,null],[3,"UnsignedTexture2d","glium::texture::unsigned_texture2d","A two-dimensional texture  containing unsigned integral data.",null,null],[3,"UnsignedTexture2dMipmap","","Represents a single mipmap level of a `UnsignedTexture2d`.",null,null],[11,"get_id","","",713,{"inputs":[{"name":"unsignedtexture2d"}],"output":{"name":"gluint"}}],[11,"fmt","","",713,{"inputs":[{"name":"unsignedtexture2d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",713,{"inputs":[{"name":"unsignedtexture2d"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::unsigned_texture2d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",713,{"inputs":[{"name":"unsignedtexture2d"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",713,{"inputs":[{"name":"unsignedtexture2d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",713,{"inputs":[{"name":"unsignedtexture2d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",713,{"inputs":[{"name":"unsignedtexture2d"},{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",713,{"inputs":[{"name":"unsignedtexture2d"},{"name":"f"},{"name":"t"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",713,{"inputs":[{"name":"unsignedtexture2d"},{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",713,{"inputs":[{"name":"unsignedtexture2d"},{"name":"f"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",713,{"inputs":[{"name":"unsignedtexture2d"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",713,{"inputs":[{"name":"unsignedtexture2d"},{"name":"f"},{"name":"uncompresseduintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"unsignedtexture2d"}}],[11,"width","","Returns the width of that image.",713,{"inputs":[{"name":"unsignedtexture2d"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",713,{"inputs":[{"name":"unsignedtexture2d"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",713,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",713,{"inputs":[{"name":"unsignedtexture2d"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",713,{"inputs":[{"name":"unsignedtexture2d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",713,{"inputs":[{"name":"unsignedtexture2d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",713,{"inputs":[{"name":"unsignedtexture2d"}],"output":{"name":"unsignedtexture2dmipmap"}}],[11,"clone","","",714,{"inputs":[{"name":"unsignedtexture2dmipmap"}],"output":{"name":"unsignedtexture2dmipmap"}}],[11,"deref","","",714,{"inputs":[{"name":"unsignedtexture2dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",714,{"inputs":[{"name":"unsignedtexture2dmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",714,{"inputs":[{"name":"unsignedtexture2dmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",714,null],[11,"get_texture","","Returns the corresponding texture.",714,{"inputs":[{"name":"unsignedtexture2dmipmap"}],"output":{"name":"unsignedtexture2d"}}],[11,"get_level","","Returns the texture level.",714,{"inputs":[{"name":"unsignedtexture2dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",714,{"inputs":[{"name":"unsignedtexture2dmipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",714,{"inputs":[{"name":"unsignedtexture2dmipmap"}],"output":{"name":"colorattachment"}}],[0,"depth_texture2d","glium::texture","Contains the implementation of `DepthTexture2d`.",null,null],[3,"DepthTexture2d","glium::texture::depth_texture2d","A two-dimensional texture  containing depth data.",null,null],[3,"DepthTexture2dMipmap","","Represents a single mipmap level of a `DepthTexture2d`.",null,null],[11,"get_id","","",715,{"inputs":[{"name":"depthtexture2d"}],"output":{"name":"gluint"}}],[11,"fmt","","",715,{"inputs":[{"name":"depthtexture2d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",715,{"inputs":[{"name":"depthtexture2d"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::depth_texture2d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",715,{"inputs":[{"name":"depthtexture2d"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",715,{"inputs":[{"name":"depthtexture2d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",715,{"inputs":[{"name":"depthtexture2d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",715,{"inputs":[{"name":"depthtexture2d"},{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",715,{"inputs":[{"name":"depthtexture2d"},{"name":"f"},{"name":"t"},{"name":"depthformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",715,{"inputs":[{"name":"depthtexture2d"},{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",715,{"inputs":[{"name":"depthtexture2d"},{"name":"f"},{"name":"depthformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",715,{"inputs":[{"name":"depthtexture2d"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",715,{"inputs":[{"name":"depthtexture2d"},{"name":"f"},{"name":"depthformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthtexture2d"}}],[11,"width","","Returns the width of that image.",715,{"inputs":[{"name":"depthtexture2d"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",715,{"inputs":[{"name":"depthtexture2d"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",715,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",715,{"inputs":[{"name":"depthtexture2d"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",715,{"inputs":[{"name":"depthtexture2d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",715,{"inputs":[{"name":"depthtexture2d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",715,{"inputs":[{"name":"depthtexture2d"}],"output":{"name":"depthtexture2dmipmap"}}],[11,"clone","","",716,{"inputs":[{"name":"depthtexture2dmipmap"}],"output":{"name":"depthtexture2dmipmap"}}],[11,"deref","","",716,{"inputs":[{"name":"depthtexture2dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",716,{"inputs":[{"name":"depthtexture2dmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",716,{"inputs":[{"name":"depthtexture2dmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",716,null],[11,"get_texture","","Returns the corresponding texture.",716,{"inputs":[{"name":"depthtexture2dmipmap"}],"output":{"name":"depthtexture2d"}}],[11,"get_level","","Returns the texture level.",716,{"inputs":[{"name":"depthtexture2dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",716,{"inputs":[{"name":"depthtexture2dmipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_depth_attachment","","",716,{"inputs":[{"name":"depthtexture2dmipmap"}],"output":{"name":"depthattachment"}}],[0,"stencil_texture2d","glium::texture","Contains the implementation of `StencilTexture2d`.",null,null],[3,"StencilTexture2d","glium::texture::stencil_texture2d","A two-dimensional texture  containing stencil data.",null,null],[3,"StencilTexture2dMipmap","","Represents a single mipmap level of a `StencilTexture2d`.",null,null],[11,"get_id","","",717,{"inputs":[{"name":"stenciltexture2d"}],"output":{"name":"gluint"}}],[11,"fmt","","",717,{"inputs":[{"name":"stenciltexture2d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",717,{"inputs":[{"name":"stenciltexture2d"}],"output":{"name":"textureany"}}],[11,"get_internal_format","","Determines the internal format of this texture.",717,{"inputs":[{"name":"stenciltexture2d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",717,{"inputs":[{"name":"stenciltexture2d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",717,{"inputs":[{"name":"stenciltexture2d"},{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",717,{"inputs":[{"name":"stenciltexture2d"},{"name":"f"},{"name":"t"},{"name":"stencilformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",717,{"inputs":[{"name":"stenciltexture2d"},{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",717,{"inputs":[{"name":"stenciltexture2d"},{"name":"f"},{"name":"stencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",717,{"inputs":[{"name":"stenciltexture2d"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",717,{"inputs":[{"name":"stenciltexture2d"},{"name":"f"},{"name":"stencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"stenciltexture2d"}}],[11,"width","","Returns the width of that image.",717,{"inputs":[{"name":"stenciltexture2d"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",717,{"inputs":[{"name":"stenciltexture2d"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",717,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",717,{"inputs":[{"name":"stenciltexture2d"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",717,{"inputs":[{"name":"stenciltexture2d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",717,{"inputs":[{"name":"stenciltexture2d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",717,{"inputs":[{"name":"stenciltexture2d"}],"output":{"name":"stenciltexture2dmipmap"}}],[11,"clone","","",718,{"inputs":[{"name":"stenciltexture2dmipmap"}],"output":{"name":"stenciltexture2dmipmap"}}],[11,"deref","","",718,{"inputs":[{"name":"stenciltexture2dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",718,{"inputs":[{"name":"stenciltexture2dmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",718,{"inputs":[{"name":"stenciltexture2dmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",718,null],[11,"get_texture","","Returns the corresponding texture.",718,{"inputs":[{"name":"stenciltexture2dmipmap"}],"output":{"name":"stenciltexture2d"}}],[11,"get_level","","Returns the texture level.",718,{"inputs":[{"name":"stenciltexture2dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",718,{"inputs":[{"name":"stenciltexture2dmipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_stencil_attachment","","",718,{"inputs":[{"name":"stenciltexture2dmipmap"}],"output":{"name":"stencilattachment"}}],[0,"depth_stencil_texture2d","glium::texture","Contains the implementation of `DepthStencilTexture2d`.",null,null],[3,"DepthStencilTexture2d","glium::texture::depth_stencil_texture2d","A two-dimensional texture  containing both depth and stencil data.",null,null],[3,"DepthStencilTexture2dMipmap","","Represents a single mipmap level of a `DepthStencilTexture2d`.",null,null],[11,"get_id","","",719,{"inputs":[{"name":"depthstenciltexture2d"}],"output":{"name":"gluint"}}],[11,"fmt","","",719,{"inputs":[{"name":"depthstenciltexture2d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",719,{"inputs":[{"name":"depthstenciltexture2d"}],"output":{"name":"textureany"}}],[11,"get_internal_format","","Determines the internal format of this texture.",719,{"inputs":[{"name":"depthstenciltexture2d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",719,{"inputs":[{"name":"depthstenciltexture2d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",719,{"inputs":[{"name":"depthstenciltexture2d"},{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",719,{"inputs":[{"name":"depthstenciltexture2d"},{"name":"f"},{"name":"t"},{"name":"depthstencilformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",719,{"inputs":[{"name":"depthstenciltexture2d"},{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",719,{"inputs":[{"name":"depthstenciltexture2d"},{"name":"f"},{"name":"depthstencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",719,{"inputs":[{"name":"depthstenciltexture2d"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",719,{"inputs":[{"name":"depthstenciltexture2d"},{"name":"f"},{"name":"depthstencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthstenciltexture2d"}}],[11,"width","","Returns the width of that image.",719,{"inputs":[{"name":"depthstenciltexture2d"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",719,{"inputs":[{"name":"depthstenciltexture2d"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",719,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",719,{"inputs":[{"name":"depthstenciltexture2d"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",719,{"inputs":[{"name":"depthstenciltexture2d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",719,{"inputs":[{"name":"depthstenciltexture2d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",719,{"inputs":[{"name":"depthstenciltexture2d"}],"output":{"name":"depthstenciltexture2dmipmap"}}],[11,"clone","","",720,{"inputs":[{"name":"depthstenciltexture2dmipmap"}],"output":{"name":"depthstenciltexture2dmipmap"}}],[11,"deref","","",720,{"inputs":[{"name":"depthstenciltexture2dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",720,{"inputs":[{"name":"depthstenciltexture2dmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",720,{"inputs":[{"name":"depthstenciltexture2dmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",720,null],[11,"get_texture","","Returns the corresponding texture.",720,{"inputs":[{"name":"depthstenciltexture2dmipmap"}],"output":{"name":"depthstenciltexture2d"}}],[11,"get_level","","Returns the texture level.",720,{"inputs":[{"name":"depthstenciltexture2dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",720,{"inputs":[{"name":"depthstenciltexture2dmipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_depth_stencil_attachment","","",720,{"inputs":[{"name":"depthstenciltexture2dmipmap"}],"output":{"name":"depthstencilattachment"}}],[0,"texture2d_multisample","glium::texture","Contains the implementation of `Texture2dMultisample`.",null,null],[3,"Texture2dMultisample","glium::texture::texture2d_multisample","A two-dimensional texture  containing floating-point data.",null,null],[3,"Texture2dMultisampleMipmap","","Represents a single mipmap level of a `Texture2dMultisample`.",null,null],[11,"get_id","","",721,{"inputs":[{"name":"texture2dmultisample"}],"output":{"name":"gluint"}}],[11,"fmt","","",721,{"inputs":[{"name":"texture2dmultisample"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",721,{"inputs":[{"name":"texture2dmultisample"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::texture2d_multisample","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",721,{"inputs":[{"name":"texture2dmultisample"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",721,{"inputs":[{"name":"texture2dmultisample"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",721,{"inputs":[{"name":"texture2dmultisample"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",721,{"inputs":[{"name":"texture2dmultisample"},{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",721,{"inputs":[{"name":"texture2dmultisample"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",721,{"inputs":[{"name":"texture2dmultisample"},{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"texture2dmultisample"}}],[11,"width","","Returns the width of that image.",721,{"inputs":[{"name":"texture2dmultisample"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",721,{"inputs":[{"name":"texture2dmultisample"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",721,{"inputs":[{"name":"texture2dmultisample"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",721,null],[11,"as_surface","","Starts drawing on the texture.",721,{"inputs":[{"name":"texture2dmultisample"}],"output":{"name":"simpleframebuffer"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",721,{"inputs":[{"name":"texture2dmultisample"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",721,{"inputs":[{"name":"texture2dmultisample"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",721,{"inputs":[{"name":"texture2dmultisample"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",721,{"inputs":[{"name":"texture2dmultisample"}],"output":{"name":"texture2dmultisamplemipmap"}}],[11,"clone","","",722,{"inputs":[{"name":"texture2dmultisamplemipmap"}],"output":{"name":"texture2dmultisamplemipmap"}}],[11,"deref","","",722,{"inputs":[{"name":"texture2dmultisamplemipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",722,{"inputs":[{"name":"texture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",722,{"inputs":[{"name":"texture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",722,{"inputs":[{"name":"texture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",722,null],[11,"get_texture","","Returns the corresponding texture.",722,{"inputs":[{"name":"texture2dmultisamplemipmap"}],"output":{"name":"texture2dmultisample"}}],[11,"get_level","","Returns the texture level.",722,{"inputs":[{"name":"texture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"into","","",722,{"inputs":[{"name":"texture2dmultisamplemipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",722,{"inputs":[{"name":"texture2dmultisamplemipmap"}],"output":{"name":"colorattachment"}}],[0,"integral_texture2d_multisample","glium::texture","Contains the implementation of `IntegralTexture2dMultisample`.",null,null],[3,"IntegralTexture2dMultisample","glium::texture::integral_texture2d_multisample","A two-dimensional texture  containing signed integral data.",null,null],[3,"IntegralTexture2dMultisampleMipmap","","Represents a single mipmap level of a `IntegralTexture2dMultisample`.",null,null],[11,"get_id","","",723,{"inputs":[{"name":"integraltexture2dmultisample"}],"output":{"name":"gluint"}}],[11,"fmt","","",723,{"inputs":[{"name":"integraltexture2dmultisample"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",723,{"inputs":[{"name":"integraltexture2dmultisample"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::integral_texture2d_multisample","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",723,{"inputs":[{"name":"integraltexture2dmultisample"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",723,{"inputs":[{"name":"integraltexture2dmultisample"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",723,{"inputs":[{"name":"integraltexture2dmultisample"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",723,{"inputs":[{"name":"integraltexture2dmultisample"},{"name":"f"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",723,{"inputs":[{"name":"integraltexture2dmultisample"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",723,{"inputs":[{"name":"integraltexture2dmultisample"},{"name":"f"},{"name":"uncompressedintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"integraltexture2dmultisample"}}],[11,"width","","Returns the width of that image.",723,{"inputs":[{"name":"integraltexture2dmultisample"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",723,{"inputs":[{"name":"integraltexture2dmultisample"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",723,{"inputs":[{"name":"integraltexture2dmultisample"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",723,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",723,{"inputs":[{"name":"integraltexture2dmultisample"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",723,{"inputs":[{"name":"integraltexture2dmultisample"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",723,{"inputs":[{"name":"integraltexture2dmultisample"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",723,{"inputs":[{"name":"integraltexture2dmultisample"}],"output":{"name":"integraltexture2dmultisamplemipmap"}}],[11,"clone","","",724,{"inputs":[{"name":"integraltexture2dmultisamplemipmap"}],"output":{"name":"integraltexture2dmultisamplemipmap"}}],[11,"deref","","",724,{"inputs":[{"name":"integraltexture2dmultisamplemipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",724,{"inputs":[{"name":"integraltexture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",724,{"inputs":[{"name":"integraltexture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",724,{"inputs":[{"name":"integraltexture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",724,null],[11,"get_texture","","Returns the corresponding texture.",724,{"inputs":[{"name":"integraltexture2dmultisamplemipmap"}],"output":{"name":"integraltexture2dmultisample"}}],[11,"get_level","","Returns the texture level.",724,{"inputs":[{"name":"integraltexture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"into","","",724,{"inputs":[{"name":"integraltexture2dmultisamplemipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",724,{"inputs":[{"name":"integraltexture2dmultisamplemipmap"}],"output":{"name":"colorattachment"}}],[0,"srgb_texture2d_multisample","glium::texture","Contains the implementation of `SrgbTexture2dMultisample`.",null,null],[3,"SrgbTexture2dMultisample","glium::texture::srgb_texture2d_multisample","A two-dimensional texture  containing sRGB floating-point data.",null,null],[3,"SrgbTexture2dMultisampleMipmap","","Represents a single mipmap level of a `SrgbTexture2dMultisample`.",null,null],[11,"get_id","","",725,{"inputs":[{"name":"srgbtexture2dmultisample"}],"output":{"name":"gluint"}}],[11,"fmt","","",725,{"inputs":[{"name":"srgbtexture2dmultisample"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",725,{"inputs":[{"name":"srgbtexture2dmultisample"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::srgb_texture2d_multisample","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",725,{"inputs":[{"name":"srgbtexture2dmultisample"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",725,{"inputs":[{"name":"srgbtexture2dmultisample"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",725,{"inputs":[{"name":"srgbtexture2dmultisample"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",725,{"inputs":[{"name":"srgbtexture2dmultisample"},{"name":"f"},{"name":"srgbformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",725,{"inputs":[{"name":"srgbtexture2dmultisample"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",725,{"inputs":[{"name":"srgbtexture2dmultisample"},{"name":"f"},{"name":"srgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"srgbtexture2dmultisample"}}],[11,"width","","Returns the width of that image.",725,{"inputs":[{"name":"srgbtexture2dmultisample"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",725,{"inputs":[{"name":"srgbtexture2dmultisample"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",725,{"inputs":[{"name":"srgbtexture2dmultisample"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",725,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",725,{"inputs":[{"name":"srgbtexture2dmultisample"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",725,{"inputs":[{"name":"srgbtexture2dmultisample"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",725,{"inputs":[{"name":"srgbtexture2dmultisample"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",725,{"inputs":[{"name":"srgbtexture2dmultisample"}],"output":{"name":"srgbtexture2dmultisamplemipmap"}}],[11,"clone","","",726,{"inputs":[{"name":"srgbtexture2dmultisamplemipmap"}],"output":{"name":"srgbtexture2dmultisamplemipmap"}}],[11,"deref","","",726,{"inputs":[{"name":"srgbtexture2dmultisamplemipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",726,{"inputs":[{"name":"srgbtexture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",726,{"inputs":[{"name":"srgbtexture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",726,{"inputs":[{"name":"srgbtexture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",726,null],[11,"get_texture","","Returns the corresponding texture.",726,{"inputs":[{"name":"srgbtexture2dmultisamplemipmap"}],"output":{"name":"srgbtexture2dmultisample"}}],[11,"get_level","","Returns the texture level.",726,{"inputs":[{"name":"srgbtexture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"into","","",726,{"inputs":[{"name":"srgbtexture2dmultisamplemipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",726,{"inputs":[{"name":"srgbtexture2dmultisamplemipmap"}],"output":{"name":"colorattachment"}}],[0,"unsigned_texture2d_multisample","glium::texture","Contains the implementation of `UnsignedTexture2dMultisample`.",null,null],[3,"UnsignedTexture2dMultisample","glium::texture::unsigned_texture2d_multisample","A two-dimensional texture  containing unsigned integral data.",null,null],[3,"UnsignedTexture2dMultisampleMipmap","","Represents a single mipmap level of a `UnsignedTexture2dMultisample`.",null,null],[11,"get_id","","",727,{"inputs":[{"name":"unsignedtexture2dmultisample"}],"output":{"name":"gluint"}}],[11,"fmt","","",727,{"inputs":[{"name":"unsignedtexture2dmultisample"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",727,{"inputs":[{"name":"unsignedtexture2dmultisample"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::unsigned_texture2d_multisample","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",727,{"inputs":[{"name":"unsignedtexture2dmultisample"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",727,{"inputs":[{"name":"unsignedtexture2dmultisample"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",727,{"inputs":[{"name":"unsignedtexture2dmultisample"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",727,{"inputs":[{"name":"unsignedtexture2dmultisample"},{"name":"f"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",727,{"inputs":[{"name":"unsignedtexture2dmultisample"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",727,{"inputs":[{"name":"unsignedtexture2dmultisample"},{"name":"f"},{"name":"uncompresseduintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"unsignedtexture2dmultisample"}}],[11,"width","","Returns the width of that image.",727,{"inputs":[{"name":"unsignedtexture2dmultisample"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",727,{"inputs":[{"name":"unsignedtexture2dmultisample"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",727,{"inputs":[{"name":"unsignedtexture2dmultisample"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",727,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",727,{"inputs":[{"name":"unsignedtexture2dmultisample"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",727,{"inputs":[{"name":"unsignedtexture2dmultisample"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",727,{"inputs":[{"name":"unsignedtexture2dmultisample"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",727,{"inputs":[{"name":"unsignedtexture2dmultisample"}],"output":{"name":"unsignedtexture2dmultisamplemipmap"}}],[11,"clone","","",728,{"inputs":[{"name":"unsignedtexture2dmultisamplemipmap"}],"output":{"name":"unsignedtexture2dmultisamplemipmap"}}],[11,"deref","","",728,{"inputs":[{"name":"unsignedtexture2dmultisamplemipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",728,{"inputs":[{"name":"unsignedtexture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",728,{"inputs":[{"name":"unsignedtexture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",728,{"inputs":[{"name":"unsignedtexture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",728,null],[11,"get_texture","","Returns the corresponding texture.",728,{"inputs":[{"name":"unsignedtexture2dmultisamplemipmap"}],"output":{"name":"unsignedtexture2dmultisample"}}],[11,"get_level","","Returns the texture level.",728,{"inputs":[{"name":"unsignedtexture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"into","","",728,{"inputs":[{"name":"unsignedtexture2dmultisamplemipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",728,{"inputs":[{"name":"unsignedtexture2dmultisamplemipmap"}],"output":{"name":"colorattachment"}}],[0,"depth_texture2d_multisample","glium::texture","Contains the implementation of `DepthTexture2dMultisample`.",null,null],[3,"DepthTexture2dMultisample","glium::texture::depth_texture2d_multisample","A two-dimensional texture  containing depth data.",null,null],[3,"DepthTexture2dMultisampleMipmap","","Represents a single mipmap level of a `DepthTexture2dMultisample`.",null,null],[11,"get_id","","",729,{"inputs":[{"name":"depthtexture2dmultisample"}],"output":{"name":"gluint"}}],[11,"fmt","","",729,{"inputs":[{"name":"depthtexture2dmultisample"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",729,{"inputs":[{"name":"depthtexture2dmultisample"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::depth_texture2d_multisample","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",729,{"inputs":[{"name":"depthtexture2dmultisample"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",729,{"inputs":[{"name":"depthtexture2dmultisample"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",729,{"inputs":[{"name":"depthtexture2dmultisample"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",729,{"inputs":[{"name":"depthtexture2dmultisample"},{"name":"f"},{"name":"depthformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",729,{"inputs":[{"name":"depthtexture2dmultisample"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",729,{"inputs":[{"name":"depthtexture2dmultisample"},{"name":"f"},{"name":"depthformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthtexture2dmultisample"}}],[11,"width","","Returns the width of that image.",729,{"inputs":[{"name":"depthtexture2dmultisample"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",729,{"inputs":[{"name":"depthtexture2dmultisample"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",729,{"inputs":[{"name":"depthtexture2dmultisample"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",729,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",729,{"inputs":[{"name":"depthtexture2dmultisample"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",729,{"inputs":[{"name":"depthtexture2dmultisample"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",729,{"inputs":[{"name":"depthtexture2dmultisample"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",729,{"inputs":[{"name":"depthtexture2dmultisample"}],"output":{"name":"depthtexture2dmultisamplemipmap"}}],[11,"clone","","",730,{"inputs":[{"name":"depthtexture2dmultisamplemipmap"}],"output":{"name":"depthtexture2dmultisamplemipmap"}}],[11,"deref","","",730,{"inputs":[{"name":"depthtexture2dmultisamplemipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",730,{"inputs":[{"name":"depthtexture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",730,{"inputs":[{"name":"depthtexture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",730,{"inputs":[{"name":"depthtexture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",730,null],[11,"get_texture","","Returns the corresponding texture.",730,{"inputs":[{"name":"depthtexture2dmultisamplemipmap"}],"output":{"name":"depthtexture2dmultisample"}}],[11,"get_level","","Returns the texture level.",730,{"inputs":[{"name":"depthtexture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"into","","",730,{"inputs":[{"name":"depthtexture2dmultisamplemipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_depth_attachment","","",730,{"inputs":[{"name":"depthtexture2dmultisamplemipmap"}],"output":{"name":"depthattachment"}}],[0,"stencil_texture2d_multisample","glium::texture","Contains the implementation of `StencilTexture2dMultisample`.",null,null],[3,"StencilTexture2dMultisample","glium::texture::stencil_texture2d_multisample","A two-dimensional texture  containing stencil data.",null,null],[3,"StencilTexture2dMultisampleMipmap","","Represents a single mipmap level of a `StencilTexture2dMultisample`.",null,null],[11,"get_id","","",731,{"inputs":[{"name":"stenciltexture2dmultisample"}],"output":{"name":"gluint"}}],[11,"fmt","","",731,{"inputs":[{"name":"stenciltexture2dmultisample"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",731,{"inputs":[{"name":"stenciltexture2dmultisample"}],"output":{"name":"textureany"}}],[11,"get_internal_format","","Determines the internal format of this texture.",731,{"inputs":[{"name":"stenciltexture2dmultisample"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",731,{"inputs":[{"name":"stenciltexture2dmultisample"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",731,{"inputs":[{"name":"stenciltexture2dmultisample"},{"name":"f"},{"name":"stencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",731,{"inputs":[{"name":"stenciltexture2dmultisample"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",731,{"inputs":[{"name":"stenciltexture2dmultisample"},{"name":"f"},{"name":"stencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"stenciltexture2dmultisample"}}],[11,"width","","Returns the width of that image.",731,{"inputs":[{"name":"stenciltexture2dmultisample"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",731,{"inputs":[{"name":"stenciltexture2dmultisample"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",731,{"inputs":[{"name":"stenciltexture2dmultisample"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",731,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",731,{"inputs":[{"name":"stenciltexture2dmultisample"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",731,{"inputs":[{"name":"stenciltexture2dmultisample"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",731,{"inputs":[{"name":"stenciltexture2dmultisample"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",731,{"inputs":[{"name":"stenciltexture2dmultisample"}],"output":{"name":"stenciltexture2dmultisamplemipmap"}}],[11,"clone","","",732,{"inputs":[{"name":"stenciltexture2dmultisamplemipmap"}],"output":{"name":"stenciltexture2dmultisamplemipmap"}}],[11,"deref","","",732,{"inputs":[{"name":"stenciltexture2dmultisamplemipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",732,{"inputs":[{"name":"stenciltexture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",732,{"inputs":[{"name":"stenciltexture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",732,{"inputs":[{"name":"stenciltexture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",732,null],[11,"get_texture","","Returns the corresponding texture.",732,{"inputs":[{"name":"stenciltexture2dmultisamplemipmap"}],"output":{"name":"stenciltexture2dmultisample"}}],[11,"get_level","","Returns the texture level.",732,{"inputs":[{"name":"stenciltexture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"into","","",732,{"inputs":[{"name":"stenciltexture2dmultisamplemipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_stencil_attachment","","",732,{"inputs":[{"name":"stenciltexture2dmultisamplemipmap"}],"output":{"name":"stencilattachment"}}],[0,"depth_stencil_texture2d_multisample","glium::texture","Contains the implementation of `DepthStencilTexture2dMultisample`.",null,null],[3,"DepthStencilTexture2dMultisample","glium::texture::depth_stencil_texture2d_multisample","A two-dimensional texture  containing both depth and stencil data.",null,null],[3,"DepthStencilTexture2dMultisampleMipmap","","Represents a single mipmap level of a `DepthStencilTexture2dMultisample`.",null,null],[11,"get_id","","",733,{"inputs":[{"name":"depthstenciltexture2dmultisample"}],"output":{"name":"gluint"}}],[11,"fmt","","",733,{"inputs":[{"name":"depthstenciltexture2dmultisample"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",733,{"inputs":[{"name":"depthstenciltexture2dmultisample"}],"output":{"name":"textureany"}}],[11,"get_internal_format","","Determines the internal format of this texture.",733,{"inputs":[{"name":"depthstenciltexture2dmultisample"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",733,{"inputs":[{"name":"depthstenciltexture2dmultisample"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",733,{"inputs":[{"name":"depthstenciltexture2dmultisample"},{"name":"f"},{"name":"depthstencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",733,{"inputs":[{"name":"depthstenciltexture2dmultisample"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",733,{"inputs":[{"name":"depthstenciltexture2dmultisample"},{"name":"f"},{"name":"depthstencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthstenciltexture2dmultisample"}}],[11,"width","","Returns the width of that image.",733,{"inputs":[{"name":"depthstenciltexture2dmultisample"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",733,{"inputs":[{"name":"depthstenciltexture2dmultisample"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",733,{"inputs":[{"name":"depthstenciltexture2dmultisample"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",733,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",733,{"inputs":[{"name":"depthstenciltexture2dmultisample"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",733,{"inputs":[{"name":"depthstenciltexture2dmultisample"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",733,{"inputs":[{"name":"depthstenciltexture2dmultisample"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",733,{"inputs":[{"name":"depthstenciltexture2dmultisample"}],"output":{"name":"depthstenciltexture2dmultisamplemipmap"}}],[11,"clone","","",734,{"inputs":[{"name":"depthstenciltexture2dmultisamplemipmap"}],"output":{"name":"depthstenciltexture2dmultisamplemipmap"}}],[11,"deref","","",734,{"inputs":[{"name":"depthstenciltexture2dmultisamplemipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",734,{"inputs":[{"name":"depthstenciltexture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",734,{"inputs":[{"name":"depthstenciltexture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",734,{"inputs":[{"name":"depthstenciltexture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",734,null],[11,"get_texture","","Returns the corresponding texture.",734,{"inputs":[{"name":"depthstenciltexture2dmultisamplemipmap"}],"output":{"name":"depthstenciltexture2dmultisample"}}],[11,"get_level","","Returns the texture level.",734,{"inputs":[{"name":"depthstenciltexture2dmultisamplemipmap"}],"output":{"name":"u32"}}],[11,"into","","",734,{"inputs":[{"name":"depthstenciltexture2dmultisamplemipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_depth_stencil_attachment","","",734,{"inputs":[{"name":"depthstenciltexture2dmultisamplemipmap"}],"output":{"name":"depthstencilattachment"}}],[0,"texture3d","glium::texture","Contains the implementation of `Texture3d`.",null,null],[3,"Texture3d","glium::texture::texture3d","A three-dimensional texture  containing floating-point data.",null,null],[3,"Texture3dMipmap","","Represents a single mipmap level of a `Texture3d`.",null,null],[11,"get_id","","",735,{"inputs":[{"name":"texture3d"}],"output":{"name":"gluint"}}],[11,"fmt","","",735,{"inputs":[{"name":"texture3d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",735,{"inputs":[{"name":"texture3d"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::texture3d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",735,{"inputs":[{"name":"texture3d"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",735,{"inputs":[{"name":"texture3d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",735,{"inputs":[{"name":"texture3d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",735,{"inputs":[{"name":"texture3d"},{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",735,{"inputs":[{"name":"texture3d"},{"name":"f"},{"name":"t"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",735,{"inputs":[{"name":"texture3d"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",735,{"inputs":[{"name":"texture3d"},{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",735,{"inputs":[{"name":"texture3d"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",735,{"inputs":[{"name":"texture3d"},{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"texture3d"}}],[11,"width","","Returns the width of that image.",735,{"inputs":[{"name":"texture3d"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",735,{"inputs":[{"name":"texture3d"}],"output":{"name":"u32"}}],[11,"depth","","Returns the depth of that image.",735,{"inputs":[{"name":"texture3d"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width, height and depth of that image.",735,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",735,{"inputs":[{"name":"texture3d"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",735,{"inputs":[{"name":"texture3d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",735,{"inputs":[{"name":"texture3d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",735,{"inputs":[{"name":"texture3d"}],"output":{"name":"texture3dmipmap"}}],[11,"clone","","",736,{"inputs":[{"name":"texture3dmipmap"}],"output":{"name":"texture3dmipmap"}}],[11,"deref","","",736,{"inputs":[{"name":"texture3dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",736,{"inputs":[{"name":"texture3dmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",736,{"inputs":[{"name":"texture3dmipmap"}],"output":{"name":"u32"}}],[11,"depth","","Returns the depth of that image.",736,{"inputs":[{"name":"texture3dmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width, height and depth of that image.",736,null],[11,"get_texture","","Returns the corresponding texture.",736,{"inputs":[{"name":"texture3dmipmap"}],"output":{"name":"texture3d"}}],[11,"get_level","","Returns the texture level.",736,{"inputs":[{"name":"texture3dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",736,{"inputs":[{"name":"texture3dmipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",736,{"inputs":[{"name":"texture3dmipmap"}],"output":{"name":"colorattachment"}}],[0,"compressed_texture3d","glium::texture","Contains the implementation of `CompressedTexture3d`.",null,null],[3,"CompressedTexture3d","glium::texture::compressed_texture3d","A compressed three-dimensional texture  containing floating-point data.",null,null],[3,"CompressedTexture3dMipmap","","Represents a single mipmap level of a `CompressedTexture3d`.",null,null],[11,"get_id","","",737,{"inputs":[{"name":"compressedtexture3d"}],"output":{"name":"gluint"}}],[11,"fmt","","",737,{"inputs":[{"name":"compressedtexture3d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",737,{"inputs":[{"name":"compressedtexture3d"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::compressed_texture3d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",737,{"inputs":[{"name":"compressedtexture3d"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",737,{"inputs":[{"name":"compressedtexture3d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",737,{"inputs":[{"name":"compressedtexture3d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",737,{"inputs":[{"name":"compressedtexture3d"},{"name":"f"},{"name":"t"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_compressed_data","","Builds a new texture with a specific format. The input data must also be of the\nspecified compressed format.",737,null],[11,"with_format","","Builds a new texture with a specific format.",737,{"inputs":[{"name":"compressedtexture3d"},{"name":"f"},{"name":"t"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",737,{"inputs":[{"name":"compressedtexture3d"},{"name":"f"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",737,{"inputs":[{"name":"compressedtexture3d"},{"name":"f"},{"name":"compressedformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedtexture3d"}}],[11,"width","","Returns the width of that image.",737,{"inputs":[{"name":"compressedtexture3d"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",737,{"inputs":[{"name":"compressedtexture3d"}],"output":{"name":"u32"}}],[11,"depth","","Returns the depth of that image.",737,{"inputs":[{"name":"compressedtexture3d"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width, height and depth of that image.",737,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",737,{"inputs":[{"name":"compressedtexture3d"}],"output":{"name":"u32"}}],[11,"read_compressed_data","","Reads the content of the texture to RAM without decompressing it before.",737,{"inputs":[{"name":"compressedtexture3d"}],"output":{"name":"option"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",737,{"inputs":[{"name":"compressedtexture3d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",737,{"inputs":[{"name":"compressedtexture3d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",737,{"inputs":[{"name":"compressedtexture3d"}],"output":{"name":"compressedtexture3dmipmap"}}],[11,"clone","","",738,{"inputs":[{"name":"compressedtexture3dmipmap"}],"output":{"name":"compressedtexture3dmipmap"}}],[11,"deref","","",738,{"inputs":[{"name":"compressedtexture3dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",738,{"inputs":[{"name":"compressedtexture3dmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",738,{"inputs":[{"name":"compressedtexture3dmipmap"}],"output":{"name":"u32"}}],[11,"depth","","Returns the depth of that image.",738,{"inputs":[{"name":"compressedtexture3dmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width, height and depth of that image.",738,null],[11,"read_compressed_data","","Reads the content of the texture level to RAM without decompressing it before.",738,{"inputs":[{"name":"compressedtexture3dmipmap"}],"output":{"name":"option"}}],[11,"get_texture","","Returns the corresponding texture.",738,{"inputs":[{"name":"compressedtexture3dmipmap"}],"output":{"name":"compressedtexture3d"}}],[11,"get_level","","Returns the texture level.",738,{"inputs":[{"name":"compressedtexture3dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",738,{"inputs":[{"name":"compressedtexture3dmipmap"}],"output":{"name":"textureanyimage"}}],[0,"srgb_texture3d","glium::texture","Contains the implementation of `SrgbTexture3d`.",null,null],[3,"SrgbTexture3d","glium::texture::srgb_texture3d","A three-dimensional texture  containing sRGB floating-point data.",null,null],[3,"SrgbTexture3dMipmap","","Represents a single mipmap level of a `SrgbTexture3d`.",null,null],[11,"get_id","","",739,{"inputs":[{"name":"srgbtexture3d"}],"output":{"name":"gluint"}}],[11,"fmt","","",739,{"inputs":[{"name":"srgbtexture3d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",739,{"inputs":[{"name":"srgbtexture3d"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::srgb_texture3d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",739,{"inputs":[{"name":"srgbtexture3d"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",739,{"inputs":[{"name":"srgbtexture3d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",739,{"inputs":[{"name":"srgbtexture3d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",739,{"inputs":[{"name":"srgbtexture3d"},{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",739,{"inputs":[{"name":"srgbtexture3d"},{"name":"f"},{"name":"t"},{"name":"srgbformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",739,{"inputs":[{"name":"srgbtexture3d"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",739,{"inputs":[{"name":"srgbtexture3d"},{"name":"f"},{"name":"srgbformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",739,{"inputs":[{"name":"srgbtexture3d"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",739,{"inputs":[{"name":"srgbtexture3d"},{"name":"f"},{"name":"srgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"srgbtexture3d"}}],[11,"width","","Returns the width of that image.",739,{"inputs":[{"name":"srgbtexture3d"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",739,{"inputs":[{"name":"srgbtexture3d"}],"output":{"name":"u32"}}],[11,"depth","","Returns the depth of that image.",739,{"inputs":[{"name":"srgbtexture3d"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width, height and depth of that image.",739,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",739,{"inputs":[{"name":"srgbtexture3d"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",739,{"inputs":[{"name":"srgbtexture3d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",739,{"inputs":[{"name":"srgbtexture3d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",739,{"inputs":[{"name":"srgbtexture3d"}],"output":{"name":"srgbtexture3dmipmap"}}],[11,"clone","","",740,{"inputs":[{"name":"srgbtexture3dmipmap"}],"output":{"name":"srgbtexture3dmipmap"}}],[11,"deref","","",740,{"inputs":[{"name":"srgbtexture3dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",740,{"inputs":[{"name":"srgbtexture3dmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",740,{"inputs":[{"name":"srgbtexture3dmipmap"}],"output":{"name":"u32"}}],[11,"depth","","Returns the depth of that image.",740,{"inputs":[{"name":"srgbtexture3dmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width, height and depth of that image.",740,null],[11,"get_texture","","Returns the corresponding texture.",740,{"inputs":[{"name":"srgbtexture3dmipmap"}],"output":{"name":"srgbtexture3d"}}],[11,"get_level","","Returns the texture level.",740,{"inputs":[{"name":"srgbtexture3dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",740,{"inputs":[{"name":"srgbtexture3dmipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",740,{"inputs":[{"name":"srgbtexture3dmipmap"}],"output":{"name":"colorattachment"}}],[0,"compressed_srgb_texture3d","glium::texture","Contains the implementation of `CompressedSrgbTexture3d`.",null,null],[3,"CompressedSrgbTexture3d","glium::texture::compressed_srgb_texture3d","A compressed three-dimensional texture  containing sRGB floating-point data.",null,null],[3,"CompressedSrgbTexture3dMipmap","","Represents a single mipmap level of a `CompressedSrgbTexture3d`.",null,null],[11,"get_id","","",741,{"inputs":[{"name":"compressedsrgbtexture3d"}],"output":{"name":"gluint"}}],[11,"fmt","","",741,{"inputs":[{"name":"compressedsrgbtexture3d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",741,{"inputs":[{"name":"compressedsrgbtexture3d"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::compressed_srgb_texture3d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",741,{"inputs":[{"name":"compressedsrgbtexture3d"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",741,{"inputs":[{"name":"compressedsrgbtexture3d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",741,{"inputs":[{"name":"compressedsrgbtexture3d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",741,{"inputs":[{"name":"compressedsrgbtexture3d"},{"name":"f"},{"name":"t"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_compressed_data","","Builds a new texture with a specific format. The input data must also be of the\nspecified compressed format.",741,null],[11,"with_format","","Builds a new texture with a specific format.",741,{"inputs":[{"name":"compressedsrgbtexture3d"},{"name":"f"},{"name":"t"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",741,{"inputs":[{"name":"compressedsrgbtexture3d"},{"name":"f"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",741,{"inputs":[{"name":"compressedsrgbtexture3d"},{"name":"f"},{"name":"compressedsrgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedsrgbtexture3d"}}],[11,"width","","Returns the width of that image.",741,{"inputs":[{"name":"compressedsrgbtexture3d"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",741,{"inputs":[{"name":"compressedsrgbtexture3d"}],"output":{"name":"u32"}}],[11,"depth","","Returns the depth of that image.",741,{"inputs":[{"name":"compressedsrgbtexture3d"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width, height and depth of that image.",741,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",741,{"inputs":[{"name":"compressedsrgbtexture3d"}],"output":{"name":"u32"}}],[11,"read_compressed_data","","Reads the content of the texture to RAM without decompressing it before.",741,{"inputs":[{"name":"compressedsrgbtexture3d"}],"output":{"name":"option"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",741,{"inputs":[{"name":"compressedsrgbtexture3d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",741,{"inputs":[{"name":"compressedsrgbtexture3d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",741,{"inputs":[{"name":"compressedsrgbtexture3d"}],"output":{"name":"compressedsrgbtexture3dmipmap"}}],[11,"clone","","",742,{"inputs":[{"name":"compressedsrgbtexture3dmipmap"}],"output":{"name":"compressedsrgbtexture3dmipmap"}}],[11,"deref","","",742,{"inputs":[{"name":"compressedsrgbtexture3dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",742,{"inputs":[{"name":"compressedsrgbtexture3dmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",742,{"inputs":[{"name":"compressedsrgbtexture3dmipmap"}],"output":{"name":"u32"}}],[11,"depth","","Returns the depth of that image.",742,{"inputs":[{"name":"compressedsrgbtexture3dmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width, height and depth of that image.",742,null],[11,"read_compressed_data","","Reads the content of the texture level to RAM without decompressing it before.",742,{"inputs":[{"name":"compressedsrgbtexture3dmipmap"}],"output":{"name":"option"}}],[11,"get_texture","","Returns the corresponding texture.",742,{"inputs":[{"name":"compressedsrgbtexture3dmipmap"}],"output":{"name":"compressedsrgbtexture3d"}}],[11,"get_level","","Returns the texture level.",742,{"inputs":[{"name":"compressedsrgbtexture3dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",742,{"inputs":[{"name":"compressedsrgbtexture3dmipmap"}],"output":{"name":"textureanyimage"}}],[0,"integral_texture3d","glium::texture","Contains the implementation of `IntegralTexture3d`.",null,null],[3,"IntegralTexture3d","glium::texture::integral_texture3d","A three-dimensional texture  containing signed integral data.",null,null],[3,"IntegralTexture3dMipmap","","Represents a single mipmap level of a `IntegralTexture3d`.",null,null],[11,"get_id","","",743,{"inputs":[{"name":"integraltexture3d"}],"output":{"name":"gluint"}}],[11,"fmt","","",743,{"inputs":[{"name":"integraltexture3d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",743,{"inputs":[{"name":"integraltexture3d"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::integral_texture3d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",743,{"inputs":[{"name":"integraltexture3d"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",743,{"inputs":[{"name":"integraltexture3d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",743,{"inputs":[{"name":"integraltexture3d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",743,{"inputs":[{"name":"integraltexture3d"},{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",743,{"inputs":[{"name":"integraltexture3d"},{"name":"f"},{"name":"t"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",743,{"inputs":[{"name":"integraltexture3d"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",743,{"inputs":[{"name":"integraltexture3d"},{"name":"f"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",743,{"inputs":[{"name":"integraltexture3d"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",743,{"inputs":[{"name":"integraltexture3d"},{"name":"f"},{"name":"uncompressedintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"integraltexture3d"}}],[11,"width","","Returns the width of that image.",743,{"inputs":[{"name":"integraltexture3d"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",743,{"inputs":[{"name":"integraltexture3d"}],"output":{"name":"u32"}}],[11,"depth","","Returns the depth of that image.",743,{"inputs":[{"name":"integraltexture3d"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width, height and depth of that image.",743,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",743,{"inputs":[{"name":"integraltexture3d"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",743,{"inputs":[{"name":"integraltexture3d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",743,{"inputs":[{"name":"integraltexture3d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",743,{"inputs":[{"name":"integraltexture3d"}],"output":{"name":"integraltexture3dmipmap"}}],[11,"clone","","",744,{"inputs":[{"name":"integraltexture3dmipmap"}],"output":{"name":"integraltexture3dmipmap"}}],[11,"deref","","",744,{"inputs":[{"name":"integraltexture3dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",744,{"inputs":[{"name":"integraltexture3dmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",744,{"inputs":[{"name":"integraltexture3dmipmap"}],"output":{"name":"u32"}}],[11,"depth","","Returns the depth of that image.",744,{"inputs":[{"name":"integraltexture3dmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width, height and depth of that image.",744,null],[11,"get_texture","","Returns the corresponding texture.",744,{"inputs":[{"name":"integraltexture3dmipmap"}],"output":{"name":"integraltexture3d"}}],[11,"get_level","","Returns the texture level.",744,{"inputs":[{"name":"integraltexture3dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",744,{"inputs":[{"name":"integraltexture3dmipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",744,{"inputs":[{"name":"integraltexture3dmipmap"}],"output":{"name":"colorattachment"}}],[0,"unsigned_texture3d","glium::texture","Contains the implementation of `UnsignedTexture3d`.",null,null],[3,"UnsignedTexture3d","glium::texture::unsigned_texture3d","A three-dimensional texture  containing unsigned integral data.",null,null],[3,"UnsignedTexture3dMipmap","","Represents a single mipmap level of a `UnsignedTexture3d`.",null,null],[11,"get_id","","",745,{"inputs":[{"name":"unsignedtexture3d"}],"output":{"name":"gluint"}}],[11,"fmt","","",745,{"inputs":[{"name":"unsignedtexture3d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",745,{"inputs":[{"name":"unsignedtexture3d"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::unsigned_texture3d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",745,{"inputs":[{"name":"unsignedtexture3d"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",745,{"inputs":[{"name":"unsignedtexture3d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",745,{"inputs":[{"name":"unsignedtexture3d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",745,{"inputs":[{"name":"unsignedtexture3d"},{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",745,{"inputs":[{"name":"unsignedtexture3d"},{"name":"f"},{"name":"t"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",745,{"inputs":[{"name":"unsignedtexture3d"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",745,{"inputs":[{"name":"unsignedtexture3d"},{"name":"f"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",745,{"inputs":[{"name":"unsignedtexture3d"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",745,{"inputs":[{"name":"unsignedtexture3d"},{"name":"f"},{"name":"uncompresseduintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"unsignedtexture3d"}}],[11,"width","","Returns the width of that image.",745,{"inputs":[{"name":"unsignedtexture3d"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",745,{"inputs":[{"name":"unsignedtexture3d"}],"output":{"name":"u32"}}],[11,"depth","","Returns the depth of that image.",745,{"inputs":[{"name":"unsignedtexture3d"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width, height and depth of that image.",745,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",745,{"inputs":[{"name":"unsignedtexture3d"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",745,{"inputs":[{"name":"unsignedtexture3d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",745,{"inputs":[{"name":"unsignedtexture3d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",745,{"inputs":[{"name":"unsignedtexture3d"}],"output":{"name":"unsignedtexture3dmipmap"}}],[11,"clone","","",746,{"inputs":[{"name":"unsignedtexture3dmipmap"}],"output":{"name":"unsignedtexture3dmipmap"}}],[11,"deref","","",746,{"inputs":[{"name":"unsignedtexture3dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",746,{"inputs":[{"name":"unsignedtexture3dmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",746,{"inputs":[{"name":"unsignedtexture3dmipmap"}],"output":{"name":"u32"}}],[11,"depth","","Returns the depth of that image.",746,{"inputs":[{"name":"unsignedtexture3dmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width, height and depth of that image.",746,null],[11,"get_texture","","Returns the corresponding texture.",746,{"inputs":[{"name":"unsignedtexture3dmipmap"}],"output":{"name":"unsignedtexture3d"}}],[11,"get_level","","Returns the texture level.",746,{"inputs":[{"name":"unsignedtexture3dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",746,{"inputs":[{"name":"unsignedtexture3dmipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",746,{"inputs":[{"name":"unsignedtexture3dmipmap"}],"output":{"name":"colorattachment"}}],[0,"depth_texture3d","glium::texture","Contains the implementation of `DepthTexture3d`.",null,null],[3,"DepthTexture3d","glium::texture::depth_texture3d","A three-dimensional texture  containing depth data.",null,null],[3,"DepthTexture3dMipmap","","Represents a single mipmap level of a `DepthTexture3d`.",null,null],[11,"get_id","","",747,{"inputs":[{"name":"depthtexture3d"}],"output":{"name":"gluint"}}],[11,"fmt","","",747,{"inputs":[{"name":"depthtexture3d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",747,{"inputs":[{"name":"depthtexture3d"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::depth_texture3d","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",747,{"inputs":[{"name":"depthtexture3d"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",747,{"inputs":[{"name":"depthtexture3d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",747,{"inputs":[{"name":"depthtexture3d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",747,{"inputs":[{"name":"depthtexture3d"},{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",747,{"inputs":[{"name":"depthtexture3d"},{"name":"f"},{"name":"t"},{"name":"depthformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",747,{"inputs":[{"name":"depthtexture3d"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",747,{"inputs":[{"name":"depthtexture3d"},{"name":"f"},{"name":"depthformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",747,{"inputs":[{"name":"depthtexture3d"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",747,{"inputs":[{"name":"depthtexture3d"},{"name":"f"},{"name":"depthformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthtexture3d"}}],[11,"width","","Returns the width of that image.",747,{"inputs":[{"name":"depthtexture3d"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",747,{"inputs":[{"name":"depthtexture3d"}],"output":{"name":"u32"}}],[11,"depth","","Returns the depth of that image.",747,{"inputs":[{"name":"depthtexture3d"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width, height and depth of that image.",747,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",747,{"inputs":[{"name":"depthtexture3d"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",747,{"inputs":[{"name":"depthtexture3d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",747,{"inputs":[{"name":"depthtexture3d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",747,{"inputs":[{"name":"depthtexture3d"}],"output":{"name":"depthtexture3dmipmap"}}],[11,"clone","","",748,{"inputs":[{"name":"depthtexture3dmipmap"}],"output":{"name":"depthtexture3dmipmap"}}],[11,"deref","","",748,{"inputs":[{"name":"depthtexture3dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",748,{"inputs":[{"name":"depthtexture3dmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",748,{"inputs":[{"name":"depthtexture3dmipmap"}],"output":{"name":"u32"}}],[11,"depth","","Returns the depth of that image.",748,{"inputs":[{"name":"depthtexture3dmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width, height and depth of that image.",748,null],[11,"get_texture","","Returns the corresponding texture.",748,{"inputs":[{"name":"depthtexture3dmipmap"}],"output":{"name":"depthtexture3d"}}],[11,"get_level","","Returns the texture level.",748,{"inputs":[{"name":"depthtexture3dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",748,{"inputs":[{"name":"depthtexture3dmipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_depth_attachment","","",748,{"inputs":[{"name":"depthtexture3dmipmap"}],"output":{"name":"depthattachment"}}],[0,"depth_stencil_texture3d","glium::texture","Contains the implementation of `DepthStencilTexture3d`.",null,null],[3,"DepthStencilTexture3d","glium::texture::depth_stencil_texture3d","A three-dimensional texture  containing both depth and stencil data.",null,null],[3,"DepthStencilTexture3dMipmap","","Represents a single mipmap level of a `DepthStencilTexture3d`.",null,null],[11,"get_id","","",749,{"inputs":[{"name":"depthstenciltexture3d"}],"output":{"name":"gluint"}}],[11,"fmt","","",749,{"inputs":[{"name":"depthstenciltexture3d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",749,{"inputs":[{"name":"depthstenciltexture3d"}],"output":{"name":"textureany"}}],[11,"get_internal_format","","Determines the internal format of this texture.",749,{"inputs":[{"name":"depthstenciltexture3d"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",749,{"inputs":[{"name":"depthstenciltexture3d"},{"name":"f"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",749,{"inputs":[{"name":"depthstenciltexture3d"},{"name":"f"},{"name":"t"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",749,{"inputs":[{"name":"depthstenciltexture3d"},{"name":"f"},{"name":"t"},{"name":"depthstencilformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",749,{"inputs":[{"name":"depthstenciltexture3d"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",749,{"inputs":[{"name":"depthstenciltexture3d"},{"name":"f"},{"name":"depthstencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",749,{"inputs":[{"name":"depthstenciltexture3d"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",749,{"inputs":[{"name":"depthstenciltexture3d"},{"name":"f"},{"name":"depthstencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthstenciltexture3d"}}],[11,"width","","Returns the width of that image.",749,{"inputs":[{"name":"depthstenciltexture3d"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",749,{"inputs":[{"name":"depthstenciltexture3d"}],"output":{"name":"u32"}}],[11,"depth","","Returns the depth of that image.",749,{"inputs":[{"name":"depthstenciltexture3d"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width, height and depth of that image.",749,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",749,{"inputs":[{"name":"depthstenciltexture3d"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",749,{"inputs":[{"name":"depthstenciltexture3d"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",749,{"inputs":[{"name":"depthstenciltexture3d"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",749,{"inputs":[{"name":"depthstenciltexture3d"}],"output":{"name":"depthstenciltexture3dmipmap"}}],[11,"clone","","",750,{"inputs":[{"name":"depthstenciltexture3dmipmap"}],"output":{"name":"depthstenciltexture3dmipmap"}}],[11,"deref","","",750,{"inputs":[{"name":"depthstenciltexture3dmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",750,{"inputs":[{"name":"depthstenciltexture3dmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",750,{"inputs":[{"name":"depthstenciltexture3dmipmap"}],"output":{"name":"u32"}}],[11,"depth","","Returns the depth of that image.",750,{"inputs":[{"name":"depthstenciltexture3dmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width, height and depth of that image.",750,null],[11,"get_texture","","Returns the corresponding texture.",750,{"inputs":[{"name":"depthstenciltexture3dmipmap"}],"output":{"name":"depthstenciltexture3d"}}],[11,"get_level","","Returns the texture level.",750,{"inputs":[{"name":"depthstenciltexture3dmipmap"}],"output":{"name":"u32"}}],[11,"into","","",750,{"inputs":[{"name":"depthstenciltexture3dmipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_depth_stencil_attachment","","",750,{"inputs":[{"name":"depthstenciltexture3dmipmap"}],"output":{"name":"depthstencilattachment"}}],[0,"texture1d_array","glium::texture","Contains the implementation of `Texture1dArray`.",null,null],[3,"Texture1dArray","glium::texture::texture1d_array","An array of one-dimensional textures  containing floating-point data.",null,null],[3,"Texture1dArrayLayer","","Represents a single layer of a `Texture1dArray`.",null,null],[3,"Texture1dArrayMipmap","","Represents a single mipmap level of a `Texture1dArray`.",null,null],[3,"Texture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `Texture1dArray`.",null,null],[11,"get_id","","",751,{"inputs":[{"name":"texture1darray"}],"output":{"name":"gluint"}}],[11,"fmt","","",751,{"inputs":[{"name":"texture1darray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",751,{"inputs":[{"name":"texture1darray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::texture1d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",751,{"inputs":[{"name":"texture1darray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",751,{"inputs":[{"name":"texture1darray"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",751,{"inputs":[{"name":"texture1darray"},{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",751,{"inputs":[{"name":"texture1darray"},{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",751,{"inputs":[{"name":"texture1darray"},{"name":"f"},{"name":"vec"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",751,{"inputs":[{"name":"texture1darray"},{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",751,{"inputs":[{"name":"texture1darray"},{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",751,{"inputs":[{"name":"texture1darray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",751,{"inputs":[{"name":"texture1darray"},{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"texture1darray"}}],[11,"width","","Returns the width of that image.",751,{"inputs":[{"name":"texture1darray"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",751,{"inputs":[{"name":"texture1darray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",751,{"inputs":[{"name":"texture1darray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",751,{"inputs":[{"name":"texture1darray"}],"output":{"name":"texture1darraylayer"}}],[11,"layer","","Access a single layer of this texture.",751,{"inputs":[{"name":"texture1darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",751,{"inputs":[{"name":"texture1darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",751,{"inputs":[{"name":"texture1darray"}],"output":{"name":"texture1darraymipmap"}}],[11,"clone","","",752,{"inputs":[{"name":"texture1darraylayer"}],"output":{"name":"texture1darraylayer"}}],[11,"width","","Returns the width of that image.",752,{"inputs":[{"name":"texture1darraylayer"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",752,{"inputs":[{"name":"texture1darraylayer"}],"output":{"name":"texture1darray"}}],[11,"get_layer","","Returns the layer index.",752,{"inputs":[{"name":"texture1darraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",752,{"inputs":[{"name":"texture1darraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",752,{"inputs":[{"name":"texture1darraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",752,{"inputs":[{"name":"texture1darraylayer"}],"output":{"name":"texture1darraylayermipmap"}}],[11,"clone","","",753,{"inputs":[{"name":"texture1darraymipmap"}],"output":{"name":"texture1darraymipmap"}}],[11,"deref","","",753,{"inputs":[{"name":"texture1darraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",753,{"inputs":[{"name":"texture1darraymipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",753,{"inputs":[{"name":"texture1darraymipmap"}],"output":{"name":"texture1darray"}}],[11,"get_level","","Returns the texture level.",753,{"inputs":[{"name":"texture1darraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",753,{"inputs":[{"name":"texture1darraymipmap"}],"output":{"name":"texture1darraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",753,{"inputs":[{"name":"texture1darraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",754,{"inputs":[{"name":"texture1darraylayermipmap"}],"output":{"name":"texture1darraylayermipmap"}}],[11,"width","","Returns the width of that image.",754,{"inputs":[{"name":"texture1darraylayermipmap"}],"output":{"name":"u32"}}],[11,"into","","",754,{"inputs":[{"name":"texture1darraylayermipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",754,{"inputs":[{"name":"texture1darraylayermipmap"}],"output":{"name":"colorattachment"}}],[0,"compressed_texture1d_array","glium::texture","Contains the implementation of `CompressedTexture1dArray`.",null,null],[3,"CompressedTexture1dArray","glium::texture::compressed_texture1d_array","An array of compressed one-dimensional textures  containing floating-point data.",null,null],[3,"CompressedTexture1dArrayLayer","","Represents a single layer of a `CompressedTexture1dArray`.",null,null],[3,"CompressedTexture1dArrayMipmap","","Represents a single mipmap level of a `CompressedTexture1dArray`.",null,null],[3,"CompressedTexture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `CompressedTexture1dArray`.",null,null],[11,"get_id","","",755,{"inputs":[{"name":"compressedtexture1darray"}],"output":{"name":"gluint"}}],[11,"fmt","","",755,{"inputs":[{"name":"compressedtexture1darray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",755,{"inputs":[{"name":"compressedtexture1darray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::compressed_texture1d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",755,{"inputs":[{"name":"compressedtexture1darray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",755,{"inputs":[{"name":"compressedtexture1darray"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",755,{"inputs":[{"name":"compressedtexture1darray"},{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",755,{"inputs":[{"name":"compressedtexture1darray"},{"name":"f"},{"name":"vec"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_compressed_data","","Builds a new texture with a specific format. The input data must also be of the\nspecified compressed format.",755,{"inputs":[{"name":"compressedtexture1darray"},{"name":"f"},{"name":"vec"},{"name":"u32"},{"name":"u32"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",755,{"inputs":[{"name":"compressedtexture1darray"},{"name":"f"},{"name":"vec"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",755,{"inputs":[{"name":"compressedtexture1darray"},{"name":"f"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",755,{"inputs":[{"name":"compressedtexture1darray"},{"name":"f"},{"name":"compressedformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedtexture1darray"}}],[11,"width","","Returns the width of that image.",755,{"inputs":[{"name":"compressedtexture1darray"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",755,{"inputs":[{"name":"compressedtexture1darray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",755,{"inputs":[{"name":"compressedtexture1darray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",755,{"inputs":[{"name":"compressedtexture1darray"}],"output":{"name":"compressedtexture1darraylayer"}}],[11,"layer","","Access a single layer of this texture.",755,{"inputs":[{"name":"compressedtexture1darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",755,{"inputs":[{"name":"compressedtexture1darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",755,{"inputs":[{"name":"compressedtexture1darray"}],"output":{"name":"compressedtexture1darraymipmap"}}],[11,"clone","","",756,{"inputs":[{"name":"compressedtexture1darraylayer"}],"output":{"name":"compressedtexture1darraylayer"}}],[11,"width","","Returns the width of that image.",756,{"inputs":[{"name":"compressedtexture1darraylayer"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",756,{"inputs":[{"name":"compressedtexture1darraylayer"}],"output":{"name":"compressedtexture1darray"}}],[11,"get_layer","","Returns the layer index.",756,{"inputs":[{"name":"compressedtexture1darraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",756,{"inputs":[{"name":"compressedtexture1darraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",756,{"inputs":[{"name":"compressedtexture1darraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",756,{"inputs":[{"name":"compressedtexture1darraylayer"}],"output":{"name":"compressedtexture1darraylayermipmap"}}],[11,"clone","","",757,{"inputs":[{"name":"compressedtexture1darraymipmap"}],"output":{"name":"compressedtexture1darraymipmap"}}],[11,"deref","","",757,{"inputs":[{"name":"compressedtexture1darraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",757,{"inputs":[{"name":"compressedtexture1darraymipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",757,{"inputs":[{"name":"compressedtexture1darraymipmap"}],"output":{"name":"compressedtexture1darray"}}],[11,"get_level","","Returns the texture level.",757,{"inputs":[{"name":"compressedtexture1darraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",757,{"inputs":[{"name":"compressedtexture1darraymipmap"}],"output":{"name":"compressedtexture1darraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",757,{"inputs":[{"name":"compressedtexture1darraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",758,{"inputs":[{"name":"compressedtexture1darraylayermipmap"}],"output":{"name":"compressedtexture1darraylayermipmap"}}],[11,"width","","Returns the width of that image.",758,{"inputs":[{"name":"compressedtexture1darraylayermipmap"}],"output":{"name":"u32"}}],[11,"into","","",758,{"inputs":[{"name":"compressedtexture1darraylayermipmap"}],"output":{"name":"textureanyimage"}}],[0,"srgb_texture1d_array","glium::texture","Contains the implementation of `SrgbTexture1dArray`.",null,null],[3,"SrgbTexture1dArray","glium::texture::srgb_texture1d_array","An array of one-dimensional textures  containing sRGB floating-point data.",null,null],[3,"SrgbTexture1dArrayLayer","","Represents a single layer of a `SrgbTexture1dArray`.",null,null],[3,"SrgbTexture1dArrayMipmap","","Represents a single mipmap level of a `SrgbTexture1dArray`.",null,null],[3,"SrgbTexture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `SrgbTexture1dArray`.",null,null],[11,"get_id","","",759,{"inputs":[{"name":"srgbtexture1darray"}],"output":{"name":"gluint"}}],[11,"fmt","","",759,{"inputs":[{"name":"srgbtexture1darray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",759,{"inputs":[{"name":"srgbtexture1darray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::srgb_texture1d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",759,{"inputs":[{"name":"srgbtexture1darray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",759,{"inputs":[{"name":"srgbtexture1darray"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",759,{"inputs":[{"name":"srgbtexture1darray"},{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",759,{"inputs":[{"name":"srgbtexture1darray"},{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",759,{"inputs":[{"name":"srgbtexture1darray"},{"name":"f"},{"name":"vec"},{"name":"srgbformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",759,{"inputs":[{"name":"srgbtexture1darray"},{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",759,{"inputs":[{"name":"srgbtexture1darray"},{"name":"f"},{"name":"srgbformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",759,{"inputs":[{"name":"srgbtexture1darray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",759,{"inputs":[{"name":"srgbtexture1darray"},{"name":"f"},{"name":"srgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"srgbtexture1darray"}}],[11,"width","","Returns the width of that image.",759,{"inputs":[{"name":"srgbtexture1darray"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",759,{"inputs":[{"name":"srgbtexture1darray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",759,{"inputs":[{"name":"srgbtexture1darray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",759,{"inputs":[{"name":"srgbtexture1darray"}],"output":{"name":"srgbtexture1darraylayer"}}],[11,"layer","","Access a single layer of this texture.",759,{"inputs":[{"name":"srgbtexture1darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",759,{"inputs":[{"name":"srgbtexture1darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",759,{"inputs":[{"name":"srgbtexture1darray"}],"output":{"name":"srgbtexture1darraymipmap"}}],[11,"clone","","",760,{"inputs":[{"name":"srgbtexture1darraylayer"}],"output":{"name":"srgbtexture1darraylayer"}}],[11,"width","","Returns the width of that image.",760,{"inputs":[{"name":"srgbtexture1darraylayer"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",760,{"inputs":[{"name":"srgbtexture1darraylayer"}],"output":{"name":"srgbtexture1darray"}}],[11,"get_layer","","Returns the layer index.",760,{"inputs":[{"name":"srgbtexture1darraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",760,{"inputs":[{"name":"srgbtexture1darraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",760,{"inputs":[{"name":"srgbtexture1darraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",760,{"inputs":[{"name":"srgbtexture1darraylayer"}],"output":{"name":"srgbtexture1darraylayermipmap"}}],[11,"clone","","",761,{"inputs":[{"name":"srgbtexture1darraymipmap"}],"output":{"name":"srgbtexture1darraymipmap"}}],[11,"deref","","",761,{"inputs":[{"name":"srgbtexture1darraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",761,{"inputs":[{"name":"srgbtexture1darraymipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",761,{"inputs":[{"name":"srgbtexture1darraymipmap"}],"output":{"name":"srgbtexture1darray"}}],[11,"get_level","","Returns the texture level.",761,{"inputs":[{"name":"srgbtexture1darraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",761,{"inputs":[{"name":"srgbtexture1darraymipmap"}],"output":{"name":"srgbtexture1darraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",761,{"inputs":[{"name":"srgbtexture1darraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",762,{"inputs":[{"name":"srgbtexture1darraylayermipmap"}],"output":{"name":"srgbtexture1darraylayermipmap"}}],[11,"width","","Returns the width of that image.",762,{"inputs":[{"name":"srgbtexture1darraylayermipmap"}],"output":{"name":"u32"}}],[11,"into","","",762,{"inputs":[{"name":"srgbtexture1darraylayermipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",762,{"inputs":[{"name":"srgbtexture1darraylayermipmap"}],"output":{"name":"colorattachment"}}],[0,"compressed_srgb_texture1d_array","glium::texture","Contains the implementation of `CompressedSrgbTexture1dArray`.",null,null],[3,"CompressedSrgbTexture1dArray","glium::texture::compressed_srgb_texture1d_array","An array of compressed one-dimensional textures  containing sRGB floating-point data.",null,null],[3,"CompressedSrgbTexture1dArrayLayer","","Represents a single layer of a `CompressedSrgbTexture1dArray`.",null,null],[3,"CompressedSrgbTexture1dArrayMipmap","","Represents a single mipmap level of a `CompressedSrgbTexture1dArray`.",null,null],[3,"CompressedSrgbTexture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `CompressedSrgbTexture1dArray`.",null,null],[11,"get_id","","",763,{"inputs":[{"name":"compressedsrgbtexture1darray"}],"output":{"name":"gluint"}}],[11,"fmt","","",763,{"inputs":[{"name":"compressedsrgbtexture1darray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",763,{"inputs":[{"name":"compressedsrgbtexture1darray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::compressed_srgb_texture1d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",763,{"inputs":[{"name":"compressedsrgbtexture1darray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",763,{"inputs":[{"name":"compressedsrgbtexture1darray"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",763,{"inputs":[{"name":"compressedsrgbtexture1darray"},{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",763,{"inputs":[{"name":"compressedsrgbtexture1darray"},{"name":"f"},{"name":"vec"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_compressed_data","","Builds a new texture with a specific format. The input data must also be of the\nspecified compressed format.",763,{"inputs":[{"name":"compressedsrgbtexture1darray"},{"name":"f"},{"name":"vec"},{"name":"u32"},{"name":"u32"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",763,{"inputs":[{"name":"compressedsrgbtexture1darray"},{"name":"f"},{"name":"vec"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",763,{"inputs":[{"name":"compressedsrgbtexture1darray"},{"name":"f"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",763,{"inputs":[{"name":"compressedsrgbtexture1darray"},{"name":"f"},{"name":"compressedsrgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedsrgbtexture1darray"}}],[11,"width","","Returns the width of that image.",763,{"inputs":[{"name":"compressedsrgbtexture1darray"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",763,{"inputs":[{"name":"compressedsrgbtexture1darray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",763,{"inputs":[{"name":"compressedsrgbtexture1darray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",763,{"inputs":[{"name":"compressedsrgbtexture1darray"}],"output":{"name":"compressedsrgbtexture1darraylayer"}}],[11,"layer","","Access a single layer of this texture.",763,{"inputs":[{"name":"compressedsrgbtexture1darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",763,{"inputs":[{"name":"compressedsrgbtexture1darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",763,{"inputs":[{"name":"compressedsrgbtexture1darray"}],"output":{"name":"compressedsrgbtexture1darraymipmap"}}],[11,"clone","","",764,{"inputs":[{"name":"compressedsrgbtexture1darraylayer"}],"output":{"name":"compressedsrgbtexture1darraylayer"}}],[11,"width","","Returns the width of that image.",764,{"inputs":[{"name":"compressedsrgbtexture1darraylayer"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",764,{"inputs":[{"name":"compressedsrgbtexture1darraylayer"}],"output":{"name":"compressedsrgbtexture1darray"}}],[11,"get_layer","","Returns the layer index.",764,{"inputs":[{"name":"compressedsrgbtexture1darraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",764,{"inputs":[{"name":"compressedsrgbtexture1darraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",764,{"inputs":[{"name":"compressedsrgbtexture1darraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",764,{"inputs":[{"name":"compressedsrgbtexture1darraylayer"}],"output":{"name":"compressedsrgbtexture1darraylayermipmap"}}],[11,"clone","","",765,{"inputs":[{"name":"compressedsrgbtexture1darraymipmap"}],"output":{"name":"compressedsrgbtexture1darraymipmap"}}],[11,"deref","","",765,{"inputs":[{"name":"compressedsrgbtexture1darraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",765,{"inputs":[{"name":"compressedsrgbtexture1darraymipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",765,{"inputs":[{"name":"compressedsrgbtexture1darraymipmap"}],"output":{"name":"compressedsrgbtexture1darray"}}],[11,"get_level","","Returns the texture level.",765,{"inputs":[{"name":"compressedsrgbtexture1darraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",765,{"inputs":[{"name":"compressedsrgbtexture1darraymipmap"}],"output":{"name":"compressedsrgbtexture1darraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",765,{"inputs":[{"name":"compressedsrgbtexture1darraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",766,{"inputs":[{"name":"compressedsrgbtexture1darraylayermipmap"}],"output":{"name":"compressedsrgbtexture1darraylayermipmap"}}],[11,"width","","Returns the width of that image.",766,{"inputs":[{"name":"compressedsrgbtexture1darraylayermipmap"}],"output":{"name":"u32"}}],[11,"into","","",766,{"inputs":[{"name":"compressedsrgbtexture1darraylayermipmap"}],"output":{"name":"textureanyimage"}}],[0,"integral_texture1d_array","glium::texture","Contains the implementation of `IntegralTexture1dArray`.",null,null],[3,"IntegralTexture1dArray","glium::texture::integral_texture1d_array","An array of one-dimensional textures  containing signed integral data.",null,null],[3,"IntegralTexture1dArrayLayer","","Represents a single layer of a `IntegralTexture1dArray`.",null,null],[3,"IntegralTexture1dArrayMipmap","","Represents a single mipmap level of a `IntegralTexture1dArray`.",null,null],[3,"IntegralTexture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `IntegralTexture1dArray`.",null,null],[11,"get_id","","",767,{"inputs":[{"name":"integraltexture1darray"}],"output":{"name":"gluint"}}],[11,"fmt","","",767,{"inputs":[{"name":"integraltexture1darray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",767,{"inputs":[{"name":"integraltexture1darray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::integral_texture1d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",767,{"inputs":[{"name":"integraltexture1darray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",767,{"inputs":[{"name":"integraltexture1darray"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",767,{"inputs":[{"name":"integraltexture1darray"},{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",767,{"inputs":[{"name":"integraltexture1darray"},{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",767,{"inputs":[{"name":"integraltexture1darray"},{"name":"f"},{"name":"vec"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",767,{"inputs":[{"name":"integraltexture1darray"},{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",767,{"inputs":[{"name":"integraltexture1darray"},{"name":"f"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",767,{"inputs":[{"name":"integraltexture1darray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",767,{"inputs":[{"name":"integraltexture1darray"},{"name":"f"},{"name":"uncompressedintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"integraltexture1darray"}}],[11,"width","","Returns the width of that image.",767,{"inputs":[{"name":"integraltexture1darray"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",767,{"inputs":[{"name":"integraltexture1darray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",767,{"inputs":[{"name":"integraltexture1darray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",767,{"inputs":[{"name":"integraltexture1darray"}],"output":{"name":"integraltexture1darraylayer"}}],[11,"layer","","Access a single layer of this texture.",767,{"inputs":[{"name":"integraltexture1darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",767,{"inputs":[{"name":"integraltexture1darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",767,{"inputs":[{"name":"integraltexture1darray"}],"output":{"name":"integraltexture1darraymipmap"}}],[11,"clone","","",768,{"inputs":[{"name":"integraltexture1darraylayer"}],"output":{"name":"integraltexture1darraylayer"}}],[11,"width","","Returns the width of that image.",768,{"inputs":[{"name":"integraltexture1darraylayer"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",768,{"inputs":[{"name":"integraltexture1darraylayer"}],"output":{"name":"integraltexture1darray"}}],[11,"get_layer","","Returns the layer index.",768,{"inputs":[{"name":"integraltexture1darraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",768,{"inputs":[{"name":"integraltexture1darraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",768,{"inputs":[{"name":"integraltexture1darraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",768,{"inputs":[{"name":"integraltexture1darraylayer"}],"output":{"name":"integraltexture1darraylayermipmap"}}],[11,"clone","","",769,{"inputs":[{"name":"integraltexture1darraymipmap"}],"output":{"name":"integraltexture1darraymipmap"}}],[11,"deref","","",769,{"inputs":[{"name":"integraltexture1darraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",769,{"inputs":[{"name":"integraltexture1darraymipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",769,{"inputs":[{"name":"integraltexture1darraymipmap"}],"output":{"name":"integraltexture1darray"}}],[11,"get_level","","Returns the texture level.",769,{"inputs":[{"name":"integraltexture1darraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",769,{"inputs":[{"name":"integraltexture1darraymipmap"}],"output":{"name":"integraltexture1darraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",769,{"inputs":[{"name":"integraltexture1darraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",770,{"inputs":[{"name":"integraltexture1darraylayermipmap"}],"output":{"name":"integraltexture1darraylayermipmap"}}],[11,"width","","Returns the width of that image.",770,{"inputs":[{"name":"integraltexture1darraylayermipmap"}],"output":{"name":"u32"}}],[11,"into","","",770,{"inputs":[{"name":"integraltexture1darraylayermipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",770,{"inputs":[{"name":"integraltexture1darraylayermipmap"}],"output":{"name":"colorattachment"}}],[0,"unsigned_texture1d_array","glium::texture","Contains the implementation of `UnsignedTexture1dArray`.",null,null],[3,"UnsignedTexture1dArray","glium::texture::unsigned_texture1d_array","An array of one-dimensional textures  containing unsigned integral data.",null,null],[3,"UnsignedTexture1dArrayLayer","","Represents a single layer of a `UnsignedTexture1dArray`.",null,null],[3,"UnsignedTexture1dArrayMipmap","","Represents a single mipmap level of a `UnsignedTexture1dArray`.",null,null],[3,"UnsignedTexture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `UnsignedTexture1dArray`.",null,null],[11,"get_id","","",771,{"inputs":[{"name":"unsignedtexture1darray"}],"output":{"name":"gluint"}}],[11,"fmt","","",771,{"inputs":[{"name":"unsignedtexture1darray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",771,{"inputs":[{"name":"unsignedtexture1darray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::unsigned_texture1d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",771,{"inputs":[{"name":"unsignedtexture1darray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",771,{"inputs":[{"name":"unsignedtexture1darray"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",771,{"inputs":[{"name":"unsignedtexture1darray"},{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",771,{"inputs":[{"name":"unsignedtexture1darray"},{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",771,{"inputs":[{"name":"unsignedtexture1darray"},{"name":"f"},{"name":"vec"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",771,{"inputs":[{"name":"unsignedtexture1darray"},{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",771,{"inputs":[{"name":"unsignedtexture1darray"},{"name":"f"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",771,{"inputs":[{"name":"unsignedtexture1darray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",771,{"inputs":[{"name":"unsignedtexture1darray"},{"name":"f"},{"name":"uncompresseduintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"unsignedtexture1darray"}}],[11,"width","","Returns the width of that image.",771,{"inputs":[{"name":"unsignedtexture1darray"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",771,{"inputs":[{"name":"unsignedtexture1darray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",771,{"inputs":[{"name":"unsignedtexture1darray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",771,{"inputs":[{"name":"unsignedtexture1darray"}],"output":{"name":"unsignedtexture1darraylayer"}}],[11,"layer","","Access a single layer of this texture.",771,{"inputs":[{"name":"unsignedtexture1darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",771,{"inputs":[{"name":"unsignedtexture1darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",771,{"inputs":[{"name":"unsignedtexture1darray"}],"output":{"name":"unsignedtexture1darraymipmap"}}],[11,"clone","","",772,{"inputs":[{"name":"unsignedtexture1darraylayer"}],"output":{"name":"unsignedtexture1darraylayer"}}],[11,"width","","Returns the width of that image.",772,{"inputs":[{"name":"unsignedtexture1darraylayer"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",772,{"inputs":[{"name":"unsignedtexture1darraylayer"}],"output":{"name":"unsignedtexture1darray"}}],[11,"get_layer","","Returns the layer index.",772,{"inputs":[{"name":"unsignedtexture1darraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",772,{"inputs":[{"name":"unsignedtexture1darraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",772,{"inputs":[{"name":"unsignedtexture1darraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",772,{"inputs":[{"name":"unsignedtexture1darraylayer"}],"output":{"name":"unsignedtexture1darraylayermipmap"}}],[11,"clone","","",773,{"inputs":[{"name":"unsignedtexture1darraymipmap"}],"output":{"name":"unsignedtexture1darraymipmap"}}],[11,"deref","","",773,{"inputs":[{"name":"unsignedtexture1darraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",773,{"inputs":[{"name":"unsignedtexture1darraymipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",773,{"inputs":[{"name":"unsignedtexture1darraymipmap"}],"output":{"name":"unsignedtexture1darray"}}],[11,"get_level","","Returns the texture level.",773,{"inputs":[{"name":"unsignedtexture1darraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",773,{"inputs":[{"name":"unsignedtexture1darraymipmap"}],"output":{"name":"unsignedtexture1darraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",773,{"inputs":[{"name":"unsignedtexture1darraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",774,{"inputs":[{"name":"unsignedtexture1darraylayermipmap"}],"output":{"name":"unsignedtexture1darraylayermipmap"}}],[11,"width","","Returns the width of that image.",774,{"inputs":[{"name":"unsignedtexture1darraylayermipmap"}],"output":{"name":"u32"}}],[11,"into","","",774,{"inputs":[{"name":"unsignedtexture1darraylayermipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",774,{"inputs":[{"name":"unsignedtexture1darraylayermipmap"}],"output":{"name":"colorattachment"}}],[0,"depth_texture1d_array","glium::texture","Contains the implementation of `DepthTexture1dArray`.",null,null],[3,"DepthTexture1dArray","glium::texture::depth_texture1d_array","An array of one-dimensional textures  containing depth data.",null,null],[3,"DepthTexture1dArrayLayer","","Represents a single layer of a `DepthTexture1dArray`.",null,null],[3,"DepthTexture1dArrayMipmap","","Represents a single mipmap level of a `DepthTexture1dArray`.",null,null],[3,"DepthTexture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `DepthTexture1dArray`.",null,null],[11,"get_id","","",775,{"inputs":[{"name":"depthtexture1darray"}],"output":{"name":"gluint"}}],[11,"fmt","","",775,{"inputs":[{"name":"depthtexture1darray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",775,{"inputs":[{"name":"depthtexture1darray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::depth_texture1d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",775,{"inputs":[{"name":"depthtexture1darray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",775,{"inputs":[{"name":"depthtexture1darray"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",775,{"inputs":[{"name":"depthtexture1darray"},{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",775,{"inputs":[{"name":"depthtexture1darray"},{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",775,{"inputs":[{"name":"depthtexture1darray"},{"name":"f"},{"name":"vec"},{"name":"depthformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",775,{"inputs":[{"name":"depthtexture1darray"},{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",775,{"inputs":[{"name":"depthtexture1darray"},{"name":"f"},{"name":"depthformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",775,{"inputs":[{"name":"depthtexture1darray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",775,{"inputs":[{"name":"depthtexture1darray"},{"name":"f"},{"name":"depthformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthtexture1darray"}}],[11,"width","","Returns the width of that image.",775,{"inputs":[{"name":"depthtexture1darray"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",775,{"inputs":[{"name":"depthtexture1darray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",775,{"inputs":[{"name":"depthtexture1darray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",775,{"inputs":[{"name":"depthtexture1darray"}],"output":{"name":"depthtexture1darraylayer"}}],[11,"layer","","Access a single layer of this texture.",775,{"inputs":[{"name":"depthtexture1darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",775,{"inputs":[{"name":"depthtexture1darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",775,{"inputs":[{"name":"depthtexture1darray"}],"output":{"name":"depthtexture1darraymipmap"}}],[11,"clone","","",776,{"inputs":[{"name":"depthtexture1darraylayer"}],"output":{"name":"depthtexture1darraylayer"}}],[11,"width","","Returns the width of that image.",776,{"inputs":[{"name":"depthtexture1darraylayer"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",776,{"inputs":[{"name":"depthtexture1darraylayer"}],"output":{"name":"depthtexture1darray"}}],[11,"get_layer","","Returns the layer index.",776,{"inputs":[{"name":"depthtexture1darraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",776,{"inputs":[{"name":"depthtexture1darraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",776,{"inputs":[{"name":"depthtexture1darraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",776,{"inputs":[{"name":"depthtexture1darraylayer"}],"output":{"name":"depthtexture1darraylayermipmap"}}],[11,"clone","","",777,{"inputs":[{"name":"depthtexture1darraymipmap"}],"output":{"name":"depthtexture1darraymipmap"}}],[11,"deref","","",777,{"inputs":[{"name":"depthtexture1darraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",777,{"inputs":[{"name":"depthtexture1darraymipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",777,{"inputs":[{"name":"depthtexture1darraymipmap"}],"output":{"name":"depthtexture1darray"}}],[11,"get_level","","Returns the texture level.",777,{"inputs":[{"name":"depthtexture1darraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",777,{"inputs":[{"name":"depthtexture1darraymipmap"}],"output":{"name":"depthtexture1darraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",777,{"inputs":[{"name":"depthtexture1darraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",778,{"inputs":[{"name":"depthtexture1darraylayermipmap"}],"output":{"name":"depthtexture1darraylayermipmap"}}],[11,"width","","Returns the width of that image.",778,{"inputs":[{"name":"depthtexture1darraylayermipmap"}],"output":{"name":"u32"}}],[11,"into","","",778,{"inputs":[{"name":"depthtexture1darraylayermipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_depth_attachment","","",778,{"inputs":[{"name":"depthtexture1darraylayermipmap"}],"output":{"name":"depthattachment"}}],[0,"stencil_texture1d_array","glium::texture","Contains the implementation of `StencilTexture1dArray`.",null,null],[3,"StencilTexture1dArray","glium::texture::stencil_texture1d_array","An array of one-dimensional textures  containing stencil data.",null,null],[3,"StencilTexture1dArrayLayer","","Represents a single layer of a `StencilTexture1dArray`.",null,null],[3,"StencilTexture1dArrayMipmap","","Represents a single mipmap level of a `StencilTexture1dArray`.",null,null],[3,"StencilTexture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `StencilTexture1dArray`.",null,null],[11,"get_id","","",779,{"inputs":[{"name":"stenciltexture1darray"}],"output":{"name":"gluint"}}],[11,"fmt","","",779,{"inputs":[{"name":"stenciltexture1darray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",779,{"inputs":[{"name":"stenciltexture1darray"}],"output":{"name":"textureany"}}],[11,"get_internal_format","","Determines the internal format of this texture.",779,{"inputs":[{"name":"stenciltexture1darray"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",779,{"inputs":[{"name":"stenciltexture1darray"},{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",779,{"inputs":[{"name":"stenciltexture1darray"},{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",779,{"inputs":[{"name":"stenciltexture1darray"},{"name":"f"},{"name":"vec"},{"name":"stencilformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",779,{"inputs":[{"name":"stenciltexture1darray"},{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",779,{"inputs":[{"name":"stenciltexture1darray"},{"name":"f"},{"name":"stencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",779,{"inputs":[{"name":"stenciltexture1darray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",779,{"inputs":[{"name":"stenciltexture1darray"},{"name":"f"},{"name":"stencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"stenciltexture1darray"}}],[11,"width","","Returns the width of that image.",779,{"inputs":[{"name":"stenciltexture1darray"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",779,{"inputs":[{"name":"stenciltexture1darray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",779,{"inputs":[{"name":"stenciltexture1darray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",779,{"inputs":[{"name":"stenciltexture1darray"}],"output":{"name":"stenciltexture1darraylayer"}}],[11,"layer","","Access a single layer of this texture.",779,{"inputs":[{"name":"stenciltexture1darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",779,{"inputs":[{"name":"stenciltexture1darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",779,{"inputs":[{"name":"stenciltexture1darray"}],"output":{"name":"stenciltexture1darraymipmap"}}],[11,"clone","","",780,{"inputs":[{"name":"stenciltexture1darraylayer"}],"output":{"name":"stenciltexture1darraylayer"}}],[11,"width","","Returns the width of that image.",780,{"inputs":[{"name":"stenciltexture1darraylayer"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",780,{"inputs":[{"name":"stenciltexture1darraylayer"}],"output":{"name":"stenciltexture1darray"}}],[11,"get_layer","","Returns the layer index.",780,{"inputs":[{"name":"stenciltexture1darraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",780,{"inputs":[{"name":"stenciltexture1darraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",780,{"inputs":[{"name":"stenciltexture1darraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",780,{"inputs":[{"name":"stenciltexture1darraylayer"}],"output":{"name":"stenciltexture1darraylayermipmap"}}],[11,"clone","","",781,{"inputs":[{"name":"stenciltexture1darraymipmap"}],"output":{"name":"stenciltexture1darraymipmap"}}],[11,"deref","","",781,{"inputs":[{"name":"stenciltexture1darraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",781,{"inputs":[{"name":"stenciltexture1darraymipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",781,{"inputs":[{"name":"stenciltexture1darraymipmap"}],"output":{"name":"stenciltexture1darray"}}],[11,"get_level","","Returns the texture level.",781,{"inputs":[{"name":"stenciltexture1darraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",781,{"inputs":[{"name":"stenciltexture1darraymipmap"}],"output":{"name":"stenciltexture1darraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",781,{"inputs":[{"name":"stenciltexture1darraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",782,{"inputs":[{"name":"stenciltexture1darraylayermipmap"}],"output":{"name":"stenciltexture1darraylayermipmap"}}],[11,"width","","Returns the width of that image.",782,{"inputs":[{"name":"stenciltexture1darraylayermipmap"}],"output":{"name":"u32"}}],[11,"into","","",782,{"inputs":[{"name":"stenciltexture1darraylayermipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_stencil_attachment","","",782,{"inputs":[{"name":"stenciltexture1darraylayermipmap"}],"output":{"name":"stencilattachment"}}],[0,"depth_stencil_texture1d_array","glium::texture","Contains the implementation of `DepthStencilTexture1dArray`.",null,null],[3,"DepthStencilTexture1dArray","glium::texture::depth_stencil_texture1d_array","An array of one-dimensional textures  containing both depth and stencil data.",null,null],[3,"DepthStencilTexture1dArrayLayer","","Represents a single layer of a `DepthStencilTexture1dArray`.",null,null],[3,"DepthStencilTexture1dArrayMipmap","","Represents a single mipmap level of a `DepthStencilTexture1dArray`.",null,null],[3,"DepthStencilTexture1dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `DepthStencilTexture1dArray`.",null,null],[11,"get_id","","",783,{"inputs":[{"name":"depthstenciltexture1darray"}],"output":{"name":"gluint"}}],[11,"fmt","","",783,{"inputs":[{"name":"depthstenciltexture1darray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",783,{"inputs":[{"name":"depthstenciltexture1darray"}],"output":{"name":"textureany"}}],[11,"get_internal_format","","Determines the internal format of this texture.",783,{"inputs":[{"name":"depthstenciltexture1darray"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",783,{"inputs":[{"name":"depthstenciltexture1darray"},{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",783,{"inputs":[{"name":"depthstenciltexture1darray"},{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",783,{"inputs":[{"name":"depthstenciltexture1darray"},{"name":"f"},{"name":"vec"},{"name":"depthstencilformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",783,{"inputs":[{"name":"depthstenciltexture1darray"},{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",783,{"inputs":[{"name":"depthstenciltexture1darray"},{"name":"f"},{"name":"depthstencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",783,{"inputs":[{"name":"depthstenciltexture1darray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",783,{"inputs":[{"name":"depthstenciltexture1darray"},{"name":"f"},{"name":"depthstencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthstenciltexture1darray"}}],[11,"width","","Returns the width of that image.",783,{"inputs":[{"name":"depthstenciltexture1darray"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",783,{"inputs":[{"name":"depthstenciltexture1darray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",783,{"inputs":[{"name":"depthstenciltexture1darray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",783,{"inputs":[{"name":"depthstenciltexture1darray"}],"output":{"name":"depthstenciltexture1darraylayer"}}],[11,"layer","","Access a single layer of this texture.",783,{"inputs":[{"name":"depthstenciltexture1darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",783,{"inputs":[{"name":"depthstenciltexture1darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",783,{"inputs":[{"name":"depthstenciltexture1darray"}],"output":{"name":"depthstenciltexture1darraymipmap"}}],[11,"clone","","",784,{"inputs":[{"name":"depthstenciltexture1darraylayer"}],"output":{"name":"depthstenciltexture1darraylayer"}}],[11,"width","","Returns the width of that image.",784,{"inputs":[{"name":"depthstenciltexture1darraylayer"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",784,{"inputs":[{"name":"depthstenciltexture1darraylayer"}],"output":{"name":"depthstenciltexture1darray"}}],[11,"get_layer","","Returns the layer index.",784,{"inputs":[{"name":"depthstenciltexture1darraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",784,{"inputs":[{"name":"depthstenciltexture1darraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",784,{"inputs":[{"name":"depthstenciltexture1darraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",784,{"inputs":[{"name":"depthstenciltexture1darraylayer"}],"output":{"name":"depthstenciltexture1darraylayermipmap"}}],[11,"clone","","",785,{"inputs":[{"name":"depthstenciltexture1darraymipmap"}],"output":{"name":"depthstenciltexture1darraymipmap"}}],[11,"deref","","",785,{"inputs":[{"name":"depthstenciltexture1darraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",785,{"inputs":[{"name":"depthstenciltexture1darraymipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",785,{"inputs":[{"name":"depthstenciltexture1darraymipmap"}],"output":{"name":"depthstenciltexture1darray"}}],[11,"get_level","","Returns the texture level.",785,{"inputs":[{"name":"depthstenciltexture1darraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",785,{"inputs":[{"name":"depthstenciltexture1darraymipmap"}],"output":{"name":"depthstenciltexture1darraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",785,{"inputs":[{"name":"depthstenciltexture1darraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",786,{"inputs":[{"name":"depthstenciltexture1darraylayermipmap"}],"output":{"name":"depthstenciltexture1darraylayermipmap"}}],[11,"width","","Returns the width of that image.",786,{"inputs":[{"name":"depthstenciltexture1darraylayermipmap"}],"output":{"name":"u32"}}],[11,"into","","",786,{"inputs":[{"name":"depthstenciltexture1darraylayermipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_depth_stencil_attachment","","",786,{"inputs":[{"name":"depthstenciltexture1darraylayermipmap"}],"output":{"name":"depthstencilattachment"}}],[0,"texture2d_array","glium::texture","Contains the implementation of `Texture2dArray`.",null,null],[3,"Texture2dArray","glium::texture::texture2d_array","An array of two-dimensional textures  containing floating-point data.",null,null],[3,"Texture2dArrayLayer","","Represents a single layer of a `Texture2dArray`.",null,null],[3,"Texture2dArrayMipmap","","Represents a single mipmap level of a `Texture2dArray`.",null,null],[3,"Texture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `Texture2dArray`.",null,null],[11,"get_id","","",787,{"inputs":[{"name":"texture2darray"}],"output":{"name":"gluint"}}],[11,"fmt","","",787,{"inputs":[{"name":"texture2darray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",787,{"inputs":[{"name":"texture2darray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::texture2d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",787,{"inputs":[{"name":"texture2darray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",787,{"inputs":[{"name":"texture2darray"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",787,{"inputs":[{"name":"texture2darray"},{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",787,{"inputs":[{"name":"texture2darray"},{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",787,{"inputs":[{"name":"texture2darray"},{"name":"f"},{"name":"vec"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",787,{"inputs":[{"name":"texture2darray"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",787,{"inputs":[{"name":"texture2darray"},{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",787,{"inputs":[{"name":"texture2darray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",787,{"inputs":[{"name":"texture2darray"},{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"texture2darray"}}],[11,"width","","Returns the width of that image.",787,{"inputs":[{"name":"texture2darray"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",787,{"inputs":[{"name":"texture2darray"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",787,{"inputs":[{"name":"texture2darray"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",787,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",787,{"inputs":[{"name":"texture2darray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",787,{"inputs":[{"name":"texture2darray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",787,{"inputs":[{"name":"texture2darray"}],"output":{"name":"texture2darraylayer"}}],[11,"layer","","Access a single layer of this texture.",787,{"inputs":[{"name":"texture2darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",787,{"inputs":[{"name":"texture2darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",787,{"inputs":[{"name":"texture2darray"}],"output":{"name":"texture2darraymipmap"}}],[11,"clone","","",788,{"inputs":[{"name":"texture2darraylayer"}],"output":{"name":"texture2darraylayer"}}],[11,"width","","Returns the width of that image.",788,{"inputs":[{"name":"texture2darraylayer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",788,{"inputs":[{"name":"texture2darraylayer"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",788,null],[11,"get_texture","","Returns the corresponding texture.",788,{"inputs":[{"name":"texture2darraylayer"}],"output":{"name":"texture2darray"}}],[11,"get_layer","","Returns the layer index.",788,{"inputs":[{"name":"texture2darraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",788,{"inputs":[{"name":"texture2darraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",788,{"inputs":[{"name":"texture2darraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",788,{"inputs":[{"name":"texture2darraylayer"}],"output":{"name":"texture2darraylayermipmap"}}],[11,"clone","","",789,{"inputs":[{"name":"texture2darraymipmap"}],"output":{"name":"texture2darraymipmap"}}],[11,"deref","","",789,{"inputs":[{"name":"texture2darraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",789,{"inputs":[{"name":"texture2darraymipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",789,{"inputs":[{"name":"texture2darraymipmap"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",789,{"inputs":[{"name":"texture2darraymipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",789,null],[11,"get_texture","","Returns the corresponding texture.",789,{"inputs":[{"name":"texture2darraymipmap"}],"output":{"name":"texture2darray"}}],[11,"get_level","","Returns the texture level.",789,{"inputs":[{"name":"texture2darraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",789,{"inputs":[{"name":"texture2darraymipmap"}],"output":{"name":"texture2darraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",789,{"inputs":[{"name":"texture2darraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",790,{"inputs":[{"name":"texture2darraylayermipmap"}],"output":{"name":"texture2darraylayermipmap"}}],[11,"width","","Returns the width of that image.",790,{"inputs":[{"name":"texture2darraylayermipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",790,{"inputs":[{"name":"texture2darraylayermipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",790,null],[11,"into","","",790,{"inputs":[{"name":"texture2darraylayermipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",790,{"inputs":[{"name":"texture2darraylayermipmap"}],"output":{"name":"colorattachment"}}],[0,"compressed_texture2d_array","glium::texture","Contains the implementation of `CompressedTexture2dArray`.",null,null],[3,"CompressedTexture2dArray","glium::texture::compressed_texture2d_array","An array of compressed two-dimensional textures  containing floating-point data.",null,null],[3,"CompressedTexture2dArrayLayer","","Represents a single layer of a `CompressedTexture2dArray`.",null,null],[3,"CompressedTexture2dArrayMipmap","","Represents a single mipmap level of a `CompressedTexture2dArray`.",null,null],[3,"CompressedTexture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `CompressedTexture2dArray`.",null,null],[11,"get_id","","",791,{"inputs":[{"name":"compressedtexture2darray"}],"output":{"name":"gluint"}}],[11,"fmt","","",791,{"inputs":[{"name":"compressedtexture2darray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",791,{"inputs":[{"name":"compressedtexture2darray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::compressed_texture2d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",791,{"inputs":[{"name":"compressedtexture2darray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",791,{"inputs":[{"name":"compressedtexture2darray"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",791,{"inputs":[{"name":"compressedtexture2darray"},{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",791,{"inputs":[{"name":"compressedtexture2darray"},{"name":"f"},{"name":"vec"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_compressed_data","","Builds a new texture with a specific format. The input data must also be of the\nspecified compressed format.",791,{"inputs":[{"name":"compressedtexture2darray"},{"name":"f"},{"name":"vec"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",791,{"inputs":[{"name":"compressedtexture2darray"},{"name":"f"},{"name":"vec"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",791,{"inputs":[{"name":"compressedtexture2darray"},{"name":"f"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",791,{"inputs":[{"name":"compressedtexture2darray"},{"name":"f"},{"name":"compressedformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedtexture2darray"}}],[11,"width","","Returns the width of that image.",791,{"inputs":[{"name":"compressedtexture2darray"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",791,{"inputs":[{"name":"compressedtexture2darray"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",791,{"inputs":[{"name":"compressedtexture2darray"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",791,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",791,{"inputs":[{"name":"compressedtexture2darray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",791,{"inputs":[{"name":"compressedtexture2darray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",791,{"inputs":[{"name":"compressedtexture2darray"}],"output":{"name":"compressedtexture2darraylayer"}}],[11,"layer","","Access a single layer of this texture.",791,{"inputs":[{"name":"compressedtexture2darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",791,{"inputs":[{"name":"compressedtexture2darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",791,{"inputs":[{"name":"compressedtexture2darray"}],"output":{"name":"compressedtexture2darraymipmap"}}],[11,"clone","","",792,{"inputs":[{"name":"compressedtexture2darraylayer"}],"output":{"name":"compressedtexture2darraylayer"}}],[11,"width","","Returns the width of that image.",792,{"inputs":[{"name":"compressedtexture2darraylayer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",792,{"inputs":[{"name":"compressedtexture2darraylayer"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",792,null],[11,"get_texture","","Returns the corresponding texture.",792,{"inputs":[{"name":"compressedtexture2darraylayer"}],"output":{"name":"compressedtexture2darray"}}],[11,"get_layer","","Returns the layer index.",792,{"inputs":[{"name":"compressedtexture2darraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",792,{"inputs":[{"name":"compressedtexture2darraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",792,{"inputs":[{"name":"compressedtexture2darraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",792,{"inputs":[{"name":"compressedtexture2darraylayer"}],"output":{"name":"compressedtexture2darraylayermipmap"}}],[11,"clone","","",793,{"inputs":[{"name":"compressedtexture2darraymipmap"}],"output":{"name":"compressedtexture2darraymipmap"}}],[11,"deref","","",793,{"inputs":[{"name":"compressedtexture2darraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",793,{"inputs":[{"name":"compressedtexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",793,{"inputs":[{"name":"compressedtexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",793,{"inputs":[{"name":"compressedtexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",793,null],[11,"get_texture","","Returns the corresponding texture.",793,{"inputs":[{"name":"compressedtexture2darraymipmap"}],"output":{"name":"compressedtexture2darray"}}],[11,"get_level","","Returns the texture level.",793,{"inputs":[{"name":"compressedtexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",793,{"inputs":[{"name":"compressedtexture2darraymipmap"}],"output":{"name":"compressedtexture2darraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",793,{"inputs":[{"name":"compressedtexture2darraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",794,{"inputs":[{"name":"compressedtexture2darraylayermipmap"}],"output":{"name":"compressedtexture2darraylayermipmap"}}],[11,"width","","Returns the width of that image.",794,{"inputs":[{"name":"compressedtexture2darraylayermipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",794,{"inputs":[{"name":"compressedtexture2darraylayermipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",794,null],[11,"into","","",794,{"inputs":[{"name":"compressedtexture2darraylayermipmap"}],"output":{"name":"textureanyimage"}}],[0,"srgb_texture2d_array","glium::texture","Contains the implementation of `SrgbTexture2dArray`.",null,null],[3,"SrgbTexture2dArray","glium::texture::srgb_texture2d_array","An array of two-dimensional textures  containing sRGB floating-point data.",null,null],[3,"SrgbTexture2dArrayLayer","","Represents a single layer of a `SrgbTexture2dArray`.",null,null],[3,"SrgbTexture2dArrayMipmap","","Represents a single mipmap level of a `SrgbTexture2dArray`.",null,null],[3,"SrgbTexture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `SrgbTexture2dArray`.",null,null],[11,"get_id","","",795,{"inputs":[{"name":"srgbtexture2darray"}],"output":{"name":"gluint"}}],[11,"fmt","","",795,{"inputs":[{"name":"srgbtexture2darray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",795,{"inputs":[{"name":"srgbtexture2darray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::srgb_texture2d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",795,{"inputs":[{"name":"srgbtexture2darray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",795,{"inputs":[{"name":"srgbtexture2darray"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",795,{"inputs":[{"name":"srgbtexture2darray"},{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",795,{"inputs":[{"name":"srgbtexture2darray"},{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",795,{"inputs":[{"name":"srgbtexture2darray"},{"name":"f"},{"name":"vec"},{"name":"srgbformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",795,{"inputs":[{"name":"srgbtexture2darray"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",795,{"inputs":[{"name":"srgbtexture2darray"},{"name":"f"},{"name":"srgbformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",795,{"inputs":[{"name":"srgbtexture2darray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",795,{"inputs":[{"name":"srgbtexture2darray"},{"name":"f"},{"name":"srgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"srgbtexture2darray"}}],[11,"width","","Returns the width of that image.",795,{"inputs":[{"name":"srgbtexture2darray"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",795,{"inputs":[{"name":"srgbtexture2darray"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",795,{"inputs":[{"name":"srgbtexture2darray"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",795,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",795,{"inputs":[{"name":"srgbtexture2darray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",795,{"inputs":[{"name":"srgbtexture2darray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",795,{"inputs":[{"name":"srgbtexture2darray"}],"output":{"name":"srgbtexture2darraylayer"}}],[11,"layer","","Access a single layer of this texture.",795,{"inputs":[{"name":"srgbtexture2darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",795,{"inputs":[{"name":"srgbtexture2darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",795,{"inputs":[{"name":"srgbtexture2darray"}],"output":{"name":"srgbtexture2darraymipmap"}}],[11,"clone","","",796,{"inputs":[{"name":"srgbtexture2darraylayer"}],"output":{"name":"srgbtexture2darraylayer"}}],[11,"width","","Returns the width of that image.",796,{"inputs":[{"name":"srgbtexture2darraylayer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",796,{"inputs":[{"name":"srgbtexture2darraylayer"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",796,null],[11,"get_texture","","Returns the corresponding texture.",796,{"inputs":[{"name":"srgbtexture2darraylayer"}],"output":{"name":"srgbtexture2darray"}}],[11,"get_layer","","Returns the layer index.",796,{"inputs":[{"name":"srgbtexture2darraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",796,{"inputs":[{"name":"srgbtexture2darraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",796,{"inputs":[{"name":"srgbtexture2darraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",796,{"inputs":[{"name":"srgbtexture2darraylayer"}],"output":{"name":"srgbtexture2darraylayermipmap"}}],[11,"clone","","",797,{"inputs":[{"name":"srgbtexture2darraymipmap"}],"output":{"name":"srgbtexture2darraymipmap"}}],[11,"deref","","",797,{"inputs":[{"name":"srgbtexture2darraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",797,{"inputs":[{"name":"srgbtexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",797,{"inputs":[{"name":"srgbtexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",797,{"inputs":[{"name":"srgbtexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",797,null],[11,"get_texture","","Returns the corresponding texture.",797,{"inputs":[{"name":"srgbtexture2darraymipmap"}],"output":{"name":"srgbtexture2darray"}}],[11,"get_level","","Returns the texture level.",797,{"inputs":[{"name":"srgbtexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",797,{"inputs":[{"name":"srgbtexture2darraymipmap"}],"output":{"name":"srgbtexture2darraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",797,{"inputs":[{"name":"srgbtexture2darraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",798,{"inputs":[{"name":"srgbtexture2darraylayermipmap"}],"output":{"name":"srgbtexture2darraylayermipmap"}}],[11,"width","","Returns the width of that image.",798,{"inputs":[{"name":"srgbtexture2darraylayermipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",798,{"inputs":[{"name":"srgbtexture2darraylayermipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",798,null],[11,"into","","",798,{"inputs":[{"name":"srgbtexture2darraylayermipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",798,{"inputs":[{"name":"srgbtexture2darraylayermipmap"}],"output":{"name":"colorattachment"}}],[0,"compressed_srgb_texture2d_array","glium::texture","Contains the implementation of `CompressedSrgbTexture2dArray`.",null,null],[3,"CompressedSrgbTexture2dArray","glium::texture::compressed_srgb_texture2d_array","An array of compressed two-dimensional textures  containing sRGB floating-point data.",null,null],[3,"CompressedSrgbTexture2dArrayLayer","","Represents a single layer of a `CompressedSrgbTexture2dArray`.",null,null],[3,"CompressedSrgbTexture2dArrayMipmap","","Represents a single mipmap level of a `CompressedSrgbTexture2dArray`.",null,null],[3,"CompressedSrgbTexture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `CompressedSrgbTexture2dArray`.",null,null],[11,"get_id","","",799,{"inputs":[{"name":"compressedsrgbtexture2darray"}],"output":{"name":"gluint"}}],[11,"fmt","","",799,{"inputs":[{"name":"compressedsrgbtexture2darray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",799,{"inputs":[{"name":"compressedsrgbtexture2darray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::compressed_srgb_texture2d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",799,{"inputs":[{"name":"compressedsrgbtexture2darray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",799,{"inputs":[{"name":"compressedsrgbtexture2darray"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",799,{"inputs":[{"name":"compressedsrgbtexture2darray"},{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",799,{"inputs":[{"name":"compressedsrgbtexture2darray"},{"name":"f"},{"name":"vec"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_compressed_data","","Builds a new texture with a specific format. The input data must also be of the\nspecified compressed format.",799,{"inputs":[{"name":"compressedsrgbtexture2darray"},{"name":"f"},{"name":"vec"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",799,{"inputs":[{"name":"compressedsrgbtexture2darray"},{"name":"f"},{"name":"vec"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",799,{"inputs":[{"name":"compressedsrgbtexture2darray"},{"name":"f"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",799,{"inputs":[{"name":"compressedsrgbtexture2darray"},{"name":"f"},{"name":"compressedsrgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedsrgbtexture2darray"}}],[11,"width","","Returns the width of that image.",799,{"inputs":[{"name":"compressedsrgbtexture2darray"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",799,{"inputs":[{"name":"compressedsrgbtexture2darray"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",799,{"inputs":[{"name":"compressedsrgbtexture2darray"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",799,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",799,{"inputs":[{"name":"compressedsrgbtexture2darray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",799,{"inputs":[{"name":"compressedsrgbtexture2darray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",799,{"inputs":[{"name":"compressedsrgbtexture2darray"}],"output":{"name":"compressedsrgbtexture2darraylayer"}}],[11,"layer","","Access a single layer of this texture.",799,{"inputs":[{"name":"compressedsrgbtexture2darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",799,{"inputs":[{"name":"compressedsrgbtexture2darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",799,{"inputs":[{"name":"compressedsrgbtexture2darray"}],"output":{"name":"compressedsrgbtexture2darraymipmap"}}],[11,"clone","","",800,{"inputs":[{"name":"compressedsrgbtexture2darraylayer"}],"output":{"name":"compressedsrgbtexture2darraylayer"}}],[11,"width","","Returns the width of that image.",800,{"inputs":[{"name":"compressedsrgbtexture2darraylayer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",800,{"inputs":[{"name":"compressedsrgbtexture2darraylayer"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",800,null],[11,"get_texture","","Returns the corresponding texture.",800,{"inputs":[{"name":"compressedsrgbtexture2darraylayer"}],"output":{"name":"compressedsrgbtexture2darray"}}],[11,"get_layer","","Returns the layer index.",800,{"inputs":[{"name":"compressedsrgbtexture2darraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",800,{"inputs":[{"name":"compressedsrgbtexture2darraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",800,{"inputs":[{"name":"compressedsrgbtexture2darraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",800,{"inputs":[{"name":"compressedsrgbtexture2darraylayer"}],"output":{"name":"compressedsrgbtexture2darraylayermipmap"}}],[11,"clone","","",801,{"inputs":[{"name":"compressedsrgbtexture2darraymipmap"}],"output":{"name":"compressedsrgbtexture2darraymipmap"}}],[11,"deref","","",801,{"inputs":[{"name":"compressedsrgbtexture2darraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",801,{"inputs":[{"name":"compressedsrgbtexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",801,{"inputs":[{"name":"compressedsrgbtexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",801,{"inputs":[{"name":"compressedsrgbtexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",801,null],[11,"get_texture","","Returns the corresponding texture.",801,{"inputs":[{"name":"compressedsrgbtexture2darraymipmap"}],"output":{"name":"compressedsrgbtexture2darray"}}],[11,"get_level","","Returns the texture level.",801,{"inputs":[{"name":"compressedsrgbtexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",801,{"inputs":[{"name":"compressedsrgbtexture2darraymipmap"}],"output":{"name":"compressedsrgbtexture2darraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",801,{"inputs":[{"name":"compressedsrgbtexture2darraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",802,{"inputs":[{"name":"compressedsrgbtexture2darraylayermipmap"}],"output":{"name":"compressedsrgbtexture2darraylayermipmap"}}],[11,"width","","Returns the width of that image.",802,{"inputs":[{"name":"compressedsrgbtexture2darraylayermipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",802,{"inputs":[{"name":"compressedsrgbtexture2darraylayermipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",802,null],[11,"into","","",802,{"inputs":[{"name":"compressedsrgbtexture2darraylayermipmap"}],"output":{"name":"textureanyimage"}}],[0,"integral_texture2d_array","glium::texture","Contains the implementation of `IntegralTexture2dArray`.",null,null],[3,"IntegralTexture2dArray","glium::texture::integral_texture2d_array","An array of two-dimensional textures  containing signed integral data.",null,null],[3,"IntegralTexture2dArrayLayer","","Represents a single layer of a `IntegralTexture2dArray`.",null,null],[3,"IntegralTexture2dArrayMipmap","","Represents a single mipmap level of a `IntegralTexture2dArray`.",null,null],[3,"IntegralTexture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `IntegralTexture2dArray`.",null,null],[11,"get_id","","",803,{"inputs":[{"name":"integraltexture2darray"}],"output":{"name":"gluint"}}],[11,"fmt","","",803,{"inputs":[{"name":"integraltexture2darray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",803,{"inputs":[{"name":"integraltexture2darray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::integral_texture2d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",803,{"inputs":[{"name":"integraltexture2darray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",803,{"inputs":[{"name":"integraltexture2darray"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",803,{"inputs":[{"name":"integraltexture2darray"},{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",803,{"inputs":[{"name":"integraltexture2darray"},{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",803,{"inputs":[{"name":"integraltexture2darray"},{"name":"f"},{"name":"vec"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",803,{"inputs":[{"name":"integraltexture2darray"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",803,{"inputs":[{"name":"integraltexture2darray"},{"name":"f"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",803,{"inputs":[{"name":"integraltexture2darray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",803,{"inputs":[{"name":"integraltexture2darray"},{"name":"f"},{"name":"uncompressedintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"integraltexture2darray"}}],[11,"width","","Returns the width of that image.",803,{"inputs":[{"name":"integraltexture2darray"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",803,{"inputs":[{"name":"integraltexture2darray"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",803,{"inputs":[{"name":"integraltexture2darray"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",803,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",803,{"inputs":[{"name":"integraltexture2darray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",803,{"inputs":[{"name":"integraltexture2darray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",803,{"inputs":[{"name":"integraltexture2darray"}],"output":{"name":"integraltexture2darraylayer"}}],[11,"layer","","Access a single layer of this texture.",803,{"inputs":[{"name":"integraltexture2darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",803,{"inputs":[{"name":"integraltexture2darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",803,{"inputs":[{"name":"integraltexture2darray"}],"output":{"name":"integraltexture2darraymipmap"}}],[11,"clone","","",804,{"inputs":[{"name":"integraltexture2darraylayer"}],"output":{"name":"integraltexture2darraylayer"}}],[11,"width","","Returns the width of that image.",804,{"inputs":[{"name":"integraltexture2darraylayer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",804,{"inputs":[{"name":"integraltexture2darraylayer"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",804,null],[11,"get_texture","","Returns the corresponding texture.",804,{"inputs":[{"name":"integraltexture2darraylayer"}],"output":{"name":"integraltexture2darray"}}],[11,"get_layer","","Returns the layer index.",804,{"inputs":[{"name":"integraltexture2darraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",804,{"inputs":[{"name":"integraltexture2darraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",804,{"inputs":[{"name":"integraltexture2darraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",804,{"inputs":[{"name":"integraltexture2darraylayer"}],"output":{"name":"integraltexture2darraylayermipmap"}}],[11,"clone","","",805,{"inputs":[{"name":"integraltexture2darraymipmap"}],"output":{"name":"integraltexture2darraymipmap"}}],[11,"deref","","",805,{"inputs":[{"name":"integraltexture2darraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",805,{"inputs":[{"name":"integraltexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",805,{"inputs":[{"name":"integraltexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",805,{"inputs":[{"name":"integraltexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",805,null],[11,"get_texture","","Returns the corresponding texture.",805,{"inputs":[{"name":"integraltexture2darraymipmap"}],"output":{"name":"integraltexture2darray"}}],[11,"get_level","","Returns the texture level.",805,{"inputs":[{"name":"integraltexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",805,{"inputs":[{"name":"integraltexture2darraymipmap"}],"output":{"name":"integraltexture2darraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",805,{"inputs":[{"name":"integraltexture2darraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",806,{"inputs":[{"name":"integraltexture2darraylayermipmap"}],"output":{"name":"integraltexture2darraylayermipmap"}}],[11,"width","","Returns the width of that image.",806,{"inputs":[{"name":"integraltexture2darraylayermipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",806,{"inputs":[{"name":"integraltexture2darraylayermipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",806,null],[11,"into","","",806,{"inputs":[{"name":"integraltexture2darraylayermipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",806,{"inputs":[{"name":"integraltexture2darraylayermipmap"}],"output":{"name":"colorattachment"}}],[0,"unsigned_texture2d_array","glium::texture","Contains the implementation of `UnsignedTexture2dArray`.",null,null],[3,"UnsignedTexture2dArray","glium::texture::unsigned_texture2d_array","An array of two-dimensional textures  containing unsigned integral data.",null,null],[3,"UnsignedTexture2dArrayLayer","","Represents a single layer of a `UnsignedTexture2dArray`.",null,null],[3,"UnsignedTexture2dArrayMipmap","","Represents a single mipmap level of a `UnsignedTexture2dArray`.",null,null],[3,"UnsignedTexture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `UnsignedTexture2dArray`.",null,null],[11,"get_id","","",807,{"inputs":[{"name":"unsignedtexture2darray"}],"output":{"name":"gluint"}}],[11,"fmt","","",807,{"inputs":[{"name":"unsignedtexture2darray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",807,{"inputs":[{"name":"unsignedtexture2darray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::unsigned_texture2d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",807,{"inputs":[{"name":"unsignedtexture2darray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",807,{"inputs":[{"name":"unsignedtexture2darray"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",807,{"inputs":[{"name":"unsignedtexture2darray"},{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",807,{"inputs":[{"name":"unsignedtexture2darray"},{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",807,{"inputs":[{"name":"unsignedtexture2darray"},{"name":"f"},{"name":"vec"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",807,{"inputs":[{"name":"unsignedtexture2darray"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",807,{"inputs":[{"name":"unsignedtexture2darray"},{"name":"f"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",807,{"inputs":[{"name":"unsignedtexture2darray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",807,{"inputs":[{"name":"unsignedtexture2darray"},{"name":"f"},{"name":"uncompresseduintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"unsignedtexture2darray"}}],[11,"width","","Returns the width of that image.",807,{"inputs":[{"name":"unsignedtexture2darray"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",807,{"inputs":[{"name":"unsignedtexture2darray"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",807,{"inputs":[{"name":"unsignedtexture2darray"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",807,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",807,{"inputs":[{"name":"unsignedtexture2darray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",807,{"inputs":[{"name":"unsignedtexture2darray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",807,{"inputs":[{"name":"unsignedtexture2darray"}],"output":{"name":"unsignedtexture2darraylayer"}}],[11,"layer","","Access a single layer of this texture.",807,{"inputs":[{"name":"unsignedtexture2darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",807,{"inputs":[{"name":"unsignedtexture2darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",807,{"inputs":[{"name":"unsignedtexture2darray"}],"output":{"name":"unsignedtexture2darraymipmap"}}],[11,"clone","","",808,{"inputs":[{"name":"unsignedtexture2darraylayer"}],"output":{"name":"unsignedtexture2darraylayer"}}],[11,"width","","Returns the width of that image.",808,{"inputs":[{"name":"unsignedtexture2darraylayer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",808,{"inputs":[{"name":"unsignedtexture2darraylayer"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",808,null],[11,"get_texture","","Returns the corresponding texture.",808,{"inputs":[{"name":"unsignedtexture2darraylayer"}],"output":{"name":"unsignedtexture2darray"}}],[11,"get_layer","","Returns the layer index.",808,{"inputs":[{"name":"unsignedtexture2darraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",808,{"inputs":[{"name":"unsignedtexture2darraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",808,{"inputs":[{"name":"unsignedtexture2darraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",808,{"inputs":[{"name":"unsignedtexture2darraylayer"}],"output":{"name":"unsignedtexture2darraylayermipmap"}}],[11,"clone","","",809,{"inputs":[{"name":"unsignedtexture2darraymipmap"}],"output":{"name":"unsignedtexture2darraymipmap"}}],[11,"deref","","",809,{"inputs":[{"name":"unsignedtexture2darraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",809,{"inputs":[{"name":"unsignedtexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",809,{"inputs":[{"name":"unsignedtexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",809,{"inputs":[{"name":"unsignedtexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",809,null],[11,"get_texture","","Returns the corresponding texture.",809,{"inputs":[{"name":"unsignedtexture2darraymipmap"}],"output":{"name":"unsignedtexture2darray"}}],[11,"get_level","","Returns the texture level.",809,{"inputs":[{"name":"unsignedtexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",809,{"inputs":[{"name":"unsignedtexture2darraymipmap"}],"output":{"name":"unsignedtexture2darraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",809,{"inputs":[{"name":"unsignedtexture2darraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",810,{"inputs":[{"name":"unsignedtexture2darraylayermipmap"}],"output":{"name":"unsignedtexture2darraylayermipmap"}}],[11,"width","","Returns the width of that image.",810,{"inputs":[{"name":"unsignedtexture2darraylayermipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",810,{"inputs":[{"name":"unsignedtexture2darraylayermipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",810,null],[11,"into","","",810,{"inputs":[{"name":"unsignedtexture2darraylayermipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",810,{"inputs":[{"name":"unsignedtexture2darraylayermipmap"}],"output":{"name":"colorattachment"}}],[0,"depth_texture2d_array","glium::texture","Contains the implementation of `DepthTexture2dArray`.",null,null],[3,"DepthTexture2dArray","glium::texture::depth_texture2d_array","An array of two-dimensional textures  containing depth data.",null,null],[3,"DepthTexture2dArrayLayer","","Represents a single layer of a `DepthTexture2dArray`.",null,null],[3,"DepthTexture2dArrayMipmap","","Represents a single mipmap level of a `DepthTexture2dArray`.",null,null],[3,"DepthTexture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `DepthTexture2dArray`.",null,null],[11,"get_id","","",811,{"inputs":[{"name":"depthtexture2darray"}],"output":{"name":"gluint"}}],[11,"fmt","","",811,{"inputs":[{"name":"depthtexture2darray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",811,{"inputs":[{"name":"depthtexture2darray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::depth_texture2d_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",811,{"inputs":[{"name":"depthtexture2darray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",811,{"inputs":[{"name":"depthtexture2darray"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",811,{"inputs":[{"name":"depthtexture2darray"},{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",811,{"inputs":[{"name":"depthtexture2darray"},{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",811,{"inputs":[{"name":"depthtexture2darray"},{"name":"f"},{"name":"vec"},{"name":"depthformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",811,{"inputs":[{"name":"depthtexture2darray"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",811,{"inputs":[{"name":"depthtexture2darray"},{"name":"f"},{"name":"depthformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",811,{"inputs":[{"name":"depthtexture2darray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",811,{"inputs":[{"name":"depthtexture2darray"},{"name":"f"},{"name":"depthformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthtexture2darray"}}],[11,"width","","Returns the width of that image.",811,{"inputs":[{"name":"depthtexture2darray"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",811,{"inputs":[{"name":"depthtexture2darray"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",811,{"inputs":[{"name":"depthtexture2darray"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",811,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",811,{"inputs":[{"name":"depthtexture2darray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",811,{"inputs":[{"name":"depthtexture2darray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",811,{"inputs":[{"name":"depthtexture2darray"}],"output":{"name":"depthtexture2darraylayer"}}],[11,"layer","","Access a single layer of this texture.",811,{"inputs":[{"name":"depthtexture2darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",811,{"inputs":[{"name":"depthtexture2darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",811,{"inputs":[{"name":"depthtexture2darray"}],"output":{"name":"depthtexture2darraymipmap"}}],[11,"clone","","",812,{"inputs":[{"name":"depthtexture2darraylayer"}],"output":{"name":"depthtexture2darraylayer"}}],[11,"width","","Returns the width of that image.",812,{"inputs":[{"name":"depthtexture2darraylayer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",812,{"inputs":[{"name":"depthtexture2darraylayer"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",812,null],[11,"get_texture","","Returns the corresponding texture.",812,{"inputs":[{"name":"depthtexture2darraylayer"}],"output":{"name":"depthtexture2darray"}}],[11,"get_layer","","Returns the layer index.",812,{"inputs":[{"name":"depthtexture2darraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",812,{"inputs":[{"name":"depthtexture2darraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",812,{"inputs":[{"name":"depthtexture2darraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",812,{"inputs":[{"name":"depthtexture2darraylayer"}],"output":{"name":"depthtexture2darraylayermipmap"}}],[11,"clone","","",813,{"inputs":[{"name":"depthtexture2darraymipmap"}],"output":{"name":"depthtexture2darraymipmap"}}],[11,"deref","","",813,{"inputs":[{"name":"depthtexture2darraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",813,{"inputs":[{"name":"depthtexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",813,{"inputs":[{"name":"depthtexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",813,{"inputs":[{"name":"depthtexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",813,null],[11,"get_texture","","Returns the corresponding texture.",813,{"inputs":[{"name":"depthtexture2darraymipmap"}],"output":{"name":"depthtexture2darray"}}],[11,"get_level","","Returns the texture level.",813,{"inputs":[{"name":"depthtexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",813,{"inputs":[{"name":"depthtexture2darraymipmap"}],"output":{"name":"depthtexture2darraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",813,{"inputs":[{"name":"depthtexture2darraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",814,{"inputs":[{"name":"depthtexture2darraylayermipmap"}],"output":{"name":"depthtexture2darraylayermipmap"}}],[11,"width","","Returns the width of that image.",814,{"inputs":[{"name":"depthtexture2darraylayermipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",814,{"inputs":[{"name":"depthtexture2darraylayermipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",814,null],[11,"into","","",814,{"inputs":[{"name":"depthtexture2darraylayermipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_depth_attachment","","",814,{"inputs":[{"name":"depthtexture2darraylayermipmap"}],"output":{"name":"depthattachment"}}],[0,"stencil_texture2d_array","glium::texture","Contains the implementation of `StencilTexture2dArray`.",null,null],[3,"StencilTexture2dArray","glium::texture::stencil_texture2d_array","An array of two-dimensional textures  containing stencil data.",null,null],[3,"StencilTexture2dArrayLayer","","Represents a single layer of a `StencilTexture2dArray`.",null,null],[3,"StencilTexture2dArrayMipmap","","Represents a single mipmap level of a `StencilTexture2dArray`.",null,null],[3,"StencilTexture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `StencilTexture2dArray`.",null,null],[11,"get_id","","",815,{"inputs":[{"name":"stenciltexture2darray"}],"output":{"name":"gluint"}}],[11,"fmt","","",815,{"inputs":[{"name":"stenciltexture2darray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",815,{"inputs":[{"name":"stenciltexture2darray"}],"output":{"name":"textureany"}}],[11,"get_internal_format","","Determines the internal format of this texture.",815,{"inputs":[{"name":"stenciltexture2darray"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",815,{"inputs":[{"name":"stenciltexture2darray"},{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",815,{"inputs":[{"name":"stenciltexture2darray"},{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",815,{"inputs":[{"name":"stenciltexture2darray"},{"name":"f"},{"name":"vec"},{"name":"stencilformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",815,{"inputs":[{"name":"stenciltexture2darray"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",815,{"inputs":[{"name":"stenciltexture2darray"},{"name":"f"},{"name":"stencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",815,{"inputs":[{"name":"stenciltexture2darray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",815,{"inputs":[{"name":"stenciltexture2darray"},{"name":"f"},{"name":"stencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"stenciltexture2darray"}}],[11,"width","","Returns the width of that image.",815,{"inputs":[{"name":"stenciltexture2darray"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",815,{"inputs":[{"name":"stenciltexture2darray"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",815,{"inputs":[{"name":"stenciltexture2darray"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",815,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",815,{"inputs":[{"name":"stenciltexture2darray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",815,{"inputs":[{"name":"stenciltexture2darray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",815,{"inputs":[{"name":"stenciltexture2darray"}],"output":{"name":"stenciltexture2darraylayer"}}],[11,"layer","","Access a single layer of this texture.",815,{"inputs":[{"name":"stenciltexture2darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",815,{"inputs":[{"name":"stenciltexture2darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",815,{"inputs":[{"name":"stenciltexture2darray"}],"output":{"name":"stenciltexture2darraymipmap"}}],[11,"clone","","",816,{"inputs":[{"name":"stenciltexture2darraylayer"}],"output":{"name":"stenciltexture2darraylayer"}}],[11,"width","","Returns the width of that image.",816,{"inputs":[{"name":"stenciltexture2darraylayer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",816,{"inputs":[{"name":"stenciltexture2darraylayer"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",816,null],[11,"get_texture","","Returns the corresponding texture.",816,{"inputs":[{"name":"stenciltexture2darraylayer"}],"output":{"name":"stenciltexture2darray"}}],[11,"get_layer","","Returns the layer index.",816,{"inputs":[{"name":"stenciltexture2darraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",816,{"inputs":[{"name":"stenciltexture2darraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",816,{"inputs":[{"name":"stenciltexture2darraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",816,{"inputs":[{"name":"stenciltexture2darraylayer"}],"output":{"name":"stenciltexture2darraylayermipmap"}}],[11,"clone","","",817,{"inputs":[{"name":"stenciltexture2darraymipmap"}],"output":{"name":"stenciltexture2darraymipmap"}}],[11,"deref","","",817,{"inputs":[{"name":"stenciltexture2darraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",817,{"inputs":[{"name":"stenciltexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",817,{"inputs":[{"name":"stenciltexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",817,{"inputs":[{"name":"stenciltexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",817,null],[11,"get_texture","","Returns the corresponding texture.",817,{"inputs":[{"name":"stenciltexture2darraymipmap"}],"output":{"name":"stenciltexture2darray"}}],[11,"get_level","","Returns the texture level.",817,{"inputs":[{"name":"stenciltexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",817,{"inputs":[{"name":"stenciltexture2darraymipmap"}],"output":{"name":"stenciltexture2darraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",817,{"inputs":[{"name":"stenciltexture2darraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",818,{"inputs":[{"name":"stenciltexture2darraylayermipmap"}],"output":{"name":"stenciltexture2darraylayermipmap"}}],[11,"width","","Returns the width of that image.",818,{"inputs":[{"name":"stenciltexture2darraylayermipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",818,{"inputs":[{"name":"stenciltexture2darraylayermipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",818,null],[11,"into","","",818,{"inputs":[{"name":"stenciltexture2darraylayermipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_stencil_attachment","","",818,{"inputs":[{"name":"stenciltexture2darraylayermipmap"}],"output":{"name":"stencilattachment"}}],[0,"depth_stencil_texture2d_array","glium::texture","Contains the implementation of `DepthStencilTexture2dArray`.",null,null],[3,"DepthStencilTexture2dArray","glium::texture::depth_stencil_texture2d_array","An array of two-dimensional textures  containing both depth and stencil data.",null,null],[3,"DepthStencilTexture2dArrayLayer","","Represents a single layer of a `DepthStencilTexture2dArray`.",null,null],[3,"DepthStencilTexture2dArrayMipmap","","Represents a single mipmap level of a `DepthStencilTexture2dArray`.",null,null],[3,"DepthStencilTexture2dArrayLayerMipmap","","Represents a single layer of a mipmap level of a `DepthStencilTexture2dArray`.",null,null],[11,"get_id","","",819,{"inputs":[{"name":"depthstenciltexture2darray"}],"output":{"name":"gluint"}}],[11,"fmt","","",819,{"inputs":[{"name":"depthstenciltexture2darray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",819,{"inputs":[{"name":"depthstenciltexture2darray"}],"output":{"name":"textureany"}}],[11,"get_internal_format","","Determines the internal format of this texture.",819,{"inputs":[{"name":"depthstenciltexture2darray"}],"output":{"name":"result"}}],[11,"new","","Builds a new texture by uploading data.",819,{"inputs":[{"name":"depthstenciltexture2darray"},{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[11,"with_mipmaps","","Builds a new texture by uploading data.",819,{"inputs":[{"name":"depthstenciltexture2darray"},{"name":"f"},{"name":"vec"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"with_format","","Builds a new texture with a specific format.",819,{"inputs":[{"name":"depthstenciltexture2darray"},{"name":"f"},{"name":"vec"},{"name":"depthstencilformat"},{"name":"mipmapsoption"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",819,{"inputs":[{"name":"depthstenciltexture2darray"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",819,{"inputs":[{"name":"depthstenciltexture2darray"},{"name":"f"},{"name":"depthstencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",819,{"inputs":[{"name":"depthstenciltexture2darray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",819,{"inputs":[{"name":"depthstenciltexture2darray"},{"name":"f"},{"name":"depthstencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthstenciltexture2darray"}}],[11,"width","","Returns the width of that image.",819,{"inputs":[{"name":"depthstenciltexture2darray"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",819,{"inputs":[{"name":"depthstenciltexture2darray"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",819,{"inputs":[{"name":"depthstenciltexture2darray"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",819,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",819,{"inputs":[{"name":"depthstenciltexture2darray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",819,{"inputs":[{"name":"depthstenciltexture2darray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",819,{"inputs":[{"name":"depthstenciltexture2darray"}],"output":{"name":"depthstenciltexture2darraylayer"}}],[11,"layer","","Access a single layer of this texture.",819,{"inputs":[{"name":"depthstenciltexture2darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",819,{"inputs":[{"name":"depthstenciltexture2darray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",819,{"inputs":[{"name":"depthstenciltexture2darray"}],"output":{"name":"depthstenciltexture2darraymipmap"}}],[11,"clone","","",820,{"inputs":[{"name":"depthstenciltexture2darraylayer"}],"output":{"name":"depthstenciltexture2darraylayer"}}],[11,"width","","Returns the width of that image.",820,{"inputs":[{"name":"depthstenciltexture2darraylayer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",820,{"inputs":[{"name":"depthstenciltexture2darraylayer"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",820,null],[11,"get_texture","","Returns the corresponding texture.",820,{"inputs":[{"name":"depthstenciltexture2darraylayer"}],"output":{"name":"depthstenciltexture2darray"}}],[11,"get_layer","","Returns the layer index.",820,{"inputs":[{"name":"depthstenciltexture2darraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",820,{"inputs":[{"name":"depthstenciltexture2darraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",820,{"inputs":[{"name":"depthstenciltexture2darraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",820,{"inputs":[{"name":"depthstenciltexture2darraylayer"}],"output":{"name":"depthstenciltexture2darraylayermipmap"}}],[11,"clone","","",821,{"inputs":[{"name":"depthstenciltexture2darraymipmap"}],"output":{"name":"depthstenciltexture2darraymipmap"}}],[11,"deref","","",821,{"inputs":[{"name":"depthstenciltexture2darraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",821,{"inputs":[{"name":"depthstenciltexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",821,{"inputs":[{"name":"depthstenciltexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",821,{"inputs":[{"name":"depthstenciltexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",821,null],[11,"get_texture","","Returns the corresponding texture.",821,{"inputs":[{"name":"depthstenciltexture2darraymipmap"}],"output":{"name":"depthstenciltexture2darray"}}],[11,"get_level","","Returns the texture level.",821,{"inputs":[{"name":"depthstenciltexture2darraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",821,{"inputs":[{"name":"depthstenciltexture2darraymipmap"}],"output":{"name":"depthstenciltexture2darraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",821,{"inputs":[{"name":"depthstenciltexture2darraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",822,{"inputs":[{"name":"depthstenciltexture2darraylayermipmap"}],"output":{"name":"depthstenciltexture2darraylayermipmap"}}],[11,"width","","Returns the width of that image.",822,{"inputs":[{"name":"depthstenciltexture2darraylayermipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",822,{"inputs":[{"name":"depthstenciltexture2darraylayermipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",822,null],[11,"into","","",822,{"inputs":[{"name":"depthstenciltexture2darraylayermipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_depth_stencil_attachment","","",822,{"inputs":[{"name":"depthstenciltexture2darraylayermipmap"}],"output":{"name":"depthstencilattachment"}}],[0,"texture2d_multisample_array","glium::texture","Contains the implementation of `Texture2dMultisampleArray`.",null,null],[3,"Texture2dMultisampleArray","glium::texture::texture2d_multisample_array","An array of two-dimensional textures  containing floating-point data.",null,null],[3,"Texture2dMultisampleArrayLayer","","Represents a single layer of a `Texture2dMultisampleArray`.",null,null],[3,"Texture2dMultisampleArrayMipmap","","Represents a single mipmap level of a `Texture2dMultisampleArray`.",null,null],[3,"Texture2dMultisampleArrayLayerMipmap","","Represents a single layer of a mipmap level of a `Texture2dMultisampleArray`.",null,null],[11,"get_id","","",823,{"inputs":[{"name":"texture2dmultisamplearray"}],"output":{"name":"gluint"}}],[11,"fmt","","",823,{"inputs":[{"name":"texture2dmultisamplearray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",823,{"inputs":[{"name":"texture2dmultisamplearray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::texture2d_multisample_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",823,{"inputs":[{"name":"texture2dmultisamplearray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",823,{"inputs":[{"name":"texture2dmultisamplearray"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",823,{"inputs":[{"name":"texture2dmultisamplearray"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",823,{"inputs":[{"name":"texture2dmultisamplearray"},{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",823,{"inputs":[{"name":"texture2dmultisamplearray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",823,{"inputs":[{"name":"texture2dmultisamplearray"},{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"texture2dmultisamplearray"}}],[11,"width","","Returns the width of that image.",823,{"inputs":[{"name":"texture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",823,{"inputs":[{"name":"texture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",823,{"inputs":[{"name":"texture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",823,{"inputs":[{"name":"texture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",823,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",823,{"inputs":[{"name":"texture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",823,{"inputs":[{"name":"texture2dmultisamplearray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",823,{"inputs":[{"name":"texture2dmultisamplearray"}],"output":{"name":"texture2dmultisamplearraylayer"}}],[11,"layer","","Access a single layer of this texture.",823,{"inputs":[{"name":"texture2dmultisamplearray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",823,{"inputs":[{"name":"texture2dmultisamplearray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",823,{"inputs":[{"name":"texture2dmultisamplearray"}],"output":{"name":"texture2dmultisamplearraymipmap"}}],[11,"clone","","",824,{"inputs":[{"name":"texture2dmultisamplearraylayer"}],"output":{"name":"texture2dmultisamplearraylayer"}}],[11,"width","","Returns the width of that image.",824,{"inputs":[{"name":"texture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",824,{"inputs":[{"name":"texture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",824,{"inputs":[{"name":"texture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",824,null],[11,"get_texture","","Returns the corresponding texture.",824,{"inputs":[{"name":"texture2dmultisamplearraylayer"}],"output":{"name":"texture2dmultisamplearray"}}],[11,"get_layer","","Returns the layer index.",824,{"inputs":[{"name":"texture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",824,{"inputs":[{"name":"texture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",824,{"inputs":[{"name":"texture2dmultisamplearraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",824,{"inputs":[{"name":"texture2dmultisamplearraylayer"}],"output":{"name":"texture2dmultisamplearraylayermipmap"}}],[11,"clone","","",825,{"inputs":[{"name":"texture2dmultisamplearraymipmap"}],"output":{"name":"texture2dmultisamplearraymipmap"}}],[11,"deref","","",825,{"inputs":[{"name":"texture2dmultisamplearraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",825,{"inputs":[{"name":"texture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",825,{"inputs":[{"name":"texture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",825,{"inputs":[{"name":"texture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",825,{"inputs":[{"name":"texture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",825,null],[11,"get_texture","","Returns the corresponding texture.",825,{"inputs":[{"name":"texture2dmultisamplearraymipmap"}],"output":{"name":"texture2dmultisamplearray"}}],[11,"get_level","","Returns the texture level.",825,{"inputs":[{"name":"texture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",825,{"inputs":[{"name":"texture2dmultisamplearraymipmap"}],"output":{"name":"texture2dmultisamplearraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",825,{"inputs":[{"name":"texture2dmultisamplearraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",826,{"inputs":[{"name":"texture2dmultisamplearraylayermipmap"}],"output":{"name":"texture2dmultisamplearraylayermipmap"}}],[11,"width","","Returns the width of that image.",826,{"inputs":[{"name":"texture2dmultisamplearraylayermipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",826,{"inputs":[{"name":"texture2dmultisamplearraylayermipmap"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",826,{"inputs":[{"name":"texture2dmultisamplearraylayermipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",826,null],[11,"into","","",826,{"inputs":[{"name":"texture2dmultisamplearraylayermipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",826,{"inputs":[{"name":"texture2dmultisamplearraylayermipmap"}],"output":{"name":"colorattachment"}}],[0,"srgb_texture2d_multisample_array","glium::texture","Contains the implementation of `SrgbTexture2dMultisampleArray`.",null,null],[3,"SrgbTexture2dMultisampleArray","glium::texture::srgb_texture2d_multisample_array","An array of two-dimensional textures  containing sRGB floating-point data.",null,null],[3,"SrgbTexture2dMultisampleArrayLayer","","Represents a single layer of a `SrgbTexture2dMultisampleArray`.",null,null],[3,"SrgbTexture2dMultisampleArrayMipmap","","Represents a single mipmap level of a `SrgbTexture2dMultisampleArray`.",null,null],[3,"SrgbTexture2dMultisampleArrayLayerMipmap","","Represents a single layer of a mipmap level of a `SrgbTexture2dMultisampleArray`.",null,null],[11,"get_id","","",827,{"inputs":[{"name":"srgbtexture2dmultisamplearray"}],"output":{"name":"gluint"}}],[11,"fmt","","",827,{"inputs":[{"name":"srgbtexture2dmultisamplearray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",827,{"inputs":[{"name":"srgbtexture2dmultisamplearray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::srgb_texture2d_multisample_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",827,{"inputs":[{"name":"srgbtexture2dmultisamplearray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",827,{"inputs":[{"name":"srgbtexture2dmultisamplearray"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",827,{"inputs":[{"name":"srgbtexture2dmultisamplearray"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",827,{"inputs":[{"name":"srgbtexture2dmultisamplearray"},{"name":"f"},{"name":"srgbformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",827,{"inputs":[{"name":"srgbtexture2dmultisamplearray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",827,{"inputs":[{"name":"srgbtexture2dmultisamplearray"},{"name":"f"},{"name":"srgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"srgbtexture2dmultisamplearray"}}],[11,"width","","Returns the width of that image.",827,{"inputs":[{"name":"srgbtexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",827,{"inputs":[{"name":"srgbtexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",827,{"inputs":[{"name":"srgbtexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",827,{"inputs":[{"name":"srgbtexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",827,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",827,{"inputs":[{"name":"srgbtexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",827,{"inputs":[{"name":"srgbtexture2dmultisamplearray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",827,{"inputs":[{"name":"srgbtexture2dmultisamplearray"}],"output":{"name":"srgbtexture2dmultisamplearraylayer"}}],[11,"layer","","Access a single layer of this texture.",827,{"inputs":[{"name":"srgbtexture2dmultisamplearray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",827,{"inputs":[{"name":"srgbtexture2dmultisamplearray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",827,{"inputs":[{"name":"srgbtexture2dmultisamplearray"}],"output":{"name":"srgbtexture2dmultisamplearraymipmap"}}],[11,"clone","","",828,{"inputs":[{"name":"srgbtexture2dmultisamplearraylayer"}],"output":{"name":"srgbtexture2dmultisamplearraylayer"}}],[11,"width","","Returns the width of that image.",828,{"inputs":[{"name":"srgbtexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",828,{"inputs":[{"name":"srgbtexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",828,{"inputs":[{"name":"srgbtexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",828,null],[11,"get_texture","","Returns the corresponding texture.",828,{"inputs":[{"name":"srgbtexture2dmultisamplearraylayer"}],"output":{"name":"srgbtexture2dmultisamplearray"}}],[11,"get_layer","","Returns the layer index.",828,{"inputs":[{"name":"srgbtexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",828,{"inputs":[{"name":"srgbtexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",828,{"inputs":[{"name":"srgbtexture2dmultisamplearraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",828,{"inputs":[{"name":"srgbtexture2dmultisamplearraylayer"}],"output":{"name":"srgbtexture2dmultisamplearraylayermipmap"}}],[11,"clone","","",829,{"inputs":[{"name":"srgbtexture2dmultisamplearraymipmap"}],"output":{"name":"srgbtexture2dmultisamplearraymipmap"}}],[11,"deref","","",829,{"inputs":[{"name":"srgbtexture2dmultisamplearraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",829,{"inputs":[{"name":"srgbtexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",829,{"inputs":[{"name":"srgbtexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",829,{"inputs":[{"name":"srgbtexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",829,{"inputs":[{"name":"srgbtexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",829,null],[11,"get_texture","","Returns the corresponding texture.",829,{"inputs":[{"name":"srgbtexture2dmultisamplearraymipmap"}],"output":{"name":"srgbtexture2dmultisamplearray"}}],[11,"get_level","","Returns the texture level.",829,{"inputs":[{"name":"srgbtexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",829,{"inputs":[{"name":"srgbtexture2dmultisamplearraymipmap"}],"output":{"name":"srgbtexture2dmultisamplearraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",829,{"inputs":[{"name":"srgbtexture2dmultisamplearraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",830,{"inputs":[{"name":"srgbtexture2dmultisamplearraylayermipmap"}],"output":{"name":"srgbtexture2dmultisamplearraylayermipmap"}}],[11,"width","","Returns the width of that image.",830,{"inputs":[{"name":"srgbtexture2dmultisamplearraylayermipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",830,{"inputs":[{"name":"srgbtexture2dmultisamplearraylayermipmap"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",830,{"inputs":[{"name":"srgbtexture2dmultisamplearraylayermipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",830,null],[11,"into","","",830,{"inputs":[{"name":"srgbtexture2dmultisamplearraylayermipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",830,{"inputs":[{"name":"srgbtexture2dmultisamplearraylayermipmap"}],"output":{"name":"colorattachment"}}],[0,"integral_texture2d_multisample_array","glium::texture","Contains the implementation of `IntegralTexture2dMultisampleArray`.",null,null],[3,"IntegralTexture2dMultisampleArray","glium::texture::integral_texture2d_multisample_array","An array of two-dimensional textures  containing signed integral data.",null,null],[3,"IntegralTexture2dMultisampleArrayLayer","","Represents a single layer of a `IntegralTexture2dMultisampleArray`.",null,null],[3,"IntegralTexture2dMultisampleArrayMipmap","","Represents a single mipmap level of a `IntegralTexture2dMultisampleArray`.",null,null],[3,"IntegralTexture2dMultisampleArrayLayerMipmap","","Represents a single layer of a mipmap level of a `IntegralTexture2dMultisampleArray`.",null,null],[11,"get_id","","",831,{"inputs":[{"name":"integraltexture2dmultisamplearray"}],"output":{"name":"gluint"}}],[11,"fmt","","",831,{"inputs":[{"name":"integraltexture2dmultisamplearray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",831,{"inputs":[{"name":"integraltexture2dmultisamplearray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::integral_texture2d_multisample_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",831,{"inputs":[{"name":"integraltexture2dmultisamplearray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",831,{"inputs":[{"name":"integraltexture2dmultisamplearray"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",831,{"inputs":[{"name":"integraltexture2dmultisamplearray"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",831,{"inputs":[{"name":"integraltexture2dmultisamplearray"},{"name":"f"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",831,{"inputs":[{"name":"integraltexture2dmultisamplearray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",831,{"inputs":[{"name":"integraltexture2dmultisamplearray"},{"name":"f"},{"name":"uncompressedintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"integraltexture2dmultisamplearray"}}],[11,"width","","Returns the width of that image.",831,{"inputs":[{"name":"integraltexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",831,{"inputs":[{"name":"integraltexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",831,{"inputs":[{"name":"integraltexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",831,{"inputs":[{"name":"integraltexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",831,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",831,{"inputs":[{"name":"integraltexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",831,{"inputs":[{"name":"integraltexture2dmultisamplearray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",831,{"inputs":[{"name":"integraltexture2dmultisamplearray"}],"output":{"name":"integraltexture2dmultisamplearraylayer"}}],[11,"layer","","Access a single layer of this texture.",831,{"inputs":[{"name":"integraltexture2dmultisamplearray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",831,{"inputs":[{"name":"integraltexture2dmultisamplearray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",831,{"inputs":[{"name":"integraltexture2dmultisamplearray"}],"output":{"name":"integraltexture2dmultisamplearraymipmap"}}],[11,"clone","","",832,{"inputs":[{"name":"integraltexture2dmultisamplearraylayer"}],"output":{"name":"integraltexture2dmultisamplearraylayer"}}],[11,"width","","Returns the width of that image.",832,{"inputs":[{"name":"integraltexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",832,{"inputs":[{"name":"integraltexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",832,{"inputs":[{"name":"integraltexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",832,null],[11,"get_texture","","Returns the corresponding texture.",832,{"inputs":[{"name":"integraltexture2dmultisamplearraylayer"}],"output":{"name":"integraltexture2dmultisamplearray"}}],[11,"get_layer","","Returns the layer index.",832,{"inputs":[{"name":"integraltexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",832,{"inputs":[{"name":"integraltexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",832,{"inputs":[{"name":"integraltexture2dmultisamplearraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",832,{"inputs":[{"name":"integraltexture2dmultisamplearraylayer"}],"output":{"name":"integraltexture2dmultisamplearraylayermipmap"}}],[11,"clone","","",833,{"inputs":[{"name":"integraltexture2dmultisamplearraymipmap"}],"output":{"name":"integraltexture2dmultisamplearraymipmap"}}],[11,"deref","","",833,{"inputs":[{"name":"integraltexture2dmultisamplearraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",833,{"inputs":[{"name":"integraltexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",833,{"inputs":[{"name":"integraltexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",833,{"inputs":[{"name":"integraltexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",833,{"inputs":[{"name":"integraltexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",833,null],[11,"get_texture","","Returns the corresponding texture.",833,{"inputs":[{"name":"integraltexture2dmultisamplearraymipmap"}],"output":{"name":"integraltexture2dmultisamplearray"}}],[11,"get_level","","Returns the texture level.",833,{"inputs":[{"name":"integraltexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",833,{"inputs":[{"name":"integraltexture2dmultisamplearraymipmap"}],"output":{"name":"integraltexture2dmultisamplearraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",833,{"inputs":[{"name":"integraltexture2dmultisamplearraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",834,{"inputs":[{"name":"integraltexture2dmultisamplearraylayermipmap"}],"output":{"name":"integraltexture2dmultisamplearraylayermipmap"}}],[11,"width","","Returns the width of that image.",834,{"inputs":[{"name":"integraltexture2dmultisamplearraylayermipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",834,{"inputs":[{"name":"integraltexture2dmultisamplearraylayermipmap"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",834,{"inputs":[{"name":"integraltexture2dmultisamplearraylayermipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",834,null],[11,"into","","",834,{"inputs":[{"name":"integraltexture2dmultisamplearraylayermipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",834,{"inputs":[{"name":"integraltexture2dmultisamplearraylayermipmap"}],"output":{"name":"colorattachment"}}],[0,"unsigned_texture2d_multisample_array","glium::texture","Contains the implementation of `UnsignedTexture2dMultisampleArray`.",null,null],[3,"UnsignedTexture2dMultisampleArray","glium::texture::unsigned_texture2d_multisample_array","An array of two-dimensional textures  containing unsigned integral data.",null,null],[3,"UnsignedTexture2dMultisampleArrayLayer","","Represents a single layer of a `UnsignedTexture2dMultisampleArray`.",null,null],[3,"UnsignedTexture2dMultisampleArrayMipmap","","Represents a single mipmap level of a `UnsignedTexture2dMultisampleArray`.",null,null],[3,"UnsignedTexture2dMultisampleArrayLayerMipmap","","Represents a single layer of a mipmap level of a `UnsignedTexture2dMultisampleArray`.",null,null],[11,"get_id","","",835,{"inputs":[{"name":"unsignedtexture2dmultisamplearray"}],"output":{"name":"gluint"}}],[11,"fmt","","",835,{"inputs":[{"name":"unsignedtexture2dmultisamplearray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",835,{"inputs":[{"name":"unsignedtexture2dmultisamplearray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::unsigned_texture2d_multisample_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",835,{"inputs":[{"name":"unsignedtexture2dmultisamplearray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",835,{"inputs":[{"name":"unsignedtexture2dmultisamplearray"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",835,{"inputs":[{"name":"unsignedtexture2dmultisamplearray"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",835,{"inputs":[{"name":"unsignedtexture2dmultisamplearray"},{"name":"f"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",835,{"inputs":[{"name":"unsignedtexture2dmultisamplearray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",835,{"inputs":[{"name":"unsignedtexture2dmultisamplearray"},{"name":"f"},{"name":"uncompresseduintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"unsignedtexture2dmultisamplearray"}}],[11,"width","","Returns the width of that image.",835,{"inputs":[{"name":"unsignedtexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",835,{"inputs":[{"name":"unsignedtexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",835,{"inputs":[{"name":"unsignedtexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",835,{"inputs":[{"name":"unsignedtexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",835,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",835,{"inputs":[{"name":"unsignedtexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",835,{"inputs":[{"name":"unsignedtexture2dmultisamplearray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",835,{"inputs":[{"name":"unsignedtexture2dmultisamplearray"}],"output":{"name":"unsignedtexture2dmultisamplearraylayer"}}],[11,"layer","","Access a single layer of this texture.",835,{"inputs":[{"name":"unsignedtexture2dmultisamplearray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",835,{"inputs":[{"name":"unsignedtexture2dmultisamplearray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",835,{"inputs":[{"name":"unsignedtexture2dmultisamplearray"}],"output":{"name":"unsignedtexture2dmultisamplearraymipmap"}}],[11,"clone","","",836,{"inputs":[{"name":"unsignedtexture2dmultisamplearraylayer"}],"output":{"name":"unsignedtexture2dmultisamplearraylayer"}}],[11,"width","","Returns the width of that image.",836,{"inputs":[{"name":"unsignedtexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",836,{"inputs":[{"name":"unsignedtexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",836,{"inputs":[{"name":"unsignedtexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",836,null],[11,"get_texture","","Returns the corresponding texture.",836,{"inputs":[{"name":"unsignedtexture2dmultisamplearraylayer"}],"output":{"name":"unsignedtexture2dmultisamplearray"}}],[11,"get_layer","","Returns the layer index.",836,{"inputs":[{"name":"unsignedtexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",836,{"inputs":[{"name":"unsignedtexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",836,{"inputs":[{"name":"unsignedtexture2dmultisamplearraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",836,{"inputs":[{"name":"unsignedtexture2dmultisamplearraylayer"}],"output":{"name":"unsignedtexture2dmultisamplearraylayermipmap"}}],[11,"clone","","",837,{"inputs":[{"name":"unsignedtexture2dmultisamplearraymipmap"}],"output":{"name":"unsignedtexture2dmultisamplearraymipmap"}}],[11,"deref","","",837,{"inputs":[{"name":"unsignedtexture2dmultisamplearraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",837,{"inputs":[{"name":"unsignedtexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",837,{"inputs":[{"name":"unsignedtexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",837,{"inputs":[{"name":"unsignedtexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",837,{"inputs":[{"name":"unsignedtexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",837,null],[11,"get_texture","","Returns the corresponding texture.",837,{"inputs":[{"name":"unsignedtexture2dmultisamplearraymipmap"}],"output":{"name":"unsignedtexture2dmultisamplearray"}}],[11,"get_level","","Returns the texture level.",837,{"inputs":[{"name":"unsignedtexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",837,{"inputs":[{"name":"unsignedtexture2dmultisamplearraymipmap"}],"output":{"name":"unsignedtexture2dmultisamplearraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",837,{"inputs":[{"name":"unsignedtexture2dmultisamplearraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",838,{"inputs":[{"name":"unsignedtexture2dmultisamplearraylayermipmap"}],"output":{"name":"unsignedtexture2dmultisamplearraylayermipmap"}}],[11,"width","","Returns the width of that image.",838,{"inputs":[{"name":"unsignedtexture2dmultisamplearraylayermipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",838,{"inputs":[{"name":"unsignedtexture2dmultisamplearraylayermipmap"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",838,{"inputs":[{"name":"unsignedtexture2dmultisamplearraylayermipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",838,null],[11,"into","","",838,{"inputs":[{"name":"unsignedtexture2dmultisamplearraylayermipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",838,{"inputs":[{"name":"unsignedtexture2dmultisamplearraylayermipmap"}],"output":{"name":"colorattachment"}}],[0,"depth_texture2d_multisample_array","glium::texture","Contains the implementation of `DepthTexture2dMultisampleArray`.",null,null],[3,"DepthTexture2dMultisampleArray","glium::texture::depth_texture2d_multisample_array","An array of two-dimensional textures  containing depth data.",null,null],[3,"DepthTexture2dMultisampleArrayLayer","","Represents a single layer of a `DepthTexture2dMultisampleArray`.",null,null],[3,"DepthTexture2dMultisampleArrayMipmap","","Represents a single mipmap level of a `DepthTexture2dMultisampleArray`.",null,null],[3,"DepthTexture2dMultisampleArrayLayerMipmap","","Represents a single layer of a mipmap level of a `DepthTexture2dMultisampleArray`.",null,null],[11,"get_id","","",839,{"inputs":[{"name":"depthtexture2dmultisamplearray"}],"output":{"name":"gluint"}}],[11,"fmt","","",839,{"inputs":[{"name":"depthtexture2dmultisamplearray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",839,{"inputs":[{"name":"depthtexture2dmultisamplearray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::depth_texture2d_multisample_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",839,{"inputs":[{"name":"depthtexture2dmultisamplearray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",839,{"inputs":[{"name":"depthtexture2dmultisamplearray"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",839,{"inputs":[{"name":"depthtexture2dmultisamplearray"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",839,{"inputs":[{"name":"depthtexture2dmultisamplearray"},{"name":"f"},{"name":"depthformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",839,{"inputs":[{"name":"depthtexture2dmultisamplearray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",839,{"inputs":[{"name":"depthtexture2dmultisamplearray"},{"name":"f"},{"name":"depthformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthtexture2dmultisamplearray"}}],[11,"width","","Returns the width of that image.",839,{"inputs":[{"name":"depthtexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",839,{"inputs":[{"name":"depthtexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",839,{"inputs":[{"name":"depthtexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",839,{"inputs":[{"name":"depthtexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",839,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",839,{"inputs":[{"name":"depthtexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",839,{"inputs":[{"name":"depthtexture2dmultisamplearray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",839,{"inputs":[{"name":"depthtexture2dmultisamplearray"}],"output":{"name":"depthtexture2dmultisamplearraylayer"}}],[11,"layer","","Access a single layer of this texture.",839,{"inputs":[{"name":"depthtexture2dmultisamplearray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",839,{"inputs":[{"name":"depthtexture2dmultisamplearray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",839,{"inputs":[{"name":"depthtexture2dmultisamplearray"}],"output":{"name":"depthtexture2dmultisamplearraymipmap"}}],[11,"clone","","",840,{"inputs":[{"name":"depthtexture2dmultisamplearraylayer"}],"output":{"name":"depthtexture2dmultisamplearraylayer"}}],[11,"width","","Returns the width of that image.",840,{"inputs":[{"name":"depthtexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",840,{"inputs":[{"name":"depthtexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",840,{"inputs":[{"name":"depthtexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",840,null],[11,"get_texture","","Returns the corresponding texture.",840,{"inputs":[{"name":"depthtexture2dmultisamplearraylayer"}],"output":{"name":"depthtexture2dmultisamplearray"}}],[11,"get_layer","","Returns the layer index.",840,{"inputs":[{"name":"depthtexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",840,{"inputs":[{"name":"depthtexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",840,{"inputs":[{"name":"depthtexture2dmultisamplearraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",840,{"inputs":[{"name":"depthtexture2dmultisamplearraylayer"}],"output":{"name":"depthtexture2dmultisamplearraylayermipmap"}}],[11,"clone","","",841,{"inputs":[{"name":"depthtexture2dmultisamplearraymipmap"}],"output":{"name":"depthtexture2dmultisamplearraymipmap"}}],[11,"deref","","",841,{"inputs":[{"name":"depthtexture2dmultisamplearraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",841,{"inputs":[{"name":"depthtexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",841,{"inputs":[{"name":"depthtexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",841,{"inputs":[{"name":"depthtexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",841,{"inputs":[{"name":"depthtexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",841,null],[11,"get_texture","","Returns the corresponding texture.",841,{"inputs":[{"name":"depthtexture2dmultisamplearraymipmap"}],"output":{"name":"depthtexture2dmultisamplearray"}}],[11,"get_level","","Returns the texture level.",841,{"inputs":[{"name":"depthtexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",841,{"inputs":[{"name":"depthtexture2dmultisamplearraymipmap"}],"output":{"name":"depthtexture2dmultisamplearraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",841,{"inputs":[{"name":"depthtexture2dmultisamplearraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",842,{"inputs":[{"name":"depthtexture2dmultisamplearraylayermipmap"}],"output":{"name":"depthtexture2dmultisamplearraylayermipmap"}}],[11,"width","","Returns the width of that image.",842,{"inputs":[{"name":"depthtexture2dmultisamplearraylayermipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",842,{"inputs":[{"name":"depthtexture2dmultisamplearraylayermipmap"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",842,{"inputs":[{"name":"depthtexture2dmultisamplearraylayermipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",842,null],[11,"into","","",842,{"inputs":[{"name":"depthtexture2dmultisamplearraylayermipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_depth_attachment","","",842,{"inputs":[{"name":"depthtexture2dmultisamplearraylayermipmap"}],"output":{"name":"depthattachment"}}],[0,"stencil_texture2d_multisample_array","glium::texture","Contains the implementation of `StencilTexture2dMultisampleArray`.",null,null],[3,"StencilTexture2dMultisampleArray","glium::texture::stencil_texture2d_multisample_array","An array of two-dimensional textures  containing stencil data.",null,null],[3,"StencilTexture2dMultisampleArrayLayer","","Represents a single layer of a `StencilTexture2dMultisampleArray`.",null,null],[3,"StencilTexture2dMultisampleArrayMipmap","","Represents a single mipmap level of a `StencilTexture2dMultisampleArray`.",null,null],[3,"StencilTexture2dMultisampleArrayLayerMipmap","","Represents a single layer of a mipmap level of a `StencilTexture2dMultisampleArray`.",null,null],[11,"get_id","","",843,{"inputs":[{"name":"stenciltexture2dmultisamplearray"}],"output":{"name":"gluint"}}],[11,"fmt","","",843,{"inputs":[{"name":"stenciltexture2dmultisamplearray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",843,{"inputs":[{"name":"stenciltexture2dmultisamplearray"}],"output":{"name":"textureany"}}],[11,"get_internal_format","","Determines the internal format of this texture.",843,{"inputs":[{"name":"stenciltexture2dmultisamplearray"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",843,{"inputs":[{"name":"stenciltexture2dmultisamplearray"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",843,{"inputs":[{"name":"stenciltexture2dmultisamplearray"},{"name":"f"},{"name":"stencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",843,{"inputs":[{"name":"stenciltexture2dmultisamplearray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",843,{"inputs":[{"name":"stenciltexture2dmultisamplearray"},{"name":"f"},{"name":"stencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"stenciltexture2dmultisamplearray"}}],[11,"width","","Returns the width of that image.",843,{"inputs":[{"name":"stenciltexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",843,{"inputs":[{"name":"stenciltexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",843,{"inputs":[{"name":"stenciltexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",843,{"inputs":[{"name":"stenciltexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",843,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",843,{"inputs":[{"name":"stenciltexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",843,{"inputs":[{"name":"stenciltexture2dmultisamplearray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",843,{"inputs":[{"name":"stenciltexture2dmultisamplearray"}],"output":{"name":"stenciltexture2dmultisamplearraylayer"}}],[11,"layer","","Access a single layer of this texture.",843,{"inputs":[{"name":"stenciltexture2dmultisamplearray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",843,{"inputs":[{"name":"stenciltexture2dmultisamplearray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",843,{"inputs":[{"name":"stenciltexture2dmultisamplearray"}],"output":{"name":"stenciltexture2dmultisamplearraymipmap"}}],[11,"clone","","",844,{"inputs":[{"name":"stenciltexture2dmultisamplearraylayer"}],"output":{"name":"stenciltexture2dmultisamplearraylayer"}}],[11,"width","","Returns the width of that image.",844,{"inputs":[{"name":"stenciltexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",844,{"inputs":[{"name":"stenciltexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",844,{"inputs":[{"name":"stenciltexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",844,null],[11,"get_texture","","Returns the corresponding texture.",844,{"inputs":[{"name":"stenciltexture2dmultisamplearraylayer"}],"output":{"name":"stenciltexture2dmultisamplearray"}}],[11,"get_layer","","Returns the layer index.",844,{"inputs":[{"name":"stenciltexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",844,{"inputs":[{"name":"stenciltexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",844,{"inputs":[{"name":"stenciltexture2dmultisamplearraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",844,{"inputs":[{"name":"stenciltexture2dmultisamplearraylayer"}],"output":{"name":"stenciltexture2dmultisamplearraylayermipmap"}}],[11,"clone","","",845,{"inputs":[{"name":"stenciltexture2dmultisamplearraymipmap"}],"output":{"name":"stenciltexture2dmultisamplearraymipmap"}}],[11,"deref","","",845,{"inputs":[{"name":"stenciltexture2dmultisamplearraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",845,{"inputs":[{"name":"stenciltexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",845,{"inputs":[{"name":"stenciltexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",845,{"inputs":[{"name":"stenciltexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",845,{"inputs":[{"name":"stenciltexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",845,null],[11,"get_texture","","Returns the corresponding texture.",845,{"inputs":[{"name":"stenciltexture2dmultisamplearraymipmap"}],"output":{"name":"stenciltexture2dmultisamplearray"}}],[11,"get_level","","Returns the texture level.",845,{"inputs":[{"name":"stenciltexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",845,{"inputs":[{"name":"stenciltexture2dmultisamplearraymipmap"}],"output":{"name":"stenciltexture2dmultisamplearraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",845,{"inputs":[{"name":"stenciltexture2dmultisamplearraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",846,{"inputs":[{"name":"stenciltexture2dmultisamplearraylayermipmap"}],"output":{"name":"stenciltexture2dmultisamplearraylayermipmap"}}],[11,"width","","Returns the width of that image.",846,{"inputs":[{"name":"stenciltexture2dmultisamplearraylayermipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",846,{"inputs":[{"name":"stenciltexture2dmultisamplearraylayermipmap"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",846,{"inputs":[{"name":"stenciltexture2dmultisamplearraylayermipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",846,null],[11,"into","","",846,{"inputs":[{"name":"stenciltexture2dmultisamplearraylayermipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_stencil_attachment","","",846,{"inputs":[{"name":"stenciltexture2dmultisamplearraylayermipmap"}],"output":{"name":"stencilattachment"}}],[0,"depth_stencil_texture2d_multisample_array","glium::texture","Contains the implementation of `DepthStencilTexture2dMultisampleArray`.",null,null],[3,"DepthStencilTexture2dMultisampleArray","glium::texture::depth_stencil_texture2d_multisample_array","An array of two-dimensional textures  containing both depth and stencil data.",null,null],[3,"DepthStencilTexture2dMultisampleArrayLayer","","Represents a single layer of a `DepthStencilTexture2dMultisampleArray`.",null,null],[3,"DepthStencilTexture2dMultisampleArrayMipmap","","Represents a single mipmap level of a `DepthStencilTexture2dMultisampleArray`.",null,null],[3,"DepthStencilTexture2dMultisampleArrayLayerMipmap","","Represents a single layer of a mipmap level of a `DepthStencilTexture2dMultisampleArray`.",null,null],[11,"get_id","","",847,{"inputs":[{"name":"depthstenciltexture2dmultisamplearray"}],"output":{"name":"gluint"}}],[11,"fmt","","",847,{"inputs":[{"name":"depthstenciltexture2dmultisamplearray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",847,{"inputs":[{"name":"depthstenciltexture2dmultisamplearray"}],"output":{"name":"textureany"}}],[11,"get_internal_format","","Determines the internal format of this texture.",847,{"inputs":[{"name":"depthstenciltexture2dmultisamplearray"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",847,{"inputs":[{"name":"depthstenciltexture2dmultisamplearray"},{"name":"f"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",847,{"inputs":[{"name":"depthstenciltexture2dmultisamplearray"},{"name":"f"},{"name":"depthstencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",847,{"inputs":[{"name":"depthstenciltexture2dmultisamplearray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",847,{"inputs":[{"name":"depthstenciltexture2dmultisamplearray"},{"name":"f"},{"name":"depthstencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthstenciltexture2dmultisamplearray"}}],[11,"width","","Returns the width of that image.",847,{"inputs":[{"name":"depthstenciltexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",847,{"inputs":[{"name":"depthstenciltexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",847,{"inputs":[{"name":"depthstenciltexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",847,{"inputs":[{"name":"depthstenciltexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",847,null],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",847,{"inputs":[{"name":"depthstenciltexture2dmultisamplearray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",847,{"inputs":[{"name":"depthstenciltexture2dmultisamplearray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",847,{"inputs":[{"name":"depthstenciltexture2dmultisamplearray"}],"output":{"name":"depthstenciltexture2dmultisamplearraylayer"}}],[11,"layer","","Access a single layer of this texture.",847,{"inputs":[{"name":"depthstenciltexture2dmultisamplearray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",847,{"inputs":[{"name":"depthstenciltexture2dmultisamplearray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",847,{"inputs":[{"name":"depthstenciltexture2dmultisamplearray"}],"output":{"name":"depthstenciltexture2dmultisamplearraymipmap"}}],[11,"clone","","",848,{"inputs":[{"name":"depthstenciltexture2dmultisamplearraylayer"}],"output":{"name":"depthstenciltexture2dmultisamplearraylayer"}}],[11,"width","","Returns the width of that image.",848,{"inputs":[{"name":"depthstenciltexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",848,{"inputs":[{"name":"depthstenciltexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",848,{"inputs":[{"name":"depthstenciltexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",848,null],[11,"get_texture","","Returns the corresponding texture.",848,{"inputs":[{"name":"depthstenciltexture2dmultisamplearraylayer"}],"output":{"name":"depthstenciltexture2dmultisamplearray"}}],[11,"get_layer","","Returns the layer index.",848,{"inputs":[{"name":"depthstenciltexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",848,{"inputs":[{"name":"depthstenciltexture2dmultisamplearraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",848,{"inputs":[{"name":"depthstenciltexture2dmultisamplearraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",848,{"inputs":[{"name":"depthstenciltexture2dmultisamplearraylayer"}],"output":{"name":"depthstenciltexture2dmultisamplearraylayermipmap"}}],[11,"clone","","",849,{"inputs":[{"name":"depthstenciltexture2dmultisamplearraymipmap"}],"output":{"name":"depthstenciltexture2dmultisamplearraymipmap"}}],[11,"deref","","",849,{"inputs":[{"name":"depthstenciltexture2dmultisamplearraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",849,{"inputs":[{"name":"depthstenciltexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",849,{"inputs":[{"name":"depthstenciltexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",849,{"inputs":[{"name":"depthstenciltexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",849,{"inputs":[{"name":"depthstenciltexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",849,null],[11,"get_texture","","Returns the corresponding texture.",849,{"inputs":[{"name":"depthstenciltexture2dmultisamplearraymipmap"}],"output":{"name":"depthstenciltexture2dmultisamplearray"}}],[11,"get_level","","Returns the texture level.",849,{"inputs":[{"name":"depthstenciltexture2dmultisamplearraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",849,{"inputs":[{"name":"depthstenciltexture2dmultisamplearraymipmap"}],"output":{"name":"depthstenciltexture2dmultisamplearraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",849,{"inputs":[{"name":"depthstenciltexture2dmultisamplearraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",850,{"inputs":[{"name":"depthstenciltexture2dmultisamplearraylayermipmap"}],"output":{"name":"depthstenciltexture2dmultisamplearraylayermipmap"}}],[11,"width","","Returns the width of that image.",850,{"inputs":[{"name":"depthstenciltexture2dmultisamplearraylayermipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",850,{"inputs":[{"name":"depthstenciltexture2dmultisamplearraylayermipmap"}],"output":{"name":"u32"}}],[11,"samples","","Returns the number of samples of that image.",850,{"inputs":[{"name":"depthstenciltexture2dmultisamplearraylayermipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the width and height of that image.",850,null],[11,"into","","",850,{"inputs":[{"name":"depthstenciltexture2dmultisamplearraylayermipmap"}],"output":{"name":"textureanyimage"}}],[11,"to_depth_stencil_attachment","","",850,{"inputs":[{"name":"depthstenciltexture2dmultisamplearraylayermipmap"}],"output":{"name":"depthstencilattachment"}}],[0,"cubemap","glium::texture","Contains the implementation of `Cubemap`.",null,null],[3,"Cubemap","glium::texture::cubemap","A cube texture  containing floating-point data.",null,null],[3,"CubemapMipmap","","Represents a single mipmap level of a `Cubemap`.",null,null],[3,"CubemapImage","","Represents a single image of a mipmap level of a layer of `Cubemap`.",null,null],[11,"get_id","","",851,{"inputs":[{"name":"cubemap"}],"output":{"name":"gluint"}}],[11,"fmt","","",851,{"inputs":[{"name":"cubemap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",851,{"inputs":[{"name":"cubemap"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::cubemap","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",851,{"inputs":[{"name":"cubemap"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",851,{"inputs":[{"name":"cubemap"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",851,{"inputs":[{"name":"cubemap"},{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",851,{"inputs":[{"name":"cubemap"},{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",851,{"inputs":[{"name":"cubemap"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",851,{"inputs":[{"name":"cubemap"},{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"cubemap"}}],[11,"width","","Returns the width of that image.",851,{"inputs":[{"name":"cubemap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",851,{"inputs":[{"name":"cubemap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",851,{"inputs":[{"name":"cubemap"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",851,{"inputs":[{"name":"cubemap"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",851,{"inputs":[{"name":"cubemap"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",851,{"inputs":[{"name":"cubemap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",851,{"inputs":[{"name":"cubemap"}],"output":{"name":"cubemapmipmap"}}],[11,"clone","","",852,{"inputs":[{"name":"cubemapmipmap"}],"output":{"name":"cubemapmipmap"}}],[11,"deref","","",852,{"inputs":[{"name":"cubemapmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",852,{"inputs":[{"name":"cubemapmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",852,{"inputs":[{"name":"cubemapmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",852,{"inputs":[{"name":"cubemapmipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",852,{"inputs":[{"name":"cubemapmipmap"}],"output":{"name":"cubemap"}}],[11,"get_level","","Returns the texture level.",852,{"inputs":[{"name":"cubemapmipmap"}],"output":{"name":"u32"}}],[11,"image","","Provides an object representing a single layer of this cubemap.",852,{"inputs":[{"name":"cubemapmipmap"},{"name":"cubelayer"}],"output":{"name":"cubemapimage"}}],[11,"clone","","",853,{"inputs":[{"name":"cubemapimage"}],"output":{"name":"cubemapimage"}}],[11,"width","","Returns the width of that image.",853,{"inputs":[{"name":"cubemapimage"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",853,{"inputs":[{"name":"cubemapimage"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",853,{"inputs":[{"name":"cubemapimage"}],"output":{"name":"u32"}}],[11,"into","","",853,{"inputs":[{"name":"cubemapimage"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",853,{"inputs":[{"name":"cubemapimage"}],"output":{"name":"colorattachment"}}],[0,"compressed_cubemap","glium::texture","Contains the implementation of `CompressedCubemap`.",null,null],[3,"CompressedCubemap","glium::texture::compressed_cubemap","A compressed cube texture  containing floating-point data.",null,null],[3,"CompressedCubemapMipmap","","Represents a single mipmap level of a `CompressedCubemap`.",null,null],[3,"CompressedCubemapImage","","Represents a single image of a mipmap level of a layer of `CompressedCubemap`.",null,null],[11,"get_id","","",854,{"inputs":[{"name":"compressedcubemap"}],"output":{"name":"gluint"}}],[11,"fmt","","",854,{"inputs":[{"name":"compressedcubemap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",854,{"inputs":[{"name":"compressedcubemap"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::compressed_cubemap","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",854,{"inputs":[{"name":"compressedcubemap"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",854,{"inputs":[{"name":"compressedcubemap"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",854,{"inputs":[{"name":"compressedcubemap"},{"name":"f"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",854,{"inputs":[{"name":"compressedcubemap"},{"name":"f"},{"name":"compressedformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedcubemap"}}],[11,"width","","Returns the width of that image.",854,{"inputs":[{"name":"compressedcubemap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",854,{"inputs":[{"name":"compressedcubemap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",854,{"inputs":[{"name":"compressedcubemap"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",854,{"inputs":[{"name":"compressedcubemap"}],"output":{"name":"u32"}}],[11,"read_compressed_data","","Reads the content of the texture to RAM without decompressing it before.",854,{"inputs":[{"name":"compressedcubemap"}],"output":{"name":"option"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",854,{"inputs":[{"name":"compressedcubemap"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",854,{"inputs":[{"name":"compressedcubemap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",854,{"inputs":[{"name":"compressedcubemap"}],"output":{"name":"compressedcubemapmipmap"}}],[11,"clone","","",855,{"inputs":[{"name":"compressedcubemapmipmap"}],"output":{"name":"compressedcubemapmipmap"}}],[11,"deref","","",855,{"inputs":[{"name":"compressedcubemapmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",855,{"inputs":[{"name":"compressedcubemapmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",855,{"inputs":[{"name":"compressedcubemapmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",855,{"inputs":[{"name":"compressedcubemapmipmap"}],"output":{"name":"u32"}}],[11,"read_compressed_data","","Reads the content of the texture level to RAM without decompressing it before.",855,{"inputs":[{"name":"compressedcubemapmipmap"}],"output":{"name":"option"}}],[11,"get_texture","","Returns the corresponding texture.",855,{"inputs":[{"name":"compressedcubemapmipmap"}],"output":{"name":"compressedcubemap"}}],[11,"get_level","","Returns the texture level.",855,{"inputs":[{"name":"compressedcubemapmipmap"}],"output":{"name":"u32"}}],[11,"image","","Provides an object representing a single layer of this cubemap.",855,{"inputs":[{"name":"compressedcubemapmipmap"},{"name":"cubelayer"}],"output":{"name":"compressedcubemapimage"}}],[11,"clone","","",856,{"inputs":[{"name":"compressedcubemapimage"}],"output":{"name":"compressedcubemapimage"}}],[11,"width","","Returns the width of that image.",856,{"inputs":[{"name":"compressedcubemapimage"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",856,{"inputs":[{"name":"compressedcubemapimage"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",856,{"inputs":[{"name":"compressedcubemapimage"}],"output":{"name":"u32"}}],[11,"into","","",856,{"inputs":[{"name":"compressedcubemapimage"}],"output":{"name":"textureanyimage"}}],[0,"srgb_cubemap","glium::texture","Contains the implementation of `SrgbCubemap`.",null,null],[3,"SrgbCubemap","glium::texture::srgb_cubemap","A cube texture  containing sRGB floating-point data.",null,null],[3,"SrgbCubemapMipmap","","Represents a single mipmap level of a `SrgbCubemap`.",null,null],[3,"SrgbCubemapImage","","Represents a single image of a mipmap level of a layer of `SrgbCubemap`.",null,null],[11,"get_id","","",857,{"inputs":[{"name":"srgbcubemap"}],"output":{"name":"gluint"}}],[11,"fmt","","",857,{"inputs":[{"name":"srgbcubemap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",857,{"inputs":[{"name":"srgbcubemap"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::srgb_cubemap","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",857,{"inputs":[{"name":"srgbcubemap"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",857,{"inputs":[{"name":"srgbcubemap"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",857,{"inputs":[{"name":"srgbcubemap"},{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",857,{"inputs":[{"name":"srgbcubemap"},{"name":"f"},{"name":"srgbformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",857,{"inputs":[{"name":"srgbcubemap"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",857,{"inputs":[{"name":"srgbcubemap"},{"name":"f"},{"name":"srgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"srgbcubemap"}}],[11,"width","","Returns the width of that image.",857,{"inputs":[{"name":"srgbcubemap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",857,{"inputs":[{"name":"srgbcubemap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",857,{"inputs":[{"name":"srgbcubemap"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",857,{"inputs":[{"name":"srgbcubemap"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",857,{"inputs":[{"name":"srgbcubemap"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",857,{"inputs":[{"name":"srgbcubemap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",857,{"inputs":[{"name":"srgbcubemap"}],"output":{"name":"srgbcubemapmipmap"}}],[11,"clone","","",858,{"inputs":[{"name":"srgbcubemapmipmap"}],"output":{"name":"srgbcubemapmipmap"}}],[11,"deref","","",858,{"inputs":[{"name":"srgbcubemapmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",858,{"inputs":[{"name":"srgbcubemapmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",858,{"inputs":[{"name":"srgbcubemapmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",858,{"inputs":[{"name":"srgbcubemapmipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",858,{"inputs":[{"name":"srgbcubemapmipmap"}],"output":{"name":"srgbcubemap"}}],[11,"get_level","","Returns the texture level.",858,{"inputs":[{"name":"srgbcubemapmipmap"}],"output":{"name":"u32"}}],[11,"image","","Provides an object representing a single layer of this cubemap.",858,{"inputs":[{"name":"srgbcubemapmipmap"},{"name":"cubelayer"}],"output":{"name":"srgbcubemapimage"}}],[11,"clone","","",859,{"inputs":[{"name":"srgbcubemapimage"}],"output":{"name":"srgbcubemapimage"}}],[11,"width","","Returns the width of that image.",859,{"inputs":[{"name":"srgbcubemapimage"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",859,{"inputs":[{"name":"srgbcubemapimage"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",859,{"inputs":[{"name":"srgbcubemapimage"}],"output":{"name":"u32"}}],[11,"into","","",859,{"inputs":[{"name":"srgbcubemapimage"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",859,{"inputs":[{"name":"srgbcubemapimage"}],"output":{"name":"colorattachment"}}],[0,"compressed_srgb_cubemap","glium::texture","Contains the implementation of `CompressedSrgbCubemap`.",null,null],[3,"CompressedSrgbCubemap","glium::texture::compressed_srgb_cubemap","A compressed cube texture  containing sRGB floating-point data.",null,null],[3,"CompressedSrgbCubemapMipmap","","Represents a single mipmap level of a `CompressedSrgbCubemap`.",null,null],[3,"CompressedSrgbCubemapImage","","Represents a single image of a mipmap level of a layer of `CompressedSrgbCubemap`.",null,null],[11,"get_id","","",860,{"inputs":[{"name":"compressedsrgbcubemap"}],"output":{"name":"gluint"}}],[11,"fmt","","",860,{"inputs":[{"name":"compressedsrgbcubemap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",860,{"inputs":[{"name":"compressedsrgbcubemap"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::compressed_srgb_cubemap","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",860,{"inputs":[{"name":"compressedsrgbcubemap"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",860,{"inputs":[{"name":"compressedsrgbcubemap"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",860,{"inputs":[{"name":"compressedsrgbcubemap"},{"name":"f"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",860,{"inputs":[{"name":"compressedsrgbcubemap"},{"name":"f"},{"name":"compressedsrgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedsrgbcubemap"}}],[11,"width","","Returns the width of that image.",860,{"inputs":[{"name":"compressedsrgbcubemap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",860,{"inputs":[{"name":"compressedsrgbcubemap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",860,{"inputs":[{"name":"compressedsrgbcubemap"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",860,{"inputs":[{"name":"compressedsrgbcubemap"}],"output":{"name":"u32"}}],[11,"read_compressed_data","","Reads the content of the texture to RAM without decompressing it before.",860,{"inputs":[{"name":"compressedsrgbcubemap"}],"output":{"name":"option"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",860,{"inputs":[{"name":"compressedsrgbcubemap"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",860,{"inputs":[{"name":"compressedsrgbcubemap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",860,{"inputs":[{"name":"compressedsrgbcubemap"}],"output":{"name":"compressedsrgbcubemapmipmap"}}],[11,"clone","","",861,{"inputs":[{"name":"compressedsrgbcubemapmipmap"}],"output":{"name":"compressedsrgbcubemapmipmap"}}],[11,"deref","","",861,{"inputs":[{"name":"compressedsrgbcubemapmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",861,{"inputs":[{"name":"compressedsrgbcubemapmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",861,{"inputs":[{"name":"compressedsrgbcubemapmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",861,{"inputs":[{"name":"compressedsrgbcubemapmipmap"}],"output":{"name":"u32"}}],[11,"read_compressed_data","","Reads the content of the texture level to RAM without decompressing it before.",861,{"inputs":[{"name":"compressedsrgbcubemapmipmap"}],"output":{"name":"option"}}],[11,"get_texture","","Returns the corresponding texture.",861,{"inputs":[{"name":"compressedsrgbcubemapmipmap"}],"output":{"name":"compressedsrgbcubemap"}}],[11,"get_level","","Returns the texture level.",861,{"inputs":[{"name":"compressedsrgbcubemapmipmap"}],"output":{"name":"u32"}}],[11,"image","","Provides an object representing a single layer of this cubemap.",861,{"inputs":[{"name":"compressedsrgbcubemapmipmap"},{"name":"cubelayer"}],"output":{"name":"compressedsrgbcubemapimage"}}],[11,"clone","","",862,{"inputs":[{"name":"compressedsrgbcubemapimage"}],"output":{"name":"compressedsrgbcubemapimage"}}],[11,"width","","Returns the width of that image.",862,{"inputs":[{"name":"compressedsrgbcubemapimage"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",862,{"inputs":[{"name":"compressedsrgbcubemapimage"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",862,{"inputs":[{"name":"compressedsrgbcubemapimage"}],"output":{"name":"u32"}}],[11,"into","","",862,{"inputs":[{"name":"compressedsrgbcubemapimage"}],"output":{"name":"textureanyimage"}}],[0,"integral_cubemap","glium::texture","Contains the implementation of `IntegralCubemap`.",null,null],[3,"IntegralCubemap","glium::texture::integral_cubemap","A cube texture  containing signed integral data.",null,null],[3,"IntegralCubemapMipmap","","Represents a single mipmap level of a `IntegralCubemap`.",null,null],[3,"IntegralCubemapImage","","Represents a single image of a mipmap level of a layer of `IntegralCubemap`.",null,null],[11,"get_id","","",863,{"inputs":[{"name":"integralcubemap"}],"output":{"name":"gluint"}}],[11,"fmt","","",863,{"inputs":[{"name":"integralcubemap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",863,{"inputs":[{"name":"integralcubemap"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::integral_cubemap","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",863,{"inputs":[{"name":"integralcubemap"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",863,{"inputs":[{"name":"integralcubemap"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",863,{"inputs":[{"name":"integralcubemap"},{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",863,{"inputs":[{"name":"integralcubemap"},{"name":"f"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",863,{"inputs":[{"name":"integralcubemap"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",863,{"inputs":[{"name":"integralcubemap"},{"name":"f"},{"name":"uncompressedintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"integralcubemap"}}],[11,"width","","Returns the width of that image.",863,{"inputs":[{"name":"integralcubemap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",863,{"inputs":[{"name":"integralcubemap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",863,{"inputs":[{"name":"integralcubemap"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",863,{"inputs":[{"name":"integralcubemap"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",863,{"inputs":[{"name":"integralcubemap"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",863,{"inputs":[{"name":"integralcubemap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",863,{"inputs":[{"name":"integralcubemap"}],"output":{"name":"integralcubemapmipmap"}}],[11,"clone","","",864,{"inputs":[{"name":"integralcubemapmipmap"}],"output":{"name":"integralcubemapmipmap"}}],[11,"deref","","",864,{"inputs":[{"name":"integralcubemapmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",864,{"inputs":[{"name":"integralcubemapmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",864,{"inputs":[{"name":"integralcubemapmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",864,{"inputs":[{"name":"integralcubemapmipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",864,{"inputs":[{"name":"integralcubemapmipmap"}],"output":{"name":"integralcubemap"}}],[11,"get_level","","Returns the texture level.",864,{"inputs":[{"name":"integralcubemapmipmap"}],"output":{"name":"u32"}}],[11,"image","","Provides an object representing a single layer of this cubemap.",864,{"inputs":[{"name":"integralcubemapmipmap"},{"name":"cubelayer"}],"output":{"name":"integralcubemapimage"}}],[11,"clone","","",865,{"inputs":[{"name":"integralcubemapimage"}],"output":{"name":"integralcubemapimage"}}],[11,"width","","Returns the width of that image.",865,{"inputs":[{"name":"integralcubemapimage"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",865,{"inputs":[{"name":"integralcubemapimage"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",865,{"inputs":[{"name":"integralcubemapimage"}],"output":{"name":"u32"}}],[11,"into","","",865,{"inputs":[{"name":"integralcubemapimage"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",865,{"inputs":[{"name":"integralcubemapimage"}],"output":{"name":"colorattachment"}}],[0,"unsigned_cubemap","glium::texture","Contains the implementation of `UnsignedCubemap`.",null,null],[3,"UnsignedCubemap","glium::texture::unsigned_cubemap","A cube texture  containing unsigned integral data.",null,null],[3,"UnsignedCubemapMipmap","","Represents a single mipmap level of a `UnsignedCubemap`.",null,null],[3,"UnsignedCubemapImage","","Represents a single image of a mipmap level of a layer of `UnsignedCubemap`.",null,null],[11,"get_id","","",866,{"inputs":[{"name":"unsignedcubemap"}],"output":{"name":"gluint"}}],[11,"fmt","","",866,{"inputs":[{"name":"unsignedcubemap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",866,{"inputs":[{"name":"unsignedcubemap"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::unsigned_cubemap","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",866,{"inputs":[{"name":"unsignedcubemap"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",866,{"inputs":[{"name":"unsignedcubemap"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",866,{"inputs":[{"name":"unsignedcubemap"},{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",866,{"inputs":[{"name":"unsignedcubemap"},{"name":"f"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",866,{"inputs":[{"name":"unsignedcubemap"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",866,{"inputs":[{"name":"unsignedcubemap"},{"name":"f"},{"name":"uncompresseduintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"unsignedcubemap"}}],[11,"width","","Returns the width of that image.",866,{"inputs":[{"name":"unsignedcubemap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",866,{"inputs":[{"name":"unsignedcubemap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",866,{"inputs":[{"name":"unsignedcubemap"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",866,{"inputs":[{"name":"unsignedcubemap"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",866,{"inputs":[{"name":"unsignedcubemap"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",866,{"inputs":[{"name":"unsignedcubemap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",866,{"inputs":[{"name":"unsignedcubemap"}],"output":{"name":"unsignedcubemapmipmap"}}],[11,"clone","","",867,{"inputs":[{"name":"unsignedcubemapmipmap"}],"output":{"name":"unsignedcubemapmipmap"}}],[11,"deref","","",867,{"inputs":[{"name":"unsignedcubemapmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",867,{"inputs":[{"name":"unsignedcubemapmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",867,{"inputs":[{"name":"unsignedcubemapmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",867,{"inputs":[{"name":"unsignedcubemapmipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",867,{"inputs":[{"name":"unsignedcubemapmipmap"}],"output":{"name":"unsignedcubemap"}}],[11,"get_level","","Returns the texture level.",867,{"inputs":[{"name":"unsignedcubemapmipmap"}],"output":{"name":"u32"}}],[11,"image","","Provides an object representing a single layer of this cubemap.",867,{"inputs":[{"name":"unsignedcubemapmipmap"},{"name":"cubelayer"}],"output":{"name":"unsignedcubemapimage"}}],[11,"clone","","",868,{"inputs":[{"name":"unsignedcubemapimage"}],"output":{"name":"unsignedcubemapimage"}}],[11,"width","","Returns the width of that image.",868,{"inputs":[{"name":"unsignedcubemapimage"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",868,{"inputs":[{"name":"unsignedcubemapimage"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",868,{"inputs":[{"name":"unsignedcubemapimage"}],"output":{"name":"u32"}}],[11,"into","","",868,{"inputs":[{"name":"unsignedcubemapimage"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",868,{"inputs":[{"name":"unsignedcubemapimage"}],"output":{"name":"colorattachment"}}],[0,"depth_cubemap","glium::texture","Contains the implementation of `DepthCubemap`.",null,null],[3,"DepthCubemap","glium::texture::depth_cubemap","A cube texture  containing depth data.",null,null],[3,"DepthCubemapMipmap","","Represents a single mipmap level of a `DepthCubemap`.",null,null],[3,"DepthCubemapImage","","Represents a single image of a mipmap level of a layer of `DepthCubemap`.",null,null],[11,"get_id","","",869,{"inputs":[{"name":"depthcubemap"}],"output":{"name":"gluint"}}],[11,"fmt","","",869,{"inputs":[{"name":"depthcubemap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",869,{"inputs":[{"name":"depthcubemap"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::depth_cubemap","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",869,{"inputs":[{"name":"depthcubemap"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",869,{"inputs":[{"name":"depthcubemap"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",869,{"inputs":[{"name":"depthcubemap"},{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",869,{"inputs":[{"name":"depthcubemap"},{"name":"f"},{"name":"depthformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",869,{"inputs":[{"name":"depthcubemap"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",869,{"inputs":[{"name":"depthcubemap"},{"name":"f"},{"name":"depthformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthcubemap"}}],[11,"width","","Returns the width of that image.",869,{"inputs":[{"name":"depthcubemap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",869,{"inputs":[{"name":"depthcubemap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",869,{"inputs":[{"name":"depthcubemap"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",869,{"inputs":[{"name":"depthcubemap"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",869,{"inputs":[{"name":"depthcubemap"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",869,{"inputs":[{"name":"depthcubemap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",869,{"inputs":[{"name":"depthcubemap"}],"output":{"name":"depthcubemapmipmap"}}],[11,"clone","","",870,{"inputs":[{"name":"depthcubemapmipmap"}],"output":{"name":"depthcubemapmipmap"}}],[11,"deref","","",870,{"inputs":[{"name":"depthcubemapmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",870,{"inputs":[{"name":"depthcubemapmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",870,{"inputs":[{"name":"depthcubemapmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",870,{"inputs":[{"name":"depthcubemapmipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",870,{"inputs":[{"name":"depthcubemapmipmap"}],"output":{"name":"depthcubemap"}}],[11,"get_level","","Returns the texture level.",870,{"inputs":[{"name":"depthcubemapmipmap"}],"output":{"name":"u32"}}],[11,"image","","Provides an object representing a single layer of this cubemap.",870,{"inputs":[{"name":"depthcubemapmipmap"},{"name":"cubelayer"}],"output":{"name":"depthcubemapimage"}}],[11,"clone","","",871,{"inputs":[{"name":"depthcubemapimage"}],"output":{"name":"depthcubemapimage"}}],[11,"width","","Returns the width of that image.",871,{"inputs":[{"name":"depthcubemapimage"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",871,{"inputs":[{"name":"depthcubemapimage"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",871,{"inputs":[{"name":"depthcubemapimage"}],"output":{"name":"u32"}}],[11,"into","","",871,{"inputs":[{"name":"depthcubemapimage"}],"output":{"name":"textureanyimage"}}],[11,"to_depth_attachment","","",871,{"inputs":[{"name":"depthcubemapimage"}],"output":{"name":"depthattachment"}}],[0,"stencil_cubemap","glium::texture","Contains the implementation of `StencilCubemap`.",null,null],[3,"StencilCubemap","glium::texture::stencil_cubemap","A cube texture  containing stencil data.",null,null],[3,"StencilCubemapMipmap","","Represents a single mipmap level of a `StencilCubemap`.",null,null],[3,"StencilCubemapImage","","Represents a single image of a mipmap level of a layer of `StencilCubemap`.",null,null],[11,"get_id","","",872,{"inputs":[{"name":"stencilcubemap"}],"output":{"name":"gluint"}}],[11,"fmt","","",872,{"inputs":[{"name":"stencilcubemap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",872,{"inputs":[{"name":"stencilcubemap"}],"output":{"name":"textureany"}}],[11,"get_internal_format","","Determines the internal format of this texture.",872,{"inputs":[{"name":"stencilcubemap"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",872,{"inputs":[{"name":"stencilcubemap"},{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",872,{"inputs":[{"name":"stencilcubemap"},{"name":"f"},{"name":"stencilformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",872,{"inputs":[{"name":"stencilcubemap"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",872,{"inputs":[{"name":"stencilcubemap"},{"name":"f"},{"name":"stencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"stencilcubemap"}}],[11,"width","","Returns the width of that image.",872,{"inputs":[{"name":"stencilcubemap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",872,{"inputs":[{"name":"stencilcubemap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",872,{"inputs":[{"name":"stencilcubemap"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",872,{"inputs":[{"name":"stencilcubemap"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",872,{"inputs":[{"name":"stencilcubemap"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",872,{"inputs":[{"name":"stencilcubemap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",872,{"inputs":[{"name":"stencilcubemap"}],"output":{"name":"stencilcubemapmipmap"}}],[11,"clone","","",873,{"inputs":[{"name":"stencilcubemapmipmap"}],"output":{"name":"stencilcubemapmipmap"}}],[11,"deref","","",873,{"inputs":[{"name":"stencilcubemapmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",873,{"inputs":[{"name":"stencilcubemapmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",873,{"inputs":[{"name":"stencilcubemapmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",873,{"inputs":[{"name":"stencilcubemapmipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",873,{"inputs":[{"name":"stencilcubemapmipmap"}],"output":{"name":"stencilcubemap"}}],[11,"get_level","","Returns the texture level.",873,{"inputs":[{"name":"stencilcubemapmipmap"}],"output":{"name":"u32"}}],[11,"image","","Provides an object representing a single layer of this cubemap.",873,{"inputs":[{"name":"stencilcubemapmipmap"},{"name":"cubelayer"}],"output":{"name":"stencilcubemapimage"}}],[11,"clone","","",874,{"inputs":[{"name":"stencilcubemapimage"}],"output":{"name":"stencilcubemapimage"}}],[11,"width","","Returns the width of that image.",874,{"inputs":[{"name":"stencilcubemapimage"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",874,{"inputs":[{"name":"stencilcubemapimage"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",874,{"inputs":[{"name":"stencilcubemapimage"}],"output":{"name":"u32"}}],[11,"into","","",874,{"inputs":[{"name":"stencilcubemapimage"}],"output":{"name":"textureanyimage"}}],[11,"to_stencil_attachment","","",874,{"inputs":[{"name":"stencilcubemapimage"}],"output":{"name":"stencilattachment"}}],[0,"depth_stencil_cubemap","glium::texture","Contains the implementation of `DepthStencilCubemap`.",null,null],[3,"DepthStencilCubemap","glium::texture::depth_stencil_cubemap","A cube texture  containing both depth and stencil data.",null,null],[3,"DepthStencilCubemapMipmap","","Represents a single mipmap level of a `DepthStencilCubemap`.",null,null],[3,"DepthStencilCubemapImage","","Represents a single image of a mipmap level of a layer of `DepthStencilCubemap`.",null,null],[11,"get_id","","",875,{"inputs":[{"name":"depthstencilcubemap"}],"output":{"name":"gluint"}}],[11,"fmt","","",875,{"inputs":[{"name":"depthstencilcubemap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",875,{"inputs":[{"name":"depthstencilcubemap"}],"output":{"name":"textureany"}}],[11,"get_internal_format","","Determines the internal format of this texture.",875,{"inputs":[{"name":"depthstencilcubemap"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",875,{"inputs":[{"name":"depthstencilcubemap"},{"name":"f"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",875,{"inputs":[{"name":"depthstencilcubemap"},{"name":"f"},{"name":"depthstencilformat"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",875,{"inputs":[{"name":"depthstencilcubemap"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",875,{"inputs":[{"name":"depthstencilcubemap"},{"name":"f"},{"name":"depthstencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthstencilcubemap"}}],[11,"width","","Returns the width of that image.",875,{"inputs":[{"name":"depthstencilcubemap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",875,{"inputs":[{"name":"depthstencilcubemap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",875,{"inputs":[{"name":"depthstencilcubemap"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",875,{"inputs":[{"name":"depthstencilcubemap"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",875,{"inputs":[{"name":"depthstencilcubemap"}],"output":{"name":"result"}}],[11,"mipmap","","Access a single mipmap level of this texture.",875,{"inputs":[{"name":"depthstencilcubemap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",875,{"inputs":[{"name":"depthstencilcubemap"}],"output":{"name":"depthstencilcubemapmipmap"}}],[11,"clone","","",876,{"inputs":[{"name":"depthstencilcubemapmipmap"}],"output":{"name":"depthstencilcubemapmipmap"}}],[11,"deref","","",876,{"inputs":[{"name":"depthstencilcubemapmipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",876,{"inputs":[{"name":"depthstencilcubemapmipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",876,{"inputs":[{"name":"depthstencilcubemapmipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",876,{"inputs":[{"name":"depthstencilcubemapmipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",876,{"inputs":[{"name":"depthstencilcubemapmipmap"}],"output":{"name":"depthstencilcubemap"}}],[11,"get_level","","Returns the texture level.",876,{"inputs":[{"name":"depthstencilcubemapmipmap"}],"output":{"name":"u32"}}],[11,"image","","Provides an object representing a single layer of this cubemap.",876,{"inputs":[{"name":"depthstencilcubemapmipmap"},{"name":"cubelayer"}],"output":{"name":"depthstencilcubemapimage"}}],[11,"clone","","",877,{"inputs":[{"name":"depthstencilcubemapimage"}],"output":{"name":"depthstencilcubemapimage"}}],[11,"width","","Returns the width of that image.",877,{"inputs":[{"name":"depthstencilcubemapimage"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",877,{"inputs":[{"name":"depthstencilcubemapimage"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",877,{"inputs":[{"name":"depthstencilcubemapimage"}],"output":{"name":"u32"}}],[11,"into","","",877,{"inputs":[{"name":"depthstencilcubemapimage"}],"output":{"name":"textureanyimage"}}],[11,"to_depth_stencil_attachment","","",877,{"inputs":[{"name":"depthstencilcubemapimage"}],"output":{"name":"depthstencilattachment"}}],[0,"cubemap_array","glium::texture","Contains the implementation of `CubemapArray`.",null,null],[3,"CubemapArray","glium::texture::cubemap_array","An array of cube textures  containing floating-point data.",null,null],[3,"CubemapArrayLayer","","Represents a single layer of a `CubemapArray`.",null,null],[3,"CubemapArrayMipmap","","Represents a single mipmap level of a `CubemapArray`.",null,null],[3,"CubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a `CubemapArray`.",null,null],[3,"CubemapArrayImage","","Represents a single image of a mipmap level of a layer of `CubemapArray`.",null,null],[11,"get_id","","",878,{"inputs":[{"name":"cubemaparray"}],"output":{"name":"gluint"}}],[11,"fmt","","",878,{"inputs":[{"name":"cubemaparray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",878,{"inputs":[{"name":"cubemaparray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::cubemap_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",878,{"inputs":[{"name":"cubemaparray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",878,{"inputs":[{"name":"cubemaparray"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",878,{"inputs":[{"name":"cubemaparray"},{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",878,{"inputs":[{"name":"cubemaparray"},{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",878,{"inputs":[{"name":"cubemaparray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",878,{"inputs":[{"name":"cubemaparray"},{"name":"f"},{"name":"uncompressedfloatformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"cubemaparray"}}],[11,"width","","Returns the width of that image.",878,{"inputs":[{"name":"cubemaparray"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",878,{"inputs":[{"name":"cubemaparray"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",878,{"inputs":[{"name":"cubemaparray"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",878,{"inputs":[{"name":"cubemaparray"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",878,{"inputs":[{"name":"cubemaparray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",878,{"inputs":[{"name":"cubemaparray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",878,{"inputs":[{"name":"cubemaparray"}],"output":{"name":"cubemaparraylayer"}}],[11,"layer","","Access a single layer of this texture.",878,{"inputs":[{"name":"cubemaparray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",878,{"inputs":[{"name":"cubemaparray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",878,{"inputs":[{"name":"cubemaparray"}],"output":{"name":"cubemaparraymipmap"}}],[11,"clone","","",879,{"inputs":[{"name":"cubemaparraylayer"}],"output":{"name":"cubemaparraylayer"}}],[11,"width","","Returns the width of that image.",879,{"inputs":[{"name":"cubemaparraylayer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",879,{"inputs":[{"name":"cubemaparraylayer"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",879,{"inputs":[{"name":"cubemaparraylayer"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",879,{"inputs":[{"name":"cubemaparraylayer"}],"output":{"name":"cubemaparray"}}],[11,"get_layer","","Returns the layer index.",879,{"inputs":[{"name":"cubemaparraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",879,{"inputs":[{"name":"cubemaparraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",879,{"inputs":[{"name":"cubemaparraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",879,{"inputs":[{"name":"cubemaparraylayer"}],"output":{"name":"cubemaparraylayermipmap"}}],[11,"clone","","",880,{"inputs":[{"name":"cubemaparraymipmap"}],"output":{"name":"cubemaparraymipmap"}}],[11,"deref","","",880,{"inputs":[{"name":"cubemaparraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",880,{"inputs":[{"name":"cubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",880,{"inputs":[{"name":"cubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",880,{"inputs":[{"name":"cubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",880,{"inputs":[{"name":"cubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",880,{"inputs":[{"name":"cubemaparraymipmap"}],"output":{"name":"cubemaparray"}}],[11,"get_level","","Returns the texture level.",880,{"inputs":[{"name":"cubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",880,{"inputs":[{"name":"cubemaparraymipmap"}],"output":{"name":"cubemaparraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",880,{"inputs":[{"name":"cubemaparraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",881,{"inputs":[{"name":"cubemaparraylayermipmap"}],"output":{"name":"cubemaparraylayermipmap"}}],[11,"width","","Returns the width of that image.",881,{"inputs":[{"name":"cubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",881,{"inputs":[{"name":"cubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",881,{"inputs":[{"name":"cubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"image","","Provides an object representing a single layer of this cubemap.",881,{"inputs":[{"name":"cubemaparraylayermipmap"},{"name":"cubelayer"}],"output":{"name":"cubemaparrayimage"}}],[11,"clone","","",882,{"inputs":[{"name":"cubemaparrayimage"}],"output":{"name":"cubemaparrayimage"}}],[11,"width","","Returns the width of that image.",882,{"inputs":[{"name":"cubemaparrayimage"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",882,{"inputs":[{"name":"cubemaparrayimage"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",882,{"inputs":[{"name":"cubemaparrayimage"}],"output":{"name":"u32"}}],[11,"into","","",882,{"inputs":[{"name":"cubemaparrayimage"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",882,{"inputs":[{"name":"cubemaparrayimage"}],"output":{"name":"colorattachment"}}],[0,"compressed_cubemap_array","glium::texture","Contains the implementation of `CompressedCubemapArray`.",null,null],[3,"CompressedCubemapArray","glium::texture::compressed_cubemap_array","An array of compressed cube textures  containing floating-point data.",null,null],[3,"CompressedCubemapArrayLayer","","Represents a single layer of a `CompressedCubemapArray`.",null,null],[3,"CompressedCubemapArrayMipmap","","Represents a single mipmap level of a `CompressedCubemapArray`.",null,null],[3,"CompressedCubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a `CompressedCubemapArray`.",null,null],[3,"CompressedCubemapArrayImage","","Represents a single image of a mipmap level of a layer of `CompressedCubemapArray`.",null,null],[11,"get_id","","",883,{"inputs":[{"name":"compressedcubemaparray"}],"output":{"name":"gluint"}}],[11,"fmt","","",883,{"inputs":[{"name":"compressedcubemaparray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",883,{"inputs":[{"name":"compressedcubemaparray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::compressed_cubemap_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",883,{"inputs":[{"name":"compressedcubemaparray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",883,{"inputs":[{"name":"compressedcubemaparray"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",883,{"inputs":[{"name":"compressedcubemaparray"},{"name":"f"},{"name":"compressedformat"},{"name":"compressedmipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",883,{"inputs":[{"name":"compressedcubemaparray"},{"name":"f"},{"name":"compressedformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedcubemaparray"}}],[11,"width","","Returns the width of that image.",883,{"inputs":[{"name":"compressedcubemaparray"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",883,{"inputs":[{"name":"compressedcubemaparray"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",883,{"inputs":[{"name":"compressedcubemaparray"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",883,{"inputs":[{"name":"compressedcubemaparray"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",883,{"inputs":[{"name":"compressedcubemaparray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",883,{"inputs":[{"name":"compressedcubemaparray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",883,{"inputs":[{"name":"compressedcubemaparray"}],"output":{"name":"compressedcubemaparraylayer"}}],[11,"layer","","Access a single layer of this texture.",883,{"inputs":[{"name":"compressedcubemaparray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",883,{"inputs":[{"name":"compressedcubemaparray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",883,{"inputs":[{"name":"compressedcubemaparray"}],"output":{"name":"compressedcubemaparraymipmap"}}],[11,"clone","","",884,{"inputs":[{"name":"compressedcubemaparraylayer"}],"output":{"name":"compressedcubemaparraylayer"}}],[11,"width","","Returns the width of that image.",884,{"inputs":[{"name":"compressedcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",884,{"inputs":[{"name":"compressedcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",884,{"inputs":[{"name":"compressedcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",884,{"inputs":[{"name":"compressedcubemaparraylayer"}],"output":{"name":"compressedcubemaparray"}}],[11,"get_layer","","Returns the layer index.",884,{"inputs":[{"name":"compressedcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",884,{"inputs":[{"name":"compressedcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",884,{"inputs":[{"name":"compressedcubemaparraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",884,{"inputs":[{"name":"compressedcubemaparraylayer"}],"output":{"name":"compressedcubemaparraylayermipmap"}}],[11,"clone","","",885,{"inputs":[{"name":"compressedcubemaparraymipmap"}],"output":{"name":"compressedcubemaparraymipmap"}}],[11,"deref","","",885,{"inputs":[{"name":"compressedcubemaparraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",885,{"inputs":[{"name":"compressedcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",885,{"inputs":[{"name":"compressedcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",885,{"inputs":[{"name":"compressedcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",885,{"inputs":[{"name":"compressedcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",885,{"inputs":[{"name":"compressedcubemaparraymipmap"}],"output":{"name":"compressedcubemaparray"}}],[11,"get_level","","Returns the texture level.",885,{"inputs":[{"name":"compressedcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",885,{"inputs":[{"name":"compressedcubemaparraymipmap"}],"output":{"name":"compressedcubemaparraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",885,{"inputs":[{"name":"compressedcubemaparraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",886,{"inputs":[{"name":"compressedcubemaparraylayermipmap"}],"output":{"name":"compressedcubemaparraylayermipmap"}}],[11,"width","","Returns the width of that image.",886,{"inputs":[{"name":"compressedcubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",886,{"inputs":[{"name":"compressedcubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",886,{"inputs":[{"name":"compressedcubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"image","","Provides an object representing a single layer of this cubemap.",886,{"inputs":[{"name":"compressedcubemaparraylayermipmap"},{"name":"cubelayer"}],"output":{"name":"compressedcubemaparrayimage"}}],[11,"clone","","",887,{"inputs":[{"name":"compressedcubemaparrayimage"}],"output":{"name":"compressedcubemaparrayimage"}}],[11,"width","","Returns the width of that image.",887,{"inputs":[{"name":"compressedcubemaparrayimage"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",887,{"inputs":[{"name":"compressedcubemaparrayimage"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",887,{"inputs":[{"name":"compressedcubemaparrayimage"}],"output":{"name":"u32"}}],[11,"into","","",887,{"inputs":[{"name":"compressedcubemaparrayimage"}],"output":{"name":"textureanyimage"}}],[0,"srgb_cubemap_array","glium::texture","Contains the implementation of `SrgbCubemapArray`.",null,null],[3,"SrgbCubemapArray","glium::texture::srgb_cubemap_array","An array of cube textures  containing sRGB floating-point data.",null,null],[3,"SrgbCubemapArrayLayer","","Represents a single layer of a `SrgbCubemapArray`.",null,null],[3,"SrgbCubemapArrayMipmap","","Represents a single mipmap level of a `SrgbCubemapArray`.",null,null],[3,"SrgbCubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a `SrgbCubemapArray`.",null,null],[3,"SrgbCubemapArrayImage","","Represents a single image of a mipmap level of a layer of `SrgbCubemapArray`.",null,null],[11,"get_id","","",888,{"inputs":[{"name":"srgbcubemaparray"}],"output":{"name":"gluint"}}],[11,"fmt","","",888,{"inputs":[{"name":"srgbcubemaparray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",888,{"inputs":[{"name":"srgbcubemaparray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::srgb_cubemap_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",888,{"inputs":[{"name":"srgbcubemaparray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",888,{"inputs":[{"name":"srgbcubemaparray"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",888,{"inputs":[{"name":"srgbcubemaparray"},{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",888,{"inputs":[{"name":"srgbcubemaparray"},{"name":"f"},{"name":"srgbformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",888,{"inputs":[{"name":"srgbcubemaparray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",888,{"inputs":[{"name":"srgbcubemaparray"},{"name":"f"},{"name":"srgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"srgbcubemaparray"}}],[11,"width","","Returns the width of that image.",888,{"inputs":[{"name":"srgbcubemaparray"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",888,{"inputs":[{"name":"srgbcubemaparray"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",888,{"inputs":[{"name":"srgbcubemaparray"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",888,{"inputs":[{"name":"srgbcubemaparray"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",888,{"inputs":[{"name":"srgbcubemaparray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",888,{"inputs":[{"name":"srgbcubemaparray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",888,{"inputs":[{"name":"srgbcubemaparray"}],"output":{"name":"srgbcubemaparraylayer"}}],[11,"layer","","Access a single layer of this texture.",888,{"inputs":[{"name":"srgbcubemaparray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",888,{"inputs":[{"name":"srgbcubemaparray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",888,{"inputs":[{"name":"srgbcubemaparray"}],"output":{"name":"srgbcubemaparraymipmap"}}],[11,"clone","","",889,{"inputs":[{"name":"srgbcubemaparraylayer"}],"output":{"name":"srgbcubemaparraylayer"}}],[11,"width","","Returns the width of that image.",889,{"inputs":[{"name":"srgbcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",889,{"inputs":[{"name":"srgbcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",889,{"inputs":[{"name":"srgbcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",889,{"inputs":[{"name":"srgbcubemaparraylayer"}],"output":{"name":"srgbcubemaparray"}}],[11,"get_layer","","Returns the layer index.",889,{"inputs":[{"name":"srgbcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",889,{"inputs":[{"name":"srgbcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",889,{"inputs":[{"name":"srgbcubemaparraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",889,{"inputs":[{"name":"srgbcubemaparraylayer"}],"output":{"name":"srgbcubemaparraylayermipmap"}}],[11,"clone","","",890,{"inputs":[{"name":"srgbcubemaparraymipmap"}],"output":{"name":"srgbcubemaparraymipmap"}}],[11,"deref","","",890,{"inputs":[{"name":"srgbcubemaparraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",890,{"inputs":[{"name":"srgbcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",890,{"inputs":[{"name":"srgbcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",890,{"inputs":[{"name":"srgbcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",890,{"inputs":[{"name":"srgbcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",890,{"inputs":[{"name":"srgbcubemaparraymipmap"}],"output":{"name":"srgbcubemaparray"}}],[11,"get_level","","Returns the texture level.",890,{"inputs":[{"name":"srgbcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",890,{"inputs":[{"name":"srgbcubemaparraymipmap"}],"output":{"name":"srgbcubemaparraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",890,{"inputs":[{"name":"srgbcubemaparraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",891,{"inputs":[{"name":"srgbcubemaparraylayermipmap"}],"output":{"name":"srgbcubemaparraylayermipmap"}}],[11,"width","","Returns the width of that image.",891,{"inputs":[{"name":"srgbcubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",891,{"inputs":[{"name":"srgbcubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",891,{"inputs":[{"name":"srgbcubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"image","","Provides an object representing a single layer of this cubemap.",891,{"inputs":[{"name":"srgbcubemaparraylayermipmap"},{"name":"cubelayer"}],"output":{"name":"srgbcubemaparrayimage"}}],[11,"clone","","",892,{"inputs":[{"name":"srgbcubemaparrayimage"}],"output":{"name":"srgbcubemaparrayimage"}}],[11,"width","","Returns the width of that image.",892,{"inputs":[{"name":"srgbcubemaparrayimage"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",892,{"inputs":[{"name":"srgbcubemaparrayimage"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",892,{"inputs":[{"name":"srgbcubemaparrayimage"}],"output":{"name":"u32"}}],[11,"into","","",892,{"inputs":[{"name":"srgbcubemaparrayimage"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",892,{"inputs":[{"name":"srgbcubemaparrayimage"}],"output":{"name":"colorattachment"}}],[0,"compressed_srgb_cubemap_array","glium::texture","Contains the implementation of `CompressedSrgbCubemapArray`.",null,null],[3,"CompressedSrgbCubemapArray","glium::texture::compressed_srgb_cubemap_array","An array of compressed cube textures  containing sRGB floating-point data.",null,null],[3,"CompressedSrgbCubemapArrayLayer","","Represents a single layer of a `CompressedSrgbCubemapArray`.",null,null],[3,"CompressedSrgbCubemapArrayMipmap","","Represents a single mipmap level of a `CompressedSrgbCubemapArray`.",null,null],[3,"CompressedSrgbCubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a `CompressedSrgbCubemapArray`.",null,null],[3,"CompressedSrgbCubemapArrayImage","","Represents a single image of a mipmap level of a layer of `CompressedSrgbCubemapArray`.",null,null],[11,"get_id","","",893,{"inputs":[{"name":"compressedsrgbcubemaparray"}],"output":{"name":"gluint"}}],[11,"fmt","","",893,{"inputs":[{"name":"compressedsrgbcubemaparray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",893,{"inputs":[{"name":"compressedsrgbcubemaparray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::compressed_srgb_cubemap_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",893,{"inputs":[{"name":"compressedsrgbcubemaparray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",893,{"inputs":[{"name":"compressedsrgbcubemaparray"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",893,{"inputs":[{"name":"compressedsrgbcubemaparray"},{"name":"f"},{"name":"compressedsrgbformat"},{"name":"compressedmipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",893,{"inputs":[{"name":"compressedsrgbcubemaparray"},{"name":"f"},{"name":"compressedsrgbformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"compressedsrgbcubemaparray"}}],[11,"width","","Returns the width of that image.",893,{"inputs":[{"name":"compressedsrgbcubemaparray"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",893,{"inputs":[{"name":"compressedsrgbcubemaparray"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",893,{"inputs":[{"name":"compressedsrgbcubemaparray"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",893,{"inputs":[{"name":"compressedsrgbcubemaparray"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",893,{"inputs":[{"name":"compressedsrgbcubemaparray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",893,{"inputs":[{"name":"compressedsrgbcubemaparray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",893,{"inputs":[{"name":"compressedsrgbcubemaparray"}],"output":{"name":"compressedsrgbcubemaparraylayer"}}],[11,"layer","","Access a single layer of this texture.",893,{"inputs":[{"name":"compressedsrgbcubemaparray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",893,{"inputs":[{"name":"compressedsrgbcubemaparray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",893,{"inputs":[{"name":"compressedsrgbcubemaparray"}],"output":{"name":"compressedsrgbcubemaparraymipmap"}}],[11,"clone","","",894,{"inputs":[{"name":"compressedsrgbcubemaparraylayer"}],"output":{"name":"compressedsrgbcubemaparraylayer"}}],[11,"width","","Returns the width of that image.",894,{"inputs":[{"name":"compressedsrgbcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",894,{"inputs":[{"name":"compressedsrgbcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",894,{"inputs":[{"name":"compressedsrgbcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",894,{"inputs":[{"name":"compressedsrgbcubemaparraylayer"}],"output":{"name":"compressedsrgbcubemaparray"}}],[11,"get_layer","","Returns the layer index.",894,{"inputs":[{"name":"compressedsrgbcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",894,{"inputs":[{"name":"compressedsrgbcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",894,{"inputs":[{"name":"compressedsrgbcubemaparraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",894,{"inputs":[{"name":"compressedsrgbcubemaparraylayer"}],"output":{"name":"compressedsrgbcubemaparraylayermipmap"}}],[11,"clone","","",895,{"inputs":[{"name":"compressedsrgbcubemaparraymipmap"}],"output":{"name":"compressedsrgbcubemaparraymipmap"}}],[11,"deref","","",895,{"inputs":[{"name":"compressedsrgbcubemaparraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",895,{"inputs":[{"name":"compressedsrgbcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",895,{"inputs":[{"name":"compressedsrgbcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",895,{"inputs":[{"name":"compressedsrgbcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",895,{"inputs":[{"name":"compressedsrgbcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",895,{"inputs":[{"name":"compressedsrgbcubemaparraymipmap"}],"output":{"name":"compressedsrgbcubemaparray"}}],[11,"get_level","","Returns the texture level.",895,{"inputs":[{"name":"compressedsrgbcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",895,{"inputs":[{"name":"compressedsrgbcubemaparraymipmap"}],"output":{"name":"compressedsrgbcubemaparraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",895,{"inputs":[{"name":"compressedsrgbcubemaparraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",896,{"inputs":[{"name":"compressedsrgbcubemaparraylayermipmap"}],"output":{"name":"compressedsrgbcubemaparraylayermipmap"}}],[11,"width","","Returns the width of that image.",896,{"inputs":[{"name":"compressedsrgbcubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",896,{"inputs":[{"name":"compressedsrgbcubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",896,{"inputs":[{"name":"compressedsrgbcubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"image","","Provides an object representing a single layer of this cubemap.",896,{"inputs":[{"name":"compressedsrgbcubemaparraylayermipmap"},{"name":"cubelayer"}],"output":{"name":"compressedsrgbcubemaparrayimage"}}],[11,"clone","","",897,{"inputs":[{"name":"compressedsrgbcubemaparrayimage"}],"output":{"name":"compressedsrgbcubemaparrayimage"}}],[11,"width","","Returns the width of that image.",897,{"inputs":[{"name":"compressedsrgbcubemaparrayimage"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",897,{"inputs":[{"name":"compressedsrgbcubemaparrayimage"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",897,{"inputs":[{"name":"compressedsrgbcubemaparrayimage"}],"output":{"name":"u32"}}],[11,"into","","",897,{"inputs":[{"name":"compressedsrgbcubemaparrayimage"}],"output":{"name":"textureanyimage"}}],[0,"integral_cubemap_array","glium::texture","Contains the implementation of `IntegralCubemapArray`.",null,null],[3,"IntegralCubemapArray","glium::texture::integral_cubemap_array","An array of cube textures  containing signed integral data.",null,null],[3,"IntegralCubemapArrayLayer","","Represents a single layer of a `IntegralCubemapArray`.",null,null],[3,"IntegralCubemapArrayMipmap","","Represents a single mipmap level of a `IntegralCubemapArray`.",null,null],[3,"IntegralCubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a `IntegralCubemapArray`.",null,null],[3,"IntegralCubemapArrayImage","","Represents a single image of a mipmap level of a layer of `IntegralCubemapArray`.",null,null],[11,"get_id","","",898,{"inputs":[{"name":"integralcubemaparray"}],"output":{"name":"gluint"}}],[11,"fmt","","",898,{"inputs":[{"name":"integralcubemaparray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",898,{"inputs":[{"name":"integralcubemaparray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::integral_cubemap_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",898,{"inputs":[{"name":"integralcubemaparray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",898,{"inputs":[{"name":"integralcubemaparray"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",898,{"inputs":[{"name":"integralcubemaparray"},{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",898,{"inputs":[{"name":"integralcubemaparray"},{"name":"f"},{"name":"uncompressedintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",898,{"inputs":[{"name":"integralcubemaparray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",898,{"inputs":[{"name":"integralcubemaparray"},{"name":"f"},{"name":"uncompressedintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"integralcubemaparray"}}],[11,"width","","Returns the width of that image.",898,{"inputs":[{"name":"integralcubemaparray"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",898,{"inputs":[{"name":"integralcubemaparray"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",898,{"inputs":[{"name":"integralcubemaparray"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",898,{"inputs":[{"name":"integralcubemaparray"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",898,{"inputs":[{"name":"integralcubemaparray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",898,{"inputs":[{"name":"integralcubemaparray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",898,{"inputs":[{"name":"integralcubemaparray"}],"output":{"name":"integralcubemaparraylayer"}}],[11,"layer","","Access a single layer of this texture.",898,{"inputs":[{"name":"integralcubemaparray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",898,{"inputs":[{"name":"integralcubemaparray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",898,{"inputs":[{"name":"integralcubemaparray"}],"output":{"name":"integralcubemaparraymipmap"}}],[11,"clone","","",899,{"inputs":[{"name":"integralcubemaparraylayer"}],"output":{"name":"integralcubemaparraylayer"}}],[11,"width","","Returns the width of that image.",899,{"inputs":[{"name":"integralcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",899,{"inputs":[{"name":"integralcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",899,{"inputs":[{"name":"integralcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",899,{"inputs":[{"name":"integralcubemaparraylayer"}],"output":{"name":"integralcubemaparray"}}],[11,"get_layer","","Returns the layer index.",899,{"inputs":[{"name":"integralcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",899,{"inputs":[{"name":"integralcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",899,{"inputs":[{"name":"integralcubemaparraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",899,{"inputs":[{"name":"integralcubemaparraylayer"}],"output":{"name":"integralcubemaparraylayermipmap"}}],[11,"clone","","",900,{"inputs":[{"name":"integralcubemaparraymipmap"}],"output":{"name":"integralcubemaparraymipmap"}}],[11,"deref","","",900,{"inputs":[{"name":"integralcubemaparraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",900,{"inputs":[{"name":"integralcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",900,{"inputs":[{"name":"integralcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",900,{"inputs":[{"name":"integralcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",900,{"inputs":[{"name":"integralcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",900,{"inputs":[{"name":"integralcubemaparraymipmap"}],"output":{"name":"integralcubemaparray"}}],[11,"get_level","","Returns the texture level.",900,{"inputs":[{"name":"integralcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",900,{"inputs":[{"name":"integralcubemaparraymipmap"}],"output":{"name":"integralcubemaparraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",900,{"inputs":[{"name":"integralcubemaparraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",901,{"inputs":[{"name":"integralcubemaparraylayermipmap"}],"output":{"name":"integralcubemaparraylayermipmap"}}],[11,"width","","Returns the width of that image.",901,{"inputs":[{"name":"integralcubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",901,{"inputs":[{"name":"integralcubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",901,{"inputs":[{"name":"integralcubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"image","","Provides an object representing a single layer of this cubemap.",901,{"inputs":[{"name":"integralcubemaparraylayermipmap"},{"name":"cubelayer"}],"output":{"name":"integralcubemaparrayimage"}}],[11,"clone","","",902,{"inputs":[{"name":"integralcubemaparrayimage"}],"output":{"name":"integralcubemaparrayimage"}}],[11,"width","","Returns the width of that image.",902,{"inputs":[{"name":"integralcubemaparrayimage"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",902,{"inputs":[{"name":"integralcubemaparrayimage"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",902,{"inputs":[{"name":"integralcubemaparrayimage"}],"output":{"name":"u32"}}],[11,"into","","",902,{"inputs":[{"name":"integralcubemaparrayimage"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",902,{"inputs":[{"name":"integralcubemaparrayimage"}],"output":{"name":"colorattachment"}}],[0,"unsigned_cubemap_array","glium::texture","Contains the implementation of `UnsignedCubemapArray`.",null,null],[3,"UnsignedCubemapArray","glium::texture::unsigned_cubemap_array","An array of cube textures  containing unsigned integral data.",null,null],[3,"UnsignedCubemapArrayLayer","","Represents a single layer of a `UnsignedCubemapArray`.",null,null],[3,"UnsignedCubemapArrayMipmap","","Represents a single mipmap level of a `UnsignedCubemapArray`.",null,null],[3,"UnsignedCubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a `UnsignedCubemapArray`.",null,null],[3,"UnsignedCubemapArrayImage","","Represents a single image of a mipmap level of a layer of `UnsignedCubemapArray`.",null,null],[11,"get_id","","",903,{"inputs":[{"name":"unsignedcubemaparray"}],"output":{"name":"gluint"}}],[11,"fmt","","",903,{"inputs":[{"name":"unsignedcubemaparray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",903,{"inputs":[{"name":"unsignedcubemaparray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::unsigned_cubemap_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",903,{"inputs":[{"name":"unsignedcubemaparray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",903,{"inputs":[{"name":"unsignedcubemaparray"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",903,{"inputs":[{"name":"unsignedcubemaparray"},{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",903,{"inputs":[{"name":"unsignedcubemaparray"},{"name":"f"},{"name":"uncompresseduintformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",903,{"inputs":[{"name":"unsignedcubemaparray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",903,{"inputs":[{"name":"unsignedcubemaparray"},{"name":"f"},{"name":"uncompresseduintformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"unsignedcubemaparray"}}],[11,"width","","Returns the width of that image.",903,{"inputs":[{"name":"unsignedcubemaparray"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",903,{"inputs":[{"name":"unsignedcubemaparray"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",903,{"inputs":[{"name":"unsignedcubemaparray"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",903,{"inputs":[{"name":"unsignedcubemaparray"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",903,{"inputs":[{"name":"unsignedcubemaparray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",903,{"inputs":[{"name":"unsignedcubemaparray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",903,{"inputs":[{"name":"unsignedcubemaparray"}],"output":{"name":"unsignedcubemaparraylayer"}}],[11,"layer","","Access a single layer of this texture.",903,{"inputs":[{"name":"unsignedcubemaparray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",903,{"inputs":[{"name":"unsignedcubemaparray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",903,{"inputs":[{"name":"unsignedcubemaparray"}],"output":{"name":"unsignedcubemaparraymipmap"}}],[11,"clone","","",904,{"inputs":[{"name":"unsignedcubemaparraylayer"}],"output":{"name":"unsignedcubemaparraylayer"}}],[11,"width","","Returns the width of that image.",904,{"inputs":[{"name":"unsignedcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",904,{"inputs":[{"name":"unsignedcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",904,{"inputs":[{"name":"unsignedcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",904,{"inputs":[{"name":"unsignedcubemaparraylayer"}],"output":{"name":"unsignedcubemaparray"}}],[11,"get_layer","","Returns the layer index.",904,{"inputs":[{"name":"unsignedcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",904,{"inputs":[{"name":"unsignedcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",904,{"inputs":[{"name":"unsignedcubemaparraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",904,{"inputs":[{"name":"unsignedcubemaparraylayer"}],"output":{"name":"unsignedcubemaparraylayermipmap"}}],[11,"clone","","",905,{"inputs":[{"name":"unsignedcubemaparraymipmap"}],"output":{"name":"unsignedcubemaparraymipmap"}}],[11,"deref","","",905,{"inputs":[{"name":"unsignedcubemaparraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",905,{"inputs":[{"name":"unsignedcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",905,{"inputs":[{"name":"unsignedcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",905,{"inputs":[{"name":"unsignedcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",905,{"inputs":[{"name":"unsignedcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",905,{"inputs":[{"name":"unsignedcubemaparraymipmap"}],"output":{"name":"unsignedcubemaparray"}}],[11,"get_level","","Returns the texture level.",905,{"inputs":[{"name":"unsignedcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",905,{"inputs":[{"name":"unsignedcubemaparraymipmap"}],"output":{"name":"unsignedcubemaparraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",905,{"inputs":[{"name":"unsignedcubemaparraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",906,{"inputs":[{"name":"unsignedcubemaparraylayermipmap"}],"output":{"name":"unsignedcubemaparraylayermipmap"}}],[11,"width","","Returns the width of that image.",906,{"inputs":[{"name":"unsignedcubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",906,{"inputs":[{"name":"unsignedcubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",906,{"inputs":[{"name":"unsignedcubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"image","","Provides an object representing a single layer of this cubemap.",906,{"inputs":[{"name":"unsignedcubemaparraylayermipmap"},{"name":"cubelayer"}],"output":{"name":"unsignedcubemaparrayimage"}}],[11,"clone","","",907,{"inputs":[{"name":"unsignedcubemaparrayimage"}],"output":{"name":"unsignedcubemaparrayimage"}}],[11,"width","","Returns the width of that image.",907,{"inputs":[{"name":"unsignedcubemaparrayimage"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",907,{"inputs":[{"name":"unsignedcubemaparrayimage"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",907,{"inputs":[{"name":"unsignedcubemaparrayimage"}],"output":{"name":"u32"}}],[11,"into","","",907,{"inputs":[{"name":"unsignedcubemaparrayimage"}],"output":{"name":"textureanyimage"}}],[11,"to_color_attachment","","",907,{"inputs":[{"name":"unsignedcubemaparrayimage"}],"output":{"name":"colorattachment"}}],[0,"depth_cubemap_array","glium::texture","Contains the implementation of `DepthCubemapArray`.",null,null],[3,"DepthCubemapArray","glium::texture::depth_cubemap_array","An array of cube textures  containing depth data.",null,null],[3,"DepthCubemapArrayLayer","","Represents a single layer of a `DepthCubemapArray`.",null,null],[3,"DepthCubemapArrayMipmap","","Represents a single mipmap level of a `DepthCubemapArray`.",null,null],[3,"DepthCubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a `DepthCubemapArray`.",null,null],[3,"DepthCubemapArrayImage","","Represents a single image of a mipmap level of a layer of `DepthCubemapArray`.",null,null],[11,"get_id","","",908,{"inputs":[{"name":"depthcubemaparray"}],"output":{"name":"gluint"}}],[11,"fmt","","",908,{"inputs":[{"name":"depthcubemaparray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",908,{"inputs":[{"name":"depthcubemaparray"}],"output":{"name":"textureany"}}],[11,"as_uniform_value","glium::uniforms","",626,{"inputs":[{"name":"sampler"}],"output":{"name":"uniformvalue"}}],[11,"sampled","glium::texture::depth_cubemap_array","Builds a `Sampler` marker object that allows you to indicate\nhow the texture should be sampled from inside a shader.",908,{"inputs":[{"name":"depthcubemaparray"}],"output":{"name":"sampler"}}],[11,"get_internal_format","","Determines the internal format of this texture.",908,{"inputs":[{"name":"depthcubemaparray"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",908,{"inputs":[{"name":"depthcubemaparray"},{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",908,{"inputs":[{"name":"depthcubemaparray"},{"name":"f"},{"name":"depthformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",908,{"inputs":[{"name":"depthcubemaparray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",908,{"inputs":[{"name":"depthcubemaparray"},{"name":"f"},{"name":"depthformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthcubemaparray"}}],[11,"width","","Returns the width of that image.",908,{"inputs":[{"name":"depthcubemaparray"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",908,{"inputs":[{"name":"depthcubemaparray"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",908,{"inputs":[{"name":"depthcubemaparray"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",908,{"inputs":[{"name":"depthcubemaparray"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",908,{"inputs":[{"name":"depthcubemaparray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",908,{"inputs":[{"name":"depthcubemaparray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",908,{"inputs":[{"name":"depthcubemaparray"}],"output":{"name":"depthcubemaparraylayer"}}],[11,"layer","","Access a single layer of this texture.",908,{"inputs":[{"name":"depthcubemaparray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",908,{"inputs":[{"name":"depthcubemaparray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",908,{"inputs":[{"name":"depthcubemaparray"}],"output":{"name":"depthcubemaparraymipmap"}}],[11,"clone","","",909,{"inputs":[{"name":"depthcubemaparraylayer"}],"output":{"name":"depthcubemaparraylayer"}}],[11,"width","","Returns the width of that image.",909,{"inputs":[{"name":"depthcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",909,{"inputs":[{"name":"depthcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",909,{"inputs":[{"name":"depthcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",909,{"inputs":[{"name":"depthcubemaparraylayer"}],"output":{"name":"depthcubemaparray"}}],[11,"get_layer","","Returns the layer index.",909,{"inputs":[{"name":"depthcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",909,{"inputs":[{"name":"depthcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",909,{"inputs":[{"name":"depthcubemaparraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",909,{"inputs":[{"name":"depthcubemaparraylayer"}],"output":{"name":"depthcubemaparraylayermipmap"}}],[11,"clone","","",910,{"inputs":[{"name":"depthcubemaparraymipmap"}],"output":{"name":"depthcubemaparraymipmap"}}],[11,"deref","","",910,{"inputs":[{"name":"depthcubemaparraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",910,{"inputs":[{"name":"depthcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",910,{"inputs":[{"name":"depthcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",910,{"inputs":[{"name":"depthcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",910,{"inputs":[{"name":"depthcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",910,{"inputs":[{"name":"depthcubemaparraymipmap"}],"output":{"name":"depthcubemaparray"}}],[11,"get_level","","Returns the texture level.",910,{"inputs":[{"name":"depthcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",910,{"inputs":[{"name":"depthcubemaparraymipmap"}],"output":{"name":"depthcubemaparraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",910,{"inputs":[{"name":"depthcubemaparraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",911,{"inputs":[{"name":"depthcubemaparraylayermipmap"}],"output":{"name":"depthcubemaparraylayermipmap"}}],[11,"width","","Returns the width of that image.",911,{"inputs":[{"name":"depthcubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",911,{"inputs":[{"name":"depthcubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",911,{"inputs":[{"name":"depthcubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"image","","Provides an object representing a single layer of this cubemap.",911,{"inputs":[{"name":"depthcubemaparraylayermipmap"},{"name":"cubelayer"}],"output":{"name":"depthcubemaparrayimage"}}],[11,"clone","","",912,{"inputs":[{"name":"depthcubemaparrayimage"}],"output":{"name":"depthcubemaparrayimage"}}],[11,"width","","Returns the width of that image.",912,{"inputs":[{"name":"depthcubemaparrayimage"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",912,{"inputs":[{"name":"depthcubemaparrayimage"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",912,{"inputs":[{"name":"depthcubemaparrayimage"}],"output":{"name":"u32"}}],[11,"into","","",912,{"inputs":[{"name":"depthcubemaparrayimage"}],"output":{"name":"textureanyimage"}}],[11,"to_depth_attachment","","",912,{"inputs":[{"name":"depthcubemaparrayimage"}],"output":{"name":"depthattachment"}}],[0,"stencil_cubemap_array","glium::texture","Contains the implementation of `StencilCubemapArray`.",null,null],[3,"StencilCubemapArray","glium::texture::stencil_cubemap_array","An array of cube textures  containing stencil data.",null,null],[3,"StencilCubemapArrayLayer","","Represents a single layer of a `StencilCubemapArray`.",null,null],[3,"StencilCubemapArrayMipmap","","Represents a single mipmap level of a `StencilCubemapArray`.",null,null],[3,"StencilCubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a `StencilCubemapArray`.",null,null],[3,"StencilCubemapArrayImage","","Represents a single image of a mipmap level of a layer of `StencilCubemapArray`.",null,null],[11,"get_id","","",913,{"inputs":[{"name":"stencilcubemaparray"}],"output":{"name":"gluint"}}],[11,"fmt","","",913,{"inputs":[{"name":"stencilcubemaparray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",913,{"inputs":[{"name":"stencilcubemaparray"}],"output":{"name":"textureany"}}],[11,"get_internal_format","","Determines the internal format of this texture.",913,{"inputs":[{"name":"stencilcubemaparray"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",913,{"inputs":[{"name":"stencilcubemaparray"},{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",913,{"inputs":[{"name":"stencilcubemaparray"},{"name":"f"},{"name":"stencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",913,{"inputs":[{"name":"stencilcubemaparray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",913,{"inputs":[{"name":"stencilcubemaparray"},{"name":"f"},{"name":"stencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"stencilcubemaparray"}}],[11,"width","","Returns the width of that image.",913,{"inputs":[{"name":"stencilcubemaparray"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",913,{"inputs":[{"name":"stencilcubemaparray"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",913,{"inputs":[{"name":"stencilcubemaparray"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",913,{"inputs":[{"name":"stencilcubemaparray"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",913,{"inputs":[{"name":"stencilcubemaparray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",913,{"inputs":[{"name":"stencilcubemaparray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",913,{"inputs":[{"name":"stencilcubemaparray"}],"output":{"name":"stencilcubemaparraylayer"}}],[11,"layer","","Access a single layer of this texture.",913,{"inputs":[{"name":"stencilcubemaparray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",913,{"inputs":[{"name":"stencilcubemaparray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",913,{"inputs":[{"name":"stencilcubemaparray"}],"output":{"name":"stencilcubemaparraymipmap"}}],[11,"clone","","",914,{"inputs":[{"name":"stencilcubemaparraylayer"}],"output":{"name":"stencilcubemaparraylayer"}}],[11,"width","","Returns the width of that image.",914,{"inputs":[{"name":"stencilcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",914,{"inputs":[{"name":"stencilcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",914,{"inputs":[{"name":"stencilcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",914,{"inputs":[{"name":"stencilcubemaparraylayer"}],"output":{"name":"stencilcubemaparray"}}],[11,"get_layer","","Returns the layer index.",914,{"inputs":[{"name":"stencilcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",914,{"inputs":[{"name":"stencilcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",914,{"inputs":[{"name":"stencilcubemaparraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",914,{"inputs":[{"name":"stencilcubemaparraylayer"}],"output":{"name":"stencilcubemaparraylayermipmap"}}],[11,"clone","","",915,{"inputs":[{"name":"stencilcubemaparraymipmap"}],"output":{"name":"stencilcubemaparraymipmap"}}],[11,"deref","","",915,{"inputs":[{"name":"stencilcubemaparraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",915,{"inputs":[{"name":"stencilcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",915,{"inputs":[{"name":"stencilcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",915,{"inputs":[{"name":"stencilcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",915,{"inputs":[{"name":"stencilcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",915,{"inputs":[{"name":"stencilcubemaparraymipmap"}],"output":{"name":"stencilcubemaparray"}}],[11,"get_level","","Returns the texture level.",915,{"inputs":[{"name":"stencilcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",915,{"inputs":[{"name":"stencilcubemaparraymipmap"}],"output":{"name":"stencilcubemaparraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",915,{"inputs":[{"name":"stencilcubemaparraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",916,{"inputs":[{"name":"stencilcubemaparraylayermipmap"}],"output":{"name":"stencilcubemaparraylayermipmap"}}],[11,"width","","Returns the width of that image.",916,{"inputs":[{"name":"stencilcubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",916,{"inputs":[{"name":"stencilcubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",916,{"inputs":[{"name":"stencilcubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"image","","Provides an object representing a single layer of this cubemap.",916,{"inputs":[{"name":"stencilcubemaparraylayermipmap"},{"name":"cubelayer"}],"output":{"name":"stencilcubemaparrayimage"}}],[11,"clone","","",917,{"inputs":[{"name":"stencilcubemaparrayimage"}],"output":{"name":"stencilcubemaparrayimage"}}],[11,"width","","Returns the width of that image.",917,{"inputs":[{"name":"stencilcubemaparrayimage"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",917,{"inputs":[{"name":"stencilcubemaparrayimage"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",917,{"inputs":[{"name":"stencilcubemaparrayimage"}],"output":{"name":"u32"}}],[11,"into","","",917,{"inputs":[{"name":"stencilcubemaparrayimage"}],"output":{"name":"textureanyimage"}}],[11,"to_stencil_attachment","","",917,{"inputs":[{"name":"stencilcubemaparrayimage"}],"output":{"name":"stencilattachment"}}],[0,"depth_stencil_cubemap_array","glium::texture","Contains the implementation of `DepthStencilCubemapArray`.",null,null],[3,"DepthStencilCubemapArray","glium::texture::depth_stencil_cubemap_array","An array of cube textures  containing both depth and stencil data.",null,null],[3,"DepthStencilCubemapArrayLayer","","Represents a single layer of a `DepthStencilCubemapArray`.",null,null],[3,"DepthStencilCubemapArrayMipmap","","Represents a single mipmap level of a `DepthStencilCubemapArray`.",null,null],[3,"DepthStencilCubemapArrayLayerMipmap","","Represents a single layer of a mipmap level of a `DepthStencilCubemapArray`.",null,null],[3,"DepthStencilCubemapArrayImage","","Represents a single image of a mipmap level of a layer of `DepthStencilCubemapArray`.",null,null],[11,"get_id","","",918,{"inputs":[{"name":"depthstencilcubemaparray"}],"output":{"name":"gluint"}}],[11,"fmt","","",918,{"inputs":[{"name":"depthstencilcubemaparray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",918,{"inputs":[{"name":"depthstencilcubemaparray"}],"output":{"name":"textureany"}}],[11,"get_internal_format","","Determines the internal format of this texture.",918,{"inputs":[{"name":"depthstencilcubemaparray"}],"output":{"name":"result"}}],[11,"empty","","Creates an empty texture.",918,{"inputs":[{"name":"depthstencilcubemaparray"},{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_format","","Creates an empty texture with a specific format.",918,{"inputs":[{"name":"depthstencilcubemaparray"},{"name":"f"},{"name":"depthstencilformat"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"empty_with_mipmaps","","Creates an empty texture. Specifies whether is has mipmaps.",918,{"inputs":[{"name":"depthstencilcubemaparray"},{"name":"f"},{"name":"mipmapsoption"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"from_id","","Builds a new texture reference from an existing, externally created OpenGL texture.\nIf `owned` is true, this reference will take ownership of the texture and be responsible\nfor cleaning it up. Otherwise, the texture must be cleaned up externally, but only\nafter this reference's lifetime has ended.",918,{"inputs":[{"name":"depthstencilcubemaparray"},{"name":"f"},{"name":"depthstencilformat"},{"name":"gluint"},{"name":"bool"},{"name":"mipmapsoption"},{"name":"dimensions"}],"output":{"name":"depthstencilcubemaparray"}}],[11,"width","","Returns the width of that image.",918,{"inputs":[{"name":"depthstencilcubemaparray"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",918,{"inputs":[{"name":"depthstencilcubemaparray"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",918,{"inputs":[{"name":"depthstencilcubemaparray"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",918,{"inputs":[{"name":"depthstencilcubemaparray"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",918,{"inputs":[{"name":"depthstencilcubemaparray"}],"output":{"name":"u32"}}],[11,"resident","","Turns the texture into a `ResidentTexture`.",918,{"inputs":[{"name":"depthstencilcubemaparray"}],"output":{"name":"result"}}],[11,"first_layer","","Access the first layer of this texture.",918,{"inputs":[{"name":"depthstencilcubemaparray"}],"output":{"name":"depthstencilcubemaparraylayer"}}],[11,"layer","","Access a single layer of this texture.",918,{"inputs":[{"name":"depthstencilcubemaparray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"mipmap","","Access a single mipmap level of this texture.",918,{"inputs":[{"name":"depthstencilcubemaparray"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this texture.",918,{"inputs":[{"name":"depthstencilcubemaparray"}],"output":{"name":"depthstencilcubemaparraymipmap"}}],[11,"clone","","",919,{"inputs":[{"name":"depthstencilcubemaparraylayer"}],"output":{"name":"depthstencilcubemaparraylayer"}}],[11,"width","","Returns the width of that image.",919,{"inputs":[{"name":"depthstencilcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",919,{"inputs":[{"name":"depthstencilcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",919,{"inputs":[{"name":"depthstencilcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",919,{"inputs":[{"name":"depthstencilcubemaparraylayer"}],"output":{"name":"depthstencilcubemaparray"}}],[11,"get_layer","","Returns the layer index.",919,{"inputs":[{"name":"depthstencilcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"get_mipmap_levels","","Returns the number of mipmap levels of the texture.",919,{"inputs":[{"name":"depthstencilcubemaparraylayer"}],"output":{"name":"u32"}}],[11,"mipmap","","Access a single mipmap level of this layer.",919,{"inputs":[{"name":"depthstencilcubemaparraylayer"},{"name":"u32"}],"output":{"name":"option"}}],[11,"main_level","","Access the main mipmap level of this layer.",919,{"inputs":[{"name":"depthstencilcubemaparraylayer"}],"output":{"name":"depthstencilcubemaparraylayermipmap"}}],[11,"clone","","",920,{"inputs":[{"name":"depthstencilcubemaparraymipmap"}],"output":{"name":"depthstencilcubemaparraymipmap"}}],[11,"deref","","",920,{"inputs":[{"name":"depthstencilcubemaparraymipmap"}],"output":{"name":"textureanymipmap"}}],[11,"width","","Returns the width of that image.",920,{"inputs":[{"name":"depthstencilcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",920,{"inputs":[{"name":"depthstencilcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"array_size","","Returns the number of array layers.",920,{"inputs":[{"name":"depthstencilcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",920,{"inputs":[{"name":"depthstencilcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"get_texture","","Returns the corresponding texture.",920,{"inputs":[{"name":"depthstencilcubemaparraymipmap"}],"output":{"name":"depthstencilcubemaparray"}}],[11,"get_level","","Returns the texture level.",920,{"inputs":[{"name":"depthstencilcubemaparraymipmap"}],"output":{"name":"u32"}}],[11,"first_layer","","Access the first layer of this texture.",920,{"inputs":[{"name":"depthstencilcubemaparraymipmap"}],"output":{"name":"depthstencilcubemaparraylayermipmap"}}],[11,"layer","","Access a single layer of this texture.",920,{"inputs":[{"name":"depthstencilcubemaparraymipmap"},{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",921,{"inputs":[{"name":"depthstencilcubemaparraylayermipmap"}],"output":{"name":"depthstencilcubemaparraylayermipmap"}}],[11,"width","","Returns the width of that image.",921,{"inputs":[{"name":"depthstencilcubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",921,{"inputs":[{"name":"depthstencilcubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",921,{"inputs":[{"name":"depthstencilcubemaparraylayermipmap"}],"output":{"name":"u32"}}],[11,"image","","Provides an object representing a single layer of this cubemap.",921,{"inputs":[{"name":"depthstencilcubemaparraylayermipmap"},{"name":"cubelayer"}],"output":{"name":"depthstencilcubemaparrayimage"}}],[11,"clone","","",922,{"inputs":[{"name":"depthstencilcubemaparrayimage"}],"output":{"name":"depthstencilcubemaparrayimage"}}],[11,"width","","Returns the width of that image.",922,{"inputs":[{"name":"depthstencilcubemaparrayimage"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of that image.",922,{"inputs":[{"name":"depthstencilcubemaparrayimage"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimension of that image.",922,{"inputs":[{"name":"depthstencilcubemaparrayimage"}],"output":{"name":"u32"}}],[11,"into","","",922,{"inputs":[{"name":"depthstencilcubemaparrayimage"}],"output":{"name":"textureanyimage"}}],[11,"to_depth_stencil_attachment","","",922,{"inputs":[{"name":"depthstencilcubemaparrayimage"}],"output":{"name":"depthstencilattachment"}}],[8,"PixelValue","glium::texture","A trait that must be implemented for any type that can represent the value of a pixel.",null,null],[10,"get_format","","Returns corresponding client format.",923,{"inputs":[{"name":"pixelvalue"}],"output":{"name":"clientformat"}}],[8,"Texture1dDataSource","","Trait that describes data for a one-dimensional texture.",null,null],[16,"Data","","The type of each pixel.",924,null],[10,"into_raw","","Returns the raw representation of the data.",924,{"inputs":[{"name":"texture1ddatasource"}],"output":{"name":"rawimage1d"}}],[8,"Texture1dDataSink","","Trait that describes types that can be built from one-dimensional texture data.",null,null],[10,"from_raw","","Builds a new object from raw data.",925,{"inputs":[{"name":"texture1ddatasink"},{"name":"cow"},{"name":"u32"}],"output":{"name":"self"}}],[8,"Texture2dDataSource","","Trait that describes data for a two-dimensional texture.",null,null],[16,"Data","","The type of each pixel.",926,null],[10,"into_raw","","Returns the raw representation of the data.",926,{"inputs":[{"name":"texture2ddatasource"}],"output":{"name":"rawimage2d"}}],[8,"Texture2dDataSink","","Trait that describes types that can be built from two-dimensional texture data.",null,null],[10,"from_raw","","Builds a new object from raw data.",927,{"inputs":[{"name":"texture2ddatasink"},{"name":"cow"},{"name":"u32"},{"name":"u32"}],"output":{"name":"self"}}],[8,"Texture3dDataSource","","Trait that describes data for a two-dimensional texture.",null,null],[16,"Data","","The type of each pixel.",928,null],[10,"into_raw","","Returns the raw representation of the data.",928,{"inputs":[{"name":"texture3ddatasource"}],"output":{"name":"rawimage3d"}}],[8,"Texture3dDataSink","","Trait that describes types that can be built from one-dimensional texture data.",null,null],[10,"from_raw","","Builds a new object from raw data.",929,{"inputs":[{"name":"texture3ddatasink"},{"name":"cow"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"self"}}],[11,"hash","","",664,null],[11,"eq","","",664,{"inputs":[{"name":"cubelayer"},{"name":"cubelayer"}],"output":{"name":"bool"}}],[11,"ne","","",664,{"inputs":[{"name":"cubelayer"},{"name":"cubelayer"}],"output":{"name":"bool"}}],[11,"fmt","","",664,{"inputs":[{"name":"cubelayer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",664,{"inputs":[{"name":"cubelayer"}],"output":{"name":"cubelayer"}}],[11,"get_layer_index","","In some situations whole cubemaps can be binded at once. If this is the case, each layer\nof the cubemap has a specific index.",664,{"inputs":[{"name":"cubelayer"}],"output":{"name":"usize"}}],[11,"hash","","",665,null],[11,"eq","","",665,{"inputs":[{"name":"texturekind"},{"name":"texturekind"}],"output":{"name":"bool"}}],[11,"ne","","",665,{"inputs":[{"name":"texturekind"},{"name":"texturekind"}],"output":{"name":"bool"}}],[11,"fmt","","",665,{"inputs":[{"name":"texturekind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",665,{"inputs":[{"name":"texturekind"}],"output":{"name":"texturekind"}}],[11,"eq","","",666,{"inputs":[{"name":"mipmapsoption"},{"name":"mipmapsoption"}],"output":{"name":"bool"}}],[11,"ne","","",666,{"inputs":[{"name":"mipmapsoption"},{"name":"mipmapsoption"}],"output":{"name":"bool"}}],[11,"clone","","",666,{"inputs":[{"name":"mipmapsoption"}],"output":{"name":"mipmapsoption"}}],[11,"fmt","","",666,{"inputs":[{"name":"mipmapsoption"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",666,{"inputs":[{"name":"mipmapsoption"},{"name":"compressedmipmapsoption"}],"output":{"name":"mipmapsoption"}}],[11,"eq","","",667,{"inputs":[{"name":"compressedmipmapsoption"},{"name":"compressedmipmapsoption"}],"output":{"name":"bool"}}],[11,"ne","","",667,{"inputs":[{"name":"compressedmipmapsoption"},{"name":"compressedmipmapsoption"}],"output":{"name":"bool"}}],[11,"clone","","",667,{"inputs":[{"name":"compressedmipmapsoption"}],"output":{"name":"compressedmipmapsoption"}}],[11,"fmt","","",667,{"inputs":[{"name":"compressedmipmapsoption"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into_raw","collections::vec","",255,{"inputs":[{"name":"vec"}],"output":{"name":"rawimage1d"}}],[11,"into_raw","glium::texture","",646,{"inputs":[{"name":"rawimage1d"}],"output":{"name":"rawimage1d"}}],[11,"from_raw","collections::vec","",255,{"inputs":[{"name":"vec"},{"name":"cow"},{"name":"u32"}],"output":{"name":"self"}}],[11,"from_raw_rgba","glium::texture","",647,null],[11,"from_raw_rgba_reversed","","",647,null],[11,"from_vec_raw1d","","Transforms a Vec<RawImage1d> into a RawImage2d",647,{"inputs":[{"name":"rawimage2d"},{"name":"vec"}],"output":{"name":"rawimage2d"}}],[11,"into_raw","collections::vec","",255,{"inputs":[{"name":"vec"}],"output":{"name":"rawimage2d"}}],[11,"into_raw","glium::texture","",647,{"inputs":[{"name":"rawimage2d"}],"output":{"name":"rawimage2d"}}],[11,"from_raw","collections::vec","",255,{"inputs":[{"name":"vec"},{"name":"cow"},{"name":"u32"},{"name":"u32"}],"output":{"name":"self"}}],[11,"from_raw","glium::texture","",647,{"inputs":[{"name":"rawimage2d"},{"name":"cow"},{"name":"u32"},{"name":"u32"}],"output":{"name":"self"}}],[11,"from_vec_raw2d","","Transforms a Vec<RawImage2d> into a RawImage3d",648,{"inputs":[{"name":"rawimage3d"},{"name":"vec"}],"output":{"name":"rawimage3d"}}],[11,"into_raw","collections::vec","",255,{"inputs":[{"name":"vec"}],"output":{"name":"rawimage3d"}}],[11,"into_raw","glium::texture","",648,{"inputs":[{"name":"rawimage3d"}],"output":{"name":"rawimage3d"}}],[11,"from_raw","collections::vec","",255,{"inputs":[{"name":"vec"},{"name":"cow"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"self"}}],[11,"eq","glium::texture","",668,{"inputs":[{"name":"texturecreationerror"},{"name":"texturecreationerror"}],"output":{"name":"bool"}}],[11,"ne","","",668,{"inputs":[{"name":"texturecreationerror"},{"name":"texturecreationerror"}],"output":{"name":"bool"}}],[11,"clone","","",668,{"inputs":[{"name":"texturecreationerror"}],"output":{"name":"texturecreationerror"}}],[11,"fmt","","",668,{"inputs":[{"name":"texturecreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",668,{"inputs":[{"name":"texturecreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",668,{"inputs":[{"name":"texturecreationerror"}],"output":{"name":"str"}}],[11,"from","","",668,{"inputs":[{"name":"texturecreationerror"},{"name":"formatnotsupportederror"}],"output":{"name":"texturecreationerror"}}],[11,"clone","glium","",511,{"inputs":[{"name":"profile"}],"output":{"name":"profile"}}],[11,"fmt","","",511,{"inputs":[{"name":"profile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","glium::backend","",522,{"inputs":[{"name":"releasebehavior"},{"name":"releasebehavior"}],"output":{"name":"bool"}}],[11,"ne","","",522,{"inputs":[{"name":"releasebehavior"},{"name":"releasebehavior"}],"output":{"name":"bool"}}],[11,"fmt","","",522,{"inputs":[{"name":"releasebehavior"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",522,{"inputs":[{"name":"releasebehavior"}],"output":{"name":"releasebehavior"}}],[11,"new","","Builds a new context.",930,{"inputs":[{"name":"context"},{"name":"b"},{"name":"bool"},{"name":"debugcallbackbehavior"}],"output":{"name":"result"}}],[11,"get_framebuffer_dimensions","","Calls `get_framebuffer_dimensions` on the backend object stored by this context.",930,null],[11,"rebuild","","Changes the OpenGL context associated with this context.",930,{"inputs":[{"name":"context"},{"name":"b"}],"output":{"name":"result"}}],[11,"swap_buffers","","Swaps the buffers in the backend.",930,{"inputs":[{"name":"context"}],"output":{"name":"result"}}],[11,"get_version","","DEPRECATED. Use `get_opengl_version` instead.",930,{"inputs":[{"name":"context"}],"output":{"name":"version"}}],[11,"get_opengl_version","","Returns the OpenGL version detected by this context.",930,{"inputs":[{"name":"context"}],"output":{"name":"version"}}],[11,"get_supported_glsl_version","","Returns the GLSL version guaranteed to be supported.",930,{"inputs":[{"name":"context"}],"output":{"name":"version"}}],[11,"is_glsl_version_supported","","Returns true if the given GLSL version is supported.",930,{"inputs":[{"name":"context"},{"name":"version"}],"output":{"name":"bool"}}],[11,"get_opengl_version_string","","Returns a string containing this GL version or release number used by this context.",930,{"inputs":[{"name":"context"}],"output":{"name":"str"}}],[11,"get_opengl_vendor_string","","Returns a string containing the company responsible for this GL implementation.",930,{"inputs":[{"name":"context"}],"output":{"name":"str"}}],[11,"get_opengl_renderer_string","","Returns a string containing the name of the GL renderer used by this context.",930,{"inputs":[{"name":"context"}],"output":{"name":"str"}}],[11,"is_debug","","Returns true if the context is in debug mode.",930,{"inputs":[{"name":"context"}],"output":{"name":"bool"}}],[11,"is_forward_compatible","","Returns true if the context is in \"forward-compatible\" mode.",930,{"inputs":[{"name":"context"}],"output":{"name":"bool"}}],[11,"get_opengl_profile","","Returns this context's OpenGL profile if available.",930,{"inputs":[{"name":"context"}],"output":{"name":"option"}}],[11,"is_robust","","Returns true if out-of-bound buffer access from the GPU side (inside a program) cannot\nresult in a crash.",930,{"inputs":[{"name":"context"}],"output":{"name":"bool"}}],[11,"is_context_loss_possible","","Returns true if a context loss is possible.",930,{"inputs":[{"name":"context"}],"output":{"name":"bool"}}],[11,"is_context_lost","","Returns true if the context has been lost and needs to be recreated.",930,{"inputs":[{"name":"context"}],"output":{"name":"bool"}}],[11,"get_release_behavior","","Returns the behavior when the current OpenGL context is changed.",930,{"inputs":[{"name":"context"}],"output":{"name":"releasebehavior"}}],[11,"get_max_anisotropy_support","","Returns the maximum value that can be used for anisotropic filtering, or `None`\nif the hardware doesn't support it.",930,{"inputs":[{"name":"context"}],"output":{"name":"option"}}],[11,"get_max_viewport_dimensions","","Returns the maximum dimensions of the viewport.",930,null],[11,"release_shader_compiler","","Releases the shader compiler, indicating that no new programs will be created for a while.",930,{"inputs":[{"name":"context"}],"output":null}],[11,"get_free_video_memory","","Returns an estimate of the amount of video memory available in bytes.",930,{"inputs":[{"name":"context"}],"output":{"name":"option"}}],[11,"read_front_buffer","","Reads the content of the front buffer.",930,{"inputs":[{"name":"context"}],"output":{"name":"t"}}],[11,"exec_in_context","","Execute an arbitrary closure with the OpenGL context active. Useful if another\ncomponent needs to directly manipulate OpenGL state.",930,{"inputs":[{"name":"context"},{"name":"f"}],"output":{"name":"t"}}],[11,"assert_no_error","","Asserts that there are no OpenGL errors pending.",930,{"inputs":[{"name":"context"},{"name":"option"}],"output":null}],[11,"synchronize","","DEPRECATED. Renamed `finish`.",930,{"inputs":[{"name":"context"}],"output":null}],[11,"finish","","Calls `glFinish()`. This waits until all the previously issued commands have finished\nbeing executed.",930,{"inputs":[{"name":"context"}],"output":null}],[11,"flush","","Calls `glFlush()`. This starts executing the commands that you have issued if it is not\nyet the case.",930,{"inputs":[{"name":"context"}],"output":null}],[11,"insert_debug_marker","","Inserts a debugging string in the commands queue. If you use an OpenGL debugger, you will\nbe able to see that string.",930,{"inputs":[{"name":"context"},{"name":"str"}],"output":{"name":"result"}}],[11,"debug_insert_debug_marker","","Same as `insert_debug_marker`, except that if you don't compile with `debug_assertions`\nit is a no-op and returns `Ok`.",930,{"inputs":[{"name":"context"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_version","","",930,{"inputs":[{"name":"context"}],"output":{"name":"version"}}],[11,"get_extensions","","",930,{"inputs":[{"name":"context"}],"output":{"name":"extensionslist"}}],[11,"get_capabilities","","",930,{"inputs":[{"name":"context"}],"output":{"name":"capabilities"}}],[11,"drop","","",930,{"inputs":[{"name":"context"}],"output":null}],[11,"default","glium::debug","",545,{"inputs":[{"name":"debugcallbackbehavior"}],"output":{"name":"debugcallbackbehavior"}}],[11,"eq","glium::framebuffer","",567,{"inputs":[{"name":"validationerror"},{"name":"validationerror"}],"output":{"name":"bool"}}],[11,"ne","","",567,{"inputs":[{"name":"validationerror"},{"name":"validationerror"}],"output":{"name":"bool"}}],[11,"fmt","","",567,{"inputs":[{"name":"validationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",567,{"inputs":[{"name":"validationerror"}],"output":{"name":"validationerror"}}],[11,"fmt","","",567,{"inputs":[{"name":"validationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",567,{"inputs":[{"name":"validationerror"}],"output":{"name":"str"}}],[11,"eq","glium::texture","",649,{"inputs":[{"name":"clientformat"},{"name":"clientformat"}],"output":{"name":"bool"}}],[11,"ne","","",649,{"inputs":[{"name":"clientformat"},{"name":"clientformat"}],"output":{"name":"bool"}}],[11,"clone","","",649,{"inputs":[{"name":"clientformat"}],"output":{"name":"clientformat"}}],[11,"fmt","","",649,{"inputs":[{"name":"clientformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_size","","Returns the size in bytes of a pixel of this type.",649,{"inputs":[{"name":"clientformat"}],"output":{"name":"usize"}}],[11,"get_num_components","","Returns the number of components of this client format.",649,{"inputs":[{"name":"clientformat"}],"output":{"name":"u8"}}],[11,"eq","","",651,{"inputs":[{"name":"uncompressedfloatformat"},{"name":"uncompressedfloatformat"}],"output":{"name":"bool"}}],[11,"ne","","",651,{"inputs":[{"name":"uncompressedfloatformat"},{"name":"uncompressedfloatformat"}],"output":{"name":"bool"}}],[11,"hash","","",651,null],[11,"clone","","",651,{"inputs":[{"name":"uncompressedfloatformat"}],"output":{"name":"uncompressedfloatformat"}}],[11,"fmt","","",651,{"inputs":[{"name":"uncompressedfloatformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_formats_list","","Returns a list of all the possible values of this enumeration.",651,{"inputs":[{"name":"uncompressedfloatformat"}],"output":{"name":"vec"}}],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",651,{"inputs":[{"name":"uncompressedfloatformat"}],"output":{"name":"textureformat"}}],[11,"is_supported","","Returns true if this format is supported by the backend.",651,{"inputs":[{"name":"uncompressedfloatformat"},{"name":"c"}],"output":{"name":"bool"}}],[11,"is_color_renderable","","Returns true if a texture or renderbuffer with this format can be used as a framebuffer\nattachment.",651,{"inputs":[{"name":"uncompressedfloatformat"},{"name":"c"}],"output":{"name":"bool"}}],[11,"eq","","",659,{"inputs":[{"name":"srgbformat"},{"name":"srgbformat"}],"output":{"name":"bool"}}],[11,"ne","","",659,{"inputs":[{"name":"srgbformat"},{"name":"srgbformat"}],"output":{"name":"bool"}}],[11,"hash","","",659,null],[11,"clone","","",659,{"inputs":[{"name":"srgbformat"}],"output":{"name":"srgbformat"}}],[11,"fmt","","",659,{"inputs":[{"name":"srgbformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_formats_list","","Returns a list of all the possible values of this enumeration.",659,{"inputs":[{"name":"srgbformat"}],"output":{"name":"vec"}}],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",659,{"inputs":[{"name":"srgbformat"}],"output":{"name":"textureformat"}}],[11,"is_supported","","Returns true if this format is supported by the backend.",659,{"inputs":[{"name":"srgbformat"},{"name":"c"}],"output":{"name":"bool"}}],[11,"is_color_renderable","","Returns true if a texture or renderbuffer with this format can be used as a framebuffer\nattachment.",659,{"inputs":[{"name":"srgbformat"},{"name":"c"}],"output":{"name":"bool"}}],[11,"eq","","",652,{"inputs":[{"name":"uncompressedintformat"},{"name":"uncompressedintformat"}],"output":{"name":"bool"}}],[11,"ne","","",652,{"inputs":[{"name":"uncompressedintformat"},{"name":"uncompressedintformat"}],"output":{"name":"bool"}}],[11,"hash","","",652,null],[11,"clone","","",652,{"inputs":[{"name":"uncompressedintformat"}],"output":{"name":"uncompressedintformat"}}],[11,"fmt","","",652,{"inputs":[{"name":"uncompressedintformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_formats_list","","Returns a list of all the possible values of this enumeration.",652,{"inputs":[{"name":"uncompressedintformat"}],"output":{"name":"vec"}}],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",652,{"inputs":[{"name":"uncompressedintformat"}],"output":{"name":"textureformat"}}],[11,"is_supported","","Returns true if this format is supported by the backend.",652,{"inputs":[{"name":"uncompressedintformat"},{"name":"c"}],"output":{"name":"bool"}}],[11,"is_color_renderable","","Returns true if a texture or renderbuffer with this format can be used as a framebuffer\nattachment.",652,{"inputs":[{"name":"uncompressedintformat"},{"name":"c"}],"output":{"name":"bool"}}],[11,"eq","","",653,{"inputs":[{"name":"uncompresseduintformat"},{"name":"uncompresseduintformat"}],"output":{"name":"bool"}}],[11,"ne","","",653,{"inputs":[{"name":"uncompresseduintformat"},{"name":"uncompresseduintformat"}],"output":{"name":"bool"}}],[11,"hash","","",653,null],[11,"clone","","",653,{"inputs":[{"name":"uncompresseduintformat"}],"output":{"name":"uncompresseduintformat"}}],[11,"fmt","","",653,{"inputs":[{"name":"uncompresseduintformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_formats_list","","Returns a list of all the possible values of this enumeration.",653,{"inputs":[{"name":"uncompresseduintformat"}],"output":{"name":"vec"}}],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",653,{"inputs":[{"name":"uncompresseduintformat"}],"output":{"name":"textureformat"}}],[11,"is_supported","","Returns true if this format is supported by the backend.",653,{"inputs":[{"name":"uncompresseduintformat"},{"name":"c"}],"output":{"name":"bool"}}],[11,"is_color_renderable","","Returns true if a texture or renderbuffer with this format can be used as a framebuffer\nattachment.",653,{"inputs":[{"name":"uncompresseduintformat"},{"name":"c"}],"output":{"name":"bool"}}],[11,"eq","","",654,{"inputs":[{"name":"compressedformat"},{"name":"compressedformat"}],"output":{"name":"bool"}}],[11,"ne","","",654,{"inputs":[{"name":"compressedformat"},{"name":"compressedformat"}],"output":{"name":"bool"}}],[11,"hash","","",654,null],[11,"clone","","",654,{"inputs":[{"name":"compressedformat"}],"output":{"name":"compressedformat"}}],[11,"fmt","","",654,{"inputs":[{"name":"compressedformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_formats_list","","Returns a list of all the possible values of this enumeration.",654,{"inputs":[{"name":"compressedformat"}],"output":{"name":"vec"}}],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",654,{"inputs":[{"name":"compressedformat"}],"output":{"name":"textureformat"}}],[11,"is_supported","","Returns true if this format is supported by the backend.",654,{"inputs":[{"name":"compressedformat"},{"name":"c"}],"output":{"name":"bool"}}],[11,"eq","","",658,{"inputs":[{"name":"compressedsrgbformat"},{"name":"compressedsrgbformat"}],"output":{"name":"bool"}}],[11,"ne","","",658,{"inputs":[{"name":"compressedsrgbformat"},{"name":"compressedsrgbformat"}],"output":{"name":"bool"}}],[11,"hash","","",658,null],[11,"clone","","",658,{"inputs":[{"name":"compressedsrgbformat"}],"output":{"name":"compressedsrgbformat"}}],[11,"fmt","","",658,{"inputs":[{"name":"compressedsrgbformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_formats_list","","Returns a list of all the possible values of this enumeration.",658,{"inputs":[{"name":"compressedsrgbformat"}],"output":{"name":"vec"}}],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",658,{"inputs":[{"name":"compressedsrgbformat"}],"output":{"name":"textureformat"}}],[11,"is_supported","","Returns true if this format is supported by the backend.",658,{"inputs":[{"name":"compressedsrgbformat"},{"name":"c"}],"output":{"name":"bool"}}],[11,"eq","","",655,{"inputs":[{"name":"depthformat"},{"name":"depthformat"}],"output":{"name":"bool"}}],[11,"ne","","",655,{"inputs":[{"name":"depthformat"},{"name":"depthformat"}],"output":{"name":"bool"}}],[11,"hash","","",655,null],[11,"clone","","",655,{"inputs":[{"name":"depthformat"}],"output":{"name":"depthformat"}}],[11,"fmt","","",655,{"inputs":[{"name":"depthformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_formats_list","","Returns a list of all the possible values of this enumeration.",655,{"inputs":[{"name":"depthformat"}],"output":{"name":"vec"}}],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",655,{"inputs":[{"name":"depthformat"}],"output":{"name":"textureformat"}}],[11,"is_supported","","Returns true if this format is supported by the backend.",655,{"inputs":[{"name":"depthformat"},{"name":"c"}],"output":{"name":"bool"}}],[11,"eq","","",656,{"inputs":[{"name":"depthstencilformat"},{"name":"depthstencilformat"}],"output":{"name":"bool"}}],[11,"ne","","",656,{"inputs":[{"name":"depthstencilformat"},{"name":"depthstencilformat"}],"output":{"name":"bool"}}],[11,"hash","","",656,null],[11,"clone","","",656,{"inputs":[{"name":"depthstencilformat"}],"output":{"name":"depthstencilformat"}}],[11,"fmt","","",656,{"inputs":[{"name":"depthstencilformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_formats_list","","Returns a list of all the possible values of this enumeration.",656,{"inputs":[{"name":"depthstencilformat"}],"output":{"name":"vec"}}],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",656,{"inputs":[{"name":"depthstencilformat"}],"output":{"name":"textureformat"}}],[11,"is_supported","","Returns true if this format is supported by the backend.",656,{"inputs":[{"name":"depthstencilformat"},{"name":"c"}],"output":{"name":"bool"}}],[11,"eq","","",657,{"inputs":[{"name":"stencilformat"},{"name":"stencilformat"}],"output":{"name":"bool"}}],[11,"ne","","",657,{"inputs":[{"name":"stencilformat"},{"name":"stencilformat"}],"output":{"name":"bool"}}],[11,"hash","","",657,null],[11,"clone","","",657,{"inputs":[{"name":"stencilformat"}],"output":{"name":"stencilformat"}}],[11,"fmt","","",657,{"inputs":[{"name":"stencilformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_formats_list","","Returns a list of all the possible values of this enumeration.",657,{"inputs":[{"name":"stencilformat"}],"output":{"name":"vec"}}],[11,"to_texture_format","","Turns this format into a more generic `TextureFormat`.",657,{"inputs":[{"name":"stencilformat"}],"output":{"name":"textureformat"}}],[11,"is_supported_for_textures","","Returns true if this format is supported by the backend for textures.",657,{"inputs":[{"name":"stencilformat"},{"name":"c"}],"output":{"name":"bool"}}],[11,"is_supported_for_renderbuffers","","Returns true if this format is supported by the backend for renderbuffers.",657,{"inputs":[{"name":"stencilformat"},{"name":"c"}],"output":{"name":"bool"}}],[11,"eq","","",650,{"inputs":[{"name":"textureformat"},{"name":"textureformat"}],"output":{"name":"bool"}}],[11,"ne","","",650,{"inputs":[{"name":"textureformat"},{"name":"textureformat"}],"output":{"name":"bool"}}],[11,"hash","","",650,null],[11,"clone","","",650,{"inputs":[{"name":"textureformat"}],"output":{"name":"textureformat"}}],[11,"fmt","","",650,{"inputs":[{"name":"textureformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_formats_list","","Returns a list of all the possible values of this enumeration.",650,{"inputs":[{"name":"textureformat"}],"output":{"name":"vec"}}],[11,"is_supported_for_textures","","Returns true if this format is supported by the backend for textures.",650,{"inputs":[{"name":"textureformat"},{"name":"c"}],"output":{"name":"bool"}}],[11,"is_supported_for_renderbuffers","","Returns true if this format is supported by the backend for renderbuffers.",650,{"inputs":[{"name":"textureformat"},{"name":"c"}],"output":{"name":"bool"}}],[11,"is_renderable","","Returns true if the format is color-renderable, depth-renderable, depth-stencil-renderable\nor stencil-renderable.",650,{"inputs":[{"name":"textureformat"},{"name":"c"}],"output":{"name":"bool"}}],[11,"new","glium","Builds a new `SyncFence` that is injected in the server.",931,{"inputs":[{"name":"syncfence"},{"name":"f"}],"output":{"name":"result"}}],[11,"wait","","Blocks until the operation has finished on the server.",931,{"inputs":[{"name":"syncfence"}],"output":null}],[11,"drop","","",931,{"inputs":[{"name":"syncfence"}],"output":null}],[11,"into_sync_fence","","Turns the prototype into a real fence.",932,{"inputs":[{"name":"linearsyncfence"},{"name":"f"}],"output":{"name":"syncfence"}}],[11,"drop","","",932,{"inputs":[{"name":"linearsyncfence"}],"output":null}],[11,"start","core::ops","",39,{"inputs":[{"name":"rangefull"}],"output":{"name":"option"}}],[11,"end","","",39,{"inputs":[{"name":"rangefull"}],"output":{"name":"option"}}],[11,"start","","",41,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"end","","",41,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"start","","",42,{"inputs":[{"name":"rangeto"}],"output":{"name":"option"}}],[11,"end","","",42,{"inputs":[{"name":"rangeto"}],"output":{"name":"option"}}],[11,"start","","",40,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"end","","",40,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"eq","glium","",933,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"bool"}}],[11,"ne","","",933,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"bool"}}],[11,"clone","","",933,{"inputs":[{"name":"version"}],"output":{"name":"version"}}],[11,"fmt","","",933,{"inputs":[{"name":"version"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",517,{"inputs":[{"name":"api"},{"name":"api"}],"output":{"name":"bool"}}],[11,"ne","","",517,{"inputs":[{"name":"api"},{"name":"api"}],"output":{"name":"bool"}}],[11,"clone","","",517,{"inputs":[{"name":"api"}],"output":{"name":"api"}}],[11,"fmt","","",517,{"inputs":[{"name":"api"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",933,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"option"}}],[6,"VertexFormat","","Describes the layout of each vertex in a vertex buffer.",null,null],[8,"CapabilitiesSource","","Trait for objects that describe the capabilities of an OpenGL backend.",null,null],[10,"get_version","","Returns the version of the backend.",934,{"inputs":[{"name":"capabilitiessource"}],"output":{"name":"version"}}],[10,"get_extensions","","Returns the list of extensions that are supported.",934,{"inputs":[{"name":"capabilitiessource"}],"output":{"name":"extensionslist"}}],[10,"get_capabilities","","Returns the capabilities of the backend.",934,{"inputs":[{"name":"capabilitiessource"}],"output":{"name":"capabilities"}}],[8,"GlObject","","Trait for objects that are OpenGL objects.",null,null],[16,"Id","","The type of identifier for this object.",935,null],[10,"get_id","","Returns the id of the object.",935,{"inputs":[{"name":"globject"}],"output":{"name":"id"}}],[8,"Surface","","Object that can be drawn upon.",null,null],[10,"clear","","Clears some attachments of the target.",936,{"inputs":[{"name":"surface"},{"name":"option"},{"name":"option"},{"name":"bool"},{"name":"option"},{"name":"option"}],"output":null}],[11,"clear_color","","Clears the color attachment of the target.",936,{"inputs":[{"name":"surface"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":null}],[11,"clear_color_srgb","","Clears the color attachment of the target. The color is in sRGB format.",936,{"inputs":[{"name":"surface"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":null}],[11,"clear_depth","","Clears the depth attachment of the target.",936,{"inputs":[{"name":"surface"},{"name":"f32"}],"output":null}],[11,"clear_stencil","","Clears the stencil attachment of the target.",936,{"inputs":[{"name":"surface"},{"name":"i32"}],"output":null}],[11,"clear_color_and_depth","","Clears the color and depth attachments of the target.",936,null],[11,"clear_color_srgb_and_depth","","Clears the color and depth attachments of the target. The color is in sRGB format.",936,null],[11,"clear_color_and_stencil","","Clears the color and stencil attachments of the target.",936,null],[11,"clear_color_srgb_and_stencil","","Clears the color and stencil attachments of the target. The color is in sRGB format.",936,null],[11,"clear_depth_and_stencil","","Clears the depth and stencil attachments of the target.",936,{"inputs":[{"name":"surface"},{"name":"f32"},{"name":"i32"}],"output":null}],[11,"clear_all","","Clears the color, depth and stencil attachments of the target.",936,null],[11,"clear_all_srgb","","Clears the color, depth and stencil attachments of the target. The color is in sRGB format.",936,null],[10,"get_dimensions","","Returns the dimensions in pixels of the target.",936,null],[10,"get_depth_buffer_bits","","Returns the number of bits of each pixel of the depth buffer.",936,{"inputs":[{"name":"surface"}],"output":{"name":"option"}}],[11,"has_depth_buffer","","Returns true if the surface has a depth buffer available.",936,{"inputs":[{"name":"surface"}],"output":{"name":"bool"}}],[10,"get_stencil_buffer_bits","","Returns the number of bits of each pixel of the stencil buffer.",936,{"inputs":[{"name":"surface"}],"output":{"name":"option"}}],[11,"has_stencil_buffer","","Returns true if the surface has a stencil buffer available.",936,{"inputs":[{"name":"surface"}],"output":{"name":"bool"}}],[10,"draw","","Draws.",936,{"inputs":[{"name":"surface"},{"name":"v"},{"name":"i"},{"name":"program"},{"name":"u"},{"name":"drawparameters"}],"output":{"name":"result"}}],[10,"blit_from_frame","","Blits from the default framebuffer.",936,{"inputs":[{"name":"surface"},{"name":"rect"},{"name":"blittarget"},{"name":"magnifysamplerfilter"}],"output":null}],[10,"blit_from_simple_framebuffer","","Blits from a simple framebuffer.",936,{"inputs":[{"name":"surface"},{"name":"simpleframebuffer"},{"name":"rect"},{"name":"blittarget"},{"name":"magnifysamplerfilter"}],"output":null}],[10,"blit_from_multioutput_framebuffer","","Blits from a multi-output framebuffer.",936,{"inputs":[{"name":"surface"},{"name":"multioutputframebuffer"},{"name":"rect"},{"name":"blittarget"},{"name":"magnifysamplerfilter"}],"output":null}],[10,"blit_color","","Copies a rectangle of pixels from this surface to another surface.",936,{"inputs":[{"name":"surface"},{"name":"rect"},{"name":"s"},{"name":"blittarget"},{"name":"magnifysamplerfilter"}],"output":null}],[11,"blit_whole_color_to","","Copies the entire surface to a target surface. See `blit_color`.",936,{"inputs":[{"name":"surface"},{"name":"s"},{"name":"blittarget"},{"name":"magnifysamplerfilter"}],"output":null}],[11,"fill","","Copies the entire surface to the entire target. See `blit_color`.",936,{"inputs":[{"name":"surface"},{"name":"s"},{"name":"magnifysamplerfilter"}],"output":null}],[8,"DisplayBuild","","Objects that can build a facade object.",null,null],[16,"Facade","","The object that this `DisplayBuild` builds.",937,null],[16,"Err","","The type of error that initialization can return.",937,null],[11,"build_glium","","Build a context and a facade to draw on it.",937,{"inputs":[{"name":"displaybuild"}],"output":{"name":"result"}}],[10,"build_glium_debug","","Build a context and a facade to draw on it.",937,{"inputs":[{"name":"displaybuild"},{"name":"debugcallbackbehavior"}],"output":{"name":"result"}}],[11,"build_glium_unchecked","","Build a context and a facade to draw on it",937,{"inputs":[{"name":"displaybuild"}],"output":{"name":"result"}}],[10,"build_glium_unchecked_debug","","Build a context and a facade to draw on it",937,{"inputs":[{"name":"displaybuild"},{"name":"debugcallbackbehavior"}],"output":{"name":"result"}}],[10,"rebuild_glium","","Changes the settings of an existing facade.",937,{"inputs":[{"name":"displaybuild"},{"name":"facade"}],"output":{"name":"result"}}],[11,"hash","","",518,null],[11,"fmt","","",518,{"inputs":[{"name":"handle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",518,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"eq","","",518,{"inputs":[{"name":"handle"},{"name":"handle"}],"output":{"name":"bool"}}],[11,"ne","","",518,{"inputs":[{"name":"handle"},{"name":"handle"}],"output":{"name":"bool"}}],[11,"eq","","",509,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ne","","",509,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"default","","",509,{"inputs":[{"name":"rect"}],"output":{"name":"rect"}}],[11,"clone","","",509,{"inputs":[{"name":"rect"}],"output":{"name":"rect"}}],[11,"fmt","","",509,{"inputs":[{"name":"rect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",510,{"inputs":[{"name":"blittarget"},{"name":"blittarget"}],"output":{"name":"bool"}}],[11,"ne","","",510,{"inputs":[{"name":"blittarget"},{"name":"blittarget"}],"output":{"name":"bool"}}],[11,"default","","",510,{"inputs":[{"name":"blittarget"}],"output":{"name":"blittarget"}}],[11,"clone","","",510,{"inputs":[{"name":"blittarget"}],"output":{"name":"blittarget"}}],[11,"fmt","","",510,{"inputs":[{"name":"blittarget"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",519,{"inputs":[{"name":"drawerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",519,{"inputs":[{"name":"drawerror"}],"output":{"name":"drawerror"}}],[11,"description","","",519,{"inputs":[{"name":"drawerror"}],"output":{"name":"str"}}],[11,"cause","","",519,{"inputs":[{"name":"drawerror"}],"output":{"name":"option"}}],[11,"fmt","","",519,{"inputs":[{"name":"drawerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",520,{"inputs":[{"name":"swapbufferserror"},{"name":"swapbufferserror"}],"output":{"name":"bool"}}],[11,"ne","","",520,{"inputs":[{"name":"swapbufferserror"},{"name":"swapbufferserror"}],"output":{"name":"bool"}}],[11,"clone","","",520,{"inputs":[{"name":"swapbufferserror"}],"output":{"name":"swapbufferserror"}}],[11,"fmt","","",520,{"inputs":[{"name":"swapbufferserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",520,{"inputs":[{"name":"swapbufferserror"}],"output":{"name":"str"}}],[11,"fmt","","",520,{"inputs":[{"name":"swapbufferserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Builds a new `Frame`. Use the `draw` function on `Display` instead of this function.",938,null],[11,"finish","","Stop drawing, swap the buffers, and consume the Frame.",938,{"inputs":[{"name":"frame"}],"output":{"name":"result"}}],[11,"set_finish","","Stop drawing, swap the buffers.",938,{"inputs":[{"name":"frame"}],"output":{"name":"result"}}],[11,"clear","","",938,{"inputs":[{"name":"frame"},{"name":"option"},{"name":"option"},{"name":"bool"},{"name":"option"},{"name":"option"}],"output":null}],[11,"get_dimensions","","",938,null],[11,"get_depth_buffer_bits","","",938,{"inputs":[{"name":"frame"}],"output":{"name":"option"}}],[11,"get_stencil_buffer_bits","","",938,{"inputs":[{"name":"frame"}],"output":{"name":"option"}}],[11,"draw","","",938,{"inputs":[{"name":"frame"},{"name":"v"},{"name":"i"},{"name":"program"},{"name":"u"},{"name":"drawparameters"}],"output":{"name":"result"}}],[11,"blit_color","","",938,{"inputs":[{"name":"frame"},{"name":"rect"},{"name":"s"},{"name":"blittarget"},{"name":"magnifysamplerfilter"}],"output":null}],[11,"blit_from_frame","","",938,{"inputs":[{"name":"frame"},{"name":"rect"},{"name":"blittarget"},{"name":"magnifysamplerfilter"}],"output":null}],[11,"blit_from_simple_framebuffer","","",938,{"inputs":[{"name":"frame"},{"name":"simpleframebuffer"},{"name":"rect"},{"name":"blittarget"},{"name":"magnifysamplerfilter"}],"output":null}],[11,"blit_from_multioutput_framebuffer","","",938,{"inputs":[{"name":"frame"},{"name":"multioutputframebuffer"},{"name":"rect"},{"name":"blittarget"},{"name":"magnifysamplerfilter"}],"output":null}],[11,"drop","","",938,{"inputs":[{"name":"frame"}],"output":null}],[11,"eq","","",521,{"inputs":[{"name":"gliumcreationerror"},{"name":"gliumcreationerror"}],"output":{"name":"bool"}}],[11,"ne","","",521,{"inputs":[{"name":"gliumcreationerror"},{"name":"gliumcreationerror"}],"output":{"name":"bool"}}],[11,"fmt","","",521,{"inputs":[{"name":"gliumcreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",521,{"inputs":[{"name":"gliumcreationerror"}],"output":{"name":"gliumcreationerror"}}],[11,"fmt","","",521,{"inputs":[{"name":"gliumcreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",521,{"inputs":[{"name":"gliumcreationerror"}],"output":{"name":"str"}}],[11,"cause","","",521,{"inputs":[{"name":"gliumcreationerror"}],"output":{"name":"option"}}],[11,"from","","",521,{"inputs":[{"name":"gliumcreationerror"},{"name":"t"}],"output":{"name":"gliumcreationerror"}}],[14,"assert_no_gl_error!","","Calls the `assert_no_error` method on a `glium::Display` instance\nwith file and line number information.",null,null],[14,"uniform!","","Returns an implementation-defined type which implements the `Uniform` trait.",null,null],[14,"implement_vertex!","","Implements the `glium::vertex::Vertex` trait for the given type.",null,null],[14,"implement_buffer_content!","","Implements the `glium::buffer::Content` trait for the given type.",null,null],[14,"implement_uniform_block!","","Implements the `glium::uniforms::UniformBlock` trait for the given type.",null,null],[14,"program!","","Builds a program depending on the GLSL version supported by the backend.",null,null]],"paths":[[8,"WindowExt"],[3,"Window"],[3,"LibCaca"],[3,"WindowProxy"],[3,"MonitorId"],[3,"PollEventsIterator"],[3,"WaitEventsIterator"],[3,"Window"],[3,"FnPtr"],[3,"Egl"],[3,"Context"],[3,"ContextPrototype"],[3,"Context"],[3,"ContextPrototype"],[4,"OsMesaCreationError"],[3,"OsMesaContext"],[4,"Option"],[3,"Wrapping"],[3,"Decoded"],[4,"FullDecoded"],[4,"Part"],[3,"Formatted"],[4,"Sign"],[3,"Unpacked"],[4,"Sign"],[3,"Decimal"],[4,"ParseResult"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[3,"Big32x40"],[3,"Big8x3"],[3,"Fp"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[4,"ChainState"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"CharRange"],[3,"SipHasher"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[3,"WAYLAND_CONTEXT"],[3,"InnerEnv"],[3,"WaylandContext"],[3,"MonitorId"],[3,"WindowProxy"],[3,"PollEventsIterator"],[3,"WaitEventsIterator"],[3,"Window"],[3,"FnPtr"],[3,"Glx"],[3,"FnPtr"],[3,"Glx"],[4,"AxisType"],[3,"Axis"],[3,"AxisValue"],[3,"XInputEventHandler"],[3,"MonitorId"],[3,"Mutex"],[3,"Box"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[8,"Error"],[3,"EscapeDefault"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"ScopedKey"],[3,"KeyInner"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"RawBucket"],[3,"Bucket"],[3,"SafeHash"],[3,"FullBucket"],[3,"EmptyBucket"],[4,"BucketState"],[3,"GapThenFull"],[3,"RawTable"],[3,"RawBuckets"],[3,"RevMoveBuckets"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DefaultResizePolicy"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"DefaultState"],[3,"Iter"],[3,"IntoIter"],[3,"Rawlink"],[3,"LinkedList"],[3,"IterMut"],[3,"BinaryHeap"],[3,"Hole"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DynamicLibrary"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"WalkDir"],[3,"Path"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"InternalBufWriter"],[3,"Cursor"],[3,"Custom"],[4,"ErrorKind"],[4,"Repr"],[3,"Lazy"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"StdinRaw"],[3,"StdoutRaw"],[3,"StderrRaw"],[4,"Maybe"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Broadcast"],[3,"Chain"],[3,"Take"],[3,"Tee"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[4,"Prefix"],[4,"State"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"SignalToken"],[3,"WaitToken"],[3,"Packet"],[4,"StartResult"],[3,"Select"],[3,"Handle"],[3,"Packets"],[3,"Packet"],[3,"Packet"],[4,"Failure"],[3,"Packet"],[3,"Queue"],[3,"Queue"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Semaphore"],[3,"SemaphoreGuard"],[3,"Duration"],[3,"Condvar"],[3,"EHContext"],[3,"DwarfReader"],[4,"_Unwind_Action"],[4,"_Unwind_Reason_Code"],[3,"Mutex"],[3,"LookupHost"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[3,"Flag"],[3,"PoisonError"],[4,"TryLockError"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"RWLock"],[3,"StaticKey"],[3,"Key"],[3,"CodePoint"],[3,"Wtf8Buf"],[3,"Wtf8"],[3,"Wtf8CodePoints"],[3,"EncodeWide"],[3,"Condvar"],[3,"FileDesc"],[3,"FileAttr"],[3,"OpenOptions"],[3,"FilePermissions"],[3,"FileType"],[3,"ReadDir"],[3,"Dir"],[3,"DirEntry"],[3,"File"],[3,"DirBuilder"],[3,"Mutex"],[3,"ReentrantMutex"],[3,"Socket"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"Env"],[3,"Buf"],[3,"Slice"],[3,"AnonPipe"],[3,"Command"],[4,"ExitStatus"],[3,"Process"],[3,"RWLock"],[3,"Handler"],[3,"Thread"],[3,"SteadyTime"],[3,"Stdin"],[3,"Stdout"],[3,"Stderr"],[3,"OsRng"],[3,"ReaderRng"],[3,"StdRng"],[3,"ThreadRngReseeder"],[3,"ThreadRng"],[3,"Rc"],[3,"Weak"],[3,"ToLowercase"],[3,"ToUppercase"],[4,"CaseMappingIter"],[3,"DecodeUtf16"],[3,"Utf16Units"],[4,"Cow"],[3,"IntoIter"],[3,"Drain"],[4,"ParseError"],[3,"Drain"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"GLOBAL_XOPENIM_LOCK"],[3,"XWindow"],[3,"WindowProxy"],[3,"GenericEventCookie"],[3,"PollEventsIterator"],[3,"WaitEventsIterator"],[3,"Window"],[3,"XConnection"],[4,"XNotSupported"],[3,"BACKEND"],[4,"WindowProxy"],[4,"MonitorId"],[4,"PollEventsIterator"],[4,"WaitEventsIterator"],[4,"Window"],[3,"HeadlessContext"],[4,"Event"],[4,"TouchPhase"],[3,"Touch"],[4,"ElementState"],[4,"MouseButton"],[4,"MouseScrollDelta"],[4,"VirtualKeyCode"],[3,"HeadlessRendererBuilder"],[3,"HeadlessContext"],[3,"WindowBuilder"],[3,"WindowProxy"],[3,"PollEventsIterator"],[3,"WaitEventsIterator"],[3,"AvailableMonitorsIter"],[3,"MonitorId"],[4,"CreationError"],[4,"ContextError"],[4,"Api"],[4,"GlProfile"],[4,"GlRequest"],[4,"Robustness"],[4,"ReleaseBehavior"],[4,"MouseCursor"],[4,"CursorState"],[3,"PixelFormat"],[3,"PixelFormatRequirements"],[3,"WindowAttributes"],[3,"GlAttributes"],[4,"NativeMonitorId"],[8,"GlContext"],[3,"Blend"],[3,"Depth"],[3,"Rect"],[3,"BlitTarget"],[4,"Profile"],[4,"BlendingFunction"],[4,"LinearBlendingFactor"],[4,"DepthTest"],[4,"StencilTest"],[4,"StencilOperation"],[4,"Api"],[4,"Handle"],[4,"DrawError"],[4,"SwapBuffersError"],[4,"GliumCreationError"],[4,"ReleaseBehavior"],[3,"GlutinFacade"],[3,"PollEventsIter"],[3,"WaitEventsIter"],[3,"WinRef"],[3,"GlutinWindowBackend"],[3,"GlutinHeadlessBackend"],[8,"Backend"],[8,"Facade"],[4,"ReadError"],[4,"CopyError"],[4,"BufferCreationError"],[4,"BufferMode"],[3,"Mapping"],[3,"ReadMapping"],[3,"WriteMapping"],[3,"Inserter"],[3,"Buffer"],[3,"BufferSlice"],[3,"BufferMutSlice"],[3,"BufferAny"],[3,"BufferAnySlice"],[8,"Content"],[4,"DebugCallbackBehavior"],[4,"Severity"],[4,"Source"],[4,"MessageType"],[3,"TimestampQuery"],[3,"Stencil"],[3,"DrawParameters"],[3,"ConditionalRendering"],[4,"DepthClamp"],[4,"QueryCreationError"],[4,"BackfaceCullingMode"],[4,"PolygonMode"],[4,"Smooth"],[4,"ProvokingVertex"],[4,"SamplesQueryParam"],[3,"SamplesPassedQuery"],[3,"TimeElapsedQuery"],[3,"AnySamplesPassedQuery"],[3,"PrimitivesGeneratedQuery"],[3,"TransformFeedbackPrimitivesWrittenQuery"],[4,"DefaultFramebufferAttachment"],[4,"RenderBufferCreationError"],[4,"ValidationError"],[4,"ColorAttachment"],[4,"DepthAttachment"],[4,"StencilAttachment"],[4,"DepthStencilAttachment"],[3,"DefaultFramebuffer"],[3,"RenderBuffer"],[3,"DepthRenderBuffer"],[3,"StencilRenderBuffer"],[3,"DepthStencilRenderBuffer"],[3,"RenderBufferAny"],[8,"ToColorAttachment"],[8,"ToDepthAttachment"],[8,"ToStencilAttachment"],[8,"ToDepthStencilAttachment"],[3,"SimpleFrameBuffer"],[3,"MultiOutputFrameBuffer"],[3,"EmptyFrameBuffer"],[3,"DrawCommandNoIndices"],[3,"DrawCommandIndices"],[4,"BufferCreationError"],[4,"IndicesSource"],[4,"PrimitiveType"],[4,"IndexType"],[3,"IndexBuffer"],[3,"IndexBufferSlice"],[3,"IndexBufferAny"],[3,"DrawCommandsNoIndicesBuffer"],[3,"DrawCommandsIndicesBuffer"],[8,"Index"],[3,"NoIndices"],[3,"ComputeCommand"],[3,"Uniform"],[3,"UniformBlock"],[3,"Attribute"],[3,"TransformFeedbackVarying"],[3,"TransformFeedbackBuffer"],[3,"SubroutineData"],[3,"SubroutineUniform"],[3,"SourceCode"],[3,"Binary"],[4,"BlockLayout"],[4,"OutputPrimitives"],[4,"TransformFeedbackMode"],[4,"ShaderStage"],[4,"ProgramCreationError"],[4,"ProgramChooserCreationError"],[4,"GetBinaryError"],[4,"ProgramCreationInput"],[3,"ComputeShader"],[3,"Program"],[3,"SamplerBehavior"],[4,"SamplerWrapFunction"],[4,"MagnifySamplerFilter"],[4,"MinifySamplerFilter"],[4,"UniformValue"],[4,"UniformType"],[4,"LayoutMismatchError"],[3,"UniformBuffer"],[3,"Sampler"],[3,"EmptyUniforms"],[3,"UniformsStorage"],[8,"Uniforms"],[8,"AsUniformValue"],[8,"UniformBlock"],[3,"EmptyVertexAttributes"],[3,"EmptyInstanceAttributes"],[4,"BufferCreationError"],[4,"AttributeType"],[4,"VerticesSource"],[3,"VertexBuffer"],[3,"VertexBufferSlice"],[3,"VertexBufferAny"],[3,"TransformFeedbackSession"],[8,"IntoVerticesSource"],[8,"MultiVerticesSource"],[8,"Vertex"],[8,"Attribute"],[3,"PerInstance"],[3,"RawImage1d"],[3,"RawImage2d"],[3,"RawImage3d"],[4,"ClientFormat"],[4,"TextureFormat"],[4,"UncompressedFloatFormat"],[4,"UncompressedIntFormat"],[4,"UncompressedUintFormat"],[4,"CompressedFormat"],[4,"DepthFormat"],[4,"DepthStencilFormat"],[4,"StencilFormat"],[4,"CompressedSrgbFormat"],[4,"SrgbFormat"],[4,"Dimensions"],[4,"InternalFormat"],[4,"InternalFormatType"],[4,"GetFormatError"],[4,"CubeLayer"],[4,"TextureKind"],[4,"MipmapsOption"],[4,"CompressedMipmapsOption"],[4,"TextureCreationError"],[3,"ResidentTexture"],[3,"TextureHandle"],[3,"BindlessTexturesNotSupportedError"],[4,"TextureCreationError"],[4,"CreationError"],[4,"BufferTextureType"],[4,"TextureBufferContentType"],[8,"TextureBufferContent"],[3,"BufferTexture"],[3,"BufferTextureRef"],[3,"PixelBuffer"],[3,"TextureAny"],[3,"TextureAnyLayer"],[3,"TextureAnyMipmap"],[3,"TextureAnyLayerMipmap"],[3,"TextureAnyImage"],[3,"Texture1d"],[3,"Texture1dMipmap"],[3,"CompressedTexture1d"],[3,"CompressedTexture1dMipmap"],[3,"SrgbTexture1d"],[3,"SrgbTexture1dMipmap"],[3,"CompressedSrgbTexture1d"],[3,"CompressedSrgbTexture1dMipmap"],[3,"IntegralTexture1d"],[3,"IntegralTexture1dMipmap"],[3,"UnsignedTexture1d"],[3,"UnsignedTexture1dMipmap"],[3,"DepthTexture1d"],[3,"DepthTexture1dMipmap"],[3,"StencilTexture1d"],[3,"StencilTexture1dMipmap"],[3,"DepthStencilTexture1d"],[3,"DepthStencilTexture1dMipmap"],[3,"Texture2d"],[3,"Texture2dMipmap"],[3,"CompressedTexture2d"],[3,"CompressedTexture2dMipmap"],[3,"SrgbTexture2d"],[3,"SrgbTexture2dMipmap"],[3,"CompressedSrgbTexture2d"],[3,"CompressedSrgbTexture2dMipmap"],[3,"IntegralTexture2d"],[3,"IntegralTexture2dMipmap"],[3,"UnsignedTexture2d"],[3,"UnsignedTexture2dMipmap"],[3,"DepthTexture2d"],[3,"DepthTexture2dMipmap"],[3,"StencilTexture2d"],[3,"StencilTexture2dMipmap"],[3,"DepthStencilTexture2d"],[3,"DepthStencilTexture2dMipmap"],[3,"Texture2dMultisample"],[3,"Texture2dMultisampleMipmap"],[3,"IntegralTexture2dMultisample"],[3,"IntegralTexture2dMultisampleMipmap"],[3,"SrgbTexture2dMultisample"],[3,"SrgbTexture2dMultisampleMipmap"],[3,"UnsignedTexture2dMultisample"],[3,"UnsignedTexture2dMultisampleMipmap"],[3,"DepthTexture2dMultisample"],[3,"DepthTexture2dMultisampleMipmap"],[3,"StencilTexture2dMultisample"],[3,"StencilTexture2dMultisampleMipmap"],[3,"DepthStencilTexture2dMultisample"],[3,"DepthStencilTexture2dMultisampleMipmap"],[3,"Texture3d"],[3,"Texture3dMipmap"],[3,"CompressedTexture3d"],[3,"CompressedTexture3dMipmap"],[3,"SrgbTexture3d"],[3,"SrgbTexture3dMipmap"],[3,"CompressedSrgbTexture3d"],[3,"CompressedSrgbTexture3dMipmap"],[3,"IntegralTexture3d"],[3,"IntegralTexture3dMipmap"],[3,"UnsignedTexture3d"],[3,"UnsignedTexture3dMipmap"],[3,"DepthTexture3d"],[3,"DepthTexture3dMipmap"],[3,"DepthStencilTexture3d"],[3,"DepthStencilTexture3dMipmap"],[3,"Texture1dArray"],[3,"Texture1dArrayLayer"],[3,"Texture1dArrayMipmap"],[3,"Texture1dArrayLayerMipmap"],[3,"CompressedTexture1dArray"],[3,"CompressedTexture1dArrayLayer"],[3,"CompressedTexture1dArrayMipmap"],[3,"CompressedTexture1dArrayLayerMipmap"],[3,"SrgbTexture1dArray"],[3,"SrgbTexture1dArrayLayer"],[3,"SrgbTexture1dArrayMipmap"],[3,"SrgbTexture1dArrayLayerMipmap"],[3,"CompressedSrgbTexture1dArray"],[3,"CompressedSrgbTexture1dArrayLayer"],[3,"CompressedSrgbTexture1dArrayMipmap"],[3,"CompressedSrgbTexture1dArrayLayerMipmap"],[3,"IntegralTexture1dArray"],[3,"IntegralTexture1dArrayLayer"],[3,"IntegralTexture1dArrayMipmap"],[3,"IntegralTexture1dArrayLayerMipmap"],[3,"UnsignedTexture1dArray"],[3,"UnsignedTexture1dArrayLayer"],[3,"UnsignedTexture1dArrayMipmap"],[3,"UnsignedTexture1dArrayLayerMipmap"],[3,"DepthTexture1dArray"],[3,"DepthTexture1dArrayLayer"],[3,"DepthTexture1dArrayMipmap"],[3,"DepthTexture1dArrayLayerMipmap"],[3,"StencilTexture1dArray"],[3,"StencilTexture1dArrayLayer"],[3,"StencilTexture1dArrayMipmap"],[3,"StencilTexture1dArrayLayerMipmap"],[3,"DepthStencilTexture1dArray"],[3,"DepthStencilTexture1dArrayLayer"],[3,"DepthStencilTexture1dArrayMipmap"],[3,"DepthStencilTexture1dArrayLayerMipmap"],[3,"Texture2dArray"],[3,"Texture2dArrayLayer"],[3,"Texture2dArrayMipmap"],[3,"Texture2dArrayLayerMipmap"],[3,"CompressedTexture2dArray"],[3,"CompressedTexture2dArrayLayer"],[3,"CompressedTexture2dArrayMipmap"],[3,"CompressedTexture2dArrayLayerMipmap"],[3,"SrgbTexture2dArray"],[3,"SrgbTexture2dArrayLayer"],[3,"SrgbTexture2dArrayMipmap"],[3,"SrgbTexture2dArrayLayerMipmap"],[3,"CompressedSrgbTexture2dArray"],[3,"CompressedSrgbTexture2dArrayLayer"],[3,"CompressedSrgbTexture2dArrayMipmap"],[3,"CompressedSrgbTexture2dArrayLayerMipmap"],[3,"IntegralTexture2dArray"],[3,"IntegralTexture2dArrayLayer"],[3,"IntegralTexture2dArrayMipmap"],[3,"IntegralTexture2dArrayLayerMipmap"],[3,"UnsignedTexture2dArray"],[3,"UnsignedTexture2dArrayLayer"],[3,"UnsignedTexture2dArrayMipmap"],[3,"UnsignedTexture2dArrayLayerMipmap"],[3,"DepthTexture2dArray"],[3,"DepthTexture2dArrayLayer"],[3,"DepthTexture2dArrayMipmap"],[3,"DepthTexture2dArrayLayerMipmap"],[3,"StencilTexture2dArray"],[3,"StencilTexture2dArrayLayer"],[3,"StencilTexture2dArrayMipmap"],[3,"StencilTexture2dArrayLayerMipmap"],[3,"DepthStencilTexture2dArray"],[3,"DepthStencilTexture2dArrayLayer"],[3,"DepthStencilTexture2dArrayMipmap"],[3,"DepthStencilTexture2dArrayLayerMipmap"],[3,"Texture2dMultisampleArray"],[3,"Texture2dMultisampleArrayLayer"],[3,"Texture2dMultisampleArrayMipmap"],[3,"Texture2dMultisampleArrayLayerMipmap"],[3,"SrgbTexture2dMultisampleArray"],[3,"SrgbTexture2dMultisampleArrayLayer"],[3,"SrgbTexture2dMultisampleArrayMipmap"],[3,"SrgbTexture2dMultisampleArrayLayerMipmap"],[3,"IntegralTexture2dMultisampleArray"],[3,"IntegralTexture2dMultisampleArrayLayer"],[3,"IntegralTexture2dMultisampleArrayMipmap"],[3,"IntegralTexture2dMultisampleArrayLayerMipmap"],[3,"UnsignedTexture2dMultisampleArray"],[3,"UnsignedTexture2dMultisampleArrayLayer"],[3,"UnsignedTexture2dMultisampleArrayMipmap"],[3,"UnsignedTexture2dMultisampleArrayLayerMipmap"],[3,"DepthTexture2dMultisampleArray"],[3,"DepthTexture2dMultisampleArrayLayer"],[3,"DepthTexture2dMultisampleArrayMipmap"],[3,"DepthTexture2dMultisampleArrayLayerMipmap"],[3,"StencilTexture2dMultisampleArray"],[3,"StencilTexture2dMultisampleArrayLayer"],[3,"StencilTexture2dMultisampleArrayMipmap"],[3,"StencilTexture2dMultisampleArrayLayerMipmap"],[3,"DepthStencilTexture2dMultisampleArray"],[3,"DepthStencilTexture2dMultisampleArrayLayer"],[3,"DepthStencilTexture2dMultisampleArrayMipmap"],[3,"DepthStencilTexture2dMultisampleArrayLayerMipmap"],[3,"Cubemap"],[3,"CubemapMipmap"],[3,"CubemapImage"],[3,"CompressedCubemap"],[3,"CompressedCubemapMipmap"],[3,"CompressedCubemapImage"],[3,"SrgbCubemap"],[3,"SrgbCubemapMipmap"],[3,"SrgbCubemapImage"],[3,"CompressedSrgbCubemap"],[3,"CompressedSrgbCubemapMipmap"],[3,"CompressedSrgbCubemapImage"],[3,"IntegralCubemap"],[3,"IntegralCubemapMipmap"],[3,"IntegralCubemapImage"],[3,"UnsignedCubemap"],[3,"UnsignedCubemapMipmap"],[3,"UnsignedCubemapImage"],[3,"DepthCubemap"],[3,"DepthCubemapMipmap"],[3,"DepthCubemapImage"],[3,"StencilCubemap"],[3,"StencilCubemapMipmap"],[3,"StencilCubemapImage"],[3,"DepthStencilCubemap"],[3,"DepthStencilCubemapMipmap"],[3,"DepthStencilCubemapImage"],[3,"CubemapArray"],[3,"CubemapArrayLayer"],[3,"CubemapArrayMipmap"],[3,"CubemapArrayLayerMipmap"],[3,"CubemapArrayImage"],[3,"CompressedCubemapArray"],[3,"CompressedCubemapArrayLayer"],[3,"CompressedCubemapArrayMipmap"],[3,"CompressedCubemapArrayLayerMipmap"],[3,"CompressedCubemapArrayImage"],[3,"SrgbCubemapArray"],[3,"SrgbCubemapArrayLayer"],[3,"SrgbCubemapArrayMipmap"],[3,"SrgbCubemapArrayLayerMipmap"],[3,"SrgbCubemapArrayImage"],[3,"CompressedSrgbCubemapArray"],[3,"CompressedSrgbCubemapArrayLayer"],[3,"CompressedSrgbCubemapArrayMipmap"],[3,"CompressedSrgbCubemapArrayLayerMipmap"],[3,"CompressedSrgbCubemapArrayImage"],[3,"IntegralCubemapArray"],[3,"IntegralCubemapArrayLayer"],[3,"IntegralCubemapArrayMipmap"],[3,"IntegralCubemapArrayLayerMipmap"],[3,"IntegralCubemapArrayImage"],[3,"UnsignedCubemapArray"],[3,"UnsignedCubemapArrayLayer"],[3,"UnsignedCubemapArrayMipmap"],[3,"UnsignedCubemapArrayLayerMipmap"],[3,"UnsignedCubemapArrayImage"],[3,"DepthCubemapArray"],[3,"DepthCubemapArrayLayer"],[3,"DepthCubemapArrayMipmap"],[3,"DepthCubemapArrayLayerMipmap"],[3,"DepthCubemapArrayImage"],[3,"StencilCubemapArray"],[3,"StencilCubemapArrayLayer"],[3,"StencilCubemapArrayMipmap"],[3,"StencilCubemapArrayLayerMipmap"],[3,"StencilCubemapArrayImage"],[3,"DepthStencilCubemapArray"],[3,"DepthStencilCubemapArrayLayer"],[3,"DepthStencilCubemapArrayMipmap"],[3,"DepthStencilCubemapArrayLayerMipmap"],[3,"DepthStencilCubemapArrayImage"],[8,"PixelValue"],[8,"Texture1dDataSource"],[8,"Texture1dDataSink"],[8,"Texture2dDataSource"],[8,"Texture2dDataSink"],[8,"Texture3dDataSource"],[8,"Texture3dDataSink"],[3,"Context"],[3,"SyncFence"],[3,"LinearSyncFence"],[3,"Version"],[8,"CapabilitiesSource"],[8,"GlObject"],[8,"Surface"],[8,"DisplayBuild"],[3,"Frame"]]};
searchIndex['glutin'] = {"items":[[0,"","glutin","The purpose of this library is to provide an OpenGL context on as many\n platforms as possible.",null,null],[3,"Touch","","Represents touch event",null,null],[12,"phase","","",0,null],[12,"location","","",0,null],[12,"id","","unique identifier of a finger.",0,null],[3,"HeadlessRendererBuilder","","Object that allows you to build headless contexts.",null,null],[12,"dimensions","","The dimensions to use.",1,null],[12,"opengl","","The OpenGL attributes to build the context with.",1,null],[3,"HeadlessContext","","Represents a headless OpenGL context.",null,null],[3,"WindowBuilder","","Object that allows you to build windows.",null,null],[12,"window","","The attributes to use to create the window.",2,null],[12,"opengl","","The attributes to use to create the context.",2,null],[3,"WindowProxy","","Represents a thread safe subset of operations that can be called\non a window. This structure can be safely cloned and sent between\nthreads.",null,null],[3,"PollEventsIterator","","An iterator for the `poll_events` function.",null,null],[3,"WaitEventsIterator","","An iterator for the `wait_events` function.",null,null],[3,"AvailableMonitorsIter","","An iterator for the list of available monitors.",null,null],[3,"MonitorId","","Identifier for a monitor.",null,null],[3,"Window","","Represents an OpenGL context and the Window or environment around it.",null,null],[3,"PixelFormat","","Describes a possible format. Unused.",null,null],[12,"hardware_accelerated","","",3,null],[12,"color_bits","","",3,null],[12,"alpha_bits","","",3,null],[12,"depth_bits","","",3,null],[12,"stencil_bits","","",3,null],[12,"stereoscopy","","",3,null],[12,"double_buffer","","",3,null],[12,"multisampling","","",3,null],[12,"srgb","","",3,null],[3,"PixelFormatRequirements","","Describes how the backend should choose a pixel format.",null,null],[12,"hardware_accelerated","","If true, only hardware-accelerated formats will be conisdered. If false, only software\nrenderers. `None` means \"don't care\". Default is `Some(true)`.",4,null],[12,"color_bits","","Minimum number of bits for the color buffer, excluding alpha. `None` means \"don't care\".\nThe default is `Some(24)`.",4,null],[12,"float_color_buffer","","If true, the color buffer must be in a floating point format. Default is `false`.",4,null],[12,"alpha_bits","","Minimum number of bits for the alpha in the color buffer. `None` means \"don't care\".\nThe default is `Some(8)`.",4,null],[12,"depth_bits","","Minimum number of bits for the depth buffer. `None` means \"don't care\".\nThe default value is `Some(24)`.",4,null],[12,"stencil_bits","","Minimum number of bits for the depth buffer. `None` means \"don't care\".\nThe default value is `Some(8)`.",4,null],[12,"double_buffer","","If true, only double-buffered formats will be considered. If false, only single-buffer\nformats. `None` means \"don't care\". The default is `Some(true)`.",4,null],[12,"multisampling","","Contains the minimum number of samples per pixel in the color, depth and stencil buffers.\n`None` means \"don't care\". Default is `None`.\nA value of `Some(0)` indicates that multisampling must not be enabled.",4,null],[12,"stereoscopy","","If true, only stereoscopic formats will be considered. If false, only non-stereoscopic\nformats. The default is `false`.",4,null],[12,"srgb","","If true, only sRGB-capable formats will be considered. If false, don't care.\nThe default is `false`.",4,null],[12,"release_behavior","","The behavior when changing the current context. Default is `Flush`.",4,null],[3,"WindowAttributes","","Attributes to use when creating a window.",null,null],[12,"dimensions","","The dimensions of the window. If this is `None`, some platform-specific dimensions will be\nused.",5,null],[12,"min_dimensions","","The minimum dimensions a window can be, If this is `None`, the window will have no minimum dimensions (aside from reserved).",5,null],[12,"max_dimensions","","The maximum dimensions a window can be, If this is `None`, the maximum will have no maximum or will be set to the primary monitor's dimensions by the platform.",5,null],[12,"monitor","","If `Some`, the window will be in fullscreen mode with the given monitor.",5,null],[12,"title","","The title of the window in the title bar.",5,null],[12,"visible","","Whether the window should be immediately visible upon creation.",5,null],[12,"transparent","","Whether the the window should be transparent. If this is true, writing colors\nwith alpha values different than `1.0` will produce a transparent window.",5,null],[12,"decorations","","Whether the window should have borders and bars.",5,null],[12,"multitouch","","[iOS only] Enable multitouch, see [UIView#multipleTouchEnabled]\n(https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIView_Class/#//apple_ref/occ/instp/UIView/multipleTouchEnabled)",5,null],[3,"GlAttributes","","Attributes to use when creating an OpenGL context.",null,null],[12,"sharing","","An existing context to share the new the context with.",6,null],[12,"version","","Version to try create. See `GlRequest` for more infos.",6,null],[12,"profile","","OpenGL profile to use.",6,null],[12,"debug","","Whether to enable the `debug` flag of the context.",6,null],[12,"robustness","","How the OpenGL context should detect errors.",6,null],[12,"vsync","","Whether to use vsync. If vsync is enabled, calling `swap_buffers` will block until the\nscreen refreshes. This is typically used to prevent screen tearing.",6,null],[4,"Event","","",null,null],[13,"Resized","","The size of the window has changed.",7,null],[13,"Moved","","The position of the window has changed.",7,null],[13,"Closed","","The window has been closed.",7,null],[13,"DroppedFile","","A file has been dropped into the window.",7,null],[13,"ReceivedCharacter","","The window received a unicode character.",7,null],[13,"Focused","","The window gained or lost focus.",7,null],[13,"KeyboardInput","","An event from the keyboard has been received.",7,null],[13,"MouseMoved","","The cursor has moved on the window.",7,null],[13,"MouseWheel","","A mouse wheel movement or touchpad scroll occurred.",7,null],[13,"MouseInput","","An event from the mouse has been received.",7,null],[13,"Awakened","","The event loop was woken up by another thread.",7,null],[13,"Refresh","","The window needs to be redrawn.",7,null],[13,"Suspended","","App has been suspended or resumed.",7,null],[13,"Touch","","Touch event has been received",7,null],[4,"TouchPhase","","",null,null],[13,"Started","","",8,null],[13,"Moved","","",8,null],[13,"Ended","","",8,null],[13,"Cancelled","","",8,null],[4,"ElementState","","",null,null],[13,"Pressed","","",9,null],[13,"Released","","",9,null],[4,"MouseButton","","",null,null],[13,"Left","","",10,null],[13,"Right","","",10,null],[13,"Middle","","",10,null],[13,"Other","","",10,null],[4,"MouseScrollDelta","","",null,null],[13,"LineDelta","","Amount in lines or rows to scroll in the horizontal\nand vertical directions.",11,null],[13,"PixelDelta","","Amount in pixels to scroll in the horizontal and\nvertical direction.",11,null],[4,"VirtualKeyCode","","",null,null],[13,"Key1","","The '1' key over the letters.",12,null],[13,"Key2","","The '2' key over the letters.",12,null],[13,"Key3","","The '3' key over the letters.",12,null],[13,"Key4","","The '4' key over the letters.",12,null],[13,"Key5","","The '5' key over the letters.",12,null],[13,"Key6","","The '6' key over the letters.",12,null],[13,"Key7","","The '7' key over the letters.",12,null],[13,"Key8","","The '8' key over the letters.",12,null],[13,"Key9","","The '9' key over the letters.",12,null],[13,"Key0","","The '0' key over the 'O' and 'P' keys.",12,null],[13,"A","","",12,null],[13,"B","","",12,null],[13,"C","","",12,null],[13,"D","","",12,null],[13,"E","","",12,null],[13,"F","","",12,null],[13,"G","","",12,null],[13,"H","","",12,null],[13,"I","","",12,null],[13,"J","","",12,null],[13,"K","","",12,null],[13,"L","","",12,null],[13,"M","","",12,null],[13,"N","","",12,null],[13,"O","","",12,null],[13,"P","","",12,null],[13,"Q","","",12,null],[13,"R","","",12,null],[13,"S","","",12,null],[13,"T","","",12,null],[13,"U","","",12,null],[13,"V","","",12,null],[13,"W","","",12,null],[13,"X","","",12,null],[13,"Y","","",12,null],[13,"Z","","",12,null],[13,"Escape","","The Escape key, next to F1.",12,null],[13,"F1","","",12,null],[13,"F2","","",12,null],[13,"F3","","",12,null],[13,"F4","","",12,null],[13,"F5","","",12,null],[13,"F6","","",12,null],[13,"F7","","",12,null],[13,"F8","","",12,null],[13,"F9","","",12,null],[13,"F10","","",12,null],[13,"F11","","",12,null],[13,"F12","","",12,null],[13,"F13","","",12,null],[13,"F14","","",12,null],[13,"F15","","",12,null],[13,"Snapshot","","Print Screen/SysRq.",12,null],[13,"Scroll","","Scroll Lock.",12,null],[13,"Pause","","Pause/Break key, next to Scroll lock.",12,null],[13,"Insert","","`Insert`, next to Backspace.",12,null],[13,"Home","","",12,null],[13,"Delete","","",12,null],[13,"End","","",12,null],[13,"PageDown","","",12,null],[13,"PageUp","","",12,null],[13,"Left","","",12,null],[13,"Up","","",12,null],[13,"Right","","",12,null],[13,"Down","","",12,null],[13,"Back","","The Backspace key, right over Enter.",12,null],[13,"Return","","The Enter key.",12,null],[13,"Space","","The space bar.",12,null],[13,"Numlock","","",12,null],[13,"Numpad0","","",12,null],[13,"Numpad1","","",12,null],[13,"Numpad2","","",12,null],[13,"Numpad3","","",12,null],[13,"Numpad4","","",12,null],[13,"Numpad5","","",12,null],[13,"Numpad6","","",12,null],[13,"Numpad7","","",12,null],[13,"Numpad8","","",12,null],[13,"Numpad9","","",12,null],[13,"AbntC1","","",12,null],[13,"AbntC2","","",12,null],[13,"Add","","",12,null],[13,"Apostrophe","","",12,null],[13,"Apps","","",12,null],[13,"At","","",12,null],[13,"Ax","","",12,null],[13,"Backslash","","",12,null],[13,"Calculator","","",12,null],[13,"Capital","","",12,null],[13,"Colon","","",12,null],[13,"Comma","","",12,null],[13,"Convert","","",12,null],[13,"Decimal","","",12,null],[13,"Divide","","",12,null],[13,"Equals","","",12,null],[13,"Grave","","",12,null],[13,"Kana","","",12,null],[13,"Kanji","","",12,null],[13,"LAlt","","",12,null],[13,"LBracket","","",12,null],[13,"LControl","","",12,null],[13,"LMenu","","",12,null],[13,"LShift","","",12,null],[13,"LWin","","",12,null],[13,"Mail","","",12,null],[13,"MediaSelect","","",12,null],[13,"MediaStop","","",12,null],[13,"Minus","","",12,null],[13,"Multiply","","",12,null],[13,"Mute","","",12,null],[13,"MyComputer","","",12,null],[13,"NextTrack","","",12,null],[13,"NoConvert","","",12,null],[13,"NumpadComma","","",12,null],[13,"NumpadEnter","","",12,null],[13,"NumpadEquals","","",12,null],[13,"OEM102","","",12,null],[13,"Period","","",12,null],[13,"PlayPause","","",12,null],[13,"Power","","",12,null],[13,"PrevTrack","","",12,null],[13,"RAlt","","",12,null],[13,"RBracket","","",12,null],[13,"RControl","","",12,null],[13,"RMenu","","",12,null],[13,"RShift","","",12,null],[13,"RWin","","",12,null],[13,"Semicolon","","",12,null],[13,"Slash","","",12,null],[13,"Sleep","","",12,null],[13,"Stop","","",12,null],[13,"Subtract","","",12,null],[13,"Sysrq","","",12,null],[13,"Tab","","",12,null],[13,"Underline","","",12,null],[13,"Unlabeled","","",12,null],[13,"VolumeDown","","",12,null],[13,"VolumeUp","","",12,null],[13,"Wake","","",12,null],[13,"WebBack","","",12,null],[13,"WebFavorites","","",12,null],[13,"WebForward","","",12,null],[13,"WebHome","","",12,null],[13,"WebRefresh","","",12,null],[13,"WebSearch","","",12,null],[13,"WebStop","","",12,null],[13,"Yen","","",12,null],[4,"NativeMonitorId","","Native platform identifier for a monitor. Different platforms use fundamentally different types\nto represent a monitor ID.",null,null],[13,"Numeric","","Cocoa and X11 use a numeric identifier to represent a monitor.",13,null],[13,"Name","","Win32 uses a Unicode string to represent a monitor.",13,null],[13,"Unavailable","","Other platforms (Android) don't support monitor identification.",13,null],[4,"CreationError","","Error that can happen while creating a window or a headless renderer.",null,null],[13,"OsError","","",14,null],[13,"NotSupported","","TODO: remove this error",14,null],[13,"NoBackendAvailable","","",14,null],[13,"RobustnessNotSupported","","",14,null],[13,"OpenGlVersionNotSupported","","",14,null],[13,"NoAvailablePixelFormat","","",14,null],[4,"ContextError","","Error that can happen when manipulating an OpenGL context.",null,null],[13,"IoError","","",15,null],[13,"ContextLost","","",15,null],[4,"Api","","All APIs related to OpenGL that you can possibly get while using glutin.",null,null],[13,"OpenGl","","The classical OpenGL. Available on Windows, Linux, OS/X.",16,null],[13,"OpenGlEs","","OpenGL embedded system. Available on Linux, Android.",16,null],[13,"WebGl","","OpenGL for the web. Very similar to OpenGL ES.",16,null],[4,"GlProfile","","Describes the requested OpenGL context profiles.",null,null],[13,"Compatibility","","Include all the immediate more functions and definitions.",17,null],[13,"Core","","Include all the future-compatible functions and definitions.",17,null],[4,"GlRequest","","Describes the OpenGL API and version that are being requested when a context is created.",null,null],[13,"Latest","","Request the latest version of the \"best\" API of this platform.",18,null],[13,"Specific","","Request a specific version of a specific API.",18,null],[13,"GlThenGles","","If OpenGL is available, create an OpenGL context with the specified `opengl_version`.\nElse if OpenGL ES or WebGL is available, create a context with the\nspecified `opengles_version`.",18,null],[12,"opengl_version","glutin::GlRequest","The version to use for OpenGL.",18,null],[12,"opengles_version","","The version to use for OpenGL ES.",18,null],[4,"Robustness","glutin","Specifies the tolerance of the OpenGL context to faults. If you accept raw OpenGL commands\nand/or raw shader code from an untrusted source, you should definitely care about this.",null,null],[13,"NotRobust","","Not everything is checked. Your application can crash if you do something wrong with your\nshaders.",19,null],[13,"NoError","","The driver doesn't check anything. This option is very dangerous. Please know what you're\ndoing before using it. See the `GL_KHR_no_error` extension.",19,null],[13,"RobustNoResetNotification","","Everything is checked to avoid any crash. The driver will attempt to avoid any problem,\nbut if a problem occurs the behavior is implementation-defined. You are just guaranteed not\nto get a crash.",19,null],[13,"TryRobustNoResetNotification","","Same as `RobustNoResetNotification` but the context creation doesn't fail if it's not\nsupported.",19,null],[13,"RobustLoseContextOnReset","","Everything is checked to avoid any crash. If a problem occurs, the context will enter a\n\"context lost\" state. It must then be recreated. For the moment, glutin doesn't provide a\nway to recreate a context with the same window :-/",19,null],[13,"TryRobustLoseContextOnReset","","Same as `RobustLoseContextOnReset` but the context creation doesn't fail if it's not\nsupported.",19,null],[4,"ReleaseBehavior","","The behavior of the driver when you change the current context.",null,null],[13,"None","","Doesn't do anything. Most notably doesn't flush.",20,null],[13,"Flush","","Flushes the context that was previously current as if `glFlush` was called.",20,null],[4,"MouseCursor","","",null,null],[13,"Default","","The platform-dependent default cursor.",21,null],[13,"Crosshair","","A simple crosshair.",21,null],[13,"Hand","","A hand (often used to indicate links in web browsers).",21,null],[13,"Arrow","","Self explanatory.",21,null],[13,"Move","","Indicates something is to be moved.",21,null],[13,"Text","","Indicates text that may be selected or edited.",21,null],[13,"Wait","","Program busy indicator.",21,null],[13,"Help","","Help indicator (often rendered as a \"?\")",21,null],[13,"Progress","","Progress indicator. Shows that processing is being done. But in contrast\nwith \"Wait\" the user may still interact with the program. Often rendered\nas a spinning beach ball, or an arrow with a watch or hourglass.",21,null],[13,"NotAllowed","","Cursor showing that something cannot be done.",21,null],[13,"ContextMenu","","",21,null],[13,"NoneCursor","","",21,null],[13,"Cell","","",21,null],[13,"VerticalText","","",21,null],[13,"Alias","","",21,null],[13,"Copy","","",21,null],[13,"NoDrop","","",21,null],[13,"Grab","","",21,null],[13,"Grabbing","","",21,null],[13,"AllScroll","","",21,null],[13,"ZoomIn","","",21,null],[13,"ZoomOut","","",21,null],[13,"EResize","","Indicate that some edge is to be moved. For example, the 'SeResize' cursor\nis used when the movement starts from the south-east corner of the box.",21,null],[13,"NResize","","",21,null],[13,"NeResize","","",21,null],[13,"NwResize","","",21,null],[13,"SResize","","",21,null],[13,"SeResize","","",21,null],[13,"SwResize","","",21,null],[13,"WResize","","",21,null],[13,"EwResize","","",21,null],[13,"NsResize","","",21,null],[13,"NeswResize","","",21,null],[13,"NwseResize","","",21,null],[13,"ColResize","","",21,null],[13,"RowResize","","",21,null],[4,"CursorState","","Describes how glutin handles the cursor.",null,null],[13,"Normal","","Normal cursor behavior.",22,null],[13,"Hide","","The cursor will be invisible when over the window.",22,null],[13,"Grab","","Grabs the mouse cursor. The cursor's motion will be confined to this\nwindow and the window has exclusive access to further events regarding\nthe cursor.",22,null],[5,"get_available_monitors","","Returns the list of all available monitors.",null,{"inputs":[],"output":{"name":"availablemonitorsiter"}}],[5,"get_primary_monitor","","Returns the primary monitor of the system.",null,{"inputs":[],"output":{"name":"monitorid"}}],[11,"from","alloc::boxed","",23,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",23,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",23,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",23,{"inputs":[{"name":"box"},{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",24,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"str"}}],[11,"description","","",25,{"inputs":[{"name":"utf8error"}],"output":{"name":"str"}}],[11,"description","core::num","",26,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"description","core::num::dec2flt","",27,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"str"}}],[11,"description","collections::string","",28,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"str"}}],[11,"description","","",29,{"inputs":[{"name":"fromutf16error"}],"output":{"name":"str"}}],[11,"is","glutin::api::egl::ffi::egl::__gl_imports","Returns true if the boxed type is the same as `T`",30,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",30,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",30,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",30,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",30,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",30,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",30,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",30,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",30,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",30,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",30,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",30,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"next","std::ascii","",31,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",31,null],[11,"next_back","","",31,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"shl","core::num","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",32,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"clone","std::thread::local","",33,{"inputs":[{"name":"localkeystate"}],"output":{"name":"localkeystate"}}],[11,"eq","","",33,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"with","","Acquires a reference to the value in this TLS key.",34,{"inputs":[{"name":"localkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"state","","Query the current state of this key.",34,{"inputs":[{"name":"localkey"}],"output":{"name":"localkeystate"}}],[11,"new","std::thread::local::imp","",35,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"get","","",35,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"set","std::thread::scoped_tls","Inserts a value into this scoped thread local storage slot for a\nduration of a closure.",36,{"inputs":[{"name":"scopedkey"},{"name":"t"},{"name":"f"}],"output":{"name":"r"}}],[11,"with","","Gets a value out of this scoped variable.",36,{"inputs":[{"name":"scopedkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"is_set","","Test whether this TLS key has been `set` for the current thread.",36,{"inputs":[{"name":"scopedkey"}],"output":{"name":"bool"}}],[11,"new","std::thread::scoped_tls::imp","",37,{"inputs":[{"name":"keyinner"}],"output":{"name":"keyinner"}}],[11,"set","","",37,null],[11,"get","","",37,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",38,{"inputs":[{"name":"builder"}],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",38,{"inputs":[{"name":"builder"},{"name":"string"}],"output":{"name":"builder"}}],[11,"stack_size","","Sets the size of the stack for the new thread.",38,{"inputs":[{"name":"builder"},{"name":"usize"}],"output":{"name":"builder"}}],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",38,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"name":"result"}}],[11,"clone","","",39,{"inputs":[{"name":"thread"}],"output":{"name":"thread"}}],[11,"unpark","","Atomically makes the handle's token available if it is not already.",39,null],[11,"name","","Gets the thread's name.",39,{"inputs":[{"name":"thread"}],"output":{"name":"option"}}],[11,"fmt","","",39,{"inputs":[{"name":"thread"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",39,{"inputs":[{"name":"thread"},{"name":"option"}],"output":{"name":"thread"}}],[11,"thread","","Extracts a handle to the underlying thread",40,{"inputs":[{"name":"joinhandle"}],"output":{"name":"thread"}}],[11,"join","","Waits for the associated thread to finish.",40,{"inputs":[{"name":"joinhandle"}],"output":{"name":"result"}}],[11,"clone","std::collections::hash::table","",41,{"inputs":[{"name":"rawbucket"}],"output":{"name":"rawbucket"}}],[11,"clone","","",42,{"inputs":[{"name":"bucket"}],"output":{"name":"bucket"}}],[11,"clone","","",43,{"inputs":[{"name":"safehash"}],"output":{"name":"safehash"}}],[11,"eq","","",43,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"inspect","","Peek at the hash value, which is guaranteed to be non-zero.",43,{"inputs":[{"name":"safehash"}],"output":{"name":"u64"}}],[11,"table","","Borrow a reference to the table.",44,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",44,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",44,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"table","","Borrow a reference to the table.",45,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",45,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",42,{"inputs":[{"name":"bucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",42,{"inputs":[{"name":"bucket"}],"output":{"name":"usize"}}],[11,"new","","",42,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"safehash"}],"output":{"name":"bucket"}}],[11,"at_index","","",42,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"usize"}],"output":{"name":"bucket"}}],[11,"first","","",42,{"inputs":[{"name":"bucket"},{"name":"m"}],"output":{"name":"bucket"}}],[11,"peek","","Reads a bucket at a given index, returning an enum indicating whether\nit's initialized or not. You need to match on this enum to get\nthe appropriate types to call most of the other functions in\nthis module.",42,{"inputs":[{"name":"bucket"}],"output":{"name":"bucketstate"}}],[11,"next","","Modifies the bucket pointer in place to make it point to the next slot.",42,null],[11,"next","","",45,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",45,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"gap_peek","","",45,{"inputs":[{"name":"emptybucket"}],"output":{"name":"option"}}],[11,"put","","Puts given key and value pair, along with the key's hash,\ninto this bucket in the hashtable. Note how `self` is 'moved' into\nthis function, because this slot will no longer be empty when\nwe return! A `FullBucket` is returned for later use, pointing to\nthe newly-filled slot in the hashtable.",45,{"inputs":[{"name":"emptybucket"},{"name":"safehash"},{"name":"k"},{"name":"v"}],"output":{"name":"fullbucket"}}],[11,"next","","",44,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",44,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"distance","","Get the distance between this bucket and the 'ideal' location\nas determined by the key's hash stored in it.",44,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"hash","","",44,{"inputs":[{"name":"fullbucket"}],"output":{"name":"safehash"}}],[11,"read","","Gets references to the key and value at a given index.",44,null],[11,"take","","Removes this bucket's key and value from the hashtable.",44,null],[11,"replace","","",44,null],[11,"read_mut","","Gets mutable references to the key and value at a given index.",44,null],[11,"into_refs","","Exchange a bucket state for immutable references into the table.\nBecause the underlying reference to the table is also consumed,\nno further changes to the structure of the table are possible;\nin exchange for this, the returned references have a longer lifetime\nthan the references returned by `read()`.",44,null],[11,"into_mut_refs","","This works similarly to `into_refs`, exchanging a bucket state\nfor mutable references into the table.",44,null],[11,"expect_full","","",46,{"inputs":[{"name":"bucketstate"}],"output":{"name":"fullbucket"}}],[11,"full","","",47,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"fullbucket"}}],[11,"shift","","",47,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"option"}}],[11,"new","","Creates a new raw table from a given capacity. All buckets are\ninitially empty.",48,{"inputs":[{"name":"rawtable"},{"name":"usize"}],"output":{"name":"rawtable"}}],[11,"capacity","","The hashtable's capacity, similar to a vector's.",48,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"size","","The number of elements ever `put` in the hashtable, minus the number\nof elements ever `take`n.",48,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"iter","","",48,{"inputs":[{"name":"rawtable"}],"output":{"name":"iter"}}],[11,"iter_mut","","",48,{"inputs":[{"name":"rawtable"}],"output":{"name":"itermut"}}],[11,"into_iter","","",48,{"inputs":[{"name":"rawtable"}],"output":{"name":"intoiter"}}],[11,"drain","","",48,{"inputs":[{"name":"rawtable"}],"output":{"name":"drain"}}],[11,"clone","","",49,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"rawbuckets"}}],[11,"next","","",49,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"option"}}],[11,"next","","",50,{"inputs":[{"name":"revmovebuckets"}],"output":{"name":"option"}}],[11,"clone","","",51,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",51,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",51,null],[11,"len","","",51,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",52,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",52,null],[11,"len","","",52,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",53,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",53,null],[11,"len","","",53,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",54,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",54,null],[11,"len","","",54,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"drop","","",54,null],[11,"clone","","",48,{"inputs":[{"name":"rawtable"}],"output":{"name":"rawtable"}}],[11,"drop","","",48,null],[11,"clone","std::collections::hash::map","",55,{"inputs":[{"name":"defaultresizepolicy"}],"output":{"name":"defaultresizepolicy"}}],[11,"clone","","",56,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"new","","Creates an empty HashMap.",56,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",56,{"inputs":[{"name":"hashmap"},{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hash_state","","Creates an empty hashmap which will use the given hasher to hash keys.",56,{"inputs":[{"name":"hashmap"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",56,{"inputs":[{"name":"hashmap"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",56,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",56,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",56,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&'a K`.",56,{"inputs":[{"name":"hashmap"}],"output":{"name":"keys"}}],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&'a V`.",56,{"inputs":[{"name":"hashmap"}],"output":{"name":"values"}}],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&'a K, &'a V)`.",56,{"inputs":[{"name":"hashmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&'a K, &'a mut V)`.",56,{"inputs":[{"name":"hashmap"}],"output":{"name":"itermut"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",56,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"len","","Returns the number of elements in the map.",56,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",56,{"inputs":[{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",56,{"inputs":[{"name":"hashmap"}],"output":{"name":"drain"}}],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",56,null],[11,"get","","Returns a reference to the value corresponding to the key.",56,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",56,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",56,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map.",56,{"inputs":[{"name":"hashmap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",56,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",56,{"inputs":[{"name":"hashmap"},{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"fmt","","",56,{"inputs":[{"name":"hashmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",56,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"index","","",56,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"v"}}],[11,"clone","","",57,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",58,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",59,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",56,{"inputs":[{"name":"hashmap"}],"output":{"name":"intoiter"}}],[11,"next","","",57,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",57,null],[11,"len","","",57,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",60,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",60,null],[11,"len","","",60,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",61,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"len","","",61,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",58,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",58,null],[11,"len","","",58,{"inputs":[{"name":"keys"}],"output":{"name":"usize"}}],[11,"next","","",59,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"len","","",59,{"inputs":[{"name":"values"}],"output":{"name":"usize"}}],[11,"next","","",62,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",62,null],[11,"len","","",62,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",63,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",63,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",64,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",64,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",64,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry, and returns the entry's old value",64,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value out of the entry, and returns it",64,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it",65,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","","",56,{"inputs":[{"name":"hashmap"},{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",56,null],[11,"extend","","",56,null],[11,"clone","","",66,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",66,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"hasher","","",66,{"inputs":[{"name":"randomstate"}],"output":{"name":"siphasher"}}],[11,"default","","",66,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"get","","",56,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"take","","",56,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"replace","","",56,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"option"}}],[11,"clone","std::collections::hash::set","",67,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"new","","Creates an empty HashSet.",67,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",67,{"inputs":[{"name":"hashset"},{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hash_state","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",67,{"inputs":[{"name":"hashset"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",67,{"inputs":[{"name":"hashset"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",67,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",67,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",67,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &'a T.",67,{"inputs":[{"name":"hashset"}],"output":{"name":"iter"}}],[11,"difference","","Visit the values representing the difference.",67,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",67,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visit the values representing the intersection.",67,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"intersection"}}],[11,"union","","Visit the values representing the union.",67,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",67,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",67,{"inputs":[{"name":"hashset"}],"output":{"name":"bool"}}],[11,"drain","","Clears the set, returning all elements in an iterator.",67,{"inputs":[{"name":"hashset"}],"output":{"name":"drain"}}],[11,"clear","","Clears the set, removing all values.",67,null],[11,"contains","","Returns `true` if the set contains a value.",67,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",67,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",67,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",67,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",67,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set.",67,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",67,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"option"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",67,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",67,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",67,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"fmt","","",67,{"inputs":[{"name":"hashset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",67,{"inputs":[{"name":"hashset"},{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",67,null],[11,"extend","","",67,null],[11,"default","","",67,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",67,{"inputs":[{"name":"hashset"}],"output":{"name":"intoiter"}}],[11,"clone","","",68,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",68,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",68,null],[11,"len","","",68,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",69,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",69,null],[11,"len","","",69,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",70,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",70,null],[11,"len","","",70,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"clone","","",71,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"next","","",71,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",71,null],[11,"clone","","",72,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"next","","",72,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",72,null],[11,"clone","","",73,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",73,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",73,null],[11,"clone","","",74,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"next","","",74,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",74,null],[11,"hasher","std::collections::hash::state","",75,{"inputs":[{"name":"defaultstate"}],"output":{"name":"h"}}],[11,"clone","","",75,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"default","","",75,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"clone","collections::linked_list","",76,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",77,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"from","","",78,{"inputs":[{"name":"rawlink"},{"name":"option"}],"output":{"name":"rawlink"}}],[11,"clone","","",78,{"inputs":[{"name":"rawlink"}],"output":{"name":"rawlink"}}],[11,"default","","",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",79,null],[11,"iter","","Provides a forward iterator.",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"iter"}}],[11,"iter_mut","","Provides a forward iterator with mutable references.",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"itermut"}}],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of the `LinkedList`.",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"usize"}}],[11,"clear","","Removes all elements from the `LinkedList`.",79,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_front","","Adds an element first in the list.",79,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_back","","Appends an element to the back of a list",79,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",79,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"linkedlist"}}],[11,"drop","","",79,null],[11,"next","","",76,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",76,null],[11,"next_back","","",76,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",80,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",80,null],[11,"next_back","","",80,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",80,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",80,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",77,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",77,null],[11,"next_back","","",77,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","",79,{"inputs":[{"name":"linkedlist"},{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"intoiter"}}],[11,"extend","","",79,null],[11,"extend","","",79,null],[11,"eq","","",79,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",79,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"cmp","","",79,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"ordering"}}],[11,"clone","","",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"fmt","","",79,{"inputs":[{"name":"linkedlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",79,null],[11,"clone","collections::binary_heap","",81,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"clone_from","","",81,null],[11,"default","","",81,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"fmt","","",81,{"inputs":[{"name":"binaryheap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",81,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",81,{"inputs":[{"name":"binaryheap"},{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"from_vec","","Creates a `BinaryHeap` from a vector. This is sometimes called\n`heapifying` the vector.",81,{"inputs":[{"name":"binaryheap"},{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",81,{"inputs":[{"name":"binaryheap"}],"output":{"name":"iter"}}],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",81,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",81,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",81,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",81,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",81,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",81,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"push","","Pushes an item onto the binary heap.",81,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",81,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"t"}}],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",81,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"option"}}],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",81,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",81,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of the binary heap.",81,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"is_empty","","Checks if the binary heap is empty.",81,{"inputs":[{"name":"binaryheap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",81,{"inputs":[{"name":"binaryheap"}],"output":{"name":"drain"}}],[11,"clear","","Drops all items from the binary heap.",81,null],[11,"drop","","",82,null],[11,"clone","","",83,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",83,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",83,null],[11,"next_back","","",83,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",84,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",84,null],[11,"next_back","","",84,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"next","","",85,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",85,null],[11,"next_back","","",85,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"from","","",81,{"inputs":[{"name":"binaryheap"},{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",86,{"inputs":[{"name":"vec"},{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",81,{"inputs":[{"name":"binaryheap"},{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",81,{"inputs":[{"name":"binaryheap"}],"output":{"name":"intoiter"}}],[11,"extend","","",81,null],[11,"extend","","",81,null],[11,"clone","collections::vec_deque","",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"drop","","",87,null],[11,"default","","",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",87,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",87,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",87,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap","","Swaps elements at indices `i` and `j`.",87,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",87,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",87,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",87,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",87,null],[11,"iter","","Returns a front-to-back iterator.",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"itermut"}}],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",87,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",87,null],[11,"len","","Returns the number of elements in the `VecDeque`.",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the buffer contains no elements",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items from start to end. The element\nrange is removed even if the iterator is not consumed until the end.",87,{"inputs":[{"name":"vecdeque"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the buffer, removing all values.",87,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"push_front","","Inserts an element first in the sequence.",87,null],[11,"push_back","","Appends an element to the back of a buffer",87,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",87,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_back_remove","","deprecated",87,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",87,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_front_remove","","deprecated",87,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",87,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",87,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"split_off","","Splits the collection into two at the given index.",87,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",87,null],[11,"retain","","Retains only the elements specified by the predicate.",87,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",87,null],[11,"clone","","",88,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",88,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",88,null],[11,"next_back","","",88,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",89,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",89,null],[11,"next_back","","",89,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",90,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",90,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",90,null],[11,"next_back","","",90,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",91,null],[11,"next","","",91,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",91,null],[11,"next_back","","",91,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"eq","","",87,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",87,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"cmp","","",87,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"ordering"}}],[11,"hash","","",87,null],[11,"index","","",87,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"index_mut","","",87,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"from_iter","","",87,{"inputs":[{"name":"vecdeque"},{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",87,{"inputs":[{"name":"vecdeque"}],"output":{"name":"intoiter"}}],[11,"extend","","",87,null],[11,"extend","","",87,null],[11,"fmt","","",87,{"inputs":[{"name":"vecdeque"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","std::dynamic_lib","",92,null],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",92,{"inputs":[{"name":"dynamiclibrary"},{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process's search path for dynamic libraries",92,null],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",92,null],[11,"envvar","","Returns the environment variable for this process's dynamic library\nsearch path",92,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",92,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"vec"}}],[11,"symbol","","Accesses the value at the symbol of the dynamic library.",92,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}],[11,"next","std::env","",93,{"inputs":[{"name":"vars"}],"output":{"name":"option"}}],[11,"size_hint","","",93,null],[11,"next","","",94,{"inputs":[{"name":"varsos"}],"output":{"name":"option"}}],[11,"size_hint","","",94,null],[11,"clone","","",95,{"inputs":[{"name":"varerror"}],"output":{"name":"varerror"}}],[11,"eq","","",95,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"ne","","",95,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"fmt","","",95,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",95,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",95,{"inputs":[{"name":"varerror"}],"output":{"name":"str"}}],[11,"next","","",96,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",96,null],[11,"fmt","","",97,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",97,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",97,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",98,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",98,null],[11,"len","","",98,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",99,{"inputs":[{"name":"argsos"}],"output":{"name":"option"}}],[11,"size_hint","","",99,null],[11,"len","","",99,{"inputs":[{"name":"argsos"}],"output":{"name":"usize"}}],[11,"clone","std::ffi::c_str","",100,{"inputs":[{"name":"cstring"}],"output":{"name":"cstring"}}],[11,"hash","","",100,null],[11,"cmp","","",100,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",100,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"option"}}],[11,"lt","","",100,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"le","","",100,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"gt","","",100,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ge","","",100,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"eq","","",100,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ne","","",100,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"hash","","",101,null],[11,"fmt","","",102,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",102,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"ne","","",102,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"clone","","",102,{"inputs":[{"name":"nulerror"}],"output":{"name":"nulerror"}}],[11,"fmt","","",103,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",103,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"clone","","",103,{"inputs":[{"name":"intostringerror"}],"output":{"name":"intostringerror"}}],[11,"new","","Creates a new C-compatible string from a container of bytes.",100,{"inputs":[{"name":"cstring"},{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",100,{"inputs":[{"name":"cstring"},{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_ptr","","Retakes ownership of a CString that was transferred to C.",100,null],[11,"from_raw","","Retakes ownership of a CString that was transferred to C.",100,null],[11,"into_ptr","","Transfers ownership of the string to a C caller.",100,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",100,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",100,{"inputs":[{"name":"cstring"}],"output":{"name":"result"}}],[11,"into_bytes","","Returns the underlying byte buffer.",100,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",100,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",100,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",100,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",101,null],[11,"as_ptr","","Returns the inner pointer to this C string.",101,null],[11,"to_bytes","","Converts this C string to a byte slice.",101,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",101,null],[11,"to_str","","Yields a `&str` slice if the `CStr` contains valid UTF-8.",101,{"inputs":[{"name":"cstr"}],"output":{"name":"result"}}],[11,"to_string_lossy","","Converts a `CStr` into a `Cow<str>`.",101,{"inputs":[{"name":"cstr"}],"output":{"name":"cow"}}],[11,"deref","","",100,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"fmt","","",100,{"inputs":[{"name":"cstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"cstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",100,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",102,{"inputs":[{"name":"nulerror"}],"output":{"name":"usize"}}],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",102,{"inputs":[{"name":"nulerror"}],"output":{"name":"vec"}}],[11,"description","","",102,{"inputs":[{"name":"nulerror"}],"output":{"name":"str"}}],[11,"fmt","","",102,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","std::io::error","",104,{"inputs":[{"name":"error"},{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",103,{"inputs":[{"name":"intostringerror"}],"output":{"name":"cstring"}}],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",103,{"inputs":[{"name":"intostringerror"}],"output":{"name":"utf8error"}}],[11,"description","","",103,{"inputs":[{"name":"intostringerror"}],"output":{"name":"str"}}],[11,"fmt","","",103,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",101,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",101,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"option"}}],[11,"cmp","","",101,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"ordering"}}],[11,"to_owned","","",101,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"clone","std::ffi::os_str","",105,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"new","","Constructs a new empty `OsString`.",105,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"from_bytes","","Constructs an `OsString` from a byte sequence.",105,{"inputs":[{"name":"osstring"},{"name":"b"}],"output":{"name":"option"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",105,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",105,{"inputs":[{"name":"osstring"}],"output":{"name":"result"}}],[11,"push","","Extends the string with the given `&OsStr` slice.",105,null],[11,"from","","",105,{"inputs":[{"name":"osstring"},{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",105,{"inputs":[{"name":"osstring"},{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",105,{"inputs":[{"name":"osstring"},{"name":"rangefull"}],"output":{"name":"osstr"}}],[11,"new","","Coerces into an `OsStr` slice.",106,{"inputs":[{"name":"osstr"},{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `OsStr` is valid unicode.",106,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow<str>`.",106,{"inputs":[{"name":"osstr"}],"output":{"name":"cow"}}],[11,"to_os_string","","Copies the slice into an owned `OsString`.",106,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"to_bytes","","Yields this `OsStr` as a byte slice.",106,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_cstring","","Creates a `CString` containing this `OsStr` data.",106,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"deref","","",105,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"fmt","","",105,{"inputs":[{"name":"osstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",105,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","","",105,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",105,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"lt","","",105,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"le","","",105,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"gt","","",105,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"ge","","",105,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",105,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",105,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"ordering"}}],[11,"hash","","",105,null],[11,"eq","","",106,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","","",106,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",106,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"lt","","",106,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"le","","",106,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"gt","","",106,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"ge","","",106,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",106,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",106,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"ordering"}}],[11,"hash","","",106,null],[11,"fmt","","",106,{"inputs":[{"name":"osstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",105,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"to_owned","","",106,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"as_ref","","",106,{"inputs":[{"name":"osstr"}],"output":{"name":"osstr"}}],[11,"as_ref","","",105,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"as_ref","collections::string","",107,{"inputs":[{"name":"string"}],"output":{"name":"osstr"}}],[11,"clone","std::fs","",108,{"inputs":[{"name":"metadata"}],"output":{"name":"metadata"}}],[11,"clone","","",109,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",110,{"inputs":[{"name":"permissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",110,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"ne","","",110,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"clone","","",110,{"inputs":[{"name":"permissions"}],"output":{"name":"permissions"}}],[11,"hash","","",111,null],[11,"eq","","",111,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",111,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",111,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"open","","Attempts to open a file in read-only mode.",112,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",112,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",112,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",112,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",112,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"metadata","","Queries metadata about the underlying file.",112,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fmt","","",112,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",112,null],[11,"read_to_end","","",112,{"inputs":[{"name":"file"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",112,null],[11,"flush","","",112,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",112,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"new","","Creates a blank net set of options ready for configuration.",109,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",109,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"write","","Sets the option for write access.",109,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"append","","Sets the option for the append mode.",109,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"truncate","","Sets the option for truncating a previous file.",109,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create","","Sets the option for creating a new file.",109,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"open","","Opens a file at `path` with the options specified by `self`.",109,{"inputs":[{"name":"openoptions"},{"name":"p"}],"output":{"name":"result"}}],[11,"file_type","","Returns the file type for this metadata.",108,{"inputs":[{"name":"metadata"}],"output":{"name":"filetype"}}],[11,"is_dir","","Returns whether this metadata is for a directory.",108,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether this metadata is for a regular file.",108,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",108,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"permissions","","Returns the permissions of the file this metadata is for.",108,{"inputs":[{"name":"metadata"}],"output":{"name":"permissions"}}],[11,"readonly","","Returns whether these permissions describe a readonly file.",110,{"inputs":[{"name":"permissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",110,null],[11,"is_dir","","Test whether this file type represents a directory.",111,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","Test whether this file type represents a regular file.",111,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","Test whether this file type represents a symbolic link.",111,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"next","","",113,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"path","","Returns the full path to the file that this entry represents.",114,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"metadata","","Return the metadata for the file that this entry points at.",114,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","Return the file type for the file that this entry points at.",114,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",114,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"next","","",115,{"inputs":[{"name":"walkdir"}],"output":{"name":"option"}}],[11,"metadata","std::path","",116,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","",116,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","",116,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","",116,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","",116,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","",116,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","",116,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","",116,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"new","std::fs","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",117,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",117,{"inputs":[{"name":"dirbuilder"},{"name":"bool"}],"output":{"name":"dirbuilder"}}],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",117,{"inputs":[{"name":"dirbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",118,{"inputs":[{"name":"bufreader"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",118,{"inputs":[{"name":"bufreader"},{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",118,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_mut","","Gets a mutable reference to the underlying reader.",118,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",118,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"read","","",118,null],[11,"fill_buf","","",118,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"consume","","",118,null],[11,"fmt","","",118,{"inputs":[{"name":"bufreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",118,{"inputs":[{"name":"bufreader"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fmt","","",119,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",120,{"inputs":[{"name":"bufwriter"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",120,{"inputs":[{"name":"bufwriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",120,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",120,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",120,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"write","","",120,null],[11,"flush","","",120,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"fmt","","",120,{"inputs":[{"name":"bufwriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",120,{"inputs":[{"name":"bufwriter"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"drop","","",120,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",119,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"into_inner","","Returns the buffered writer instance which generated the error.",119,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"w"}}],[11,"from","std::io::error","",104,{"inputs":[{"name":"error"},{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",119,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"str"}}],[11,"fmt","","",119,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `LineWriter`.",121,{"inputs":[{"name":"linewriter"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",121,{"inputs":[{"name":"linewriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",121,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",121,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",121,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"write","","",121,null],[11,"flush","","",121,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"fmt","","",121,{"inputs":[{"name":"linewriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",122,null],[11,"fmt","std::io::cursor","",123,{"inputs":[{"name":"cursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",123,{"inputs":[{"name":"cursor"}],"output":{"name":"cursor"}}],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",123,{"inputs":[{"name":"cursor"},{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",123,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",123,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",123,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"position","","Returns the current position of this cursor.",123,{"inputs":[{"name":"cursor"}],"output":{"name":"u64"}}],[11,"set_position","","Sets the position of this cursor.",123,null],[11,"seek","","",123,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"read","","",123,null],[11,"fill_buf","","",123,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",123,null],[11,"write","","",123,null],[11,"flush","","",123,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",123,null],[11,"flush","","",123,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",123,null],[11,"flush","","",123,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"fmt","std::io::error","",104,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",124,{"inputs":[{"name":"custom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",125,{"inputs":[{"name":"errorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",125,{"inputs":[{"name":"errorkind"}],"output":{"name":"errorkind"}}],[11,"eq","","",125,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",125,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",104,{"inputs":[{"name":"error"},{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",104,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",104,{"inputs":[{"name":"error"},{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",104,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",104,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",104,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",104,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",104,{"inputs":[{"name":"error"}],"output":{"name":"errorkind"}}],[11,"fmt","","",126,{"inputs":[{"name":"repr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",104,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",104,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",104,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"read","alloc::boxed","",23,null],[11,"read_to_end","","",23,{"inputs":[{"name":"box"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",23,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",23,null],[11,"write","","",23,null],[11,"flush","","",23,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"write_all","","",23,null],[11,"write_fmt","","",23,{"inputs":[{"name":"box"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"seek","","",23,{"inputs":[{"name":"box"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fill_buf","","",23,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"consume","","",23,null],[11,"read_until","","",23,{"inputs":[{"name":"box"},{"name":"u8"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_line","","",23,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","collections::vec","",86,null],[11,"write_all","","",86,null],[11,"flush","","",86,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"new","std::io::lazy","",127,null],[11,"get","","",127,{"inputs":[{"name":"lazy"}],"output":{"name":"option"}}],[11,"read","std::io::util","",128,null],[11,"fill_buf","","",128,{"inputs":[{"name":"empty"}],"output":{"name":"result"}}],[11,"consume","","",128,null],[11,"read","","",129,null],[11,"write","","",130,null],[11,"flush","","",130,{"inputs":[{"name":"sink"}],"output":{"name":"result"}}],[11,"read","std::io::stdio","",131,null],[11,"write","","",132,null],[11,"flush","","",132,{"inputs":[{"name":"stdoutraw"}],"output":{"name":"result"}}],[11,"write","","",133,null],[11,"flush","","",133,{"inputs":[{"name":"stderrraw"}],"output":{"name":"result"}}],[11,"write","","",134,null],[11,"flush","","",134,{"inputs":[{"name":"maybe"}],"output":{"name":"result"}}],[11,"read","","",134,null],[11,"lock","","Locks this handle to the standard input stream, returning a readable\nguard.",135,{"inputs":[{"name":"stdin"}],"output":{"name":"stdinlock"}}],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",135,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",135,null],[11,"read_to_end","","",135,{"inputs":[{"name":"stdin"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",135,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",135,null],[11,"read","","",136,null],[11,"read_to_end","","",136,{"inputs":[{"name":"stdinlock"},{"name":"vec"}],"output":{"name":"result"}}],[11,"fill_buf","","",136,{"inputs":[{"name":"stdinlock"}],"output":{"name":"result"}}],[11,"consume","","",136,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",137,{"inputs":[{"name":"stdout"}],"output":{"name":"stdoutlock"}}],[11,"write","","",137,null],[11,"flush","","",137,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write_all","","",137,null],[11,"write_fmt","","",137,{"inputs":[{"name":"stdout"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",138,null],[11,"flush","","",138,{"inputs":[{"name":"stdoutlock"}],"output":{"name":"result"}}],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",139,{"inputs":[{"name":"stderr"}],"output":{"name":"stderrlock"}}],[11,"write","","",139,null],[11,"flush","","",139,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write_all","","",139,null],[11,"write_fmt","","",139,{"inputs":[{"name":"stderr"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",140,null],[11,"flush","","",140,{"inputs":[{"name":"stderrlock"}],"output":{"name":"result"}}],[11,"fmt","std::io","",141,{"inputs":[{"name":"seekfrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",141,{"inputs":[{"name":"seekfrom"}],"output":{"name":"seekfrom"}}],[11,"eq","","",141,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"write","","",142,null],[11,"flush","","",142,{"inputs":[{"name":"broadcast"}],"output":{"name":"result"}}],[11,"read","","",143,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",144,{"inputs":[{"name":"take"}],"output":{"name":"u64"}}],[11,"read","","",144,null],[11,"fill_buf","","",144,{"inputs":[{"name":"take"}],"output":{"name":"result"}}],[11,"consume","","",144,null],[11,"read","","",145,null],[11,"next","","",146,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"fmt","","",147,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",148,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"description","","",147,{"inputs":[{"name":"charserror"}],"output":{"name":"str"}}],[11,"cause","","",147,{"inputs":[{"name":"charserror"}],"output":{"name":"option"}}],[11,"fmt","","",147,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",149,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next","","",150,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"cmp","std::net::ip","",151,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",151,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"option"}}],[11,"lt","","",151,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"le","","",151,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"gt","","",151,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ge","","",151,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"hash","","",151,null],[11,"fmt","","",151,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",151,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ne","","",151,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"clone","","",151,{"inputs":[{"name":"ipaddr"}],"output":{"name":"ipaddr"}}],[11,"fmt","","",152,{"inputs":[{"name":"ipv6multicastscope"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",152,null],[11,"clone","","",152,{"inputs":[{"name":"ipv6multicastscope"}],"output":{"name":"ipv6multicastscope"}}],[11,"eq","","",152,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"ne","","",152,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",153,{"inputs":[{"name":"ipv4addr"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",153,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address 0.0.0.0.",153,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",153,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_private","","Returns true if this is a private address.",153,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",153,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",153,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_multicast","","Returns true if this is a multicast address.",153,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_broadcast","","Returns true if this is a broadcast address.",153,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",153,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",153,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",153,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"fmt","","",151,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",153,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",153,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",153,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv4addr"}}],[11,"eq","","",153,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"hash","","",153,null],[11,"partial_cmp","","",153,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"option"}}],[11,"cmp","","",153,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"ordering"}}],[11,"from","","",153,{"inputs":[{"name":"ipv4addr"},{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",154,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",154,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address ::.",154,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (::1).",154,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",154,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",154,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",154,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",154,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",154,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"multicast_scope","","Returns the address's multicast scope if the address is multicast.",154,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"is_multicast","","Returns true if this is a multicast address.",154,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",154,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"fmt","","",154,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",154,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6addr"}}],[11,"eq","","",154,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"hash","","",154,null],[11,"partial_cmp","","",154,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"cmp","","",154,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"ordering"}}],[11,"fmt","std::net::addr","",155,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",155,null],[11,"eq","","",155,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"ne","","",155,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"clone","","",155,{"inputs":[{"name":"socketaddr"}],"output":{"name":"socketaddr"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",155,{"inputs":[{"name":"socketaddr"},{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",155,{"inputs":[{"name":"socketaddr"}],"output":{"name":"ipaddr"}}],[11,"port","","Returns the port number associated with this socket address.",155,{"inputs":[{"name":"socketaddr"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",156,{"inputs":[{"name":"socketaddrv4"},{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",156,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"ipv4addr"}}],[11,"port","","Returns the port number associated with this socket address.",156,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",157,{"inputs":[{"name":"socketaddrv6"},{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",157,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"ipv6addr"}}],[11,"port","","Returns the port number associated with this socket address.",157,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u16"}}],[11,"flowinfo","","Returns scope ID associated with this address, corresponding to the\n`sin6_flowinfo` field in C.",157,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"scope_id","","Returns scope ID associated with this address, corresponding to the\n`sin6_scope_id` field in C.",157,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"fmt","","",155,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",156,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",156,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",157,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",157,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",156,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"socketaddrv4"}}],[11,"clone","","",157,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"socketaddrv6"}}],[11,"eq","","",156,{"inputs":[{"name":"socketaddrv4"},{"name":"socketaddrv4"}],"output":{"name":"bool"}}],[11,"eq","","",157,{"inputs":[{"name":"socketaddrv6"},{"name":"socketaddrv6"}],"output":{"name":"bool"}}],[11,"hash","","",156,null],[11,"hash","","",157,null],[11,"to_socket_addrs","","",155,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",156,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",157,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"result"}}],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",158,{"inputs":[{"name":"tcpstream"},{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",158,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",158,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",158,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",158,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",158,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",158,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",158,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",158,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",158,null],[11,"read_to_end","","",158,{"inputs":[{"name":"tcpstream"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",158,null],[11,"flush","","",158,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",158,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",159,{"inputs":[{"name":"tcplistener"},{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",159,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",159,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","Accept a new incoming connection from this listener.",159,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",159,{"inputs":[{"name":"tcplistener"}],"output":{"name":"incoming"}}],[11,"next","","",160,{"inputs":[{"name":"incoming"}],"output":{"name":"option"}}],[11,"fmt","","",159,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",161,{"inputs":[{"name":"udpsocket"},{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",161,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",161,null],[11,"local_addr","","Returns the socket address that this socket was created from.",161,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",161,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",161,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",161,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",161,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",161,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","std::net::ip","",151,{"inputs":[{"name":"ipaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",153,{"inputs":[{"name":"ipv4addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",154,{"inputs":[{"name":"ipv6addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",156,{"inputs":[{"name":"socketaddrv4"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",157,{"inputs":[{"name":"socketaddrv6"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",155,{"inputs":[{"name":"socketaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",162,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"ne","","",162,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"clone","","",162,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"addrparseerror"}}],[11,"fmt","","",162,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",162,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",162,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"str"}}],[11,"fmt","std::net","",163,{"inputs":[{"name":"shutdown"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",163,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"ne","","",163,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"clone","","",163,{"inputs":[{"name":"shutdown"}],"output":{"name":"shutdown"}}],[11,"next","","",164,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"clone","std::os::linux::raw::arch","",165,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"as_raw_fd","std::fs","",112,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",112,{"inputs":[{"name":"file"},{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",112,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::tcp","",158,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",159,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::udp","",161,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_raw_fd","std::net::tcp","",158,{"inputs":[{"name":"tcpstream"},{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",159,{"inputs":[{"name":"tcplistener"},{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",161,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",158,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",159,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"into_raw_fd","std::net::udp","",161,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_vec","std::ffi::os_str","",105,{"inputs":[{"name":"osstring"},{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",105,{"inputs":[{"name":"osstring"}],"output":{"name":"vec"}}],[11,"from_bytes","","",106,null],[11,"as_bytes","","",106,null],[11,"mode","std::fs","",110,{"inputs":[{"name":"permissions"}],"output":{"name":"u32"}}],[11,"set_mode","","",110,null],[11,"from_mode","","",110,{"inputs":[{"name":"permissions"},{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",109,{"inputs":[{"name":"openoptions"},{"name":"u32"}],"output":{"name":"openoptions"}}],[11,"dev","","",108,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"ino","","",108,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"mode","","",108,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"nlink","","",108,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"uid","","",108,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"gid","","",108,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"rdev","","",108,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"size","","",108,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime","","",108,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime_nsec","","",108,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime","","",108,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime_nsec","","",108,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime","","",108,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime_nsec","","",108,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blksize","","",108,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blocks","","",108,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"is_block_device","","",111,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_char_device","","",111,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_fifo","","",111,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_socket","","",111,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ino","","",114,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"mode","","",117,{"inputs":[{"name":"dirbuilder"},{"name":"u32"}],"output":{"name":"dirbuilder"}}],[11,"uid","std::process","",166,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"gid","","",166,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"session_leader","","",166,{"inputs":[{"name":"command"},{"name":"bool"}],"output":{"name":"command"}}],[11,"signal","","",167,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"from_raw_fd","","",168,{"inputs":[{"name":"stdio"},{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",169,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",170,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",171,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",169,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",170,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",171,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"eq","std::path","",172,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ne","","",172,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"cmp","","",172,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",172,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"option"}}],[11,"lt","","",172,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"le","","",172,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"gt","","",172,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ge","","",172,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"hash","","",172,null],[11,"fmt","","",172,{"inputs":[{"name":"prefix"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",172,{"inputs":[{"name":"prefix"}],"output":{"name":"prefix"}}],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",172,{"inputs":[{"name":"prefix"}],"output":{"name":"bool"}}],[11,"fmt","","",173,{"inputs":[{"name":"state"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",173,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"option"}}],[11,"lt","","",173,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"le","","",173,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"gt","","",173,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ge","","",173,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"eq","","",173,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",173,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",173,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"fmt","","",174,{"inputs":[{"name":"prefixcomponent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",174,null],[11,"clone","","",174,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefixcomponent"}}],[11,"kind","","The parsed prefix data.",174,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefix"}}],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",174,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"osstr"}}],[11,"eq","","",174,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",174,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"option"}}],[11,"cmp","","",174,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"ordering"}}],[11,"fmt","","",175,{"inputs":[{"name":"component"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",175,null],[11,"cmp","","",175,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",175,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"option"}}],[11,"lt","","",175,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"le","","",175,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"gt","","",175,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ge","","",175,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"eq","","",175,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"clone","","",175,{"inputs":[{"name":"component"}],"output":{"name":"component"}}],[11,"as_os_str","","Extracts the underlying `OsStr` slice",175,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"as_ref","","",175,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"clone","","",176,{"inputs":[{"name":"components"}],"output":{"name":"components"}}],[11,"clone","","",177,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",176,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"peek","","Examine the next component without consuming it.",176,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"as_ref","","",176,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"as_ref","","",176,{"inputs":[{"name":"components"}],"output":{"name":"osstr"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",177,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",177,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",177,{"inputs":[{"name":"iter"}],"output":{"name":"osstr"}}],[11,"next","","",177,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",177,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",176,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"next_back","","",176,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"eq","","",176,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",176,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"option"}}],[11,"cmp","","",176,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"ordering"}}],[11,"hash","","",178,null],[11,"clone","","",178,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"new","","Allocates an empty `PathBuf`.",178,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",178,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"push","","Extends `self` with `path`.",178,null],[11,"pop","","Truncate `self` to `self.parent()`.",178,{"inputs":[{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",178,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",178,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"bool"}}],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",178,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"from","","",178,{"inputs":[{"name":"pathbuf"},{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",178,{"inputs":[{"name":"pathbuf"},{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",178,{"inputs":[{"name":"pathbuf"},{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",178,{"inputs":[{"name":"pathbuf"},{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",178,null],[11,"fmt","","",178,{"inputs":[{"name":"pathbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Directly wrap a string slice as a `Path` slice.",116,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",116,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `Path` is valid unicode.",116,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts a `Path` to a `Cow<str>`.",116,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",116,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",116,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_relative","","A path is *relative* if it is not absolute.",116,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"prefix","","Returns the *prefix* of a path, if any.",116,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",116,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"parent","","The path without its final component, if any.",116,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"file_name","","The final component of the path, if it is a normal file.",116,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"relative_from","","Returns a path that, when joined onto `base`, yields `self`.",116,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"option"}}],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",116,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",116,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",116,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",116,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",116,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"pathbuf"}}],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",116,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",116,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"components","","Produce an iterator over the components of the path.",116,{"inputs":[{"name":"path"}],"output":{"name":"components"}}],[11,"iter","","Produce an iterator over the path's components viewed as `OsStr` slices.",116,{"inputs":[{"name":"path"}],"output":{"name":"iter"}}],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",116,{"inputs":[{"name":"path"}],"output":{"name":"display"}}],[11,"metadata","","Gets information on the file, directory, etc at this path.",116,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","Gets information on the file, directory, etc at this path.",116,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","Returns the canonical form of a path, normalizing all components and\neliminate all symlinks.",116,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","Reads the symlink at this path.",116,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","Reads the directory at this path.",116,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","Boolean value indicator whether the underlying file exists on the local\nfilesystem. Returns false in exactly the cases where `fs::stat` fails.",116,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","Whether the underlying implementation (be it a file path, or something\nelse) points at a \"regular file\" on the FS. Will return false for paths\nto non-existent locations or directories or other non-regular files\n(named pipes, etc). Follows links when making this determination.",116,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","Whether the underlying implementation (be it a file path, or something\nelse) is pointing at a directory in the underlying FS. Will return\nfalse for paths to non-existent locations or if the item is not a\ndirectory (eg files, named pipes, etc). Follows links when making this\ndetermination.",116,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"deref","","",178,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"borrow","","",178,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"into_cow","","",178,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","","",116,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"eq","","",178,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",178,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"cmp","","",178,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"ordering"}}],[11,"as_ref","","",178,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstr"}}],[11,"into","","",178,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"hash","","",116,null],[11,"as_ref","","",116,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"fmt","","",116,{"inputs":[{"name":"path"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",179,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",179,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",116,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",116,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[11,"cmp","","",116,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"ordering"}}],[11,"as_ref","","",116,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"as_ref","std::ffi::os_str","",106,{"inputs":[{"name":"osstr"}],"output":{"name":"path"}}],[11,"as_ref","","",105,{"inputs":[{"name":"osstring"}],"output":{"name":"path"}}],[11,"as_ref","collections::string","",107,{"inputs":[{"name":"string"}],"output":{"name":"path"}}],[11,"as_ref","std::path","",178,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"write","std::process","",169,null],[11,"flush","","",169,{"inputs":[{"name":"childstdin"}],"output":{"name":"result"}}],[11,"read","","",170,null],[11,"read","","",171,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",166,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",166,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"args","","Add multiple arguments to pass to the program.",166,null],[11,"env","","Inserts or updates an environment variable mapping.",166,{"inputs":[{"name":"command"},{"name":"k"},{"name":"v"}],"output":{"name":"command"}}],[11,"env_remove","","Removes an environment variable mapping.",166,{"inputs":[{"name":"command"},{"name":"k"}],"output":{"name":"command"}}],[11,"env_clear","","Clears the entire environment map for the child process.",166,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"current_dir","","Sets the working directory for the child process.",166,{"inputs":[{"name":"command"},{"name":"p"}],"output":{"name":"command"}}],[11,"stdin","","Configuration for the child process's stdin handle (file descriptor 0).",166,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stdout","","Configuration for the child process's stdout handle (file descriptor 1).",166,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stderr","","Configuration for the child process's stderr handle (file descriptor 2).",166,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"spawn","","Executes the command as a child process, returning a handle to it.",166,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",166,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",166,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",166,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",180,{"inputs":[{"name":"output"}],"output":{"name":"output"}}],[11,"eq","","",180,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"ne","","",180,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",168,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",168,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",168,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"fmt","","",167,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",167,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",167,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",167,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",167,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","Returns the exit code of the process, if any.",167,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",167,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",181,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"id","","Returns the OS-assigned process identifier associated with this child.",181,{"inputs":[{"name":"child"}],"output":{"name":"u32"}}],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",181,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning a `Output`\ninstance.",181,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"clone","std::sync::mpsc::blocking","",182,{"inputs":[{"name":"signaltoken"}],"output":{"name":"signaltoken"}}],[11,"signal","","",182,{"inputs":[{"name":"signaltoken"}],"output":{"name":"bool"}}],[11,"cast_to_usize","","Convert to an unsafe usize value. Useful for storing in a pipe's state\nflag.",182,{"inputs":[{"name":"signaltoken"}],"output":{"name":"usize"}}],[11,"cast_from_usize","","Convert from an unsafe usize value. Useful for retrieving a pipe's state\nflag.",182,{"inputs":[{"name":"signaltoken"},{"name":"usize"}],"output":{"name":"signaltoken"}}],[11,"wait","","",183,null],[11,"new","std::sync::mpsc::oneshot","",184,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",184,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"sent","","",184,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"recv","","",184,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",184,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"upgrade","","",184,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"drop_chan","","",184,null],[11,"drop_port","","",184,null],[11,"can_recv","","",184,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",184,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",184,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop","","",184,null],[11,"eq","std::sync::mpsc::select","",185,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"ne","","",185,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new selection structure. This set is initially empty.",186,{"inputs":[{"name":"select"}],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",186,{"inputs":[{"name":"select"},{"name":"receiver"}],"output":{"name":"handle"}}],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",186,{"inputs":[{"name":"select"}],"output":{"name":"usize"}}],[11,"id","","Retrieves the id of this handle.",187,{"inputs":[{"name":"handle"}],"output":{"name":"usize"}}],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",187,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",187,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",187,null],[11,"drop","","",186,null],[11,"drop","","",187,null],[11,"next","","",188,{"inputs":[{"name":"packets"}],"output":{"name":"option"}}],[11,"new","std::sync::mpsc::shared","",189,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"postinit_lock","","",189,{"inputs":[{"name":"packet"}],"output":{"name":"mutexguard"}}],[11,"inherit_blocker","","",189,null],[11,"send","","",189,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",189,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",189,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",189,null],[11,"drop_chan","","",189,null],[11,"drop_port","","",189,null],[11,"can_recv","","",189,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",189,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",189,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"drop","","",189,null],[11,"new","std::sync::mpsc::stream","",190,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",190,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"upgrade","","",190,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"recv","","",190,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",190,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop_chan","","",190,null],[11,"drop_port","","",190,null],[11,"can_recv","","",190,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",190,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",190,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"result"}}],[11,"drop","","",190,null],[11,"fmt","std::sync::mpsc::sync","",191,{"inputs":[{"name":"failure"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",192,{"inputs":[{"name":"packet"},{"name":"usize"}],"output":{"name":"packet"}}],[11,"send","","",192,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","",192,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",192,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",192,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",192,null],[11,"drop_chan","","",192,null],[11,"drop_port","","",192,null],[11,"can_recv","","",192,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",192,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",192,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"drop","","",192,null],[11,"new","std::sync::mpsc::mpsc_queue","Creates a new queue that is safe to share among multiple producers and\none consumer.",193,{"inputs":[{"name":"queue"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue.",193,null],[11,"pop","","Pops some data from this queue.",193,{"inputs":[{"name":"queue"}],"output":{"name":"popresult"}}],[11,"drop","","",193,null],[11,"new","std::sync::mpsc::spsc_queue","Creates a new queue.",194,{"inputs":[{"name":"queue"},{"name":"usize"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue. Note that to use this function\nsafely, it must be externally guaranteed that there is only one pusher.",194,null],[11,"pop","","Attempts to pop a value from this queue. Remember that to use this type\nsafely you must ensure that there is only one popper at a time.",194,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"peek","","Attempts to peek at the head of the queue, returning `None` if the queue\nhas no data currently",194,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"drop","","",194,null],[11,"clone","std::sync::mpsc","",195,{"inputs":[{"name":"senderror"}],"output":{"name":"senderror"}}],[11,"eq","","",195,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",195,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"fmt","","",196,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",196,{"inputs":[{"name":"recverror"}],"output":{"name":"recverror"}}],[11,"eq","","",196,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"ne","","",196,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"fmt","","",197,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",197,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"tryrecverror"}}],[11,"eq","","",197,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"ne","","",197,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"clone","","",198,{"inputs":[{"name":"trysenderror"}],"output":{"name":"trysenderror"}}],[11,"eq","","",198,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",198,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",199,{"inputs":[{"name":"sender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",199,{"inputs":[{"name":"sender"}],"output":{"name":"sender"}}],[11,"drop","","",199,null],[11,"send","","Sends a value on this synchronous channel.",200,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","Attempts to send a value on this channel without blocking.",200,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",200,{"inputs":[{"name":"syncsender"}],"output":{"name":"syncsender"}}],[11,"drop","","",200,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",201,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",201,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",201,{"inputs":[{"name":"receiver"}],"output":{"name":"iter"}}],[11,"next","","",202,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",203,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"into_iter","","",201,{"inputs":[{"name":"receiver"}],"output":{"name":"intoiter"}}],[11,"drop","","",201,null],[11,"fmt","","",195,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",195,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",195,{"inputs":[{"name":"senderror"}],"output":{"name":"str"}}],[11,"cause","","",195,{"inputs":[{"name":"senderror"}],"output":{"name":"option"}}],[11,"fmt","","",198,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",198,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",198,{"inputs":[{"name":"trysenderror"}],"output":{"name":"str"}}],[11,"cause","","",198,{"inputs":[{"name":"trysenderror"}],"output":{"name":"option"}}],[11,"fmt","","",196,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",196,{"inputs":[{"name":"recverror"}],"output":{"name":"str"}}],[11,"cause","","",196,{"inputs":[{"name":"recverror"}],"output":{"name":"option"}}],[11,"fmt","","",197,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",197,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"str"}}],[11,"cause","","",197,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"option"}}],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",204,{"inputs":[{"name":"barrier"},{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads has rendezvoused here.",204,{"inputs":[{"name":"barrier"}],"output":{"name":"barrierwaitresult"}}],[11,"is_leader","","Returns whether this thread from `wait` is the \"leader thread\".",205,{"inputs":[{"name":"barrierwaitresult"}],"output":{"name":"bool"}}],[11,"clone","std::sync::condvar","",206,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"waittimeoutresult"}}],[11,"eq","","",206,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"ne","","",206,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"fmt","","",206,{"inputs":[{"name":"waittimeoutresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"timed_out","","Returns whether the wait was known to have timed out.",206,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",207,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",207,{"inputs":[{"name":"condvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",207,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",207,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",207,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",207,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",207,null],[11,"drop","","",207,null],[11,"new","","Creates a new condition variable",208,{"inputs":[{"name":"staticcondvar"}],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",208,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",208,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",208,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",208,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",208,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",208,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",208,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",209,{"inputs":[{"name":"mutex"},{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",209,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",209,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",209,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this mutex, returning the underlying data.",209,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",209,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"drop","","",209,null],[11,"fmt","","",209,{"inputs":[{"name":"mutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new mutex in an unlocked state ready for use.",210,{"inputs":[{"name":"staticmutex"}],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",210,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",210,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates resources associated with this static mutex.",210,null],[11,"deref","","",211,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",211,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"drop","","",211,null],[11,"new","std::sync::once","Creates a new `Once` value.",212,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",212,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock<T>` which is unlocked.",213,{"inputs":[{"name":"rwlock"},{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",213,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",213,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",213,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",213,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",213,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",213,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",213,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"drop","","",213,null],[11,"fmt","","",213,{"inputs":[{"name":"rwlock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new rwlock.",214,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",214,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this lock with shared read access.",214,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",214,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",214,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates all resources associated with this static lock.",214,null],[11,"deref","","",215,{"inputs":[{"name":"rwlockreadguard"}],"output":{"name":"t"}}],[11,"deref","","",216,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",216,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"drop","","",215,null],[11,"drop","","",216,null],[11,"new","std::sync::semaphore","Creates a new semaphore with the initial count specified.",217,{"inputs":[{"name":"semaphore"},{"name":"isize"}],"output":{"name":"semaphore"}}],[11,"acquire","","Acquires a resource of this semaphore, blocking the current thread until\nit can do so.",217,null],[11,"release","","Release a resource from this semaphore.",217,null],[11,"access","","Acquires a resource of this semaphore, returning an RAII guard to\nrelease the semaphore when dropped.",217,{"inputs":[{"name":"semaphore"}],"output":{"name":"semaphoreguard"}}],[11,"drop","","",218,null],[11,"default","core::sync::atomic","",219,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",220,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",221,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",222,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",223,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",219,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",219,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",219,null],[11,"swap","","Stores a value into the bool, returning the old value.",219,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",219,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",219,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",219,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",219,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",219,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",220,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",220,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",220,null],[11,"swap","","Stores a value into the isize, returning the old value.",220,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",220,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",220,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",220,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",220,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",220,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",220,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",221,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",221,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",221,null],[11,"swap","","Stores a value into the usize, returning the old value.",221,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",221,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",221,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",221,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",221,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",221,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",221,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",222,null],[11,"load","","Loads a value from the pointer.",222,null],[11,"store","","Stores a value into the pointer.",222,null],[11,"swap","","Stores a value into the pointer, returning the old value.",222,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",222,null],[11,"fmt","","",221,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",220,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",219,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",222,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::time::duration","",224,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",224,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",224,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",224,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",224,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",224,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",224,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",224,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",224,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",224,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",224,{"inputs":[{"name":"duration"},{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",224,{"inputs":[{"name":"duration"},{"name":"f"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",224,{"inputs":[{"name":"duration"},{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",224,{"inputs":[{"name":"duration"},{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",224,{"inputs":[{"name":"duration"}],"output":{"name":"u64"}}],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",224,{"inputs":[{"name":"duration"}],"output":{"name":"u32"}}],[11,"add","","",224,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",224,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",224,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"div","","",224,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"new","std::sys_common::condvar","Creates a new condition variable for use.",225,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","Signals one waiter on this condition variable to wake up.",225,null],[11,"notify_all","","Awakens all current waiters on this condition variable.",225,null],[11,"wait","","Waits for a signal on the specified mutex.",225,null],[11,"wait_timeout","","Waits for a signal on the specified mutex with a timeout duration\nspecified by `dur` (a relative time into the future).",225,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","Deallocates all resources associated with this condition variable.",225,null],[11,"clone","std::sys_common::dwarf::eh","",226,{"inputs":[{"name":"ehcontext"}],"output":{"name":"ehcontext"}}],[11,"new","std::sys_common::dwarf","",227,null],[11,"read","","",227,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"t"}}],[11,"read_uleb128","","",227,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"u64"}}],[11,"read_sleb128","","",227,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"i64"}}],[11,"clone","std::sys_common::libunwind","",228,{"inputs":[{"name":"_unwind_action"}],"output":{"name":"_unwind_action"}}],[11,"clone","","",229,{"inputs":[{"name":"_unwind_reason_code"}],"output":{"name":"_unwind_reason_code"}}],[11,"new","std::sys_common::mutex","Creates a new mutex for use.",230,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","Locks the mutex blocking the current thread until it is available.",230,null],[11,"try_lock","","Attempts to lock the mutex without blocking, returning whether it was\nsuccessfully acquired or not.",230,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"unlock","","Unlocks the mutex.",230,null],[11,"destroy","","Deallocates all resources associated with this mutex.",230,null],[11,"next","std::sys_common::net","",231,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"drop","","",231,null],[11,"connect","","",232,{"inputs":[{"name":"tcpstream"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",232,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"into_socket","","",232,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"set_read_timeout","","",232,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",232,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",232,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","",232,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",232,null],[11,"write","","",232,null],[11,"peer_addr","","",232,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"socket_addr","","",232,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","",232,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"duplicate","","",232,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",232,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",233,{"inputs":[{"name":"tcplistener"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",233,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"into_socket","","",233,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"socket_addr","","",233,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","",233,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"duplicate","","",233,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"fmt","","",233,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",234,{"inputs":[{"name":"udpsocket"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",234,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"into_socket","","",234,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"socket_addr","","",234,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"recv_from","","",234,null],[11,"send_to","","",234,null],[11,"duplicate","","",234,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","",234,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",234,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",234,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","",234,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",234,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys_common::poison","",235,{"inputs":[{"name":"flag"}],"output":{"name":"flag"}}],[11,"borrow","","",235,{"inputs":[{"name":"flag"}],"output":{"name":"result"}}],[11,"done","","",235,null],[11,"get","","",235,{"inputs":[{"name":"flag"}],"output":{"name":"bool"}}],[11,"fmt","","",236,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",236,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",236,{"inputs":[{"name":"poisonerror"}],"output":{"name":"str"}}],[11,"new","","Creates a `PoisonError`.",236,{"inputs":[{"name":"poisonerror"},{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",236,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",236,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",236,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"from","","",237,{"inputs":[{"name":"trylockerror"},{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",237,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",237,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",237,{"inputs":[{"name":"trylockerror"}],"output":{"name":"str"}}],[11,"cause","","",237,{"inputs":[{"name":"trylockerror"}],"output":{"name":"option"}}],[11,"new","std::sys_common::remutex","Creates a new reentrant mutex in an unlocked state.",238,{"inputs":[{"name":"reentrantmutex"},{"name":"t"}],"output":{"name":"reentrantmutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",238,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",238,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"drop","","",238,null],[11,"fmt","","",238,{"inputs":[{"name":"reentrantmutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",239,{"inputs":[{"name":"reentrantmutexguard"}],"output":{"name":"t"}}],[11,"drop","","",239,null],[11,"new","std::sys_common::rwlock","Creates a new reader-writer lock for use.",240,{"inputs":[{"name":"rwlock"}],"output":{"name":"rwlock"}}],[11,"read","","Acquires shared access to the underlying lock, blocking the current\nthread to do so.",240,null],[11,"try_read","","Attempts to acquire shared access to this lock, returning whether it\nsucceeded or not.",240,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","Acquires write access to the underlying lock, blocking the current thread\nto do so.",240,null],[11,"try_write","","Attempts to acquire exclusive access to this lock, returning whether it\nsucceeded or not.",240,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","Unlocks previously acquired shared access to this lock.",240,null],[11,"write_unlock","","Unlocks previously acquired exclusive access to this lock.",240,null],[11,"destroy","","Destroys OS-related resources with this RWLock.",240,null],[11,"new","std::sys_common::thread_local","",241,{"inputs":[{"name":"statickey"},{"name":"option"}],"output":{"name":"statickey"}}],[11,"get","","Gets the value associated with this TLS key",241,null],[11,"set","","Sets this TLS key to a new value.",241,null],[11,"destroy","","Deallocates this OS TLS key.",241,null],[11,"new","","Creates a new managed OS TLS key.",242,{"inputs":[{"name":"key"},{"name":"option"}],"output":{"name":"key"}}],[11,"get","","See StaticKey::get",242,null],[11,"set","","See StaticKey::set",242,null],[11,"drop","","",242,null],[11,"clone","std::sys_common::wtf8","",243,{"inputs":[{"name":"codepoint"}],"output":{"name":"codepoint"}}],[11,"partial_cmp","","",243,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"option"}}],[11,"lt","","",243,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"le","","",243,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"gt","","",243,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ge","","",243,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"cmp","","",243,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"ordering"}}],[11,"eq","","",243,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ne","","",243,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"fmt","","",243,{"inputs":[{"name":"codepoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u32_unchecked","","Unsafely creates a new `CodePoint` without checking the value.",243,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"codepoint"}}],[11,"from_u32","","Creates a new `CodePoint` if the value is a valid code point.",243,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_char","","Creates a new `CodePoint` from a `char`.",243,{"inputs":[{"name":"codepoint"},{"name":"char"}],"output":{"name":"codepoint"}}],[11,"to_u32","","Returns the numeric value of the code point.",243,{"inputs":[{"name":"codepoint"}],"output":{"name":"u32"}}],[11,"to_char","","Optionally returns a Unicode scalar value for the code point.",243,{"inputs":[{"name":"codepoint"}],"output":{"name":"option"}}],[11,"to_char_lossy","","Returns a Unicode scalar value for the code point.",243,{"inputs":[{"name":"codepoint"}],"output":{"name":"char"}}],[11,"clone","","",244,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"partial_cmp","","",244,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"option"}}],[11,"lt","","",244,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"le","","",244,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"gt","","",244,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ge","","",244,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"cmp","","",244,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"ordering"}}],[11,"eq","","",244,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ne","","",244,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"from_str","","Creates a WTF-8 slice from a UTF-8 `&str` slice.",245,{"inputs":[{"name":"wtf8"},{"name":"str"}],"output":{"name":"wtf8"}}],[11,"len","","Returns the length, in WTF-8 bytes.",245,{"inputs":[{"name":"wtf8"}],"output":{"name":"usize"}}],[11,"ascii_byte_at","","Returns the code point at `position` if it is in the ASCII range,\nor `b'\\xFF' otherwise.",245,{"inputs":[{"name":"wtf8"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"code_points","","Returns an iterator for the string’s code points.",245,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8codepoints"}}],[11,"as_str","","Tries to convert the string to UTF-8 and return a `&str` slice.",245,{"inputs":[{"name":"wtf8"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Lossily converts the string to UTF-8.\nReturns a UTF-8 `&str` slice if the contents are well-formed in UTF-8.",245,{"inputs":[{"name":"wtf8"}],"output":{"name":"cow"}}],[11,"encode_wide","","Converts the WTF-8 string to potentially ill-formed UTF-16\nand return an iterator of 16-bit code units.",245,{"inputs":[{"name":"wtf8"}],"output":{"name":"encodewide"}}],[11,"deref","","",244,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"fmt","","",244,{"inputs":[{"name":"wtf8buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new, empty WTF-8 string.",244,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"with_capacity","","Creates a new, empty WTF-8 string with pre-allocated capacity for `n` bytes.",244,{"inputs":[{"name":"wtf8buf"},{"name":"usize"}],"output":{"name":"wtf8buf"}}],[11,"from_string","","Creates a WTF-8 string from a UTF-8 `String`.",244,{"inputs":[{"name":"wtf8buf"},{"name":"string"}],"output":{"name":"wtf8buf"}}],[11,"from_str","","Creates a WTF-8 string from a UTF-8 `&str` slice.",244,{"inputs":[{"name":"wtf8buf"},{"name":"str"}],"output":{"name":"wtf8buf"}}],[11,"from_wide","","Creates a WTF-8 string from a potentially ill-formed UTF-16 slice of 16-bit code units.",244,null],[11,"as_slice","","",244,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `Wtf8Buf`.\nThe collection may reserve more space to avoid frequent reallocations.",244,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without reallocating.",244,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"usize"}}],[11,"push_str","","Append a UTF-8 slice at the end of the string.",244,null],[11,"push_wtf8","","Append a WTF-8 slice at the end of the string.",244,null],[11,"push_char","","Append a Unicode scalar value at the end of the string.",244,null],[11,"push","","Append a code point at the end of the string.",244,null],[11,"truncate","","Shortens a string to the specified length.",244,null],[11,"into_string","","Consumes the WTF-8 string and tries to convert it to UTF-8.",244,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"result"}}],[11,"into_string_lossy","","Consumes the WTF-8 string and converts it lossily to UTF-8.",244,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"string"}}],[11,"from_iter","","",244,{"inputs":[{"name":"wtf8buf"},{"name":"t"}],"output":{"name":"wtf8buf"}}],[11,"extend","","",244,null],[11,"partial_cmp","","",245,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"option"}}],[11,"lt","","",245,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"le","","",245,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"gt","","",245,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ge","","",245,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"eq","","",245,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ne","","",245,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"cmp","","",245,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"ordering"}}],[11,"fmt","","",245,{"inputs":[{"name":"wtf8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",245,{"inputs":[{"name":"wtf8"},{"name":"range"}],"output":{"name":"wtf8"}}],[11,"index","","",245,{"inputs":[{"name":"wtf8"},{"name":"rangefrom"}],"output":{"name":"wtf8"}}],[11,"index","","",245,{"inputs":[{"name":"wtf8"},{"name":"rangeto"}],"output":{"name":"wtf8"}}],[11,"index","","",245,{"inputs":[{"name":"wtf8"},{"name":"rangefull"}],"output":{"name":"wtf8"}}],[11,"clone","","",246,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"wtf8codepoints"}}],[11,"next","","",246,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"option"}}],[11,"size_hint","","",246,null],[11,"clone","","",247,{"inputs":[{"name":"encodewide"}],"output":{"name":"encodewide"}}],[11,"next","","",247,{"inputs":[{"name":"encodewide"}],"output":{"name":"option"}}],[11,"size_hint","","",247,null],[11,"hash","","",243,null],[11,"hash","","",244,null],[11,"hash","","",245,null],[11,"is_ascii","","",245,{"inputs":[{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"to_ascii_uppercase","","",245,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"to_ascii_lowercase","","",245,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"eq_ignore_ascii_case","","",245,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"make_ascii_uppercase","","",245,null],[11,"make_ascii_lowercase","","",245,null],[11,"new","std::sys::condvar","",248,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","",248,null],[11,"notify_all","","",248,null],[11,"wait","","",248,null],[11,"wait_timeout","","",248,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","",248,null],[11,"new","std::sys::fd","",249,{"inputs":[{"name":"filedesc"},{"name":"i32"}],"output":{"name":"filedesc"}}],[11,"raw","","",249,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"into_raw","","Extracts the actual filedescriptor without closing it.",249,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"read","","",249,null],[11,"write","","",249,null],[11,"set_cloexec","","",249,null],[11,"drop","","",249,null],[11,"clone","std::sys::fs","",250,{"inputs":[{"name":"fileattr"}],"output":{"name":"fileattr"}}],[11,"clone","","",251,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",252,{"inputs":[{"name":"filepermissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",252,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"ne","","",252,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"clone","","",252,{"inputs":[{"name":"filepermissions"}],"output":{"name":"filepermissions"}}],[11,"hash","","",253,null],[11,"eq","","",253,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",253,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",253,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"size","","",250,{"inputs":[{"name":"fileattr"}],"output":{"name":"u64"}}],[11,"perm","","",250,{"inputs":[{"name":"fileattr"}],"output":{"name":"filepermissions"}}],[11,"file_type","","",250,{"inputs":[{"name":"fileattr"}],"output":{"name":"filetype"}}],[11,"as_raw_stat","std::fs","",108,{"inputs":[{"name":"metadata"}],"output":{"name":"stat"}}],[11,"readonly","std::sys::fs","",252,{"inputs":[{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","",252,null],[11,"mode","","",252,{"inputs":[{"name":"filepermissions"}],"output":{"name":"u32"}}],[11,"is_dir","","",253,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","",253,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","",253,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is","","",253,{"inputs":[{"name":"filetype"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"next","","",254,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"drop","","",255,null],[11,"path","","",256,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"file_name","","",256,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"metadata","","",256,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","",256,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"ino","","",256,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"new","","",251,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","",251,null],[11,"write","","",251,null],[11,"append","","",251,null],[11,"truncate","","",251,null],[11,"create","","",251,null],[11,"mode","","",251,null],[11,"open","","",257,{"inputs":[{"name":"file"},{"name":"path"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"open_c","","",257,{"inputs":[{"name":"file"},{"name":"cstr"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"file_attr","","",257,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fsync","","",257,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"datasync","","",257,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"truncate","","",257,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read","","",257,null],[11,"write","","",257,null],[11,"flush","","",257,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",257,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fd","","",257,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",257,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"new","","",258,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"mkdir","","",258,{"inputs":[{"name":"dirbuilder"},{"name":"path"}],"output":{"name":"result"}}],[11,"set_mode","","",258,null],[11,"fmt","","",257,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys::mutex","",259,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","",259,null],[11,"unlock","","",259,null],[11,"try_lock","","",259,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"destroy","","",259,null],[11,"uninitialized","","",260,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"reentrantmutex"}}],[11,"init","","",260,null],[11,"lock","","",260,null],[11,"try_lock","","",260,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"bool"}}],[11,"unlock","","",260,null],[11,"destroy","","",260,null],[11,"new","std::sys::net","",261,{"inputs":[{"name":"socket"},{"name":"socketaddr"},{"name":"i32"}],"output":{"name":"result"}}],[11,"accept","","",261,null],[11,"duplicate","","",261,{"inputs":[{"name":"socket"}],"output":{"name":"result"}}],[11,"read","","",261,null],[11,"set_timeout","","",261,{"inputs":[{"name":"socket"},{"name":"option"},{"name":"i32"}],"output":{"name":"result"}}],[11,"timeout","","",261,{"inputs":[{"name":"socket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"next","std::sys::os","",262,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",262,null],[11,"fmt","","",263,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",263,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",263,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",264,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",264,null],[11,"len","","",264,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",265,{"inputs":[{"name":"env"}],"output":{"name":"option"}}],[11,"size_hint","","",265,null],[11,"hash","std::sys::os_str","",266,null],[11,"clone","","",266,{"inputs":[{"name":"buf"}],"output":{"name":"buf"}}],[11,"fmt","","",267,{"inputs":[{"name":"slice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",266,{"inputs":[{"name":"buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_string","","",266,{"inputs":[{"name":"buf"},{"name":"string"}],"output":{"name":"buf"}}],[11,"as_slice","","",266,{"inputs":[{"name":"buf"}],"output":{"name":"slice"}}],[11,"into_string","","",266,{"inputs":[{"name":"buf"}],"output":{"name":"result"}}],[11,"push_slice","","",266,null],[11,"from_str","","",267,{"inputs":[{"name":"slice"},{"name":"str"}],"output":{"name":"slice"}}],[11,"to_str","","",267,{"inputs":[{"name":"slice"}],"output":{"name":"option"}}],[11,"to_string_lossy","","",267,{"inputs":[{"name":"slice"}],"output":{"name":"cow"}}],[11,"to_owned","","",267,{"inputs":[{"name":"slice"}],"output":{"name":"buf"}}],[11,"from_fd","std::sys::pipe","",268,{"inputs":[{"name":"anonpipe"},{"name":"i32"}],"output":{"name":"anonpipe"}}],[11,"read","","",268,null],[11,"write","","",268,null],[11,"raw","","",268,{"inputs":[{"name":"anonpipe"}],"output":{"name":"i32"}}],[11,"fd","","",268,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",268,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"clone","std::sys::process","",269,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"new","","",269,{"inputs":[{"name":"command"},{"name":"osstr"}],"output":{"name":"command"}}],[11,"arg","","",269,null],[11,"args","","",269,null],[11,"env","","",269,null],[11,"env_remove","","",269,null],[11,"env_clear","","",269,null],[11,"cwd","","",269,null],[11,"fmt","","",270,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",270,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",270,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",270,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","",270,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","",270,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",270,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","",271,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"spawn","","",271,{"inputs":[{"name":"process"},{"name":"command"},{"name":"stdio"},{"name":"stdio"},{"name":"stdio"}],"output":{"name":"result"}}],[11,"id","","",271,{"inputs":[{"name":"process"}],"output":{"name":"u32"}}],[11,"wait","","",271,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"try_wait","","",271,{"inputs":[{"name":"process"}],"output":{"name":"option"}}],[11,"new","std::sys::rwlock","",272,{"inputs":[{"name":"rwlock"}],"output":{"name":"rwlock"}}],[11,"read","","",272,null],[11,"try_read","","",272,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","",272,null],[11,"try_write","","",272,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","",272,null],[11,"write_unlock","","",272,null],[11,"destroy","","",272,null],[11,"new","std::sys::stack_overflow","",273,{"inputs":[{"name":"handler"}],"output":{"name":"handler"}}],[11,"drop","","",273,null],[11,"new","std::sys::thread","",274,{"inputs":[{"name":"thread"},{"name":"usize"},{"name":"box"}],"output":{"name":"result"}}],[11,"yield_now","","",274,null],[11,"set_name","","",274,null],[11,"sleep","","",274,null],[11,"join","","",274,null],[11,"drop","","",274,null],[11,"now","std::sys::time::inner","",275,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"new","std::sys::stdio","",276,{"inputs":[{"name":"stdin"}],"output":{"name":"result"}}],[11,"read","","",276,null],[11,"new","","",277,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write","","",277,null],[11,"new","","",278,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write","","",278,null],[11,"write","","",278,null],[11,"flush","","",278,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"new","std::rand::os::imp","Create a new `OsRng`.",279,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",279,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",279,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",279,null],[11,"new","std::rand::reader","Create a new `ReaderRng` from a `Read`.",280,{"inputs":[{"name":"readerrng"},{"name":"r"}],"output":{"name":"readerrng"}}],[11,"next_u32","","",280,{"inputs":[{"name":"readerrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",280,{"inputs":[{"name":"readerrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",280,null],[11,"clone","std::rand","",281,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",281,{"inputs":[{"name":"stdrng"}],"output":{"name":"result"}}],[11,"next_u32","","",281,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",281,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",281,null],[11,"from_seed","","",281,null],[11,"reseed","","",282,null],[11,"clone","","",283,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",283,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",283,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",283,null],[11,"new","alloc::rc","Constructs a new `Rc<T>`.",284,{"inputs":[{"name":"rc"},{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc<T>` has only one strong reference.\nThis will succeed even if there are outstanding weak references.",284,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",284,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Downgrades the `Rc<T>` to a `Weak<T>` reference.",284,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",284,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",284,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak<T>` values that share\nthe same inner value.",284,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc<T>` has\none strong reference and no weak references.",284,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"make_unique","","",284,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"make_mut","","Make a mutable reference into the given `Rc<T>` by cloning the inner\ndata if the `Rc<T>` doesn't have one strong reference and no weak\nreferences.",284,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",284,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Rc<T>`.",284,null],[11,"clone","","Makes a clone of the `Rc<T>`.",284,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"default","","Creates a new `Rc<T>`, with the `Default` value for `T`.",284,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc<T>`s.",284,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Rc<T>`s.",284,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Rc<T>`s.",284,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Rc<T>`s.",284,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"le","","'Less-than or equal to' comparison for two `Rc<T>`s.",284,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Rc<T>`s.",284,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ge","","'Greater-than or equal to' comparison for two `Rc<T>`s.",284,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"cmp","","Comparison for two `Rc<T>`s.",284,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"ordering"}}],[11,"hash","","",284,null],[11,"fmt","","",284,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",284,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",284,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",285,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Weak<T>`.",285,null],[11,"clone","","Makes a clone of the `Weak<T>`.",285,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"fmt","","",285,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",284,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"as_ref","","",284,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"fmt","core::cmp","",286,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",286,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",286,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",286,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",286,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",286,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",286,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"hash","core::marker","",287,null],[11,"eq","","",287,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",287,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",287,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",287,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"fmt","core::simd","",288,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",288,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",289,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",289,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",290,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",290,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",291,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",291,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",292,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",292,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",293,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",293,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",294,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",294,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",295,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",295,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",296,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",296,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",297,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",297,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"add","","",292,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"add","","",293,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"add","","",294,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"add","","",295,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"add","","",288,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"add","","",289,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"add","","",290,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"add","","",291,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"add","","",296,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"add","","",297,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"sub","","",292,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"sub","","",293,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"sub","","",294,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"sub","","",295,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"sub","","",288,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"sub","","",289,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"sub","","",290,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"sub","","",291,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"sub","","",296,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"sub","","",297,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"mul","","",292,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"mul","","",293,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"mul","","",294,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"mul","","",295,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"mul","","",288,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"mul","","",289,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"mul","","",290,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"mul","","",291,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"mul","","",296,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"mul","","",297,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"div","","",296,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"div","","",297,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"shl","","",292,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shl","","",293,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shl","","",294,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shl","","",295,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shl","","",288,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shl","","",289,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shl","","",290,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shl","","",291,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"shr","","",292,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shr","","",293,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shr","","",294,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shr","","",295,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shr","","",288,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shr","","",289,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shr","","",290,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shr","","",291,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitand","","",292,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitand","","",293,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitand","","",294,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitand","","",295,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitand","","",288,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitand","","",289,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitand","","",290,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitand","","",291,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitor","","",292,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitor","","",293,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitor","","",294,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitor","","",295,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitor","","",288,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitor","","",289,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitor","","",290,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitor","","",291,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitxor","","",292,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitxor","","",293,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitxor","","",294,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitxor","","",295,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitxor","","",288,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitxor","","",289,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitxor","","",290,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitxor","","",291,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"next","rustc_unicode::char","",298,{"inputs":[{"name":"tolowercase"}],"output":{"name":"option"}}],[11,"next","","",299,{"inputs":[{"name":"touppercase"}],"output":{"name":"option"}}],[11,"next","","",300,{"inputs":[{"name":"casemappingiter"}],"output":{"name":"option"}}],[11,"clone","","",301,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"decodeutf16"}}],[11,"next","","",301,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"option"}}],[11,"size_hint","","",301,null],[11,"borrow","collections::vec","",86,null],[11,"borrow_mut","","",86,null],[11,"eq","core::ops","",302,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",302,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",302,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",302,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",303,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",303,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",303,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",303,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",304,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",304,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",304,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",304,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",305,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",305,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",305,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",305,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::result","",306,null],[11,"fmt","","",306,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",306,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",306,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",306,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",306,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",306,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",306,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",306,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",306,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",306,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",306,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",306,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",306,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",306,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",306,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",306,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",306,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",306,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",306,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",306,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",306,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",306,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",306,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",306,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",306,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",306,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",306,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",306,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",306,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",306,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",306,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",306,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",307,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",307,null],[11,"next_back","","",307,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",307,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",308,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",308,null],[11,"next_back","","",308,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",309,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",309,null],[11,"next_back","","",309,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",306,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",310,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",310,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",310,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",310,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",310,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",310,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",310,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",311,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",311,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",311,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",311,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",312,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",312,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",312,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",312,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",312,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",312,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",312,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",312,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",312,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",313,null],[11,"clone","","",313,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",314,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",314,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",314,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",314,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",315,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",315,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",316,null],[11,"deref","","",315,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",315,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",317,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",317,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",317,null],[11,"clone","collections::str","",318,{"inputs":[{"name":"utf16units"}],"output":{"name":"utf16units"}}],[11,"next","","",318,{"inputs":[{"name":"utf16units"}],"output":{"name":"option"}}],[11,"size_hint","","",318,null],[11,"borrow","collections::string","",107,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"fmt","core::str::pattern","",319,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",319,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",319,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",319,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",320,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",321,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",320,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",320,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",320,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",322,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",322,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",322,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",322,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",322,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",322,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",322,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",322,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",323,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",323,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",323,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",323,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",323,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",323,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",323,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",323,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",324,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",324,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",324,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",324,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",324,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",324,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",324,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",324,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",325,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",325,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",326,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",326,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",327,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",327,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",325,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",325,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",325,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",325,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",325,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",328,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",328,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",329,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",329,null],[11,"matching","","",329,null],[11,"use_early_reject","","",330,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",330,null],[11,"matching","","",330,null],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",331,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",331,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",331,null],[11,"finish","","",331,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",331,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",331,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"borrow","collections::borrow","",332,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"clone","","",332,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",332,null],[11,"into_owned","","Extracts the owned data.",332,null],[11,"deref","","",332,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"cmp","","",332,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"ordering"}}],[11,"eq","","",332,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",332,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","","",332,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",332,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",332,null],[11,"into_cow","","",332,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"as_ref","","",332,{"inputs":[{"name":"cow"}],"output":{"name":"t"}}],[11,"new","collections::vec","Constructs a new, empty `Vec<T>`.",86,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec<T>` with the specified capacity.",86,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec<T>` directly from the raw components of another vector.",86,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",86,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec<T>`. The collection may reserve more space to avoid\nfrequent reallocations.",86,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec<T>`. Does nothing if the capacity is already\nsufficient.",86,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",86,null],[11,"into_boxed_slice","","Converts the vector into Box<[T]>.",86,{"inputs":[{"name":"vec"}],"output":{"name":"box"}}],[11,"truncate","","Shorten a vector, dropping excess elements.",86,null],[11,"as_slice","","Extracts a slice containing the entire vector.",86,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",86,null],[11,"set_len","","Sets the length of a vector.",86,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",86,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after position `i` one position to the right.",86,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after position `index` one position to the left.",86,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"retain","","Retains only the elements specified by the predicate.",86,null],[11,"push","","Appends an element to the back of a collection.",86,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",86,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",86,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",86,{"inputs":[{"name":"vec"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the vector, removing all values.",86,null],[11,"len","","Returns the number of elements in the vector.",86,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector contains no elements.",86,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"split_off","","Splits the collection into two at the given index.",86,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",86,null],[11,"push_all","","Appends all elements in a slice to the `Vec`.",86,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",86,null],[11,"clone","","",86,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"clone_from","","",86,null],[11,"hash","","",86,null],[11,"index","","",86,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",86,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index","","",86,null],[11,"index","","",86,null],[11,"index","","",86,null],[11,"index","","",86,null],[11,"index_mut","","",86,null],[11,"index_mut","","",86,null],[11,"index_mut","","",86,null],[11,"index_mut","","",86,null],[11,"deref","","",86,null],[11,"deref_mut","","",86,null],[11,"from_iter","","",86,{"inputs":[{"name":"vec"},{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",86,{"inputs":[{"name":"vec"}],"output":{"name":"intoiter"}}],[11,"extend","","",86,null],[11,"extend","","",86,null],[11,"eq","","",86,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","collections::borrow","",332,null],[11,"ne","","",332,null],[11,"eq","","",332,null],[11,"ne","","",332,null],[11,"eq","","",332,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",332,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","collections::vec","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"partial_cmp","","",86,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"option"}}],[11,"cmp","","",86,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"ordering"}}],[11,"drop","","",86,null],[11,"default","","",86,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"fmt","","",86,{"inputs":[{"name":"vec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",86,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_mut","","",86,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_ref","","",86,null],[11,"as_mut","","",86,null],[11,"from","","",86,null],[11,"from","","",86,{"inputs":[{"name":"vec"},{"name":"str"}],"output":{"name":"vec"}}],[11,"from_iter","collections::borrow","",332,{"inputs":[{"name":"cow"},{"name":"i"}],"output":{"name":"cow"}}],[11,"into_cow","collections::vec","",86,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"next","","",333,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",333,null],[11,"count","","",333,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next_back","","",333,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",333,null],[11,"next","","",334,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",334,null],[11,"next_back","","",334,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","","",334,null],[11,"clone","core::iter","",335,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",335,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",335,null],[11,"next_back","","",335,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",336,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",336,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",336,null],[11,"next_back","","",336,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",337,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",337,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",337,null],[11,"clone","","",338,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"clone","","",339,{"inputs":[{"name":"chainstate"}],"output":{"name":"chainstate"}}],[11,"next","","",338,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",338,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",338,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",338,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",338,null],[11,"next_back","","",338,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",340,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",340,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",340,null],[11,"next_back","","",340,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",341,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",341,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",341,null],[11,"next_back","","",341,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",342,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",342,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",342,null],[11,"next_back","","",342,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",343,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",343,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",343,null],[11,"next_back","","",343,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",344,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",344,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",344,null],[11,"nth","","",344,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",344,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",344,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",345,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",345,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",345,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",345,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",345,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",345,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",345,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",345,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",346,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",346,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",346,null],[11,"clone","","",347,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",347,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",347,null],[11,"clone","","",348,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",348,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",348,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",348,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",348,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",348,null],[11,"clone","","",349,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",349,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",349,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",349,null],[11,"clone","","",350,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",350,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",350,null],[11,"clone","","",351,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",351,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",351,null],[11,"next_back","","",351,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",352,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",352,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",352,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",352,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",352,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",352,null],[11,"next_back","","",352,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",353,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",353,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",353,null],[11,"next_back","","",353,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",354,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",304,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",303,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",354,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",354,null],[11,"clone","","",355,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",355,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",355,null],[11,"next_back","","",355,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",354,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",354,null],[11,"next","core::ops","",303,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",303,null],[11,"next_back","","",303,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",304,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",356,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",356,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",356,null],[11,"next_back","","",356,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",357,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",357,null],[11,"next_back","","",357,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",357,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",357,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",357,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",358,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",358,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",358,null],[11,"next_back","","",358,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",358,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"cmp","collections::string","",107,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",107,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"option"}}],[11,"lt","","",107,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"le","","",107,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"gt","","",107,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ge","","",107,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"fmt","","",28,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new string buffer initialized with the empty string.",107,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new string buffer with the given capacity.\nThe string will be able to hold exactly `capacity` bytes without\nreallocating. If `capacity` is 0, the string will not allocate.",107,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",107,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a `String`, including invalid characters.",107,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `None`\nif `v` contains any invalid data.",107,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",107,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",107,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",107,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Returns the underlying byte buffer, encoded as UTF-8.",107,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"as_str","","Extracts a string slice containing the entire string.",107,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"push_str","","Pushes the given string onto this string buffer.",107,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without\nreallocating.",107,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `String`. The collection may reserve more space to avoid\nfrequent reallocations.",107,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bytes to be\ninserted in the given `String`. Does nothing if the capacity is already\nsufficient.",107,null],[11,"shrink_to_fit","","Shrinks the capacity of this string buffer to match its length.",107,null],[11,"push","","Adds the given character to the end of the string.",107,null],[11,"as_bytes","","Works with the underlying buffer as a byte slice.",107,null],[11,"truncate","","Shortens a string to the specified length.",107,null],[11,"pop","","Removes the last character from the string buffer and returns it.\nReturns `None` if this string buffer is empty.",107,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"remove","","Removes the character from the string buffer at byte position `idx` and\nreturns it.",107,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"char"}}],[11,"insert","","Inserts a character into the string buffer at byte position `idx`.",107,null],[11,"as_mut_vec","","Views the string buffer as a mutable sequence of bytes.",107,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"len","","Returns the number of bytes in this string.",107,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the string contains no bytes",107,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"clear","","Truncates the string, returning it to 0 length.",107,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",107,{"inputs":[{"name":"string"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_boxed_str","","Converts the string into `Box<str>`.",107,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_boxed_slice","","Converts the string into `Box<str>`.",107,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_bytes","","Consumes this error, returning the bytes that were attempted to make a\n`String` with.",28,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"vec"}}],[11,"utf8_error","","Access the underlying UTF8-error that was the cause of this error.",28,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"utf8error"}}],[11,"fmt","","",28,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",107,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"clone_from","","",107,null],[11,"from_iter","","",107,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",107,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",107,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",107,null],[11,"extend","","",107,null],[11,"extend","","",107,null],[11,"extend","","",107,null],[11,"eq","","",107,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",107,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",107,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",107,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",107,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",107,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",332,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",332,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",332,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",332,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",107,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"ne","","",107,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",332,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",332,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"default","collections::string","",107,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",107,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",107,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",107,null],[11,"add","","",107,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"index","","",107,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index","","",107,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index","","",107,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index","","",107,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"index_mut","","",107,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index_mut","","",107,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index_mut","","",107,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index_mut","","",107,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"deref","","",107,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"deref_mut","","",107,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"from_str","","",107,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",359,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"fmt","","",359,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",359,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"as_ref","","",107,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_ref","","",107,null],[11,"from","","",107,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",332,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",332,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",107,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"into_cow","","",107,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"write_str","","",107,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",107,{"inputs":[{"name":"string"},{"name":"char"}],"output":{"name":"result"}}],[11,"drop","","",360,null],[11,"next","","",360,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",360,null],[11,"next_back","","",360,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"fmt","glutin::api::egl::ffi::egl::__gl_imports","",361,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",361,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",361,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",361,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",361,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",361,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",361,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",361,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",362,null],[11,"fmt","","",362,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",362,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",362,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",362,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",362,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"hash","core::option","",363,null],[11,"fmt","","",363,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",363,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",363,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",363,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",363,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",363,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",363,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",363,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",363,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",363,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"is_some","","Returns `true` if the option is a `Some` value",363,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",363,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",363,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",363,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",363,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",363,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",363,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",363,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",363,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",363,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",363,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",363,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",363,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",363,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",363,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",363,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",363,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",363,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",363,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",363,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",363,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",363,null],[11,"cloned","","Maps an `Option<&T>` to an `Option<T>` by cloning the contents of the\noption.",363,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",363,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","","",363,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",363,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",364,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",364,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",364,null],[11,"next_back","","",364,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",365,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",365,null],[11,"next_back","","",365,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",365,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",366,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",366,null],[11,"next_back","","",366,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",367,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",367,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",367,null],[11,"next_back","","",367,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",363,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","alloc::boxed","",368,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"exchangeheapsingleton"}}],[11,"pointer","","",369,null],[11,"make_place","","",369,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"intermediatebox"}}],[11,"finalize","","",369,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"finalize","","",23,{"inputs":[{"name":"box"},{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",368,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"intermediatebox"}}],[11,"drop","","",369,null],[11,"new","","Allocates memory on the heap and then moves `x` into it.",23,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from the raw pointer.",23,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",23,null],[11,"default","","",23,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"default","","",23,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box's contents.",23,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`'s contents into `self` without creating a new allocation.",23,null],[11,"clone","","",23,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"eq","","",23,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",23,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",23,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",23,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",23,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",23,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",23,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",23,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",23,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",23,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"fmt","","",23,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",23,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",23,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",23,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",23,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"next","","",23,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",23,null],[11,"next_back","","",23,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"call_once","","",23,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"call_once","","",23,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"clone","","",23,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"borrow","","",23,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"borrow_mut","","",23,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_ref","","",23,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_mut","","",23,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",370,null],[11,"get","","Dereferences the content.",370,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",370,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",370,null],[11,"fmt","","",370,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",371,null],[11,"clone","","",371,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",371,null],[11,"fmt","","",371,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","core::raw","",372,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",373,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"clone","core::fmt::rt::v1","",374,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",375,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",376,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",376,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",376,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",377,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",378,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"default","core::num","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"fmt","","",32,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","core::num::flt2dec::decoder","",379,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"ne","","",379,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"fmt","","",379,{"inputs":[{"name":"decoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",379,{"inputs":[{"name":"decoded"}],"output":{"name":"decoded"}}],[11,"eq","","",380,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"ne","","",380,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"fmt","","",380,{"inputs":[{"name":"fulldecoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",380,{"inputs":[{"name":"fulldecoded"}],"output":{"name":"fulldecoded"}}],[11,"fmt","core::num::flt2dec","",381,{"inputs":[{"name":"part"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",381,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"ne","","",381,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"clone","","",381,{"inputs":[{"name":"part"}],"output":{"name":"part"}}],[11,"len","","Returns the exact byte length of given part.",381,{"inputs":[{"name":"part"}],"output":{"name":"usize"}}],[11,"write","","Writes a part into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",381,null],[11,"clone","","",382,{"inputs":[{"name":"formatted"}],"output":{"name":"formatted"}}],[11,"len","","Returns the exact byte length of combined formatted result.",382,{"inputs":[{"name":"formatted"}],"output":{"name":"usize"}}],[11,"write","","Writes all formatted parts into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",382,null],[11,"fmt","","",383,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",383,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",383,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",383,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","core::num::dec2flt::rawfp","",384,{"inputs":[{"name":"unpacked"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",384,{"inputs":[{"name":"unpacked"}],"output":{"name":"unpacked"}}],[11,"new","","",384,{"inputs":[{"name":"unpacked"},{"name":"u64"},{"name":"i16"}],"output":{"name":"unpacked"}}],[11,"fmt","core::num::dec2flt::parse","",385,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",386,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",386,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"fmt","","",386,{"inputs":[{"name":"decimal"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",386,null],[11,"eq","","",387,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"ne","","",387,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"fmt","","",387,{"inputs":[{"name":"parseresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::dec2flt","",27,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",27,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",388,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",388,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",388,{"inputs":[{"name":"floaterrorkind"}],"output":{"name":"floaterrorkind"}}],[11,"fmt","","",388,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",27,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::bignum","Makes a bignum from one digit.",389,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"from_u64","","Makes a bignum from `u64` value.",389,{"inputs":[{"name":"big32x40"},{"name":"u64"}],"output":{"name":"big32x40"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",389,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",389,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",389,{"inputs":[{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",389,{"inputs":[{"name":"big32x40"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",389,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"add_small","","",389,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",389,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",389,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",389,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",389,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",389,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",389,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",389,null],[11,"eq","","",389,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",389,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"option"}}],[11,"cmp","","",389,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"ordering"}}],[11,"clone","","",389,{"inputs":[{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"fmt","","",389,{"inputs":[{"name":"big32x40"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::bignum::tests","Makes a bignum from one digit.",390,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"from_u64","","Makes a bignum from `u64` value.",390,{"inputs":[{"name":"big8x3"},{"name":"u64"}],"output":{"name":"big8x3"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",390,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",390,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",390,{"inputs":[{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",390,{"inputs":[{"name":"big8x3"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",390,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"add_small","","",390,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",390,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",390,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",390,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",390,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",390,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",390,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",390,null],[11,"eq","","",390,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",390,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"option"}}],[11,"cmp","","",390,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"ordering"}}],[11,"clone","","",390,{"inputs":[{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"fmt","","",390,{"inputs":[{"name":"big8x3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::num::diy_float","",391,{"inputs":[{"name":"fp"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",391,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"mul","","Returns a correctly rounded product of itself and `other`.",391,{"inputs":[{"name":"fp"},{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize","","Normalizes itself so that the resulting mantissa is at least `2^63`.",391,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize_to","","Normalizes itself to have the shared exponent.\nIt can only decrease the exponent (and thus increase the mantissa).",391,{"inputs":[{"name":"fp"},{"name":"i16"}],"output":{"name":"fp"}}],[11,"fmt","core::num","",392,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",392,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",392,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",392,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",26,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",26,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",393,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",393,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",393,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",393,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",26,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",394,null],[11,"fmt","","",394,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",394,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",394,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",394,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",394,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",394,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",394,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",394,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",394,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",394,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually \"non-zero\".",394,{"inputs":[{"name":"nonzero"},{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",394,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"clone","core::char","",395,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",396,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",395,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"size_hint","","",395,null],[11,"clone","","",397,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",398,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",397,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",397,null],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",399,null],[11,"next","","",399,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",399,null],[11,"count","","",399,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",399,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",399,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",399,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",399,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",400,null],[11,"next","","",400,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",400,null],[11,"count","","",400,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",400,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",400,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",400,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",401,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",401,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",401,null],[11,"next_back","","",401,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",401,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",402,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",402,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",402,null],[11,"next_back","","",402,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",403,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",403,null],[11,"next","","",404,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",404,null],[11,"next","","",405,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",405,null],[11,"next","","",406,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",406,null],[11,"next","","",407,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",407,null],[11,"clone","","",408,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",408,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",408,null],[11,"count","","",408,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"nth","","",408,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",408,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"next_back","","",408,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"clone","","",409,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",409,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",409,null],[11,"count","","",409,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"nth","","",409,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",409,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next_back","","",409,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next","","",410,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",410,null],[11,"count","","",410,{"inputs":[{"name":"chunksmut"}],"output":{"name":"usize"}}],[11,"nth","","",410,{"inputs":[{"name":"chunksmut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",410,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"next_back","","",410,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"eq","core::str","",24,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",24,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",24,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",25,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",25,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",25,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",25,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",411,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",411,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",411,null],[11,"next_back","","",411,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",411,{"inputs":[{"name":"chars"}],"output":{"name":"str"}}],[11,"clone","","",412,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",412,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",412,null],[11,"next_back","","",412,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",412,{"inputs":[{"name":"charindices"}],"output":{"name":"str"}}],[11,"clone","","",413,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"next","","",413,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",413,null],[11,"count","","",413,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"last","","",413,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"nth","","",413,{"inputs":[{"name":"bytes"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next_back","","",413,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",413,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",414,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",415,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",415,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",416,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",416,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",415,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",416,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",417,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",417,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",418,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",418,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",417,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",418,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",419,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",420,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",420,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",421,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",421,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",422,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",423,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",423,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",424,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",424,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",423,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",424,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",425,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",426,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",426,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",427,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",427,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",426,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",427,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",428,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",428,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",428,null],[11,"next_back","","",428,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",429,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",430,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",430,null],[11,"call_mut","","",430,null],[11,"call_once","","",430,null],[11,"next","","",429,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",429,null],[11,"next_back","","",429,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",431,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"eq","core::fmt::num","",432,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",432,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",432,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",433,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",433,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",433,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",434,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",434,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",434,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",435,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",435,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",435,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",436,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",436,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",436,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",437,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",437,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",437,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",438,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",438,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",438,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",438,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",438,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",438,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",438,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",438,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",438,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",438,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",438,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",438,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",438,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",438,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",438,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",438,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",438,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",438,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",438,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",438,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",438,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",439,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",440,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Finishes output and returns any error encountered.",440,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",441,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Finishes output and returns any error encountered.",441,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"formatter","","Returns the wrapped `Formatter`.",441,{"inputs":[{"name":"debugtuple"}],"output":{"name":"formatter"}}],[11,"finish","","",442,null],[11,"entry","","Adds a new entry to the set output.",443,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"entries","","Adds the contents of an iterator of entries to the set output.",443,{"inputs":[{"name":"debugset"},{"name":"i"}],"output":{"name":"debugset"}}],[11,"finish","","Finishes output and returns any error encountered.",443,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the list output.",444,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"entries","","Adds the contents of an iterator of entries to the list output.",444,{"inputs":[{"name":"debuglist"},{"name":"i"}],"output":{"name":"debuglist"}}],[11,"finish","","Finishes output and returns any error encountered.",444,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",445,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"entries","","Adds the contents of an iterator of entries to the map output.",445,{"inputs":[{"name":"debugmap"},{"name":"i"}],"output":{"name":"debugmap"}}],[11,"finish","","Finishes output and returns any error encountered.",445,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"fmt","core::fmt","",446,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",446,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",447,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",448,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",449,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",449,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",449,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",450,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",450,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",450,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",450,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",450,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as 'fill' whenever there is alignment",450,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",450,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",450,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",450,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"sign_plus","","Determines if the `+` flag was specified.",450,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_minus","","Determines if the `-` flag was specified.",450,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"alternate","","Determines if the `#` flag was specified.",450,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",450,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",450,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",450,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",450,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",450,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",450,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"write_str","","",450,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",450,{"inputs":[{"name":"formatter"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","",450,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"fmt","","",446,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",287,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",310,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",312,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",314,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",315,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"detail","x11_dl::error","",451,{"inputs":[{"name":"openerror"}],"output":{"name":"str"}}],[11,"new","","",451,{"inputs":[{"name":"openerror"},{"name":"openerrorkind"},{"name":"string"}],"output":{"name":"openerror"}}],[11,"fmt","","",451,{"inputs":[{"name":"openerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",451,{"inputs":[{"name":"openerror"}],"output":{"name":"openerror"}}],[11,"fmt","","",451,{"inputs":[{"name":"openerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",451,{"inputs":[{"name":"openerror"}],"output":{"name":"str"}}],[11,"fmt","","",452,{"inputs":[{"name":"openerrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",452,{"inputs":[{"name":"openerrorkind"}],"output":{"name":"openerrorkind"}}],[11,"as_str","","",452,{"inputs":[{"name":"openerrorkind"}],"output":{"name":"str"}}],[11,"open","x11_dl::glx","",453,{"inputs":[{"name":"glx"}],"output":{"name":"result"}}],[11,"open","x11_dl::xcursor","",454,{"inputs":[{"name":"xcursor"}],"output":{"name":"result"}}],[11,"clone","","",455,{"inputs":[{"name":"_xcursoranimate"}],"output":{"name":"_xcursoranimate"}}],[11,"clone","","",456,{"inputs":[{"name":"_xcursorchunkheader"}],"output":{"name":"_xcursorchunkheader"}}],[11,"clone","","",457,{"inputs":[{"name":"_xcursorcomment"}],"output":{"name":"_xcursorcomment"}}],[11,"clone","","",458,{"inputs":[{"name":"_xcursorcomments"}],"output":{"name":"_xcursorcomments"}}],[11,"clone","","",459,{"inputs":[{"name":"_xcursorcursors"}],"output":{"name":"_xcursorcursors"}}],[11,"clone","","",460,{"inputs":[{"name":"_xcursorfile"}],"output":{"name":"_xcursorfile"}}],[11,"clone","","",461,{"inputs":[{"name":"_xcursorfileheader"}],"output":{"name":"_xcursorfileheader"}}],[11,"clone","","",462,{"inputs":[{"name":"_xcursorfiletoc"}],"output":{"name":"_xcursorfiletoc"}}],[11,"clone","","",463,{"inputs":[{"name":"_xcursorimage"}],"output":{"name":"_xcursorimage"}}],[11,"clone","","",464,{"inputs":[{"name":"_xcursorimages"}],"output":{"name":"_xcursorimages"}}],[11,"open","x11_dl::xf86vmode","",465,{"inputs":[{"name":"xf86vmode"}],"output":{"name":"result"}}],[11,"clone","","",466,{"inputs":[{"name":"xf86vidmodegamma"}],"output":{"name":"xf86vidmodegamma"}}],[11,"eq","","",467,{"inputs":[{"name":"xf86vidmodemodeinfo"},{"name":"xf86vidmodemodeinfo"}],"output":{"name":"bool"}}],[11,"ne","","",467,{"inputs":[{"name":"xf86vidmodemodeinfo"},{"name":"xf86vidmodemodeinfo"}],"output":{"name":"bool"}}],[11,"clone","","",467,{"inputs":[{"name":"xf86vidmodemodeinfo"}],"output":{"name":"xf86vidmodemodeinfo"}}],[11,"clone","","",468,{"inputs":[{"name":"xf86vidmodemodeline"}],"output":{"name":"xf86vidmodemodeline"}}],[11,"clone","","",469,{"inputs":[{"name":"xf86vidmodemonitor"}],"output":{"name":"xf86vidmodemonitor"}}],[11,"clone","","",470,{"inputs":[{"name":"xf86vidmodenotifyevent"}],"output":{"name":"xf86vidmodenotifyevent"}}],[11,"clone","","",471,{"inputs":[{"name":"xf86vidmodesyncrange"}],"output":{"name":"xf86vidmodesyncrange"}}],[11,"open","x11_dl::xinerama","",472,{"inputs":[{"name":"xlib"}],"output":{"name":"result"}}],[11,"eq","","",473,{"inputs":[{"name":"xineramascreeninfo"},{"name":"xineramascreeninfo"}],"output":{"name":"bool"}}],[11,"ne","","",473,{"inputs":[{"name":"xineramascreeninfo"},{"name":"xineramascreeninfo"}],"output":{"name":"bool"}}],[11,"clone","","",473,{"inputs":[{"name":"xineramascreeninfo"}],"output":{"name":"xineramascreeninfo"}}],[11,"eq","","",474,{"inputs":[{"name":"xpanoramixinfo"},{"name":"xpanoramixinfo"}],"output":{"name":"bool"}}],[11,"ne","","",474,{"inputs":[{"name":"xpanoramixinfo"},{"name":"xpanoramixinfo"}],"output":{"name":"bool"}}],[11,"clone","","",474,{"inputs":[{"name":"xpanoramixinfo"}],"output":{"name":"xpanoramixinfo"}}],[11,"open","x11_dl::xinput","",475,{"inputs":[{"name":"xinput"}],"output":{"name":"result"}}],[11,"eq","","",476,{"inputs":[{"name":"xdevice"},{"name":"xdevice"}],"output":{"name":"bool"}}],[11,"ne","","",476,{"inputs":[{"name":"xdevice"},{"name":"xdevice"}],"output":{"name":"bool"}}],[11,"clone","","",476,{"inputs":[{"name":"xdevice"}],"output":{"name":"xdevice"}}],[11,"eq","","",477,{"inputs":[{"name":"xdevicecontrol"},{"name":"xdevicecontrol"}],"output":{"name":"bool"}}],[11,"ne","","",477,{"inputs":[{"name":"xdevicecontrol"},{"name":"xdevicecontrol"}],"output":{"name":"bool"}}],[11,"clone","","",477,{"inputs":[{"name":"xdevicecontrol"}],"output":{"name":"xdevicecontrol"}}],[11,"eq","","",478,{"inputs":[{"name":"xdeviceinfo"},{"name":"xdeviceinfo"}],"output":{"name":"bool"}}],[11,"ne","","",478,{"inputs":[{"name":"xdeviceinfo"},{"name":"xdeviceinfo"}],"output":{"name":"bool"}}],[11,"clone","","",478,{"inputs":[{"name":"xdeviceinfo"}],"output":{"name":"xdeviceinfo"}}],[11,"eq","","",479,{"inputs":[{"name":"xdevicestate"},{"name":"xdevicestate"}],"output":{"name":"bool"}}],[11,"ne","","",479,{"inputs":[{"name":"xdevicestate"},{"name":"xdevicestate"}],"output":{"name":"bool"}}],[11,"clone","","",479,{"inputs":[{"name":"xdevicestate"}],"output":{"name":"xdevicestate"}}],[11,"eq","","",480,{"inputs":[{"name":"xdevicetimecoord"},{"name":"xdevicetimecoord"}],"output":{"name":"bool"}}],[11,"ne","","",480,{"inputs":[{"name":"xdevicetimecoord"},{"name":"xdevicetimecoord"}],"output":{"name":"bool"}}],[11,"clone","","",480,{"inputs":[{"name":"xdevicetimecoord"}],"output":{"name":"xdevicetimecoord"}}],[11,"eq","","",481,{"inputs":[{"name":"xextensionversion"},{"name":"xextensionversion"}],"output":{"name":"bool"}}],[11,"ne","","",481,{"inputs":[{"name":"xextensionversion"},{"name":"xextensionversion"}],"output":{"name":"bool"}}],[11,"clone","","",481,{"inputs":[{"name":"xextensionversion"}],"output":{"name":"xextensionversion"}}],[11,"eq","","",482,{"inputs":[{"name":"xfeedbackcontrol"},{"name":"xfeedbackcontrol"}],"output":{"name":"bool"}}],[11,"ne","","",482,{"inputs":[{"name":"xfeedbackcontrol"},{"name":"xfeedbackcontrol"}],"output":{"name":"bool"}}],[11,"clone","","",482,{"inputs":[{"name":"xfeedbackcontrol"}],"output":{"name":"xfeedbackcontrol"}}],[11,"eq","","",483,{"inputs":[{"name":"xfeedbackstate"},{"name":"xfeedbackstate"}],"output":{"name":"bool"}}],[11,"ne","","",483,{"inputs":[{"name":"xfeedbackstate"},{"name":"xfeedbackstate"}],"output":{"name":"bool"}}],[11,"clone","","",483,{"inputs":[{"name":"xfeedbackstate"}],"output":{"name":"xfeedbackstate"}}],[11,"eq","","",484,{"inputs":[{"name":"xinputclass"},{"name":"xinputclass"}],"output":{"name":"bool"}}],[11,"ne","","",484,{"inputs":[{"name":"xinputclass"},{"name":"xinputclass"}],"output":{"name":"bool"}}],[11,"clone","","",484,{"inputs":[{"name":"xinputclass"}],"output":{"name":"xinputclass"}}],[11,"eq","","",485,{"inputs":[{"name":"xinputclassinfo"},{"name":"xinputclassinfo"}],"output":{"name":"bool"}}],[11,"ne","","",485,{"inputs":[{"name":"xinputclassinfo"},{"name":"xinputclassinfo"}],"output":{"name":"bool"}}],[11,"clone","","",485,{"inputs":[{"name":"xinputclassinfo"}],"output":{"name":"xinputclassinfo"}}],[11,"open","x11_dl::xinput2","",486,{"inputs":[{"name":"xinput2"}],"output":{"name":"result"}}],[11,"clone","","",487,{"inputs":[{"name":"struct_unnamed1"}],"output":{"name":"struct_unnamed1"}}],[11,"default","","",487,{"inputs":[{"name":"struct_unnamed1"}],"output":{"name":"struct_unnamed1"}}],[11,"clone","","",488,{"inputs":[{"name":"struct_unnamed2"}],"output":{"name":"struct_unnamed2"}}],[11,"default","","",488,{"inputs":[{"name":"struct_unnamed2"}],"output":{"name":"struct_unnamed2"}}],[11,"clone","","",489,{"inputs":[{"name":"struct_unnamed3"}],"output":{"name":"struct_unnamed3"}}],[11,"default","","",489,{"inputs":[{"name":"struct_unnamed3"}],"output":{"name":"struct_unnamed3"}}],[11,"clone","","",490,{"inputs":[{"name":"struct_unnamed4"}],"output":{"name":"struct_unnamed4"}}],[11,"default","","",490,{"inputs":[{"name":"struct_unnamed4"}],"output":{"name":"struct_unnamed4"}}],[11,"_type","","",491,null],[11,"add","","",491,null],[11,"remove","","",491,null],[11,"attach","","",491,null],[11,"detach","","",491,null],[11,"clone","","",491,{"inputs":[{"name":"union_unnamed5"}],"output":{"name":"union_unnamed5"}}],[11,"default","","",491,{"inputs":[{"name":"union_unnamed5"}],"output":{"name":"union_unnamed5"}}],[11,"clone","","",492,{"inputs":[{"name":"struct_unnamed6"}],"output":{"name":"struct_unnamed6"}}],[11,"default","","",492,{"inputs":[{"name":"struct_unnamed6"}],"output":{"name":"struct_unnamed6"}}],[11,"clone","","",493,{"inputs":[{"name":"struct_unnamed7"}],"output":{"name":"struct_unnamed7"}}],[11,"default","","",493,{"inputs":[{"name":"struct_unnamed7"}],"output":{"name":"struct_unnamed7"}}],[11,"clone","","",494,{"inputs":[{"name":"struct_unnamed8"}],"output":{"name":"struct_unnamed8"}}],[11,"default","","",494,{"inputs":[{"name":"struct_unnamed8"}],"output":{"name":"struct_unnamed8"}}],[11,"clone","","",495,{"inputs":[{"name":"struct_unnamed9"}],"output":{"name":"struct_unnamed9"}}],[11,"default","","",495,{"inputs":[{"name":"struct_unnamed9"}],"output":{"name":"struct_unnamed9"}}],[11,"clone","","",496,{"inputs":[{"name":"struct_unnamed10"}],"output":{"name":"struct_unnamed10"}}],[11,"default","","",496,{"inputs":[{"name":"struct_unnamed10"}],"output":{"name":"struct_unnamed10"}}],[11,"clone","","",497,{"inputs":[{"name":"struct_unnamed11"}],"output":{"name":"struct_unnamed11"}}],[11,"default","","",497,{"inputs":[{"name":"struct_unnamed11"}],"output":{"name":"struct_unnamed11"}}],[11,"clone","","",498,{"inputs":[{"name":"struct_unnamed12"}],"output":{"name":"struct_unnamed12"}}],[11,"default","","",498,{"inputs":[{"name":"struct_unnamed12"}],"output":{"name":"struct_unnamed12"}}],[11,"clone","","",499,{"inputs":[{"name":"struct_unnamed13"}],"output":{"name":"struct_unnamed13"}}],[11,"default","","",499,{"inputs":[{"name":"struct_unnamed13"}],"output":{"name":"struct_unnamed13"}}],[11,"clone","","",500,{"inputs":[{"name":"struct_unnamed14"}],"output":{"name":"struct_unnamed14"}}],[11,"default","","",500,{"inputs":[{"name":"struct_unnamed14"}],"output":{"name":"struct_unnamed14"}}],[11,"clone","","",501,{"inputs":[{"name":"struct_unnamed15"}],"output":{"name":"struct_unnamed15"}}],[11,"default","","",501,{"inputs":[{"name":"struct_unnamed15"}],"output":{"name":"struct_unnamed15"}}],[11,"clone","","",502,{"inputs":[{"name":"struct_unnamed16"}],"output":{"name":"struct_unnamed16"}}],[11,"default","","",502,{"inputs":[{"name":"struct_unnamed16"}],"output":{"name":"struct_unnamed16"}}],[11,"clone","","",503,{"inputs":[{"name":"struct_unnamed17"}],"output":{"name":"struct_unnamed17"}}],[11,"default","","",503,{"inputs":[{"name":"struct_unnamed17"}],"output":{"name":"struct_unnamed17"}}],[11,"clone","","",504,{"inputs":[{"name":"struct_unnamed18"}],"output":{"name":"struct_unnamed18"}}],[11,"default","","",504,{"inputs":[{"name":"struct_unnamed18"}],"output":{"name":"struct_unnamed18"}}],[11,"clone","","",505,{"inputs":[{"name":"struct_unnamed19"}],"output":{"name":"struct_unnamed19"}}],[11,"default","","",505,{"inputs":[{"name":"struct_unnamed19"}],"output":{"name":"struct_unnamed19"}}],[11,"clone","","",506,{"inputs":[{"name":"struct_unnamed20"}],"output":{"name":"struct_unnamed20"}}],[11,"default","","",506,{"inputs":[{"name":"struct_unnamed20"}],"output":{"name":"struct_unnamed20"}}],[11,"clone","","",507,{"inputs":[{"name":"struct_unnamed21"}],"output":{"name":"struct_unnamed21"}}],[11,"default","","",507,{"inputs":[{"name":"struct_unnamed21"}],"output":{"name":"struct_unnamed21"}}],[11,"clone","","",508,{"inputs":[{"name":"struct_unnamed22"}],"output":{"name":"struct_unnamed22"}}],[11,"default","","",508,{"inputs":[{"name":"struct_unnamed22"}],"output":{"name":"struct_unnamed22"}}],[11,"clone","","",509,{"inputs":[{"name":"struct_unnamed23"}],"output":{"name":"struct_unnamed23"}}],[11,"default","","",509,{"inputs":[{"name":"struct_unnamed23"}],"output":{"name":"struct_unnamed23"}}],[11,"clone","","",510,{"inputs":[{"name":"struct_unnamed24"}],"output":{"name":"struct_unnamed24"}}],[11,"default","","",510,{"inputs":[{"name":"struct_unnamed24"}],"output":{"name":"struct_unnamed24"}}],[11,"clone","","",511,{"inputs":[{"name":"struct_unnamed25"}],"output":{"name":"struct_unnamed25"}}],[11,"default","","",511,{"inputs":[{"name":"struct_unnamed25"}],"output":{"name":"struct_unnamed25"}}],[11,"clone","","",512,{"inputs":[{"name":"struct_unnamed26"}],"output":{"name":"struct_unnamed26"}}],[11,"default","","",512,{"inputs":[{"name":"struct_unnamed26"}],"output":{"name":"struct_unnamed26"}}],[11,"clone","","",513,{"inputs":[{"name":"struct_unnamed27"}],"output":{"name":"struct_unnamed27"}}],[11,"default","","",513,{"inputs":[{"name":"struct_unnamed27"}],"output":{"name":"struct_unnamed27"}}],[11,"clone","","",514,{"inputs":[{"name":"struct_unnamed28"}],"output":{"name":"struct_unnamed28"}}],[11,"default","","",514,{"inputs":[{"name":"struct_unnamed28"}],"output":{"name":"struct_unnamed28"}}],[11,"open","x11_dl::xlib","",515,{"inputs":[{"name":"xlib"}],"output":{"name":"result"}}],[11,"eq","","",516,{"inputs":[{"name":"xevent"},{"name":"xevent"}],"output":{"name":"bool"}}],[11,"ne","","",516,{"inputs":[{"name":"xevent"},{"name":"xevent"}],"output":{"name":"bool"}}],[11,"clone","","",516,{"inputs":[{"name":"xevent"}],"output":{"name":"xevent"}}],[11,"get_type","","",516,{"inputs":[{"name":"xevent"}],"output":{"name":"i32"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xanyevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xbuttonevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xcirculateevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xcirculaterequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xclientmessageevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xcolormapevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xconfigureevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xconfigurerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xcreatewindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xcrossingevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xdestroywindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xerrorevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xfocuschangeevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xgraphicsexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xgravityevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xkeyevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xkeymapevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xmappingevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xmotionevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xnoexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xpropertyevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xreparentevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xresizerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xselectionclearevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xselectionevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xselectionrequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xunmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",516,{"inputs":[{"name":"xevent"},{"name":"xvisibilityevent"}],"output":{"name":"xevent"}}],[11,"eq","","",517,{"inputs":[{"name":"xanyevent"},{"name":"xanyevent"}],"output":{"name":"bool"}}],[11,"ne","","",517,{"inputs":[{"name":"xanyevent"},{"name":"xanyevent"}],"output":{"name":"bool"}}],[11,"clone","","",517,{"inputs":[{"name":"xanyevent"}],"output":{"name":"xanyevent"}}],[11,"from","","",517,{"inputs":[{"name":"xanyevent"},{"name":"xevent"}],"output":{"name":"xanyevent"}}],[11,"eq","","",518,{"inputs":[{"name":"xbuttonevent"},{"name":"xbuttonevent"}],"output":{"name":"bool"}}],[11,"ne","","",518,{"inputs":[{"name":"xbuttonevent"},{"name":"xbuttonevent"}],"output":{"name":"bool"}}],[11,"clone","","",518,{"inputs":[{"name":"xbuttonevent"}],"output":{"name":"xbuttonevent"}}],[11,"from","","",518,{"inputs":[{"name":"xbuttonevent"},{"name":"xevent"}],"output":{"name":"xbuttonevent"}}],[11,"eq","","",519,{"inputs":[{"name":"xcirculateevent"},{"name":"xcirculateevent"}],"output":{"name":"bool"}}],[11,"ne","","",519,{"inputs":[{"name":"xcirculateevent"},{"name":"xcirculateevent"}],"output":{"name":"bool"}}],[11,"clone","","",519,{"inputs":[{"name":"xcirculateevent"}],"output":{"name":"xcirculateevent"}}],[11,"from","","",519,{"inputs":[{"name":"xcirculateevent"},{"name":"xevent"}],"output":{"name":"xcirculateevent"}}],[11,"eq","","",520,{"inputs":[{"name":"xcirculaterequestevent"},{"name":"xcirculaterequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",520,{"inputs":[{"name":"xcirculaterequestevent"},{"name":"xcirculaterequestevent"}],"output":{"name":"bool"}}],[11,"clone","","",520,{"inputs":[{"name":"xcirculaterequestevent"}],"output":{"name":"xcirculaterequestevent"}}],[11,"from","","",520,{"inputs":[{"name":"xcirculaterequestevent"},{"name":"xevent"}],"output":{"name":"xcirculaterequestevent"}}],[11,"eq","","",521,{"inputs":[{"name":"xclientmessageevent"},{"name":"xclientmessageevent"}],"output":{"name":"bool"}}],[11,"ne","","",521,{"inputs":[{"name":"xclientmessageevent"},{"name":"xclientmessageevent"}],"output":{"name":"bool"}}],[11,"clone","","",521,{"inputs":[{"name":"xclientmessageevent"}],"output":{"name":"xclientmessageevent"}}],[11,"from","","",521,{"inputs":[{"name":"xclientmessageevent"},{"name":"xevent"}],"output":{"name":"xclientmessageevent"}}],[11,"eq","","",522,{"inputs":[{"name":"xcolormapevent"},{"name":"xcolormapevent"}],"output":{"name":"bool"}}],[11,"ne","","",522,{"inputs":[{"name":"xcolormapevent"},{"name":"xcolormapevent"}],"output":{"name":"bool"}}],[11,"clone","","",522,{"inputs":[{"name":"xcolormapevent"}],"output":{"name":"xcolormapevent"}}],[11,"from","","",522,{"inputs":[{"name":"xcolormapevent"},{"name":"xevent"}],"output":{"name":"xcolormapevent"}}],[11,"eq","","",523,{"inputs":[{"name":"xconfigureevent"},{"name":"xconfigureevent"}],"output":{"name":"bool"}}],[11,"ne","","",523,{"inputs":[{"name":"xconfigureevent"},{"name":"xconfigureevent"}],"output":{"name":"bool"}}],[11,"clone","","",523,{"inputs":[{"name":"xconfigureevent"}],"output":{"name":"xconfigureevent"}}],[11,"from","","",523,{"inputs":[{"name":"xconfigureevent"},{"name":"xevent"}],"output":{"name":"xconfigureevent"}}],[11,"eq","","",524,{"inputs":[{"name":"xconfigurerequestevent"},{"name":"xconfigurerequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",524,{"inputs":[{"name":"xconfigurerequestevent"},{"name":"xconfigurerequestevent"}],"output":{"name":"bool"}}],[11,"clone","","",524,{"inputs":[{"name":"xconfigurerequestevent"}],"output":{"name":"xconfigurerequestevent"}}],[11,"from","","",524,{"inputs":[{"name":"xconfigurerequestevent"},{"name":"xevent"}],"output":{"name":"xconfigurerequestevent"}}],[11,"eq","","",525,{"inputs":[{"name":"xcreatewindowevent"},{"name":"xcreatewindowevent"}],"output":{"name":"bool"}}],[11,"ne","","",525,{"inputs":[{"name":"xcreatewindowevent"},{"name":"xcreatewindowevent"}],"output":{"name":"bool"}}],[11,"clone","","",525,{"inputs":[{"name":"xcreatewindowevent"}],"output":{"name":"xcreatewindowevent"}}],[11,"from","","",525,{"inputs":[{"name":"xcreatewindowevent"},{"name":"xevent"}],"output":{"name":"xcreatewindowevent"}}],[11,"eq","","",526,{"inputs":[{"name":"xcrossingevent"},{"name":"xcrossingevent"}],"output":{"name":"bool"}}],[11,"ne","","",526,{"inputs":[{"name":"xcrossingevent"},{"name":"xcrossingevent"}],"output":{"name":"bool"}}],[11,"clone","","",526,{"inputs":[{"name":"xcrossingevent"}],"output":{"name":"xcrossingevent"}}],[11,"from","","",526,{"inputs":[{"name":"xcrossingevent"},{"name":"xevent"}],"output":{"name":"xcrossingevent"}}],[11,"eq","","",527,{"inputs":[{"name":"xdestroywindowevent"},{"name":"xdestroywindowevent"}],"output":{"name":"bool"}}],[11,"ne","","",527,{"inputs":[{"name":"xdestroywindowevent"},{"name":"xdestroywindowevent"}],"output":{"name":"bool"}}],[11,"clone","","",527,{"inputs":[{"name":"xdestroywindowevent"}],"output":{"name":"xdestroywindowevent"}}],[11,"from","","",527,{"inputs":[{"name":"xdestroywindowevent"},{"name":"xevent"}],"output":{"name":"xdestroywindowevent"}}],[11,"eq","","",528,{"inputs":[{"name":"xerrorevent"},{"name":"xerrorevent"}],"output":{"name":"bool"}}],[11,"ne","","",528,{"inputs":[{"name":"xerrorevent"},{"name":"xerrorevent"}],"output":{"name":"bool"}}],[11,"clone","","",528,{"inputs":[{"name":"xerrorevent"}],"output":{"name":"xerrorevent"}}],[11,"from","","",528,{"inputs":[{"name":"xerrorevent"},{"name":"xevent"}],"output":{"name":"xerrorevent"}}],[11,"eq","","",529,{"inputs":[{"name":"xexposeevent"},{"name":"xexposeevent"}],"output":{"name":"bool"}}],[11,"ne","","",529,{"inputs":[{"name":"xexposeevent"},{"name":"xexposeevent"}],"output":{"name":"bool"}}],[11,"clone","","",529,{"inputs":[{"name":"xexposeevent"}],"output":{"name":"xexposeevent"}}],[11,"from","","",529,{"inputs":[{"name":"xexposeevent"},{"name":"xevent"}],"output":{"name":"xexposeevent"}}],[11,"eq","","",530,{"inputs":[{"name":"xfocuschangeevent"},{"name":"xfocuschangeevent"}],"output":{"name":"bool"}}],[11,"ne","","",530,{"inputs":[{"name":"xfocuschangeevent"},{"name":"xfocuschangeevent"}],"output":{"name":"bool"}}],[11,"clone","","",530,{"inputs":[{"name":"xfocuschangeevent"}],"output":{"name":"xfocuschangeevent"}}],[11,"from","","",530,{"inputs":[{"name":"xfocuschangeevent"},{"name":"xevent"}],"output":{"name":"xfocuschangeevent"}}],[11,"eq","","",531,{"inputs":[{"name":"xgraphicsexposeevent"},{"name":"xgraphicsexposeevent"}],"output":{"name":"bool"}}],[11,"ne","","",531,{"inputs":[{"name":"xgraphicsexposeevent"},{"name":"xgraphicsexposeevent"}],"output":{"name":"bool"}}],[11,"clone","","",531,{"inputs":[{"name":"xgraphicsexposeevent"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"from","","",531,{"inputs":[{"name":"xgraphicsexposeevent"},{"name":"xevent"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"eq","","",532,{"inputs":[{"name":"xgravityevent"},{"name":"xgravityevent"}],"output":{"name":"bool"}}],[11,"ne","","",532,{"inputs":[{"name":"xgravityevent"},{"name":"xgravityevent"}],"output":{"name":"bool"}}],[11,"clone","","",532,{"inputs":[{"name":"xgravityevent"}],"output":{"name":"xgravityevent"}}],[11,"from","","",532,{"inputs":[{"name":"xgravityevent"},{"name":"xevent"}],"output":{"name":"xgravityevent"}}],[11,"eq","","",533,{"inputs":[{"name":"xkeyevent"},{"name":"xkeyevent"}],"output":{"name":"bool"}}],[11,"ne","","",533,{"inputs":[{"name":"xkeyevent"},{"name":"xkeyevent"}],"output":{"name":"bool"}}],[11,"clone","","",533,{"inputs":[{"name":"xkeyevent"}],"output":{"name":"xkeyevent"}}],[11,"from","","",533,{"inputs":[{"name":"xkeyevent"},{"name":"xevent"}],"output":{"name":"xkeyevent"}}],[11,"eq","","",534,{"inputs":[{"name":"xkeymapevent"},{"name":"xkeymapevent"}],"output":{"name":"bool"}}],[11,"ne","","",534,{"inputs":[{"name":"xkeymapevent"},{"name":"xkeymapevent"}],"output":{"name":"bool"}}],[11,"clone","","",534,{"inputs":[{"name":"xkeymapevent"}],"output":{"name":"xkeymapevent"}}],[11,"from","","",534,{"inputs":[{"name":"xkeymapevent"},{"name":"xevent"}],"output":{"name":"xkeymapevent"}}],[11,"eq","","",535,{"inputs":[{"name":"xmapevent"},{"name":"xmapevent"}],"output":{"name":"bool"}}],[11,"ne","","",535,{"inputs":[{"name":"xmapevent"},{"name":"xmapevent"}],"output":{"name":"bool"}}],[11,"clone","","",535,{"inputs":[{"name":"xmapevent"}],"output":{"name":"xmapevent"}}],[11,"from","","",535,{"inputs":[{"name":"xmapevent"},{"name":"xevent"}],"output":{"name":"xmapevent"}}],[11,"eq","","",536,{"inputs":[{"name":"xmappingevent"},{"name":"xmappingevent"}],"output":{"name":"bool"}}],[11,"ne","","",536,{"inputs":[{"name":"xmappingevent"},{"name":"xmappingevent"}],"output":{"name":"bool"}}],[11,"clone","","",536,{"inputs":[{"name":"xmappingevent"}],"output":{"name":"xmappingevent"}}],[11,"from","","",536,{"inputs":[{"name":"xmappingevent"},{"name":"xevent"}],"output":{"name":"xmappingevent"}}],[11,"eq","","",537,{"inputs":[{"name":"xmaprequestevent"},{"name":"xmaprequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",537,{"inputs":[{"name":"xmaprequestevent"},{"name":"xmaprequestevent"}],"output":{"name":"bool"}}],[11,"clone","","",537,{"inputs":[{"name":"xmaprequestevent"}],"output":{"name":"xmaprequestevent"}}],[11,"from","","",537,{"inputs":[{"name":"xmaprequestevent"},{"name":"xevent"}],"output":{"name":"xmaprequestevent"}}],[11,"eq","","",538,{"inputs":[{"name":"xmotionevent"},{"name":"xmotionevent"}],"output":{"name":"bool"}}],[11,"ne","","",538,{"inputs":[{"name":"xmotionevent"},{"name":"xmotionevent"}],"output":{"name":"bool"}}],[11,"clone","","",538,{"inputs":[{"name":"xmotionevent"}],"output":{"name":"xmotionevent"}}],[11,"from","","",538,{"inputs":[{"name":"xmotionevent"},{"name":"xevent"}],"output":{"name":"xmotionevent"}}],[11,"eq","","",539,{"inputs":[{"name":"xnoexposeevent"},{"name":"xnoexposeevent"}],"output":{"name":"bool"}}],[11,"ne","","",539,{"inputs":[{"name":"xnoexposeevent"},{"name":"xnoexposeevent"}],"output":{"name":"bool"}}],[11,"clone","","",539,{"inputs":[{"name":"xnoexposeevent"}],"output":{"name":"xnoexposeevent"}}],[11,"from","","",539,{"inputs":[{"name":"xnoexposeevent"},{"name":"xevent"}],"output":{"name":"xnoexposeevent"}}],[11,"eq","","",540,{"inputs":[{"name":"xpropertyevent"},{"name":"xpropertyevent"}],"output":{"name":"bool"}}],[11,"ne","","",540,{"inputs":[{"name":"xpropertyevent"},{"name":"xpropertyevent"}],"output":{"name":"bool"}}],[11,"clone","","",540,{"inputs":[{"name":"xpropertyevent"}],"output":{"name":"xpropertyevent"}}],[11,"from","","",540,{"inputs":[{"name":"xpropertyevent"},{"name":"xevent"}],"output":{"name":"xpropertyevent"}}],[11,"eq","","",541,{"inputs":[{"name":"xreparentevent"},{"name":"xreparentevent"}],"output":{"name":"bool"}}],[11,"ne","","",541,{"inputs":[{"name":"xreparentevent"},{"name":"xreparentevent"}],"output":{"name":"bool"}}],[11,"clone","","",541,{"inputs":[{"name":"xreparentevent"}],"output":{"name":"xreparentevent"}}],[11,"from","","",541,{"inputs":[{"name":"xreparentevent"},{"name":"xevent"}],"output":{"name":"xreparentevent"}}],[11,"eq","","",542,{"inputs":[{"name":"xresizerequestevent"},{"name":"xresizerequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",542,{"inputs":[{"name":"xresizerequestevent"},{"name":"xresizerequestevent"}],"output":{"name":"bool"}}],[11,"clone","","",542,{"inputs":[{"name":"xresizerequestevent"}],"output":{"name":"xresizerequestevent"}}],[11,"from","","",542,{"inputs":[{"name":"xresizerequestevent"},{"name":"xevent"}],"output":{"name":"xresizerequestevent"}}],[11,"eq","","",543,{"inputs":[{"name":"xselectionclearevent"},{"name":"xselectionclearevent"}],"output":{"name":"bool"}}],[11,"ne","","",543,{"inputs":[{"name":"xselectionclearevent"},{"name":"xselectionclearevent"}],"output":{"name":"bool"}}],[11,"clone","","",543,{"inputs":[{"name":"xselectionclearevent"}],"output":{"name":"xselectionclearevent"}}],[11,"from","","",543,{"inputs":[{"name":"xselectionclearevent"},{"name":"xevent"}],"output":{"name":"xselectionclearevent"}}],[11,"eq","","",544,{"inputs":[{"name":"xselectionevent"},{"name":"xselectionevent"}],"output":{"name":"bool"}}],[11,"ne","","",544,{"inputs":[{"name":"xselectionevent"},{"name":"xselectionevent"}],"output":{"name":"bool"}}],[11,"clone","","",544,{"inputs":[{"name":"xselectionevent"}],"output":{"name":"xselectionevent"}}],[11,"from","","",544,{"inputs":[{"name":"xselectionevent"},{"name":"xevent"}],"output":{"name":"xselectionevent"}}],[11,"eq","","",545,{"inputs":[{"name":"xselectionrequestevent"},{"name":"xselectionrequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",545,{"inputs":[{"name":"xselectionrequestevent"},{"name":"xselectionrequestevent"}],"output":{"name":"bool"}}],[11,"clone","","",545,{"inputs":[{"name":"xselectionrequestevent"}],"output":{"name":"xselectionrequestevent"}}],[11,"from","","",545,{"inputs":[{"name":"xselectionrequestevent"},{"name":"xevent"}],"output":{"name":"xselectionrequestevent"}}],[11,"eq","","",546,{"inputs":[{"name":"xunmapevent"},{"name":"xunmapevent"}],"output":{"name":"bool"}}],[11,"ne","","",546,{"inputs":[{"name":"xunmapevent"},{"name":"xunmapevent"}],"output":{"name":"bool"}}],[11,"clone","","",546,{"inputs":[{"name":"xunmapevent"}],"output":{"name":"xunmapevent"}}],[11,"from","","",546,{"inputs":[{"name":"xunmapevent"},{"name":"xevent"}],"output":{"name":"xunmapevent"}}],[11,"eq","","",547,{"inputs":[{"name":"xvisibilityevent"},{"name":"xvisibilityevent"}],"output":{"name":"bool"}}],[11,"ne","","",547,{"inputs":[{"name":"xvisibilityevent"},{"name":"xvisibilityevent"}],"output":{"name":"bool"}}],[11,"clone","","",547,{"inputs":[{"name":"xvisibilityevent"}],"output":{"name":"xvisibilityevent"}}],[11,"from","","",547,{"inputs":[{"name":"xvisibilityevent"},{"name":"xevent"}],"output":{"name":"xvisibilityevent"}}],[11,"eq","","",548,{"inputs":[{"name":"_xkbdesc"},{"name":"_xkbdesc"}],"output":{"name":"bool"}}],[11,"ne","","",548,{"inputs":[{"name":"_xkbdesc"},{"name":"_xkbdesc"}],"output":{"name":"bool"}}],[11,"clone","","",548,{"inputs":[{"name":"_xkbdesc"}],"output":{"name":"_xkbdesc"}}],[11,"eq","","",549,{"inputs":[{"name":"_xkbkeyaliasrec"},{"name":"_xkbkeyaliasrec"}],"output":{"name":"bool"}}],[11,"ne","","",549,{"inputs":[{"name":"_xkbkeyaliasrec"},{"name":"_xkbkeyaliasrec"}],"output":{"name":"bool"}}],[11,"clone","","",549,{"inputs":[{"name":"_xkbkeyaliasrec"}],"output":{"name":"_xkbkeyaliasrec"}}],[11,"eq","","",550,{"inputs":[{"name":"_xkbkeynamerec"},{"name":"_xkbkeynamerec"}],"output":{"name":"bool"}}],[11,"ne","","",550,{"inputs":[{"name":"_xkbkeynamerec"},{"name":"_xkbkeynamerec"}],"output":{"name":"bool"}}],[11,"clone","","",550,{"inputs":[{"name":"_xkbkeynamerec"}],"output":{"name":"_xkbkeynamerec"}}],[11,"eq","","",551,{"inputs":[{"name":"_xkbnamesrec"},{"name":"_xkbnamesrec"}],"output":{"name":"bool"}}],[11,"ne","","",551,{"inputs":[{"name":"_xkbnamesrec"},{"name":"_xkbnamesrec"}],"output":{"name":"bool"}}],[11,"clone","","",551,{"inputs":[{"name":"_xkbnamesrec"}],"output":{"name":"_xkbnamesrec"}}],[11,"eq","","",552,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ne","","",552,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"clone","","",552,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"eq","","",553,{"inputs":[{"name":"screen"},{"name":"screen"}],"output":{"name":"bool"}}],[11,"ne","","",553,{"inputs":[{"name":"screen"},{"name":"screen"}],"output":{"name":"bool"}}],[11,"clone","","",553,{"inputs":[{"name":"screen"}],"output":{"name":"screen"}}],[11,"eq","","",554,{"inputs":[{"name":"screenformat"},{"name":"screenformat"}],"output":{"name":"bool"}}],[11,"ne","","",554,{"inputs":[{"name":"screenformat"},{"name":"screenformat"}],"output":{"name":"bool"}}],[11,"clone","","",554,{"inputs":[{"name":"screenformat"}],"output":{"name":"screenformat"}}],[11,"eq","","",555,{"inputs":[{"name":"visual"},{"name":"visual"}],"output":{"name":"bool"}}],[11,"ne","","",555,{"inputs":[{"name":"visual"},{"name":"visual"}],"output":{"name":"bool"}}],[11,"clone","","",555,{"inputs":[{"name":"visual"}],"output":{"name":"visual"}}],[11,"eq","","",556,{"inputs":[{"name":"xarc"},{"name":"xarc"}],"output":{"name":"bool"}}],[11,"ne","","",556,{"inputs":[{"name":"xarc"},{"name":"xarc"}],"output":{"name":"bool"}}],[11,"clone","","",556,{"inputs":[{"name":"xarc"}],"output":{"name":"xarc"}}],[11,"eq","","",557,{"inputs":[{"name":"xchar2b"},{"name":"xchar2b"}],"output":{"name":"bool"}}],[11,"ne","","",557,{"inputs":[{"name":"xchar2b"},{"name":"xchar2b"}],"output":{"name":"bool"}}],[11,"clone","","",557,{"inputs":[{"name":"xchar2b"}],"output":{"name":"xchar2b"}}],[11,"eq","","",558,{"inputs":[{"name":"xcharstruct"},{"name":"xcharstruct"}],"output":{"name":"bool"}}],[11,"ne","","",558,{"inputs":[{"name":"xcharstruct"},{"name":"xcharstruct"}],"output":{"name":"bool"}}],[11,"clone","","",558,{"inputs":[{"name":"xcharstruct"}],"output":{"name":"xcharstruct"}}],[11,"eq","","",559,{"inputs":[{"name":"xclasshint"},{"name":"xclasshint"}],"output":{"name":"bool"}}],[11,"ne","","",559,{"inputs":[{"name":"xclasshint"},{"name":"xclasshint"}],"output":{"name":"bool"}}],[11,"clone","","",559,{"inputs":[{"name":"xclasshint"}],"output":{"name":"xclasshint"}}],[11,"eq","","",560,{"inputs":[{"name":"xcolor"},{"name":"xcolor"}],"output":{"name":"bool"}}],[11,"ne","","",560,{"inputs":[{"name":"xcolor"},{"name":"xcolor"}],"output":{"name":"bool"}}],[11,"clone","","",560,{"inputs":[{"name":"xcolor"}],"output":{"name":"xcolor"}}],[11,"eq","","",561,{"inputs":[{"name":"xcomposestatus"},{"name":"xcomposestatus"}],"output":{"name":"bool"}}],[11,"ne","","",561,{"inputs":[{"name":"xcomposestatus"},{"name":"xcomposestatus"}],"output":{"name":"bool"}}],[11,"clone","","",561,{"inputs":[{"name":"xcomposestatus"}],"output":{"name":"xcomposestatus"}}],[11,"eq","","",562,{"inputs":[{"name":"xextcodes"},{"name":"xextcodes"}],"output":{"name":"bool"}}],[11,"ne","","",562,{"inputs":[{"name":"xextcodes"},{"name":"xextcodes"}],"output":{"name":"bool"}}],[11,"clone","","",562,{"inputs":[{"name":"xextcodes"}],"output":{"name":"xextcodes"}}],[11,"eq","","",563,{"inputs":[{"name":"xfontprop"},{"name":"xfontprop"}],"output":{"name":"bool"}}],[11,"ne","","",563,{"inputs":[{"name":"xfontprop"},{"name":"xfontprop"}],"output":{"name":"bool"}}],[11,"clone","","",563,{"inputs":[{"name":"xfontprop"}],"output":{"name":"xfontprop"}}],[11,"eq","","",564,{"inputs":[{"name":"xfontsetextents"},{"name":"xfontsetextents"}],"output":{"name":"bool"}}],[11,"ne","","",564,{"inputs":[{"name":"xfontsetextents"},{"name":"xfontsetextents"}],"output":{"name":"bool"}}],[11,"clone","","",564,{"inputs":[{"name":"xfontsetextents"}],"output":{"name":"xfontsetextents"}}],[11,"eq","","",565,{"inputs":[{"name":"xfontstruct"},{"name":"xfontstruct"}],"output":{"name":"bool"}}],[11,"ne","","",565,{"inputs":[{"name":"xfontstruct"},{"name":"xfontstruct"}],"output":{"name":"bool"}}],[11,"clone","","",565,{"inputs":[{"name":"xfontstruct"}],"output":{"name":"xfontstruct"}}],[11,"eq","","",566,{"inputs":[{"name":"xgcvalues"},{"name":"xgcvalues"}],"output":{"name":"bool"}}],[11,"ne","","",566,{"inputs":[{"name":"xgcvalues"},{"name":"xgcvalues"}],"output":{"name":"bool"}}],[11,"clone","","",566,{"inputs":[{"name":"xgcvalues"}],"output":{"name":"xgcvalues"}}],[11,"eq","","",567,{"inputs":[{"name":"xgenericeventcookie"},{"name":"xgenericeventcookie"}],"output":{"name":"bool"}}],[11,"ne","","",567,{"inputs":[{"name":"xgenericeventcookie"},{"name":"xgenericeventcookie"}],"output":{"name":"bool"}}],[11,"clone","","",567,{"inputs":[{"name":"xgenericeventcookie"}],"output":{"name":"xgenericeventcookie"}}],[11,"from","","",567,{"inputs":[{"name":"xgenericeventcookie"},{"name":"xevent"}],"output":{"name":"xgenericeventcookie"}}],[11,"eq","","",568,{"inputs":[{"name":"xhostaddress"},{"name":"xhostaddress"}],"output":{"name":"bool"}}],[11,"ne","","",568,{"inputs":[{"name":"xhostaddress"},{"name":"xhostaddress"}],"output":{"name":"bool"}}],[11,"clone","","",568,{"inputs":[{"name":"xhostaddress"}],"output":{"name":"xhostaddress"}}],[11,"eq","","",569,{"inputs":[{"name":"xiconsize"},{"name":"xiconsize"}],"output":{"name":"bool"}}],[11,"ne","","",569,{"inputs":[{"name":"xiconsize"},{"name":"xiconsize"}],"output":{"name":"bool"}}],[11,"clone","","",569,{"inputs":[{"name":"xiconsize"}],"output":{"name":"xiconsize"}}],[11,"eq","","",570,{"inputs":[{"name":"ximage"},{"name":"ximage"}],"output":{"name":"bool"}}],[11,"ne","","",570,{"inputs":[{"name":"ximage"},{"name":"ximage"}],"output":{"name":"bool"}}],[11,"clone","","",570,{"inputs":[{"name":"ximage"}],"output":{"name":"ximage"}}],[11,"eq","","",571,{"inputs":[{"name":"xkeyboardcontrol"},{"name":"xkeyboardcontrol"}],"output":{"name":"bool"}}],[11,"ne","","",571,{"inputs":[{"name":"xkeyboardcontrol"},{"name":"xkeyboardcontrol"}],"output":{"name":"bool"}}],[11,"clone","","",571,{"inputs":[{"name":"xkeyboardcontrol"}],"output":{"name":"xkeyboardcontrol"}}],[11,"eq","","",572,{"inputs":[{"name":"xkeyboardstate"},{"name":"xkeyboardstate"}],"output":{"name":"bool"}}],[11,"ne","","",572,{"inputs":[{"name":"xkeyboardstate"},{"name":"xkeyboardstate"}],"output":{"name":"bool"}}],[11,"clone","","",572,{"inputs":[{"name":"xkeyboardstate"}],"output":{"name":"xkeyboardstate"}}],[11,"eq","","",573,{"inputs":[{"name":"xmbtextitem"},{"name":"xmbtextitem"}],"output":{"name":"bool"}}],[11,"ne","","",573,{"inputs":[{"name":"xmbtextitem"},{"name":"xmbtextitem"}],"output":{"name":"bool"}}],[11,"clone","","",573,{"inputs":[{"name":"xmbtextitem"}],"output":{"name":"xmbtextitem"}}],[11,"eq","","",574,{"inputs":[{"name":"xmodifierkeymap"},{"name":"xmodifierkeymap"}],"output":{"name":"bool"}}],[11,"ne","","",574,{"inputs":[{"name":"xmodifierkeymap"},{"name":"xmodifierkeymap"}],"output":{"name":"bool"}}],[11,"clone","","",574,{"inputs":[{"name":"xmodifierkeymap"}],"output":{"name":"xmodifierkeymap"}}],[11,"eq","","",575,{"inputs":[{"name":"xomcharsetlist"},{"name":"xomcharsetlist"}],"output":{"name":"bool"}}],[11,"ne","","",575,{"inputs":[{"name":"xomcharsetlist"},{"name":"xomcharsetlist"}],"output":{"name":"bool"}}],[11,"clone","","",575,{"inputs":[{"name":"xomcharsetlist"}],"output":{"name":"xomcharsetlist"}}],[11,"eq","","",576,{"inputs":[{"name":"xpixmapformatvalues"},{"name":"xpixmapformatvalues"}],"output":{"name":"bool"}}],[11,"ne","","",576,{"inputs":[{"name":"xpixmapformatvalues"},{"name":"xpixmapformatvalues"}],"output":{"name":"bool"}}],[11,"clone","","",576,{"inputs":[{"name":"xpixmapformatvalues"}],"output":{"name":"xpixmapformatvalues"}}],[11,"eq","","",577,{"inputs":[{"name":"xpoint"},{"name":"xpoint"}],"output":{"name":"bool"}}],[11,"ne","","",577,{"inputs":[{"name":"xpoint"},{"name":"xpoint"}],"output":{"name":"bool"}}],[11,"clone","","",577,{"inputs":[{"name":"xpoint"}],"output":{"name":"xpoint"}}],[11,"eq","","",578,{"inputs":[{"name":"xrectangle"},{"name":"xrectangle"}],"output":{"name":"bool"}}],[11,"ne","","",578,{"inputs":[{"name":"xrectangle"},{"name":"xrectangle"}],"output":{"name":"bool"}}],[11,"clone","","",578,{"inputs":[{"name":"xrectangle"}],"output":{"name":"xrectangle"}}],[11,"eq","","",579,{"inputs":[{"name":"xrmoptiondescrec"},{"name":"xrmoptiondescrec"}],"output":{"name":"bool"}}],[11,"ne","","",579,{"inputs":[{"name":"xrmoptiondescrec"},{"name":"xrmoptiondescrec"}],"output":{"name":"bool"}}],[11,"clone","","",579,{"inputs":[{"name":"xrmoptiondescrec"}],"output":{"name":"xrmoptiondescrec"}}],[11,"eq","","",580,{"inputs":[{"name":"xrmvalue"},{"name":"xrmvalue"}],"output":{"name":"bool"}}],[11,"ne","","",580,{"inputs":[{"name":"xrmvalue"},{"name":"xrmvalue"}],"output":{"name":"bool"}}],[11,"clone","","",580,{"inputs":[{"name":"xrmvalue"}],"output":{"name":"xrmvalue"}}],[11,"eq","","",581,{"inputs":[{"name":"xsegment"},{"name":"xsegment"}],"output":{"name":"bool"}}],[11,"ne","","",581,{"inputs":[{"name":"xsegment"},{"name":"xsegment"}],"output":{"name":"bool"}}],[11,"clone","","",581,{"inputs":[{"name":"xsegment"}],"output":{"name":"xsegment"}}],[11,"eq","","",582,{"inputs":[{"name":"xsetwindowattributes"},{"name":"xsetwindowattributes"}],"output":{"name":"bool"}}],[11,"ne","","",582,{"inputs":[{"name":"xsetwindowattributes"},{"name":"xsetwindowattributes"}],"output":{"name":"bool"}}],[11,"clone","","",582,{"inputs":[{"name":"xsetwindowattributes"}],"output":{"name":"xsetwindowattributes"}}],[11,"eq","","",583,{"inputs":[{"name":"xsizehints"},{"name":"xsizehints"}],"output":{"name":"bool"}}],[11,"ne","","",583,{"inputs":[{"name":"xsizehints"},{"name":"xsizehints"}],"output":{"name":"bool"}}],[11,"clone","","",583,{"inputs":[{"name":"xsizehints"}],"output":{"name":"xsizehints"}}],[11,"eq","","",584,{"inputs":[{"name":"xstandardcolormap"},{"name":"xstandardcolormap"}],"output":{"name":"bool"}}],[11,"ne","","",584,{"inputs":[{"name":"xstandardcolormap"},{"name":"xstandardcolormap"}],"output":{"name":"bool"}}],[11,"clone","","",584,{"inputs":[{"name":"xstandardcolormap"}],"output":{"name":"xstandardcolormap"}}],[11,"eq","","",585,{"inputs":[{"name":"xtextitem"},{"name":"xtextitem"}],"output":{"name":"bool"}}],[11,"ne","","",585,{"inputs":[{"name":"xtextitem"},{"name":"xtextitem"}],"output":{"name":"bool"}}],[11,"clone","","",585,{"inputs":[{"name":"xtextitem"}],"output":{"name":"xtextitem"}}],[11,"eq","","",586,{"inputs":[{"name":"xtextitem16"},{"name":"xtextitem16"}],"output":{"name":"bool"}}],[11,"ne","","",586,{"inputs":[{"name":"xtextitem16"},{"name":"xtextitem16"}],"output":{"name":"bool"}}],[11,"clone","","",586,{"inputs":[{"name":"xtextitem16"}],"output":{"name":"xtextitem16"}}],[11,"eq","","",587,{"inputs":[{"name":"xtextproperty"},{"name":"xtextproperty"}],"output":{"name":"bool"}}],[11,"ne","","",587,{"inputs":[{"name":"xtextproperty"},{"name":"xtextproperty"}],"output":{"name":"bool"}}],[11,"clone","","",587,{"inputs":[{"name":"xtextproperty"}],"output":{"name":"xtextproperty"}}],[11,"eq","","",588,{"inputs":[{"name":"xtimecoord"},{"name":"xtimecoord"}],"output":{"name":"bool"}}],[11,"ne","","",588,{"inputs":[{"name":"xtimecoord"},{"name":"xtimecoord"}],"output":{"name":"bool"}}],[11,"clone","","",588,{"inputs":[{"name":"xtimecoord"}],"output":{"name":"xtimecoord"}}],[11,"eq","","",589,{"inputs":[{"name":"xvisualinfo"},{"name":"xvisualinfo"}],"output":{"name":"bool"}}],[11,"ne","","",589,{"inputs":[{"name":"xvisualinfo"},{"name":"xvisualinfo"}],"output":{"name":"bool"}}],[11,"clone","","",589,{"inputs":[{"name":"xvisualinfo"}],"output":{"name":"xvisualinfo"}}],[11,"eq","","",590,{"inputs":[{"name":"xwctextitem"},{"name":"xwctextitem"}],"output":{"name":"bool"}}],[11,"ne","","",590,{"inputs":[{"name":"xwctextitem"},{"name":"xwctextitem"}],"output":{"name":"bool"}}],[11,"clone","","",590,{"inputs":[{"name":"xwctextitem"}],"output":{"name":"xwctextitem"}}],[11,"eq","","",591,{"inputs":[{"name":"xwindowattributes"},{"name":"xwindowattributes"}],"output":{"name":"bool"}}],[11,"ne","","",591,{"inputs":[{"name":"xwindowattributes"},{"name":"xwindowattributes"}],"output":{"name":"bool"}}],[11,"clone","","",591,{"inputs":[{"name":"xwindowattributes"}],"output":{"name":"xwindowattributes"}}],[11,"eq","","",592,{"inputs":[{"name":"xwindowchanges"},{"name":"xwindowchanges"}],"output":{"name":"bool"}}],[11,"ne","","",592,{"inputs":[{"name":"xwindowchanges"},{"name":"xwindowchanges"}],"output":{"name":"bool"}}],[11,"clone","","",592,{"inputs":[{"name":"xwindowchanges"}],"output":{"name":"xwindowchanges"}}],[11,"eq","","",593,{"inputs":[{"name":"xwmhints"},{"name":"xwmhints"}],"output":{"name":"bool"}}],[11,"ne","","",593,{"inputs":[{"name":"xwmhints"},{"name":"xwmhints"}],"output":{"name":"bool"}}],[11,"clone","","",593,{"inputs":[{"name":"xwmhints"}],"output":{"name":"xwmhints"}}],[11,"eq","","",594,{"inputs":[{"name":"aspectratio"},{"name":"aspectratio"}],"output":{"name":"bool"}}],[11,"ne","","",594,{"inputs":[{"name":"aspectratio"},{"name":"aspectratio"}],"output":{"name":"bool"}}],[11,"clone","","",594,{"inputs":[{"name":"aspectratio"}],"output":{"name":"aspectratio"}}],[11,"eq","","",595,{"inputs":[{"name":"clientmessagedata"},{"name":"clientmessagedata"}],"output":{"name":"bool"}}],[11,"ne","","",595,{"inputs":[{"name":"clientmessagedata"},{"name":"clientmessagedata"}],"output":{"name":"bool"}}],[11,"clone","","",595,{"inputs":[{"name":"clientmessagedata"}],"output":{"name":"clientmessagedata"}}],[11,"new","","",595,{"inputs":[{"name":"clientmessagedata"}],"output":{"name":"clientmessagedata"}}],[11,"get_byte","","",595,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"}],"output":{"name":"i8"}}],[11,"get_long","","",595,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"}],"output":{"name":"i64"}}],[11,"get_short","","",595,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"}],"output":{"name":"i16"}}],[11,"set_byte","","",595,null],[11,"set_long","","",595,null],[11,"set_short","","",595,null],[11,"clone","","",596,{"inputs":[{"name":"imagefns"}],"output":{"name":"imagefns"}}],[11,"eq","","",596,{"inputs":[{"name":"imagefns"},{"name":"imagefns"}],"output":{"name":"bool"}}],[11,"open","x11_dl::xmu","",597,{"inputs":[{"name":"xmu"}],"output":{"name":"result"}}],[11,"open","x11_dl::xrecord","",598,{"inputs":[{"name":"xf86vmode"}],"output":{"name":"result"}}],[11,"eq","","",599,{"inputs":[{"name":"xrecordclientinfo"},{"name":"xrecordclientinfo"}],"output":{"name":"bool"}}],[11,"ne","","",599,{"inputs":[{"name":"xrecordclientinfo"},{"name":"xrecordclientinfo"}],"output":{"name":"bool"}}],[11,"clone","","",599,{"inputs":[{"name":"xrecordclientinfo"}],"output":{"name":"xrecordclientinfo"}}],[11,"eq","","",600,{"inputs":[{"name":"xrecordextrange"},{"name":"xrecordextrange"}],"output":{"name":"bool"}}],[11,"ne","","",600,{"inputs":[{"name":"xrecordextrange"},{"name":"xrecordextrange"}],"output":{"name":"bool"}}],[11,"clone","","",600,{"inputs":[{"name":"xrecordextrange"}],"output":{"name":"xrecordextrange"}}],[11,"eq","","",601,{"inputs":[{"name":"xrecordinterceptdata"},{"name":"xrecordinterceptdata"}],"output":{"name":"bool"}}],[11,"ne","","",601,{"inputs":[{"name":"xrecordinterceptdata"},{"name":"xrecordinterceptdata"}],"output":{"name":"bool"}}],[11,"clone","","",601,{"inputs":[{"name":"xrecordinterceptdata"}],"output":{"name":"xrecordinterceptdata"}}],[11,"eq","","",602,{"inputs":[{"name":"xrecordrange"},{"name":"xrecordrange"}],"output":{"name":"bool"}}],[11,"ne","","",602,{"inputs":[{"name":"xrecordrange"},{"name":"xrecordrange"}],"output":{"name":"bool"}}],[11,"clone","","",602,{"inputs":[{"name":"xrecordrange"}],"output":{"name":"xrecordrange"}}],[11,"eq","","",603,{"inputs":[{"name":"xrecordrange8"},{"name":"xrecordrange8"}],"output":{"name":"bool"}}],[11,"ne","","",603,{"inputs":[{"name":"xrecordrange8"},{"name":"xrecordrange8"}],"output":{"name":"bool"}}],[11,"clone","","",603,{"inputs":[{"name":"xrecordrange8"}],"output":{"name":"xrecordrange8"}}],[11,"eq","","",604,{"inputs":[{"name":"xrecordrange16"},{"name":"xrecordrange16"}],"output":{"name":"bool"}}],[11,"ne","","",604,{"inputs":[{"name":"xrecordrange16"},{"name":"xrecordrange16"}],"output":{"name":"bool"}}],[11,"clone","","",604,{"inputs":[{"name":"xrecordrange16"}],"output":{"name":"xrecordrange16"}}],[11,"eq","","",605,{"inputs":[{"name":"xrecordstate"},{"name":"xrecordstate"}],"output":{"name":"bool"}}],[11,"ne","","",605,{"inputs":[{"name":"xrecordstate"},{"name":"xrecordstate"}],"output":{"name":"bool"}}],[11,"clone","","",605,{"inputs":[{"name":"xrecordstate"}],"output":{"name":"xrecordstate"}}],[11,"open","x11_dl::xrender","",606,{"inputs":[{"name":"xrender"}],"output":{"name":"result"}}],[11,"clone","","",607,{"inputs":[{"name":"_xanimcursor"}],"output":{"name":"_xanimcursor"}}],[11,"clone","","",608,{"inputs":[{"name":"_xcircle"}],"output":{"name":"_xcircle"}}],[11,"clone","","",609,{"inputs":[{"name":"_xconicalgradient"}],"output":{"name":"_xconicalgradient"}}],[11,"clone","","",610,{"inputs":[{"name":"_xfilters"}],"output":{"name":"_xfilters"}}],[11,"clone","","",611,{"inputs":[{"name":"_xglyphelt8"}],"output":{"name":"_xglyphelt8"}}],[11,"clone","","",612,{"inputs":[{"name":"_xglyphelt16"}],"output":{"name":"_xglyphelt16"}}],[11,"clone","","",613,{"inputs":[{"name":"_xglyphelt32"}],"output":{"name":"_xglyphelt32"}}],[11,"clone","","",614,{"inputs":[{"name":"_xglyphinfo"}],"output":{"name":"_xglyphinfo"}}],[11,"clone","","",615,{"inputs":[{"name":"_xindexvalue"}],"output":{"name":"_xindexvalue"}}],[11,"clone","","",616,{"inputs":[{"name":"_xlineargradient"}],"output":{"name":"_xlineargradient"}}],[11,"clone","","",617,{"inputs":[{"name":"_xlinefixed"}],"output":{"name":"_xlinefixed"}}],[11,"clone","","",618,{"inputs":[{"name":"_xpointdouble"}],"output":{"name":"_xpointdouble"}}],[11,"clone","","",619,{"inputs":[{"name":"_xpointfixed"}],"output":{"name":"_xpointfixed"}}],[11,"clone","","",620,{"inputs":[{"name":"_xradialgradient"}],"output":{"name":"_xradialgradient"}}],[11,"clone","","",621,{"inputs":[{"name":"xrendercolor"}],"output":{"name":"xrendercolor"}}],[11,"clone","","",622,{"inputs":[{"name":"xrenderdirectformat"}],"output":{"name":"xrenderdirectformat"}}],[11,"clone","","",623,{"inputs":[{"name":"xrenderpictformat"}],"output":{"name":"xrenderpictformat"}}],[11,"clone","","",624,{"inputs":[{"name":"_xrenderpictureattributes"}],"output":{"name":"_xrenderpictureattributes"}}],[11,"clone","","",625,{"inputs":[{"name":"_xspanfix"}],"output":{"name":"_xspanfix"}}],[11,"clone","","",626,{"inputs":[{"name":"_xtrap"}],"output":{"name":"_xtrap"}}],[11,"clone","","",627,{"inputs":[{"name":"_xtrapezoid"}],"output":{"name":"_xtrapezoid"}}],[11,"clone","","",628,{"inputs":[{"name":"_xtriangle"}],"output":{"name":"_xtriangle"}}],[11,"clone","","",629,{"inputs":[{"name":"_xtransform"}],"output":{"name":"_xtransform"}}],[11,"open","x11_dl::xt","",630,{"inputs":[{"name":"xt"}],"output":{"name":"result"}}],[11,"open","x11_dl::xtest","",631,{"inputs":[{"name":"xf86vmode"}],"output":{"name":"result"}}],[11,"fmt","glutin","",7,{"inputs":[{"name":"event"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"event"}],"output":{"name":"event"}}],[11,"clone","","",8,{"inputs":[{"name":"touchphase"}],"output":{"name":"touchphase"}}],[11,"eq","","",8,{"inputs":[{"name":"touchphase"},{"name":"touchphase"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"touchphase"},{"name":"touchphase"}],"output":{"name":"bool"}}],[11,"hash","","",8,null],[11,"fmt","","",8,{"inputs":[{"name":"touchphase"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"touch"}],"output":{"name":"touch"}}],[11,"fmt","","",0,{"inputs":[{"name":"touch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"elementstate"}],"output":{"name":"elementstate"}}],[11,"eq","","",9,{"inputs":[{"name":"elementstate"},{"name":"elementstate"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"elementstate"},{"name":"elementstate"}],"output":{"name":"bool"}}],[11,"hash","","",9,null],[11,"fmt","","",9,{"inputs":[{"name":"elementstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"mousebutton"}],"output":{"name":"mousebutton"}}],[11,"eq","","",10,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"hash","","",10,null],[11,"fmt","","",10,{"inputs":[{"name":"mousebutton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"mousescrolldelta"},{"name":"mousescrolldelta"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"mousescrolldelta"},{"name":"mousescrolldelta"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"mousescrolldelta"}],"output":{"name":"mousescrolldelta"}}],[11,"fmt","","",11,{"inputs":[{"name":"mousescrolldelta"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"virtualkeycode"}],"output":{"name":"virtualkeycode"}}],[11,"eq","","",12,{"inputs":[{"name":"virtualkeycode"},{"name":"virtualkeycode"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"virtualkeycode"},{"name":"virtualkeycode"}],"output":{"name":"bool"}}],[11,"hash","","",12,null],[11,"fmt","","",12,{"inputs":[{"name":"virtualkeycode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Initializes a new `HeadlessRendererBuilder` with default values.",1,{"inputs":[{"name":"headlessrendererbuilder"},{"name":"u32"},{"name":"u32"}],"output":{"name":"headlessrendererbuilder"}}],[11,"with_gl","","Sets how the backend should choose the OpenGL API and version.",1,{"inputs":[{"name":"headlessrendererbuilder"},{"name":"glrequest"}],"output":{"name":"headlessrendererbuilder"}}],[11,"with_gl_debug_flag","","Sets the *debug* flag for the OpenGL context.",1,{"inputs":[{"name":"headlessrendererbuilder"},{"name":"bool"}],"output":{"name":"headlessrendererbuilder"}}],[11,"with_gl_robustness","","Sets the robustness of the OpenGL context. See the docs of `Robustness`.",1,{"inputs":[{"name":"headlessrendererbuilder"},{"name":"robustness"}],"output":{"name":"headlessrendererbuilder"}}],[11,"build","","Builds the headless context.",1,{"inputs":[{"name":"headlessrendererbuilder"}],"output":{"name":"result"}}],[11,"build_strict","","Builds the headless context.",1,{"inputs":[{"name":"headlessrendererbuilder"}],"output":{"name":"result"}}],[11,"make_current","","Creates a new OpenGL context\nSets the context as the current context.",632,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"result"}}],[11,"is_current","","Returns true if this context is the current one in this thread.",632,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"bool"}}],[11,"get_proc_address","","Returns the address of an OpenGL function.",632,null],[11,"get_api","","Returns the API that is currently provided by this window.",632,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"api"}}],[11,"set_window_resize_callback","","",632,{"inputs":[{"name":"headlesscontext"},{"name":"option"}],"output":null}],[11,"make_current","","",632,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"result"}}],[11,"is_current","","",632,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"bool"}}],[11,"get_proc_address","","",632,null],[11,"swap_buffers","","",632,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"result"}}],[11,"get_api","","",632,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"api"}}],[11,"get_pixel_format","","",632,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"pixelformat"}}],[11,"new","","Initializes a new `WindowBuilder` with default values.",2,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"with_dimensions","","Requests the window to be of specific dimensions.",2,{"inputs":[{"name":"windowbuilder"},{"name":"u32"},{"name":"u32"}],"output":{"name":"windowbuilder"}}],[11,"with_min_dimensions","","Sets a minimum dimension size for the window",2,{"inputs":[{"name":"windowbuilder"},{"name":"u32"},{"name":"u32"}],"output":{"name":"windowbuilder"}}],[11,"with_max_dimensions","","Sets a maximum dimension size for the window",2,{"inputs":[{"name":"windowbuilder"},{"name":"u32"},{"name":"u32"}],"output":{"name":"windowbuilder"}}],[11,"with_title","","Requests a specific title for the window.",2,{"inputs":[{"name":"windowbuilder"},{"name":"string"}],"output":{"name":"windowbuilder"}}],[11,"with_fullscreen","","Requests fullscreen mode.",2,{"inputs":[{"name":"windowbuilder"},{"name":"monitorid"}],"output":{"name":"windowbuilder"}}],[11,"with_shared_lists","","The created window will share all its OpenGL objects with the window in the parameter.",2,{"inputs":[{"name":"windowbuilder"},{"name":"window"}],"output":{"name":"windowbuilder"}}],[11,"with_gl","","Sets how the backend should choose the OpenGL API and version.",2,{"inputs":[{"name":"windowbuilder"},{"name":"glrequest"}],"output":{"name":"windowbuilder"}}],[11,"with_gl_profile","","Sets the desired OpenGL context profile.",2,{"inputs":[{"name":"windowbuilder"},{"name":"glprofile"}],"output":{"name":"windowbuilder"}}],[11,"with_gl_debug_flag","","Sets the *debug* flag for the OpenGL context.",2,{"inputs":[{"name":"windowbuilder"},{"name":"bool"}],"output":{"name":"windowbuilder"}}],[11,"with_gl_robustness","","Sets the robustness of the OpenGL context. See the docs of `Robustness`.",2,{"inputs":[{"name":"windowbuilder"},{"name":"robustness"}],"output":{"name":"windowbuilder"}}],[11,"with_vsync","","Requests that the window has vsync enabled.",2,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"with_visibility","","Sets whether the window will be initially hidden or visible.",2,{"inputs":[{"name":"windowbuilder"},{"name":"bool"}],"output":{"name":"windowbuilder"}}],[11,"with_multisampling","","Sets the multisampling level to request.",2,{"inputs":[{"name":"windowbuilder"},{"name":"u16"}],"output":{"name":"windowbuilder"}}],[11,"with_depth_buffer","","Sets the number of bits in the depth buffer.",2,{"inputs":[{"name":"windowbuilder"},{"name":"u8"}],"output":{"name":"windowbuilder"}}],[11,"with_stencil_buffer","","Sets the number of bits in the stencil buffer.",2,{"inputs":[{"name":"windowbuilder"},{"name":"u8"}],"output":{"name":"windowbuilder"}}],[11,"with_pixel_format","","Sets the number of bits in the color buffer.",2,{"inputs":[{"name":"windowbuilder"},{"name":"u8"},{"name":"u8"}],"output":{"name":"windowbuilder"}}],[11,"with_stereoscopy","","Request the backend to be stereoscopic.",2,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"with_srgb","","Sets whether sRGB should be enabled on the window. `None` means \"I don't care\".",2,{"inputs":[{"name":"windowbuilder"},{"name":"option"}],"output":{"name":"windowbuilder"}}],[11,"with_transparency","","Sets whether the background of the window should be transparent.",2,{"inputs":[{"name":"windowbuilder"},{"name":"bool"}],"output":{"name":"windowbuilder"}}],[11,"with_decorations","","Sets whether the window should have a border, a title bar, etc.",2,{"inputs":[{"name":"windowbuilder"},{"name":"bool"}],"output":{"name":"windowbuilder"}}],[11,"with_multitouch","","Enables multitouch",2,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"build","","Builds the window.",2,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"result"}}],[11,"build_strict","","Builds the window.",2,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"result"}}],[11,"default","","",633,{"inputs":[{"name":"window"}],"output":{"name":"window"}}],[11,"new","","Creates a new OpenGL context, and a Window for platforms where this is appropriate.",633,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"set_title","","Modifies the title of the window.",633,{"inputs":[{"name":"window"},{"name":"str"}],"output":null}],[11,"show","","Shows the window if it was hidden.",633,{"inputs":[{"name":"window"}],"output":null}],[11,"hide","","Hides the window if it was visible.",633,{"inputs":[{"name":"window"}],"output":null}],[11,"get_position","","Returns the position of the top-left hand corner of the window relative to the\n top-left hand corner of the desktop.",633,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"set_position","","Modifies the position of the window.",633,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"get_inner_size","","Returns the size in points of the client area of the window.",633,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"get_inner_size_points","","Returns the size in points of the client area of the window.",633,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"get_inner_size_pixels","","Returns the size in pixels of the client area of the window.",633,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"get_outer_size","","Returns the size in pixels of the window.",633,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"set_inner_size","","Modifies the inner size of the window.",633,{"inputs":[{"name":"window"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"poll_events","","Returns an iterator that poll for the next event in the window's events queue.\nReturns `None` if there is no event in the queue.",633,{"inputs":[{"name":"window"}],"output":{"name":"polleventsiterator"}}],[11,"wait_events","","Returns an iterator that returns events one by one, blocking if necessary until one is\navailable.",633,{"inputs":[{"name":"window"}],"output":{"name":"waiteventsiterator"}}],[11,"make_current","","Sets the context as the current context.",633,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"is_current","","Returns true if this context is the current one in this thread.",633,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"get_proc_address","","Returns the address of an OpenGL function.",633,null],[11,"swap_buffers","","Swaps the buffers in case of double or triple buffering.",633,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"platform_display","","DEPRECATED. Gets the native platform specific display for this window.\nThis is typically only required when integrating with\nother libraries that need this information.",633,null],[11,"platform_window","","DEPRECATED. Gets the native platform specific window handle. This is\ntypically only required when integrating with other libraries\nthat need this information.",633,null],[11,"get_api","","Returns the API that is currently provided by this window.",633,{"inputs":[{"name":"window"}],"output":{"name":"api"}}],[11,"get_pixel_format","","Returns the pixel format of this window.",633,{"inputs":[{"name":"window"}],"output":{"name":"pixelformat"}}],[11,"create_window_proxy","","Create a window proxy for this window, that can be freely\npassed to different threads.",633,{"inputs":[{"name":"window"}],"output":{"name":"windowproxy"}}],[11,"set_window_resize_callback","","Sets a resize callback that is called by Mac (and potentially other\noperating systems) during resize operations. This can be used to repaint\nduring window resizing.",633,{"inputs":[{"name":"window"},{"name":"option"}],"output":null}],[11,"set_cursor","","Modifies the mouse cursor of the window.\nHas no effect on Android.",633,{"inputs":[{"name":"window"},{"name":"mousecursor"}],"output":null}],[11,"hidpi_factor","","Returns the ratio between the backing framebuffer resolution and the\nwindow size in screen pixels. This is typically one for a normal display\nand two for a retina display.",633,{"inputs":[{"name":"window"}],"output":{"name":"f32"}}],[11,"set_cursor_position","","Changes the position of the cursor in window coordinates.",633,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"set_cursor_state","","Sets how glutin handles the cursor. See the documentation of `CursorState` for details.",633,{"inputs":[{"name":"window"},{"name":"cursorstate"}],"output":{"name":"result"}}],[11,"make_current","","",633,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"is_current","","",633,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"get_proc_address","","",633,null],[11,"swap_buffers","","",633,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"get_api","","",633,{"inputs":[{"name":"window"}],"output":{"name":"api"}}],[11,"get_pixel_format","","",633,{"inputs":[{"name":"window"}],"output":{"name":"pixelformat"}}],[11,"clone","","",634,{"inputs":[{"name":"windowproxy"}],"output":{"name":"windowproxy"}}],[11,"wakeup_event_loop","","Triggers a blocked event loop to wake up. This is\ntypically called when another thread wants to wake\nup the blocked rendering thread to cause a refresh.",634,{"inputs":[{"name":"windowproxy"}],"output":null}],[11,"next","","",635,{"inputs":[{"name":"polleventsiterator"}],"output":{"name":"option"}}],[11,"size_hint","","",635,null],[11,"next","","",636,{"inputs":[{"name":"waiteventsiterator"}],"output":{"name":"option"}}],[11,"size_hint","","",636,null],[11,"next","","",637,{"inputs":[{"name":"availablemonitorsiter"}],"output":{"name":"option"}}],[11,"size_hint","","",637,null],[11,"get_name","","Returns a human-readable name of the monitor.",638,{"inputs":[{"name":"monitorid"}],"output":{"name":"option"}}],[11,"get_native_identifier","","Returns the native platform identifier for this monitor.",638,{"inputs":[{"name":"monitorid"}],"output":{"name":"nativemonitorid"}}],[11,"get_dimensions","","Returns the number of pixels currently displayed on the monitor.",638,null],[0,"os","","Contains traits with platform-specific methods in them.",null,null],[0,"unix","glutin::os","",null,null],[8,"WindowExt","glutin::os::unix","Additional methods on `Window` that are specific to unix.",null,null],[10,"get_xlib_window","","Returns a pointer to the `Window` object of xlib that is used by this window.",639,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_xlib_display","","Returns a pointer to the `Display` object of xlib that is used by this window.",639,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[11,"get_xlib_window","glutin","",633,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"get_xlib_display","","",633,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"eq","","",13,{"inputs":[{"name":"nativemonitorid"},{"name":"nativemonitorid"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"nativemonitorid"},{"name":"nativemonitorid"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"nativemonitorid"}],"output":{"name":"nativemonitorid"}}],[6,"ScanCode","","",null,null],[7,"GL_CORE","","The minimum core profile GL context. Useful for getting the minimum\nrequired GL version while still running on OSX, which often forbids\nthe compatibility profile features.",null,null],[8,"GlContext","","Trait that describes objects that have access to an OpenGL context.",null,null],[10,"make_current","","Sets the context as the current context.",640,{"inputs":[{"name":"glcontext"}],"output":{"name":"result"}}],[10,"is_current","","Returns true if this context is the current one in this thread.",640,{"inputs":[{"name":"glcontext"}],"output":{"name":"bool"}}],[10,"get_proc_address","","Returns the address of an OpenGL function.",640,null],[10,"swap_buffers","","Swaps the buffers in case of double or triple buffering.",640,{"inputs":[{"name":"glcontext"}],"output":{"name":"result"}}],[10,"get_api","","Returns the OpenGL API being used.",640,{"inputs":[{"name":"glcontext"}],"output":{"name":"api"}}],[10,"get_pixel_format","","Returns the pixel format of the main framebuffer of the context.",640,{"inputs":[{"name":"glcontext"}],"output":{"name":"pixelformat"}}],[11,"fmt","","",14,{"inputs":[{"name":"creationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",14,{"inputs":[{"name":"creationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",14,{"inputs":[{"name":"creationerror"}],"output":{"name":"str"}}],[11,"cause","","",14,{"inputs":[{"name":"creationerror"}],"output":{"name":"option"}}],[11,"fmt","","",15,{"inputs":[{"name":"contexterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"contexterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",15,{"inputs":[{"name":"contexterror"}],"output":{"name":"str"}}],[11,"eq","","",16,{"inputs":[{"name":"api"},{"name":"api"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"api"},{"name":"api"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"api"}],"output":{"name":"api"}}],[11,"fmt","","",16,{"inputs":[{"name":"api"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",17,{"inputs":[{"name":"glprofile"},{"name":"glprofile"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"glprofile"},{"name":"glprofile"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"glprofile"}],"output":{"name":"glprofile"}}],[11,"fmt","","",17,{"inputs":[{"name":"glprofile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"glrequest"}],"output":{"name":"glrequest"}}],[11,"fmt","","",18,{"inputs":[{"name":"glrequest"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_gl_version","","Extract the desktop GL version, if any.",18,{"inputs":[{"name":"glrequest"}],"output":{"name":"option"}}],[11,"eq","","",19,{"inputs":[{"name":"robustness"},{"name":"robustness"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"robustness"},{"name":"robustness"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"robustness"}],"output":{"name":"robustness"}}],[11,"fmt","","",19,{"inputs":[{"name":"robustness"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",20,{"inputs":[{"name":"releasebehavior"},{"name":"releasebehavior"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"releasebehavior"},{"name":"releasebehavior"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"releasebehavior"}],"output":{"name":"releasebehavior"}}],[11,"fmt","","",20,{"inputs":[{"name":"releasebehavior"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"mousecursor"}],"output":{"name":"mousecursor"}}],[11,"fmt","","",21,{"inputs":[{"name":"mousecursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"cursorstate"}],"output":{"name":"cursorstate"}}],[11,"fmt","","",22,{"inputs":[{"name":"cursorstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"pixelformat"}],"output":{"name":"pixelformat"}}],[11,"fmt","","",3,{"inputs":[{"name":"pixelformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"pixelformatrequirements"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"pixelformatrequirements"}],"output":{"name":"pixelformatrequirements"}}],[11,"default","","",4,{"inputs":[{"name":"pixelformatrequirements"}],"output":{"name":"pixelformatrequirements"}}],[11,"clone","","",5,{"inputs":[{"name":"windowattributes"}],"output":{"name":"windowattributes"}}],[11,"default","","",5,{"inputs":[{"name":"windowattributes"}],"output":{"name":"windowattributes"}}],[11,"clone","","",6,{"inputs":[{"name":"glattributes"}],"output":{"name":"glattributes"}}],[11,"map_sharing","","Turns the `sharing` parameter into another type by calling a closure.",6,{"inputs":[{"name":"glattributes"},{"name":"f"}],"output":{"name":"glattributes"}}],[11,"default","","",6,{"inputs":[{"name":"glattributes"}],"output":{"name":"glattributes"}}]],"paths":[[3,"Touch"],[3,"HeadlessRendererBuilder"],[3,"WindowBuilder"],[3,"PixelFormat"],[3,"PixelFormatRequirements"],[3,"WindowAttributes"],[3,"GlAttributes"],[4,"Event"],[4,"TouchPhase"],[4,"ElementState"],[4,"MouseButton"],[4,"MouseScrollDelta"],[4,"VirtualKeyCode"],[4,"NativeMonitorId"],[4,"CreationError"],[4,"ContextError"],[4,"Api"],[4,"GlProfile"],[4,"GlRequest"],[4,"Robustness"],[4,"ReleaseBehavior"],[4,"MouseCursor"],[4,"CursorState"],[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[8,"Error"],[3,"EscapeDefault"],[3,"Wrapping"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"ScopedKey"],[3,"KeyInner"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"RawBucket"],[3,"Bucket"],[3,"SafeHash"],[3,"FullBucket"],[3,"EmptyBucket"],[4,"BucketState"],[3,"GapThenFull"],[3,"RawTable"],[3,"RawBuckets"],[3,"RevMoveBuckets"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DefaultResizePolicy"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"DefaultState"],[3,"Iter"],[3,"IntoIter"],[3,"Rawlink"],[3,"LinkedList"],[3,"IterMut"],[3,"BinaryHeap"],[3,"Hole"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DynamicLibrary"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"WalkDir"],[3,"Path"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"InternalBufWriter"],[3,"Cursor"],[3,"Custom"],[4,"ErrorKind"],[4,"Repr"],[3,"Lazy"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"StdinRaw"],[3,"StdoutRaw"],[3,"StderrRaw"],[4,"Maybe"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Broadcast"],[3,"Chain"],[3,"Take"],[3,"Tee"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[4,"Prefix"],[4,"State"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"SignalToken"],[3,"WaitToken"],[3,"Packet"],[4,"StartResult"],[3,"Select"],[3,"Handle"],[3,"Packets"],[3,"Packet"],[3,"Packet"],[4,"Failure"],[3,"Packet"],[3,"Queue"],[3,"Queue"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"Mutex"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Semaphore"],[3,"SemaphoreGuard"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Duration"],[3,"Condvar"],[3,"EHContext"],[3,"DwarfReader"],[4,"_Unwind_Action"],[4,"_Unwind_Reason_Code"],[3,"Mutex"],[3,"LookupHost"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[3,"Flag"],[3,"PoisonError"],[4,"TryLockError"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"RWLock"],[3,"StaticKey"],[3,"Key"],[3,"CodePoint"],[3,"Wtf8Buf"],[3,"Wtf8"],[3,"Wtf8CodePoints"],[3,"EncodeWide"],[3,"Condvar"],[3,"FileDesc"],[3,"FileAttr"],[3,"OpenOptions"],[3,"FilePermissions"],[3,"FileType"],[3,"ReadDir"],[3,"Dir"],[3,"DirEntry"],[3,"File"],[3,"DirBuilder"],[3,"Mutex"],[3,"ReentrantMutex"],[3,"Socket"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"Env"],[3,"Buf"],[3,"Slice"],[3,"AnonPipe"],[3,"Command"],[4,"ExitStatus"],[3,"Process"],[3,"RWLock"],[3,"Handler"],[3,"Thread"],[3,"SteadyTime"],[3,"Stdin"],[3,"Stdout"],[3,"Stderr"],[3,"OsRng"],[3,"ReaderRng"],[3,"StdRng"],[3,"ThreadRngReseeder"],[3,"ThreadRng"],[3,"Rc"],[3,"Weak"],[4,"Ordering"],[3,"PhantomData"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"ToLowercase"],[3,"ToUppercase"],[4,"CaseMappingIter"],[3,"DecodeUtf16"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"Utf16Units"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"SipHasher"],[4,"Cow"],[3,"IntoIter"],[3,"Drain"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[4,"ChainState"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[4,"ParseError"],[3,"Drain"],[8,"Any"],[3,"TypeId"],[4,"Option"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"Unique"],[3,"Shared"],[3,"Slice"],[3,"TraitObject"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Decoded"],[4,"FullDecoded"],[4,"Part"],[3,"Formatted"],[4,"Sign"],[3,"Unpacked"],[4,"Sign"],[3,"Decimal"],[4,"ParseResult"],[4,"FloatErrorKind"],[3,"Big32x40"],[3,"Big8x3"],[3,"Fp"],[4,"FpCategory"],[4,"IntErrorKind"],[3,"NonZero"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"CharRange"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[3,"OpenError"],[4,"OpenErrorKind"],[3,"Glx"],[3,"Xcursor"],[3,"_XcursorAnimate"],[3,"_XcursorChunkHeader"],[3,"_XcursorComment"],[3,"_XcursorComments"],[3,"_XcursorCursors"],[3,"_XcursorFile"],[3,"_XcursorFileHeader"],[3,"_XcursorFileToc"],[3,"_XcursorImage"],[3,"_XcursorImages"],[3,"Xf86vmode"],[3,"XF86VidModeGamma"],[3,"XF86VidModeModeInfo"],[3,"XF86VidModeModeLine"],[3,"XF86VidModeMonitor"],[3,"XF86VidModeNotifyEvent"],[3,"XF86VidModeSyncRange"],[3,"Xlib"],[3,"XineramaScreenInfo"],[3,"XPanoramiXInfo"],[3,"XInput"],[3,"XDevice"],[3,"XDeviceControl"],[3,"XDeviceInfo"],[3,"XDeviceState"],[3,"XDeviceTimeCoord"],[3,"XExtensionVersion"],[3,"XFeedbackControl"],[3,"XFeedbackState"],[3,"XInputClass"],[3,"XInputClassInfo"],[3,"XInput2"],[3,"Struct_Unnamed1"],[3,"Struct_Unnamed2"],[3,"Struct_Unnamed3"],[3,"Struct_Unnamed4"],[3,"Union_Unnamed5"],[3,"Struct_Unnamed6"],[3,"Struct_Unnamed7"],[3,"Struct_Unnamed8"],[3,"Struct_Unnamed9"],[3,"Struct_Unnamed10"],[3,"Struct_Unnamed11"],[3,"Struct_Unnamed12"],[3,"Struct_Unnamed13"],[3,"Struct_Unnamed14"],[3,"Struct_Unnamed15"],[3,"Struct_Unnamed16"],[3,"Struct_Unnamed17"],[3,"Struct_Unnamed18"],[3,"Struct_Unnamed19"],[3,"Struct_Unnamed20"],[3,"Struct_Unnamed21"],[3,"Struct_Unnamed22"],[3,"Struct_Unnamed23"],[3,"Struct_Unnamed24"],[3,"Struct_Unnamed25"],[3,"Struct_Unnamed26"],[3,"Struct_Unnamed27"],[3,"Struct_Unnamed28"],[3,"Xlib"],[3,"XEvent"],[3,"XAnyEvent"],[3,"XButtonEvent"],[3,"XCirculateEvent"],[3,"XCirculateRequestEvent"],[3,"XClientMessageEvent"],[3,"XColormapEvent"],[3,"XConfigureEvent"],[3,"XConfigureRequestEvent"],[3,"XCreateWindowEvent"],[3,"XCrossingEvent"],[3,"XDestroyWindowEvent"],[3,"XErrorEvent"],[3,"XExposeEvent"],[3,"XFocusChangeEvent"],[3,"XGraphicsExposeEvent"],[3,"XGravityEvent"],[3,"XKeyEvent"],[3,"XKeymapEvent"],[3,"XMapEvent"],[3,"XMappingEvent"],[3,"XMapRequestEvent"],[3,"XMotionEvent"],[3,"XNoExposeEvent"],[3,"XPropertyEvent"],[3,"XReparentEvent"],[3,"XResizeRequestEvent"],[3,"XSelectionClearEvent"],[3,"XSelectionEvent"],[3,"XSelectionRequestEvent"],[3,"XUnmapEvent"],[3,"XVisibilityEvent"],[3,"_XkbDesc"],[3,"_XkbKeyAliasRec"],[3,"_XkbKeyNameRec"],[3,"_XkbNamesRec"],[3,"Depth"],[3,"Screen"],[3,"ScreenFormat"],[3,"Visual"],[3,"XArc"],[3,"XChar2b"],[3,"XCharStruct"],[3,"XClassHint"],[3,"XColor"],[3,"XComposeStatus"],[3,"XExtCodes"],[3,"XFontProp"],[3,"XFontSetExtents"],[3,"XFontStruct"],[3,"XGCValues"],[3,"XGenericEventCookie"],[3,"XHostAddress"],[3,"XIconSize"],[3,"XImage"],[3,"XKeyboardControl"],[3,"XKeyboardState"],[3,"XmbTextItem"],[3,"XModifierKeymap"],[3,"XOMCharSetList"],[3,"XPixmapFormatValues"],[3,"XPoint"],[3,"XRectangle"],[3,"XrmOptionDescRec"],[3,"XrmValue"],[3,"XSegment"],[3,"XSetWindowAttributes"],[3,"XSizeHints"],[3,"XStandardColormap"],[3,"XTextItem"],[3,"XTextItem16"],[3,"XTextProperty"],[3,"XTimeCoord"],[3,"XVisualInfo"],[3,"XwcTextItem"],[3,"XWindowAttributes"],[3,"XWindowChanges"],[3,"XWMHints"],[3,"AspectRatio"],[3,"ClientMessageData"],[3,"ImageFns"],[3,"Xmu"],[3,"Xf86vmode"],[3,"XRecordClientInfo"],[3,"XRecordExtRange"],[3,"XRecordInterceptData"],[3,"XRecordRange"],[3,"XRecordRange8"],[3,"XRecordRange16"],[3,"XRecordState"],[3,"Xrender"],[3,"_XAnimCursor"],[3,"_XCircle"],[3,"_XConicalGradient"],[3,"_XFilters"],[3,"_XGlyphElt8"],[3,"_XGlyphElt16"],[3,"_XGlyphElt32"],[3,"_XGlyphInfo"],[3,"_XIndexValue"],[3,"_XLinearGradient"],[3,"_XLineFixed"],[3,"_XPointDouble"],[3,"_XPointFixed"],[3,"_XRadialGradient"],[3,"XRenderColor"],[3,"XRenderDirectFormat"],[3,"XRenderPictFormat"],[3,"_XRenderPictureAttributes"],[3,"_XSpanFix"],[3,"_XTrap"],[3,"_XTrapezoid"],[3,"_XTriangle"],[3,"_XTransform"],[3,"Xt"],[3,"Xf86vmode"],[3,"HeadlessContext"],[3,"Window"],[3,"WindowProxy"],[3,"PollEventsIterator"],[3,"WaitEventsIterator"],[3,"AvailableMonitorsIter"],[3,"MonitorId"],[8,"WindowExt"],[8,"GlContext"]]};
searchIndex['x11_dl'] = {"items":[[0,"","x11_dl","",null,null],[0,"error","","",null,null],[3,"OpenError","x11_dl::error","",null,null],[4,"OpenErrorKind","","",null,null],[13,"Library","","",0,null],[13,"Symbol","","",0,null],[11,"fmt","","",1,{"inputs":[{"name":"openerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"openerror"}],"output":{"name":"openerror"}}],[11,"detail","","",1,{"inputs":[{"name":"openerror"}],"output":{"name":"str"}}],[11,"new","","",1,{"inputs":[{"name":"openerror"},{"name":"openerrorkind"},{"name":"string"}],"output":{"name":"openerror"}}],[11,"fmt","","",1,{"inputs":[{"name":"openerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"openerror"}],"output":{"name":"str"}}],[11,"fmt","","",0,{"inputs":[{"name":"openerrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"openerrorkind"}],"output":{"name":"openerrorkind"}}],[11,"as_str","","",0,{"inputs":[{"name":"openerrorkind"}],"output":{"name":"str"}}],[0,"glx","x11_dl","",null,null],[3,"Glx","x11_dl::glx","",null,null],[12,"glXChooseFBConfig","","",2,null],[12,"glXChooseVisual","","",2,null],[12,"glXCopyContext","","",2,null],[12,"glXCreateContext","","",2,null],[12,"glXCreateGLXPixmap","","",2,null],[12,"glXCreateNewContext","","",2,null],[12,"glXCreatePbuffer","","",2,null],[12,"glXCreatePixmap","","",2,null],[12,"glXCreateWindow","","",2,null],[12,"glXDestroyContext","","",2,null],[12,"glXDestroyGLXPixmap","","",2,null],[12,"glXDestroyPbuffer","","",2,null],[12,"glXDestroyPixmap","","",2,null],[12,"glXDestroyWindow","","",2,null],[12,"glXGetClientString","","",2,null],[12,"glXGetConfig","","",2,null],[12,"glXGetCurrentContext","","",2,null],[12,"glXGetCurrentDisplay","","",2,null],[12,"glXGetCurrentDrawable","","",2,null],[12,"glXGetCurrentReadDrawable","","",2,null],[12,"glXGetFBConfigAttrib","","",2,null],[12,"glXGetFBConfigs","","",2,null],[12,"glXGetProcAddress","","",2,null],[12,"glXGetSelectedEvent","","",2,null],[12,"glXGetVisualFromFBConfig","","",2,null],[12,"glXIsDirect","","",2,null],[12,"glXMakeContextCurrent","","",2,null],[12,"glXMakeCurrent","","",2,null],[12,"glXQueryContext","","",2,null],[12,"glXQueryDrawable","","",2,null],[12,"glXQueryExtension","","",2,null],[12,"glXQueryExtensionsString","","",2,null],[12,"glXQueryServerString","","",2,null],[12,"glXQueryVersion","","",2,null],[12,"glXSelectEvent","","",2,null],[12,"glXSwapBuffers","","",2,null],[12,"glXUseXFont","","",2,null],[12,"glXWaitGL","","",2,null],[12,"glXWaitX","","",2,null],[3,"__GLXcontextRec","","",null,null],[3,"__GLXFBConfigRec","","",null,null],[0,"arb","","",null,null],[17,"GLX_CONTEXT_MAJOR_VERSION_ARB","x11_dl::glx::arb","",null,null],[17,"GLX_CONTEXT_MINOR_VERSION_ARB","","",null,null],[17,"GLX_CONTEXT_FLAGS_ARB","","",null,null],[17,"GLX_CONTEXT_PROFILE_MASK_ARB","","",null,null],[17,"GLX_CONTEXT_DEBUG_BIT_ARB","","",null,null],[17,"GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB","","",null,null],[17,"GLX_CONTEXT_CORE_PROFILE_BIT_ARB","","",null,null],[17,"GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB","","",null,null],[0,"ext","x11_dl::glx","",null,null],[17,"GLX_SWAP_INTERVAL_EXT","x11_dl::glx::ext","",null,null],[17,"GLX_MAX_SWAP_INTERVAL_EXT","","",null,null],[6,"GLXContext","x11_dl::glx","",null,null],[6,"GLXContextID","","",null,null],[6,"GLXDrawable","","",null,null],[6,"GLXFBConfig","","",null,null],[6,"GLXFBConfigID","","",null,null],[6,"GLXPbuffer","","",null,null],[6,"GLXPixmap","","",null,null],[6,"GLXWindow","","",null,null],[17,"GLX_SLOW_CONFIG","","",null,null],[17,"GLX_NON_CONFORMANT_CONFIG","","",null,null],[17,"GLX_WINDOW_BIT","","",null,null],[17,"GLX_PIXMAP_BIT","","",null,null],[17,"GLX_PBUFFER_BIT","","",null,null],[17,"GLX_USE_GL","","",null,null],[17,"GLX_BUFFER_SIZE","","",null,null],[17,"GLX_LEVEL","","",null,null],[17,"GLX_RGBA","","",null,null],[17,"GLX_DOUBLEBUFFER","","",null,null],[17,"GLX_STEREO","","",null,null],[17,"GLX_AUX_BUFFERS","","",null,null],[17,"GLX_RED_SIZE","","",null,null],[17,"GLX_GREEN_SIZE","","",null,null],[17,"GLX_BLUE_SIZE","","",null,null],[17,"GLX_ALPHA_SIZE","","",null,null],[17,"GLX_DEPTH_SIZE","","",null,null],[17,"GLX_STENCIL_SIZE","","",null,null],[17,"GLX_ACCUM_RED_SIZE","","",null,null],[17,"GLX_ACCUM_GREEN_SIZE","","",null,null],[17,"GLX_ACCUM_BLUE_SIZE","","",null,null],[17,"GLX_ACCUM_ALPHA_SIZE","","",null,null],[17,"GLX_CONFIG_CAVEAT","","",null,null],[17,"GLX_X_VISUAL_TYPE","","",null,null],[17,"GLX_TRANSPARENT_TYPE","","",null,null],[17,"GLX_TRANSPARENT_INDEX_VALUE","","",null,null],[17,"GLX_TRANSPARENT_RED_VALUE","","",null,null],[17,"GLX_TRANSPARENT_GREEN_VALUE","","",null,null],[17,"GLX_TRANSPARENT_BLUE_VALUE","","",null,null],[17,"GLX_TRANSPARENT_ALPHA_VALUE","","",null,null],[17,"GLX_DRAWABLE_TYPE","","",null,null],[17,"GLX_RENDER_TYPE","","",null,null],[17,"GLX_X_RENDERABLE","","",null,null],[17,"GLX_FBCONFIG_ID","","",null,null],[17,"GLX_DONT_CARE","","",null,null],[17,"GLX_NONE","","",null,null],[17,"GLX_RGBA_BIT","","",null,null],[17,"GLX_COLOR_INDEX_BIT","","",null,null],[17,"GLX_TRANSPARENT_RGB","","",null,null],[17,"GLX_TRANSPARENT_INDEX","","",null,null],[17,"GLX_TRUE_COLOR","","",null,null],[17,"GLX_DIRECT_COLOR","","",null,null],[17,"GLX_PSEUDO_COLOR","","",null,null],[17,"GLX_STATIC_COLOR","","",null,null],[17,"GLX_GRAY_SCALE","","",null,null],[17,"GLX_STATIC_GRAY","","",null,null],[11,"open","","",2,{"inputs":[{"name":"glx"}],"output":{"name":"result"}}],[0,"keysym","x11_dl","",null,null],[17,"XK_BackSpace","x11_dl::keysym","",null,null],[17,"XK_Tab","","",null,null],[17,"XK_Linefeed","","",null,null],[17,"XK_Clear","","",null,null],[17,"XK_Return","","",null,null],[17,"XK_Pause","","",null,null],[17,"XK_Scroll_Lock","","",null,null],[17,"XK_Sys_Req","","",null,null],[17,"XK_Escape","","",null,null],[17,"XK_Delete","","",null,null],[17,"XK_Multi_key","","",null,null],[17,"XK_Kanji","","",null,null],[17,"XK_Muhenkan","","",null,null],[17,"XK_Henkan_Mode","","",null,null],[17,"XK_Henkan","","",null,null],[17,"XK_Romaji","","",null,null],[17,"XK_Hiragana","","",null,null],[17,"XK_Katakana","","",null,null],[17,"XK_Hiragana_Katakana","","",null,null],[17,"XK_Zenkaku","","",null,null],[17,"XK_Hankaku","","",null,null],[17,"XK_Zenkaku_Hankaku","","",null,null],[17,"XK_Touroku","","",null,null],[17,"XK_Massyo","","",null,null],[17,"XK_Kana_Lock","","",null,null],[17,"XK_Kana_Shift","","",null,null],[17,"XK_Eisu_Shift","","",null,null],[17,"XK_Eisu_toggle","","",null,null],[17,"XK_Home","","",null,null],[17,"XK_Left","","",null,null],[17,"XK_Up","","",null,null],[17,"XK_Right","","",null,null],[17,"XK_Down","","",null,null],[17,"XK_Prior","","",null,null],[17,"XK_Page_Up","","",null,null],[17,"XK_Next","","",null,null],[17,"XK_Page_Down","","",null,null],[17,"XK_End","","",null,null],[17,"XK_Begin","","",null,null],[17,"XK_Win_L","","",null,null],[17,"XK_Win_R","","",null,null],[17,"XK_App","","",null,null],[17,"XK_Select","","",null,null],[17,"XK_Print","","",null,null],[17,"XK_Execute","","",null,null],[17,"XK_Insert","","",null,null],[17,"XK_Undo","","",null,null],[17,"XK_Redo","","",null,null],[17,"XK_Menu","","",null,null],[17,"XK_Find","","",null,null],[17,"XK_Cancel","","",null,null],[17,"XK_Help","","",null,null],[17,"XK_Break","","",null,null],[17,"XK_Mode_switch","","",null,null],[17,"XK_script_switch","","",null,null],[17,"XK_Num_Lock","","",null,null],[17,"XK_KP_Space","","",null,null],[17,"XK_KP_Tab","","",null,null],[17,"XK_KP_Enter","","",null,null],[17,"XK_KP_F1","","",null,null],[17,"XK_KP_F2","","",null,null],[17,"XK_KP_F3","","",null,null],[17,"XK_KP_F4","","",null,null],[17,"XK_KP_Home","","",null,null],[17,"XK_KP_Left","","",null,null],[17,"XK_KP_Up","","",null,null],[17,"XK_KP_Right","","",null,null],[17,"XK_KP_Down","","",null,null],[17,"XK_KP_Prior","","",null,null],[17,"XK_KP_Page_Up","","",null,null],[17,"XK_KP_Next","","",null,null],[17,"XK_KP_Page_Down","","",null,null],[17,"XK_KP_End","","",null,null],[17,"XK_KP_Begin","","",null,null],[17,"XK_KP_Insert","","",null,null],[17,"XK_KP_Delete","","",null,null],[17,"XK_KP_Equal","","",null,null],[17,"XK_KP_Multiply","","",null,null],[17,"XK_KP_Add","","",null,null],[17,"XK_KP_Separator","","",null,null],[17,"XK_KP_Subtract","","",null,null],[17,"XK_KP_Decimal","","",null,null],[17,"XK_KP_Divide","","",null,null],[17,"XK_KP_0","","",null,null],[17,"XK_KP_1","","",null,null],[17,"XK_KP_2","","",null,null],[17,"XK_KP_3","","",null,null],[17,"XK_KP_4","","",null,null],[17,"XK_KP_5","","",null,null],[17,"XK_KP_6","","",null,null],[17,"XK_KP_7","","",null,null],[17,"XK_KP_8","","",null,null],[17,"XK_KP_9","","",null,null],[17,"XK_F1","","",null,null],[17,"XK_F2","","",null,null],[17,"XK_F3","","",null,null],[17,"XK_F4","","",null,null],[17,"XK_F5","","",null,null],[17,"XK_F6","","",null,null],[17,"XK_F7","","",null,null],[17,"XK_F8","","",null,null],[17,"XK_F9","","",null,null],[17,"XK_F10","","",null,null],[17,"XK_F11","","",null,null],[17,"XK_L1","","",null,null],[17,"XK_F12","","",null,null],[17,"XK_L2","","",null,null],[17,"XK_F13","","",null,null],[17,"XK_L3","","",null,null],[17,"XK_F14","","",null,null],[17,"XK_L4","","",null,null],[17,"XK_F15","","",null,null],[17,"XK_L5","","",null,null],[17,"XK_F16","","",null,null],[17,"XK_L6","","",null,null],[17,"XK_F17","","",null,null],[17,"XK_L7","","",null,null],[17,"XK_F18","","",null,null],[17,"XK_L8","","",null,null],[17,"XK_F19","","",null,null],[17,"XK_L9","","",null,null],[17,"XK_F20","","",null,null],[17,"XK_L10","","",null,null],[17,"XK_F21","","",null,null],[17,"XK_R1","","",null,null],[17,"XK_F22","","",null,null],[17,"XK_R2","","",null,null],[17,"XK_F23","","",null,null],[17,"XK_R3","","",null,null],[17,"XK_F24","","",null,null],[17,"XK_R4","","",null,null],[17,"XK_F25","","",null,null],[17,"XK_R5","","",null,null],[17,"XK_F26","","",null,null],[17,"XK_R6","","",null,null],[17,"XK_F27","","",null,null],[17,"XK_R7","","",null,null],[17,"XK_F28","","",null,null],[17,"XK_R8","","",null,null],[17,"XK_F29","","",null,null],[17,"XK_R9","","",null,null],[17,"XK_F30","","",null,null],[17,"XK_R10","","",null,null],[17,"XK_F31","","",null,null],[17,"XK_R11","","",null,null],[17,"XK_F32","","",null,null],[17,"XK_R12","","",null,null],[17,"XK_F33","","",null,null],[17,"XK_R13","","",null,null],[17,"XK_F34","","",null,null],[17,"XK_R14","","",null,null],[17,"XK_F35","","",null,null],[17,"XK_R15","","",null,null],[17,"XK_Shift_L","","",null,null],[17,"XK_Shift_R","","",null,null],[17,"XK_Control_L","","",null,null],[17,"XK_Control_R","","",null,null],[17,"XK_Caps_Lock","","",null,null],[17,"XK_Shift_Lock","","",null,null],[17,"XK_Meta_L","","",null,null],[17,"XK_Meta_R","","",null,null],[17,"XK_Alt_L","","",null,null],[17,"XK_Alt_R","","",null,null],[17,"XK_Super_L","","",null,null],[17,"XK_Super_R","","",null,null],[17,"XK_Hyper_L","","",null,null],[17,"XK_Hyper_R","","",null,null],[17,"XK_space","","",null,null],[17,"XK_exclam","","",null,null],[17,"XK_quotedbl","","",null,null],[17,"XK_numbersign","","",null,null],[17,"XK_dollar","","",null,null],[17,"XK_percent","","",null,null],[17,"XK_ampersand","","",null,null],[17,"XK_apostrophe","","",null,null],[17,"XK_quoteright","","",null,null],[17,"XK_parenleft","","",null,null],[17,"XK_parenright","","",null,null],[17,"XK_asterisk","","",null,null],[17,"XK_plus","","",null,null],[17,"XK_comma","","",null,null],[17,"XK_minus","","",null,null],[17,"XK_period","","",null,null],[17,"XK_slash","","",null,null],[17,"XK_0","","",null,null],[17,"XK_1","","",null,null],[17,"XK_2","","",null,null],[17,"XK_3","","",null,null],[17,"XK_4","","",null,null],[17,"XK_5","","",null,null],[17,"XK_6","","",null,null],[17,"XK_7","","",null,null],[17,"XK_8","","",null,null],[17,"XK_9","","",null,null],[17,"XK_colon","","",null,null],[17,"XK_semicolon","","",null,null],[17,"XK_less","","",null,null],[17,"XK_equal","","",null,null],[17,"XK_greater","","",null,null],[17,"XK_question","","",null,null],[17,"XK_at","","",null,null],[17,"XK_A","","",null,null],[17,"XK_B","","",null,null],[17,"XK_C","","",null,null],[17,"XK_D","","",null,null],[17,"XK_E","","",null,null],[17,"XK_F","","",null,null],[17,"XK_G","","",null,null],[17,"XK_H","","",null,null],[17,"XK_I","","",null,null],[17,"XK_J","","",null,null],[17,"XK_K","","",null,null],[17,"XK_L","","",null,null],[17,"XK_M","","",null,null],[17,"XK_N","","",null,null],[17,"XK_O","","",null,null],[17,"XK_P","","",null,null],[17,"XK_Q","","",null,null],[17,"XK_R","","",null,null],[17,"XK_S","","",null,null],[17,"XK_T","","",null,null],[17,"XK_U","","",null,null],[17,"XK_V","","",null,null],[17,"XK_W","","",null,null],[17,"XK_X","","",null,null],[17,"XK_Y","","",null,null],[17,"XK_Z","","",null,null],[17,"XK_bracketleft","","",null,null],[17,"XK_backslash","","",null,null],[17,"XK_bracketright","","",null,null],[17,"XK_asciicircum","","",null,null],[17,"XK_underscore","","",null,null],[17,"XK_grave","","",null,null],[17,"XK_quoteleft","","",null,null],[17,"XK_a","","",null,null],[17,"XK_b","","",null,null],[17,"XK_c","","",null,null],[17,"XK_d","","",null,null],[17,"XK_e","","",null,null],[17,"XK_f","","",null,null],[17,"XK_g","","",null,null],[17,"XK_h","","",null,null],[17,"XK_i","","",null,null],[17,"XK_j","","",null,null],[17,"XK_k","","",null,null],[17,"XK_l","","",null,null],[17,"XK_m","","",null,null],[17,"XK_n","","",null,null],[17,"XK_o","","",null,null],[17,"XK_p","","",null,null],[17,"XK_q","","",null,null],[17,"XK_r","","",null,null],[17,"XK_s","","",null,null],[17,"XK_t","","",null,null],[17,"XK_u","","",null,null],[17,"XK_v","","",null,null],[17,"XK_w","","",null,null],[17,"XK_x","","",null,null],[17,"XK_y","","",null,null],[17,"XK_z","","",null,null],[17,"XK_braceleft","","",null,null],[17,"XK_bar","","",null,null],[17,"XK_braceright","","",null,null],[17,"XK_asciitilde","","",null,null],[17,"XK_nobreakspace","","",null,null],[17,"XK_exclamdown","","",null,null],[17,"XK_cent","","",null,null],[17,"XK_sterling","","",null,null],[17,"XK_currency","","",null,null],[17,"XK_yen","","",null,null],[17,"XK_brokenbar","","",null,null],[17,"XK_section","","",null,null],[17,"XK_diaeresis","","",null,null],[17,"XK_copyright","","",null,null],[17,"XK_ordfeminine","","",null,null],[17,"XK_guillemotleft","","",null,null],[17,"XK_notsign","","",null,null],[17,"XK_hyphen","","",null,null],[17,"XK_registered","","",null,null],[17,"XK_macron","","",null,null],[17,"XK_degree","","",null,null],[17,"XK_plusminus","","",null,null],[17,"XK_twosuperior","","",null,null],[17,"XK_threesuperior","","",null,null],[17,"XK_acute","","",null,null],[17,"XK_mu","","",null,null],[17,"XK_paragraph","","",null,null],[17,"XK_periodcentered","","",null,null],[17,"XK_cedilla","","",null,null],[17,"XK_onesuperior","","",null,null],[17,"XK_masculine","","",null,null],[17,"XK_guillemotright","","",null,null],[17,"XK_onequarter","","",null,null],[17,"XK_onehalf","","",null,null],[17,"XK_threequarters","","",null,null],[17,"XK_questiondown","","",null,null],[17,"XK_Agrave","","",null,null],[17,"XK_Aacute","","",null,null],[17,"XK_Acircumflex","","",null,null],[17,"XK_Atilde","","",null,null],[17,"XK_Adiaeresis","","",null,null],[17,"XK_Aring","","",null,null],[17,"XK_AE","","",null,null],[17,"XK_Ccedilla","","",null,null],[17,"XK_Egrave","","",null,null],[17,"XK_Eacute","","",null,null],[17,"XK_Ecircumflex","","",null,null],[17,"XK_Ediaeresis","","",null,null],[17,"XK_Igrave","","",null,null],[17,"XK_Iacute","","",null,null],[17,"XK_Icircumflex","","",null,null],[17,"XK_Idiaeresis","","",null,null],[17,"XK_ETH","","",null,null],[17,"XK_Eth","","",null,null],[17,"XK_Ntilde","","",null,null],[17,"XK_Ograve","","",null,null],[17,"XK_Oacute","","",null,null],[17,"XK_Ocircumflex","","",null,null],[17,"XK_Otilde","","",null,null],[17,"XK_Odiaeresis","","",null,null],[17,"XK_multiply","","",null,null],[17,"XK_Ooblique","","",null,null],[17,"XK_Ugrave","","",null,null],[17,"XK_Uacute","","",null,null],[17,"XK_Ucircumflex","","",null,null],[17,"XK_Udiaeresis","","",null,null],[17,"XK_Yacute","","",null,null],[17,"XK_THORN","","",null,null],[17,"XK_Thorn","","",null,null],[17,"XK_ssharp","","",null,null],[17,"XK_agrave","","",null,null],[17,"XK_aacute","","",null,null],[17,"XK_acircumflex","","",null,null],[17,"XK_atilde","","",null,null],[17,"XK_adiaeresis","","",null,null],[17,"XK_aring","","",null,null],[17,"XK_ae","","",null,null],[17,"XK_ccedilla","","",null,null],[17,"XK_egrave","","",null,null],[17,"XK_eacute","","",null,null],[17,"XK_ecircumflex","","",null,null],[17,"XK_ediaeresis","","",null,null],[17,"XK_igrave","","",null,null],[17,"XK_iacute","","",null,null],[17,"XK_icircumflex","","",null,null],[17,"XK_idiaeresis","","",null,null],[17,"XK_eth","","",null,null],[17,"XK_ntilde","","",null,null],[17,"XK_ograve","","",null,null],[17,"XK_oacute","","",null,null],[17,"XK_ocircumflex","","",null,null],[17,"XK_otilde","","",null,null],[17,"XK_odiaeresis","","",null,null],[17,"XK_division","","",null,null],[17,"XK_oslash","","",null,null],[17,"XK_ugrave","","",null,null],[17,"XK_uacute","","",null,null],[17,"XK_ucircumflex","","",null,null],[17,"XK_udiaeresis","","",null,null],[17,"XK_yacute","","",null,null],[17,"XK_thorn","","",null,null],[17,"XK_ydiaeresis","","",null,null],[17,"XK_Aogonek","","",null,null],[17,"XK_breve","","",null,null],[17,"XK_Lstroke","","",null,null],[17,"XK_Lcaron","","",null,null],[17,"XK_Sacute","","",null,null],[17,"XK_Scaron","","",null,null],[17,"XK_Scedilla","","",null,null],[17,"XK_Tcaron","","",null,null],[17,"XK_Zacute","","",null,null],[17,"XK_Zcaron","","",null,null],[17,"XK_Zabovedot","","",null,null],[17,"XK_aogonek","","",null,null],[17,"XK_ogonek","","",null,null],[17,"XK_lstroke","","",null,null],[17,"XK_lcaron","","",null,null],[17,"XK_sacute","","",null,null],[17,"XK_caron","","",null,null],[17,"XK_scaron","","",null,null],[17,"XK_scedilla","","",null,null],[17,"XK_tcaron","","",null,null],[17,"XK_zacute","","",null,null],[17,"XK_doubleacute","","",null,null],[17,"XK_zcaron","","",null,null],[17,"XK_zabovedot","","",null,null],[17,"XK_Racute","","",null,null],[17,"XK_Abreve","","",null,null],[17,"XK_Lacute","","",null,null],[17,"XK_Cacute","","",null,null],[17,"XK_Ccaron","","",null,null],[17,"XK_Eogonek","","",null,null],[17,"XK_Ecaron","","",null,null],[17,"XK_Dcaron","","",null,null],[17,"XK_Dstroke","","",null,null],[17,"XK_Nacute","","",null,null],[17,"XK_Ncaron","","",null,null],[17,"XK_Odoubleacute","","",null,null],[17,"XK_Rcaron","","",null,null],[17,"XK_Uring","","",null,null],[17,"XK_Udoubleacute","","",null,null],[17,"XK_Tcedilla","","",null,null],[17,"XK_racute","","",null,null],[17,"XK_abreve","","",null,null],[17,"XK_lacute","","",null,null],[17,"XK_cacute","","",null,null],[17,"XK_ccaron","","",null,null],[17,"XK_eogonek","","",null,null],[17,"XK_ecaron","","",null,null],[17,"XK_dcaron","","",null,null],[17,"XK_dstroke","","",null,null],[17,"XK_nacute","","",null,null],[17,"XK_ncaron","","",null,null],[17,"XK_odoubleacute","","",null,null],[17,"XK_udoubleacute","","",null,null],[17,"XK_rcaron","","",null,null],[17,"XK_uring","","",null,null],[17,"XK_tcedilla","","",null,null],[17,"XK_abovedot","","",null,null],[17,"XK_Hstroke","","",null,null],[17,"XK_Hcircumflex","","",null,null],[17,"XK_Iabovedot","","",null,null],[17,"XK_Gbreve","","",null,null],[17,"XK_Jcircumflex","","",null,null],[17,"XK_hstroke","","",null,null],[17,"XK_hcircumflex","","",null,null],[17,"XK_idotless","","",null,null],[17,"XK_gbreve","","",null,null],[17,"XK_jcircumflex","","",null,null],[17,"XK_Cabovedot","","",null,null],[17,"XK_Ccircumflex","","",null,null],[17,"XK_Gabovedot","","",null,null],[17,"XK_Gcircumflex","","",null,null],[17,"XK_Ubreve","","",null,null],[17,"XK_Scircumflex","","",null,null],[17,"XK_cabovedot","","",null,null],[17,"XK_ccircumflex","","",null,null],[17,"XK_gabovedot","","",null,null],[17,"XK_gcircumflex","","",null,null],[17,"XK_ubreve","","",null,null],[17,"XK_scircumflex","","",null,null],[17,"XK_kra","","",null,null],[17,"XK_kappa","","",null,null],[17,"XK_Rcedilla","","",null,null],[17,"XK_Itilde","","",null,null],[17,"XK_Lcedilla","","",null,null],[17,"XK_Emacron","","",null,null],[17,"XK_Gcedilla","","",null,null],[17,"XK_Tslash","","",null,null],[17,"XK_rcedilla","","",null,null],[17,"XK_itilde","","",null,null],[17,"XK_lcedilla","","",null,null],[17,"XK_emacron","","",null,null],[17,"XK_gcedilla","","",null,null],[17,"XK_tslash","","",null,null],[17,"XK_ENG","","",null,null],[17,"XK_eng","","",null,null],[17,"XK_Amacron","","",null,null],[17,"XK_Iogonek","","",null,null],[17,"XK_Eabovedot","","",null,null],[17,"XK_Imacron","","",null,null],[17,"XK_Ncedilla","","",null,null],[17,"XK_Omacron","","",null,null],[17,"XK_Kcedilla","","",null,null],[17,"XK_Uogonek","","",null,null],[17,"XK_Utilde","","",null,null],[17,"XK_Umacron","","",null,null],[17,"XK_amacron","","",null,null],[17,"XK_iogonek","","",null,null],[17,"XK_eabovedot","","",null,null],[17,"XK_imacron","","",null,null],[17,"XK_ncedilla","","",null,null],[17,"XK_omacron","","",null,null],[17,"XK_kcedilla","","",null,null],[17,"XK_uogonek","","",null,null],[17,"XK_utilde","","",null,null],[17,"XK_umacron","","",null,null],[17,"XK_overline","","",null,null],[17,"XK_kana_fullstop","","",null,null],[17,"XK_kana_openingbracket","","",null,null],[17,"XK_kana_closingbracket","","",null,null],[17,"XK_kana_comma","","",null,null],[17,"XK_kana_conjunctive","","",null,null],[17,"XK_kana_middledot","","",null,null],[17,"XK_kana_WO","","",null,null],[17,"XK_kana_a","","",null,null],[17,"XK_kana_i","","",null,null],[17,"XK_kana_u","","",null,null],[17,"XK_kana_e","","",null,null],[17,"XK_kana_o","","",null,null],[17,"XK_kana_ya","","",null,null],[17,"XK_kana_yu","","",null,null],[17,"XK_kana_yo","","",null,null],[17,"XK_kana_tsu","","",null,null],[17,"XK_kana_tu","","",null,null],[17,"XK_prolongedsound","","",null,null],[17,"XK_kana_A","","",null,null],[17,"XK_kana_I","","",null,null],[17,"XK_kana_U","","",null,null],[17,"XK_kana_E","","",null,null],[17,"XK_kana_O","","",null,null],[17,"XK_kana_KA","","",null,null],[17,"XK_kana_KI","","",null,null],[17,"XK_kana_KU","","",null,null],[17,"XK_kana_KE","","",null,null],[17,"XK_kana_KO","","",null,null],[17,"XK_kana_SA","","",null,null],[17,"XK_kana_SHI","","",null,null],[17,"XK_kana_SU","","",null,null],[17,"XK_kana_SE","","",null,null],[17,"XK_kana_SO","","",null,null],[17,"XK_kana_TA","","",null,null],[17,"XK_kana_CHI","","",null,null],[17,"XK_kana_TI","","",null,null],[17,"XK_kana_TSU","","",null,null],[17,"XK_kana_TU","","",null,null],[17,"XK_kana_TE","","",null,null],[17,"XK_kana_TO","","",null,null],[17,"XK_kana_NA","","",null,null],[17,"XK_kana_NI","","",null,null],[17,"XK_kana_NU","","",null,null],[17,"XK_kana_NE","","",null,null],[17,"XK_kana_NO","","",null,null],[17,"XK_kana_HA","","",null,null],[17,"XK_kana_HI","","",null,null],[17,"XK_kana_FU","","",null,null],[17,"XK_kana_HU","","",null,null],[17,"XK_kana_HE","","",null,null],[17,"XK_kana_HO","","",null,null],[17,"XK_kana_MA","","",null,null],[17,"XK_kana_MI","","",null,null],[17,"XK_kana_MU","","",null,null],[17,"XK_kana_ME","","",null,null],[17,"XK_kana_MO","","",null,null],[17,"XK_kana_YA","","",null,null],[17,"XK_kana_YU","","",null,null],[17,"XK_kana_YO","","",null,null],[17,"XK_kana_RA","","",null,null],[17,"XK_kana_RI","","",null,null],[17,"XK_kana_RU","","",null,null],[17,"XK_kana_RE","","",null,null],[17,"XK_kana_RO","","",null,null],[17,"XK_kana_WA","","",null,null],[17,"XK_kana_N","","",null,null],[17,"XK_voicedsound","","",null,null],[17,"XK_semivoicedsound","","",null,null],[17,"XK_kana_switch","","",null,null],[17,"XK_Arabic_comma","","",null,null],[17,"XK_Arabic_semicolon","","",null,null],[17,"XK_Arabic_question_mark","","",null,null],[17,"XK_Arabic_hamza","","",null,null],[17,"XK_Arabic_maddaonalef","","",null,null],[17,"XK_Arabic_hamzaonalef","","",null,null],[17,"XK_Arabic_hamzaonwaw","","",null,null],[17,"XK_Arabic_hamzaunderalef","","",null,null],[17,"XK_Arabic_hamzaonyeh","","",null,null],[17,"XK_Arabic_alef","","",null,null],[17,"XK_Arabic_beh","","",null,null],[17,"XK_Arabic_tehmarbuta","","",null,null],[17,"XK_Arabic_teh","","",null,null],[17,"XK_Arabic_theh","","",null,null],[17,"XK_Arabic_jeem","","",null,null],[17,"XK_Arabic_hah","","",null,null],[17,"XK_Arabic_khah","","",null,null],[17,"XK_Arabic_dal","","",null,null],[17,"XK_Arabic_thal","","",null,null],[17,"XK_Arabic_ra","","",null,null],[17,"XK_Arabic_zain","","",null,null],[17,"XK_Arabic_seen","","",null,null],[17,"XK_Arabic_sheen","","",null,null],[17,"XK_Arabic_sad","","",null,null],[17,"XK_Arabic_dad","","",null,null],[17,"XK_Arabic_tah","","",null,null],[17,"XK_Arabic_zah","","",null,null],[17,"XK_Arabic_ain","","",null,null],[17,"XK_Arabic_ghain","","",null,null],[17,"XK_Arabic_tatweel","","",null,null],[17,"XK_Arabic_feh","","",null,null],[17,"XK_Arabic_qaf","","",null,null],[17,"XK_Arabic_kaf","","",null,null],[17,"XK_Arabic_lam","","",null,null],[17,"XK_Arabic_meem","","",null,null],[17,"XK_Arabic_noon","","",null,null],[17,"XK_Arabic_ha","","",null,null],[17,"XK_Arabic_heh","","",null,null],[17,"XK_Arabic_waw","","",null,null],[17,"XK_Arabic_alefmaksura","","",null,null],[17,"XK_Arabic_yeh","","",null,null],[17,"XK_Arabic_fathatan","","",null,null],[17,"XK_Arabic_dammatan","","",null,null],[17,"XK_Arabic_kasratan","","",null,null],[17,"XK_Arabic_fatha","","",null,null],[17,"XK_Arabic_damma","","",null,null],[17,"XK_Arabic_kasra","","",null,null],[17,"XK_Arabic_shadda","","",null,null],[17,"XK_Arabic_sukun","","",null,null],[17,"XK_Arabic_switch","","",null,null],[17,"XK_Serbian_dje","","",null,null],[17,"XK_Macedonia_gje","","",null,null],[17,"XK_Cyrillic_io","","",null,null],[17,"XK_Ukrainian_ie","","",null,null],[17,"XK_Ukranian_je","","",null,null],[17,"XK_Macedonia_dse","","",null,null],[17,"XK_Ukrainian_i","","",null,null],[17,"XK_Ukranian_i","","",null,null],[17,"XK_Ukrainian_yi","","",null,null],[17,"XK_Ukranian_yi","","",null,null],[17,"XK_Cyrillic_je","","",null,null],[17,"XK_Serbian_je","","",null,null],[17,"XK_Cyrillic_lje","","",null,null],[17,"XK_Serbian_lje","","",null,null],[17,"XK_Cyrillic_nje","","",null,null],[17,"XK_Serbian_nje","","",null,null],[17,"XK_Serbian_tshe","","",null,null],[17,"XK_Macedonia_kje","","",null,null],[17,"XK_Byelorussian_shortu","","",null,null],[17,"XK_Cyrillic_dzhe","","",null,null],[17,"XK_Serbian_dze","","",null,null],[17,"XK_numerosign","","",null,null],[17,"XK_Serbian_DJE","","",null,null],[17,"XK_Macedonia_GJE","","",null,null],[17,"XK_Cyrillic_IO","","",null,null],[17,"XK_Ukrainian_IE","","",null,null],[17,"XK_Ukranian_JE","","",null,null],[17,"XK_Macedonia_DSE","","",null,null],[17,"XK_Ukrainian_I","","",null,null],[17,"XK_Ukranian_I","","",null,null],[17,"XK_Ukrainian_YI","","",null,null],[17,"XK_Ukranian_YI","","",null,null],[17,"XK_Cyrillic_JE","","",null,null],[17,"XK_Serbian_JE","","",null,null],[17,"XK_Cyrillic_LJE","","",null,null],[17,"XK_Serbian_LJE","","",null,null],[17,"XK_Cyrillic_NJE","","",null,null],[17,"XK_Serbian_NJE","","",null,null],[17,"XK_Serbian_TSHE","","",null,null],[17,"XK_Macedonia_KJE","","",null,null],[17,"XK_Byelorussian_SHORTU","","",null,null],[17,"XK_Cyrillic_DZHE","","",null,null],[17,"XK_Serbian_DZE","","",null,null],[17,"XK_Cyrillic_yu","","",null,null],[17,"XK_Cyrillic_a","","",null,null],[17,"XK_Cyrillic_be","","",null,null],[17,"XK_Cyrillic_tse","","",null,null],[17,"XK_Cyrillic_de","","",null,null],[17,"XK_Cyrillic_ie","","",null,null],[17,"XK_Cyrillic_ef","","",null,null],[17,"XK_Cyrillic_ghe","","",null,null],[17,"XK_Cyrillic_ha","","",null,null],[17,"XK_Cyrillic_i","","",null,null],[17,"XK_Cyrillic_shorti","","",null,null],[17,"XK_Cyrillic_ka","","",null,null],[17,"XK_Cyrillic_el","","",null,null],[17,"XK_Cyrillic_em","","",null,null],[17,"XK_Cyrillic_en","","",null,null],[17,"XK_Cyrillic_o","","",null,null],[17,"XK_Cyrillic_pe","","",null,null],[17,"XK_Cyrillic_ya","","",null,null],[17,"XK_Cyrillic_er","","",null,null],[17,"XK_Cyrillic_es","","",null,null],[17,"XK_Cyrillic_te","","",null,null],[17,"XK_Cyrillic_u","","",null,null],[17,"XK_Cyrillic_zhe","","",null,null],[17,"XK_Cyrillic_ve","","",null,null],[17,"XK_Cyrillic_softsign","","",null,null],[17,"XK_Cyrillic_yeru","","",null,null],[17,"XK_Cyrillic_ze","","",null,null],[17,"XK_Cyrillic_sha","","",null,null],[17,"XK_Cyrillic_e","","",null,null],[17,"XK_Cyrillic_shcha","","",null,null],[17,"XK_Cyrillic_che","","",null,null],[17,"XK_Cyrillic_hardsign","","",null,null],[17,"XK_Cyrillic_YU","","",null,null],[17,"XK_Cyrillic_A","","",null,null],[17,"XK_Cyrillic_BE","","",null,null],[17,"XK_Cyrillic_TSE","","",null,null],[17,"XK_Cyrillic_DE","","",null,null],[17,"XK_Cyrillic_IE","","",null,null],[17,"XK_Cyrillic_EF","","",null,null],[17,"XK_Cyrillic_GHE","","",null,null],[17,"XK_Cyrillic_HA","","",null,null],[17,"XK_Cyrillic_I","","",null,null],[17,"XK_Cyrillic_SHORTI","","",null,null],[17,"XK_Cyrillic_KA","","",null,null],[17,"XK_Cyrillic_EL","","",null,null],[17,"XK_Cyrillic_EM","","",null,null],[17,"XK_Cyrillic_EN","","",null,null],[17,"XK_Cyrillic_O","","",null,null],[17,"XK_Cyrillic_PE","","",null,null],[17,"XK_Cyrillic_YA","","",null,null],[17,"XK_Cyrillic_ER","","",null,null],[17,"XK_Cyrillic_ES","","",null,null],[17,"XK_Cyrillic_TE","","",null,null],[17,"XK_Cyrillic_U","","",null,null],[17,"XK_Cyrillic_ZHE","","",null,null],[17,"XK_Cyrillic_VE","","",null,null],[17,"XK_Cyrillic_SOFTSIGN","","",null,null],[17,"XK_Cyrillic_YERU","","",null,null],[17,"XK_Cyrillic_ZE","","",null,null],[17,"XK_Cyrillic_SHA","","",null,null],[17,"XK_Cyrillic_E","","",null,null],[17,"XK_Cyrillic_SHCHA","","",null,null],[17,"XK_Cyrillic_CHE","","",null,null],[17,"XK_Cyrillic_HARDSIGN","","",null,null],[17,"XK_Greek_ALPHAaccent","","",null,null],[17,"XK_Greek_EPSILONaccent","","",null,null],[17,"XK_Greek_ETAaccent","","",null,null],[17,"XK_Greek_IOTAaccent","","",null,null],[17,"XK_Greek_IOTAdiaeresis","","",null,null],[17,"XK_Greek_OMICRONaccent","","",null,null],[17,"XK_Greek_UPSILONaccent","","",null,null],[17,"XK_Greek_UPSILONdieresis","","",null,null],[17,"XK_Greek_OMEGAaccent","","",null,null],[17,"XK_Greek_accentdieresis","","",null,null],[17,"XK_Greek_horizbar","","",null,null],[17,"XK_Greek_alphaaccent","","",null,null],[17,"XK_Greek_epsilonaccent","","",null,null],[17,"XK_Greek_etaaccent","","",null,null],[17,"XK_Greek_iotaaccent","","",null,null],[17,"XK_Greek_iotadieresis","","",null,null],[17,"XK_Greek_iotaaccentdieresis","","",null,null],[17,"XK_Greek_omicronaccent","","",null,null],[17,"XK_Greek_upsilonaccent","","",null,null],[17,"XK_Greek_upsilondieresis","","",null,null],[17,"XK_Greek_upsilonaccentdieresis","","",null,null],[17,"XK_Greek_omegaaccent","","",null,null],[17,"XK_Greek_ALPHA","","",null,null],[17,"XK_Greek_BETA","","",null,null],[17,"XK_Greek_GAMMA","","",null,null],[17,"XK_Greek_DELTA","","",null,null],[17,"XK_Greek_EPSILON","","",null,null],[17,"XK_Greek_ZETA","","",null,null],[17,"XK_Greek_ETA","","",null,null],[17,"XK_Greek_THETA","","",null,null],[17,"XK_Greek_IOTA","","",null,null],[17,"XK_Greek_KAPPA","","",null,null],[17,"XK_Greek_LAMDA","","",null,null],[17,"XK_Greek_LAMBDA","","",null,null],[17,"XK_Greek_MU","","",null,null],[17,"XK_Greek_NU","","",null,null],[17,"XK_Greek_XI","","",null,null],[17,"XK_Greek_OMICRON","","",null,null],[17,"XK_Greek_PI","","",null,null],[17,"XK_Greek_RHO","","",null,null],[17,"XK_Greek_SIGMA","","",null,null],[17,"XK_Greek_TAU","","",null,null],[17,"XK_Greek_UPSILON","","",null,null],[17,"XK_Greek_PHI","","",null,null],[17,"XK_Greek_CHI","","",null,null],[17,"XK_Greek_PSI","","",null,null],[17,"XK_Greek_OMEGA","","",null,null],[17,"XK_Greek_alpha","","",null,null],[17,"XK_Greek_beta","","",null,null],[17,"XK_Greek_gamma","","",null,null],[17,"XK_Greek_delta","","",null,null],[17,"XK_Greek_epsilon","","",null,null],[17,"XK_Greek_zeta","","",null,null],[17,"XK_Greek_eta","","",null,null],[17,"XK_Greek_theta","","",null,null],[17,"XK_Greek_iota","","",null,null],[17,"XK_Greek_kappa","","",null,null],[17,"XK_Greek_lamda","","",null,null],[17,"XK_Greek_lambda","","",null,null],[17,"XK_Greek_mu","","",null,null],[17,"XK_Greek_nu","","",null,null],[17,"XK_Greek_xi","","",null,null],[17,"XK_Greek_omicron","","",null,null],[17,"XK_Greek_pi","","",null,null],[17,"XK_Greek_rho","","",null,null],[17,"XK_Greek_sigma","","",null,null],[17,"XK_Greek_finalsmallsigma","","",null,null],[17,"XK_Greek_tau","","",null,null],[17,"XK_Greek_upsilon","","",null,null],[17,"XK_Greek_phi","","",null,null],[17,"XK_Greek_chi","","",null,null],[17,"XK_Greek_psi","","",null,null],[17,"XK_Greek_omega","","",null,null],[17,"XK_Greek_switch","","",null,null],[17,"XK_leftradical","","",null,null],[17,"XK_topleftradical","","",null,null],[17,"XK_horizconnector","","",null,null],[17,"XK_topintegral","","",null,null],[17,"XK_botintegral","","",null,null],[17,"XK_vertconnector","","",null,null],[17,"XK_topleftsqbracket","","",null,null],[17,"XK_botleftsqbracket","","",null,null],[17,"XK_toprightsqbracket","","",null,null],[17,"XK_botrightsqbracket","","",null,null],[17,"XK_topleftparens","","",null,null],[17,"XK_botleftparens","","",null,null],[17,"XK_toprightparens","","",null,null],[17,"XK_botrightparens","","",null,null],[17,"XK_leftmiddlecurlybrace","","",null,null],[17,"XK_rightmiddlecurlybrace","","",null,null],[17,"XK_topleftsummation","","",null,null],[17,"XK_botleftsummation","","",null,null],[17,"XK_topvertsummationconnector","","",null,null],[17,"XK_botvertsummationconnector","","",null,null],[17,"XK_toprightsummation","","",null,null],[17,"XK_botrightsummation","","",null,null],[17,"XK_rightmiddlesummation","","",null,null],[17,"XK_lessthanequal","","",null,null],[17,"XK_notequal","","",null,null],[17,"XK_greaterthanequal","","",null,null],[17,"XK_integral","","",null,null],[17,"XK_therefore","","",null,null],[17,"XK_variation","","",null,null],[17,"XK_infinity","","",null,null],[17,"XK_nabla","","",null,null],[17,"XK_approximate","","",null,null],[17,"XK_similarequal","","",null,null],[17,"XK_ifonlyif","","",null,null],[17,"XK_implies","","",null,null],[17,"XK_identical","","",null,null],[17,"XK_radical","","",null,null],[17,"XK_includedin","","",null,null],[17,"XK_includes","","",null,null],[17,"XK_intersection","","",null,null],[17,"XK_union","","",null,null],[17,"XK_logicaland","","",null,null],[17,"XK_logicalor","","",null,null],[17,"XK_partialderivative","","",null,null],[17,"XK_function","","",null,null],[17,"XK_leftarrow","","",null,null],[17,"XK_uparrow","","",null,null],[17,"XK_rightarrow","","",null,null],[17,"XK_downarrow","","",null,null],[17,"XK_blank","","",null,null],[17,"XK_soliddiamond","","",null,null],[17,"XK_checkerboard","","",null,null],[17,"XK_ht","","",null,null],[17,"XK_ff","","",null,null],[17,"XK_cr","","",null,null],[17,"XK_lf","","",null,null],[17,"XK_nl","","",null,null],[17,"XK_vt","","",null,null],[17,"XK_lowrightcorner","","",null,null],[17,"XK_uprightcorner","","",null,null],[17,"XK_upleftcorner","","",null,null],[17,"XK_lowleftcorner","","",null,null],[17,"XK_crossinglines","","",null,null],[17,"XK_horizlinescan1","","",null,null],[17,"XK_horizlinescan3","","",null,null],[17,"XK_horizlinescan5","","",null,null],[17,"XK_horizlinescan7","","",null,null],[17,"XK_horizlinescan9","","",null,null],[17,"XK_leftt","","",null,null],[17,"XK_rightt","","",null,null],[17,"XK_bott","","",null,null],[17,"XK_topt","","",null,null],[17,"XK_vertbar","","",null,null],[17,"XK_emspace","","",null,null],[17,"XK_enspace","","",null,null],[17,"XK_em3space","","",null,null],[17,"XK_em4space","","",null,null],[17,"XK_digitspace","","",null,null],[17,"XK_punctspace","","",null,null],[17,"XK_thinspace","","",null,null],[17,"XK_hairspace","","",null,null],[17,"XK_emdash","","",null,null],[17,"XK_endash","","",null,null],[17,"XK_signifblank","","",null,null],[17,"XK_ellipsis","","",null,null],[17,"XK_doubbaselinedot","","",null,null],[17,"XK_onethird","","",null,null],[17,"XK_twothirds","","",null,null],[17,"XK_onefifth","","",null,null],[17,"XK_twofifths","","",null,null],[17,"XK_threefifths","","",null,null],[17,"XK_fourfifths","","",null,null],[17,"XK_onesixth","","",null,null],[17,"XK_fivesixths","","",null,null],[17,"XK_careof","","",null,null],[17,"XK_figdash","","",null,null],[17,"XK_leftanglebracket","","",null,null],[17,"XK_decimalpoint","","",null,null],[17,"XK_rightanglebracket","","",null,null],[17,"XK_marker","","",null,null],[17,"XK_oneeighth","","",null,null],[17,"XK_threeeighths","","",null,null],[17,"XK_fiveeighths","","",null,null],[17,"XK_seveneighths","","",null,null],[17,"XK_trademark","","",null,null],[17,"XK_signaturemark","","",null,null],[17,"XK_trademarkincircle","","",null,null],[17,"XK_leftopentriangle","","",null,null],[17,"XK_rightopentriangle","","",null,null],[17,"XK_emopencircle","","",null,null],[17,"XK_emopenrectangle","","",null,null],[17,"XK_leftsinglequotemark","","",null,null],[17,"XK_rightsinglequotemark","","",null,null],[17,"XK_leftdoublequotemark","","",null,null],[17,"XK_rightdoublequotemark","","",null,null],[17,"XK_prescription","","",null,null],[17,"XK_minutes","","",null,null],[17,"XK_seconds","","",null,null],[17,"XK_latincross","","",null,null],[17,"XK_hexagram","","",null,null],[17,"XK_filledrectbullet","","",null,null],[17,"XK_filledlefttribullet","","",null,null],[17,"XK_filledrighttribullet","","",null,null],[17,"XK_emfilledcircle","","",null,null],[17,"XK_emfilledrect","","",null,null],[17,"XK_enopencircbullet","","",null,null],[17,"XK_enopensquarebullet","","",null,null],[17,"XK_openrectbullet","","",null,null],[17,"XK_opentribulletup","","",null,null],[17,"XK_opentribulletdown","","",null,null],[17,"XK_openstar","","",null,null],[17,"XK_enfilledcircbullet","","",null,null],[17,"XK_enfilledsqbullet","","",null,null],[17,"XK_filledtribulletup","","",null,null],[17,"XK_filledtribulletdown","","",null,null],[17,"XK_leftpointer","","",null,null],[17,"XK_rightpointer","","",null,null],[17,"XK_club","","",null,null],[17,"XK_diamond","","",null,null],[17,"XK_heart","","",null,null],[17,"XK_maltesecross","","",null,null],[17,"XK_dagger","","",null,null],[17,"XK_doubledagger","","",null,null],[17,"XK_checkmark","","",null,null],[17,"XK_ballotcross","","",null,null],[17,"XK_musicalsharp","","",null,null],[17,"XK_musicalflat","","",null,null],[17,"XK_malesymbol","","",null,null],[17,"XK_femalesymbol","","",null,null],[17,"XK_telephone","","",null,null],[17,"XK_telephonerecorder","","",null,null],[17,"XK_phonographcopyright","","",null,null],[17,"XK_caret","","",null,null],[17,"XK_singlelowquotemark","","",null,null],[17,"XK_doublelowquotemark","","",null,null],[17,"XK_cursor","","",null,null],[17,"XK_leftcaret","","",null,null],[17,"XK_rightcaret","","",null,null],[17,"XK_downcaret","","",null,null],[17,"XK_upcaret","","",null,null],[17,"XK_overbar","","",null,null],[17,"XK_downtack","","",null,null],[17,"XK_upshoe","","",null,null],[17,"XK_downstile","","",null,null],[17,"XK_underbar","","",null,null],[17,"XK_jot","","",null,null],[17,"XK_quad","","",null,null],[17,"XK_uptack","","",null,null],[17,"XK_circle","","",null,null],[17,"XK_upstile","","",null,null],[17,"XK_downshoe","","",null,null],[17,"XK_rightshoe","","",null,null],[17,"XK_leftshoe","","",null,null],[17,"XK_lefttack","","",null,null],[17,"XK_righttack","","",null,null],[17,"XK_hebrew_doublelowline","","",null,null],[17,"XK_hebrew_aleph","","",null,null],[17,"XK_hebrew_bet","","",null,null],[17,"XK_hebrew_beth","","",null,null],[17,"XK_hebrew_gimel","","",null,null],[17,"XK_hebrew_gimmel","","",null,null],[17,"XK_hebrew_dalet","","",null,null],[17,"XK_hebrew_daleth","","",null,null],[17,"XK_hebrew_he","","",null,null],[17,"XK_hebrew_waw","","",null,null],[17,"XK_hebrew_zain","","",null,null],[17,"XK_hebrew_zayin","","",null,null],[17,"XK_hebrew_chet","","",null,null],[17,"XK_hebrew_het","","",null,null],[17,"XK_hebrew_tet","","",null,null],[17,"XK_hebrew_teth","","",null,null],[17,"XK_hebrew_yod","","",null,null],[17,"XK_hebrew_finalkaph","","",null,null],[17,"XK_hebrew_kaph","","",null,null],[17,"XK_hebrew_lamed","","",null,null],[17,"XK_hebrew_finalmem","","",null,null],[17,"XK_hebrew_mem","","",null,null],[17,"XK_hebrew_finalnun","","",null,null],[17,"XK_hebrew_nun","","",null,null],[17,"XK_hebrew_samech","","",null,null],[17,"XK_hebrew_samekh","","",null,null],[17,"XK_hebrew_ayin","","",null,null],[17,"XK_hebrew_finalpe","","",null,null],[17,"XK_hebrew_pe","","",null,null],[17,"XK_hebrew_finalzade","","",null,null],[17,"XK_hebrew_finalzadi","","",null,null],[17,"XK_hebrew_zade","","",null,null],[17,"XK_hebrew_zadi","","",null,null],[17,"XK_hebrew_qoph","","",null,null],[17,"XK_hebrew_kuf","","",null,null],[17,"XK_hebrew_resh","","",null,null],[17,"XK_hebrew_shin","","",null,null],[17,"XK_hebrew_taw","","",null,null],[17,"XK_hebrew_taf","","",null,null],[17,"XK_Hebrew_switch","","",null,null],[0,"xcursor","x11_dl","",null,null],[3,"Xcursor","x11_dl::xcursor","",null,null],[12,"XcursorAnimateCreate","","",3,null],[12,"XcursorAnimateDestroy","","",3,null],[12,"XcursorAnimateNext","","",3,null],[12,"XcursorCommentCreate","","",3,null],[12,"XcursorCommentDestroy","","",3,null],[12,"XcursorCommentsCreate","","",3,null],[12,"XcursorCommentsDestroy","","",3,null],[12,"XcursorCursorsCreate","","",3,null],[12,"XcursorCursorsDestroy","","",3,null],[12,"XcursorFileLoad","","",3,null],[12,"XcursorFileLoadAllImages","","",3,null],[12,"XcursorFileLoadImage","","",3,null],[12,"XcursorFileLoadImages","","",3,null],[12,"XcursorFilenameLoad","","",3,null],[12,"XcursorFilenameLoadAllImages","","",3,null],[12,"XcursorFilenameLoadCursor","","",3,null],[12,"XcursorFilenameLoadCursors","","",3,null],[12,"XcursorFilenameLoadImage","","",3,null],[12,"XcursorFilenameLoadImages","","",3,null],[12,"XcursorFilenameSave","","",3,null],[12,"XcursorFilenameSaveImages","","",3,null],[12,"XcursorFileSave","","",3,null],[12,"XcursorFileSaveImages","","",3,null],[12,"XcursorGetDefaultSize","","",3,null],[12,"XcursorGetTheme","","",3,null],[12,"XcursorGetThemeCore","","",3,null],[12,"XcursorImageCreate","","",3,null],[12,"XcursorImageDestroy","","",3,null],[12,"XcursorImageHash","","",3,null],[12,"XcursorImageLoadCursor","","",3,null],[12,"XcursorImagesCreate","","",3,null],[12,"XcursorImagesDestroy","","",3,null],[12,"XcursorImagesLoadCursor","","",3,null],[12,"XcursorImagesLoadCursors","","",3,null],[12,"XcursorImagesSetName","","",3,null],[12,"XcursorLibraryLoadCursor","","",3,null],[12,"XcursorLibraryLoadCursors","","",3,null],[12,"XcursorLibraryLoadImage","","",3,null],[12,"XcursorLibraryLoadImages","","",3,null],[12,"XcursorLibraryPath","","",3,null],[12,"XcursorLibraryShape","","",3,null],[12,"XcursorNoticeCreateBitmap","","",3,null],[12,"XcursorNoticePutBitmap","","",3,null],[12,"XcursorSetDefaultSize","","",3,null],[12,"XcursorSetTheme","","",3,null],[12,"XcursorSetThemeCore","","",3,null],[12,"XcursorShapeLoadCursor","","",3,null],[12,"XcursorShapeLoadCursors","","",3,null],[12,"XcursorShapeLoadImage","","",3,null],[12,"XcursorShapeLoadImages","","",3,null],[12,"XcursorSupportsAnim","","",3,null],[12,"XcursorSupportsARGB","","",3,null],[12,"XcursorTryShapeBitmapCursor","","",3,null],[12,"XcursorTryShapeCursor","","",3,null],[12,"XcursorXcFileLoad","","",3,null],[12,"XcursorXcFileLoadAllImages","","",3,null],[12,"XcursorXcFileLoadImage","","",3,null],[12,"XcursorXcFileLoadImages","","",3,null],[12,"XcursorXcFileSave","","",3,null],[3,"_XcursorAnimate","","",null,null],[12,"cursors","","",4,null],[12,"sequence","","",4,null],[3,"_XcursorChunkHeader","","",null,null],[12,"header","","",5,null],[12,"type_","","",5,null],[12,"subtype","","",5,null],[12,"version","","",5,null],[3,"_XcursorComment","","",null,null],[12,"version","","",6,null],[12,"comment_type","","",6,null],[12,"comment","","",6,null],[3,"_XcursorComments","","",null,null],[12,"ncomment","","",7,null],[12,"comments","","",7,null],[3,"_XcursorCursors","","",null,null],[12,"dpy","","",8,null],[12,"ref_","","",8,null],[12,"ncursor","","",8,null],[12,"cursors","","",8,null],[3,"_XcursorFile","","",null,null],[12,"closure","","",9,null],[12,"read","","",9,null],[12,"write","","",9,null],[12,"seek","","",9,null],[3,"_XcursorFileHeader","","",null,null],[12,"magic","","",10,null],[12,"header","","",10,null],[12,"version","","",10,null],[12,"ntoc","","",10,null],[12,"tocs","","",10,null],[3,"_XcursorFileToc","","",null,null],[12,"type_","","",11,null],[12,"subtype","","",11,null],[12,"position","","",11,null],[3,"_XcursorImage","","",null,null],[12,"version","","",12,null],[12,"size","","",12,null],[12,"width","","",12,null],[12,"height","","",12,null],[12,"xhot","","",12,null],[12,"yhot","","",12,null],[12,"delay","","",12,null],[12,"pixels","","",12,null],[3,"_XcursorImages","","",null,null],[12,"nimage","","",13,null],[12,"images","","",13,null],[12,"name","","",13,null],[6,"XcursorBool","","",null,null],[6,"XcursorDim","","",null,null],[6,"XcursorPixel","","",null,null],[6,"XcursorUInt","","",null,null],[6,"XcursorAnimate","","",null,null],[6,"XcursorChunkHeader","","",null,null],[6,"XcursorComment","","",null,null],[6,"XcursorComments","","",null,null],[6,"XcursorCursors","","",null,null],[6,"XcursorFile","","",null,null],[6,"XcursorFileHeader","","",null,null],[6,"XcursorFileToc","","",null,null],[6,"XcursorImage","","",null,null],[6,"XcursorImages","","",null,null],[11,"open","","",3,{"inputs":[{"name":"xcursor"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"_xcursoranimate"}],"output":{"name":"_xcursoranimate"}}],[11,"clone","","",5,{"inputs":[{"name":"_xcursorchunkheader"}],"output":{"name":"_xcursorchunkheader"}}],[11,"clone","","",6,{"inputs":[{"name":"_xcursorcomment"}],"output":{"name":"_xcursorcomment"}}],[11,"clone","","",7,{"inputs":[{"name":"_xcursorcomments"}],"output":{"name":"_xcursorcomments"}}],[11,"clone","","",8,{"inputs":[{"name":"_xcursorcursors"}],"output":{"name":"_xcursorcursors"}}],[11,"clone","","",9,{"inputs":[{"name":"_xcursorfile"}],"output":{"name":"_xcursorfile"}}],[11,"clone","","",10,{"inputs":[{"name":"_xcursorfileheader"}],"output":{"name":"_xcursorfileheader"}}],[11,"clone","","",11,{"inputs":[{"name":"_xcursorfiletoc"}],"output":{"name":"_xcursorfiletoc"}}],[11,"clone","","",12,{"inputs":[{"name":"_xcursorimage"}],"output":{"name":"_xcursorimage"}}],[11,"clone","","",13,{"inputs":[{"name":"_xcursorimages"}],"output":{"name":"_xcursorimages"}}],[0,"xf86vmode","x11_dl","",null,null],[3,"Xf86vmode","x11_dl::xf86vmode","",null,null],[12,"XF86VidModeAddModeLine","","",14,null],[12,"XF86VidModeDeleteModeLine","","",14,null],[12,"XF86VidModeGetAllModeLines","","",14,null],[12,"XF86VidModeGetDotClocks","","",14,null],[12,"XF86VidModeGetGamma","","",14,null],[12,"XF86VidModeGetGammaRamp","","",14,null],[12,"XF86VidModeGetGammaRampSize","","",14,null],[12,"XF86VidModeGetModeLine","","",14,null],[12,"XF86VidModeGetMonitor","","",14,null],[12,"XF86VidModeGetPermissions","","",14,null],[12,"XF86VidModeGetViewPort","","",14,null],[12,"XF86VidModeLockModeSwitch","","",14,null],[12,"XF86VidModeModModeLine","","",14,null],[12,"XF86VidModeQueryExtension","","",14,null],[12,"XF86VidModeQueryVersion","","",14,null],[12,"XF86VidModeSetClientVersion","","",14,null],[12,"XF86VidModeSetGamma","","",14,null],[12,"XF86VidModeSetGammaRamp","","",14,null],[12,"XF86VidModeSetViewPort","","",14,null],[12,"XF86VidModeSwitchMode","","",14,null],[12,"XF86VidModeSwitchToMode","","",14,null],[12,"XF86VidModeValidateModeLine","","",14,null],[3,"XF86VidModeGamma","","",null,null],[12,"red","","",15,null],[12,"green","","",15,null],[12,"blue","","",15,null],[3,"XF86VidModeModeInfo","","",null,null],[12,"dotclock","","",16,null],[12,"hdisplay","","",16,null],[12,"hsyncstart","","",16,null],[12,"hsyncend","","",16,null],[12,"htotal","","",16,null],[12,"hskew","","",16,null],[12,"vdisplay","","",16,null],[12,"vsyncstart","","",16,null],[12,"vsyncend","","",16,null],[12,"vtotal","","",16,null],[12,"flags","","",16,null],[12,"privsize","","",16,null],[12,"private","","",16,null],[3,"XF86VidModeModeLine","","",null,null],[12,"hdisplay","","",17,null],[12,"hsyncstart","","",17,null],[12,"hsyncend","","",17,null],[12,"htotal","","",17,null],[12,"hskew","","",17,null],[12,"vdisplay","","",17,null],[12,"vsyncstart","","",17,null],[12,"vsyncend","","",17,null],[12,"vtotal","","",17,null],[12,"flags","","",17,null],[12,"privsize","","",17,null],[12,"private","","",17,null],[3,"XF86VidModeMonitor","","",null,null],[12,"vendor","","",18,null],[12,"model","","",18,null],[12,"EMPTY","","",18,null],[12,"nhsync","","",18,null],[12,"hsync","","",18,null],[12,"nvsync","","",18,null],[12,"vsync","","",18,null],[3,"XF86VidModeNotifyEvent","","",null,null],[12,"type_","","",19,null],[12,"serial","","",19,null],[12,"send_event","","",19,null],[12,"display","","",19,null],[12,"root","","",19,null],[12,"state","","",19,null],[12,"kind","","",19,null],[12,"forced","","",19,null],[12,"time","","",19,null],[3,"XF86VidModeSyncRange","","",null,null],[12,"hi","","",20,null],[12,"lo","","",20,null],[11,"open","","",14,{"inputs":[{"name":"xf86vmode"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"xf86vidmodegamma"}],"output":{"name":"xf86vidmodegamma"}}],[11,"eq","","",16,{"inputs":[{"name":"xf86vidmodemodeinfo"},{"name":"xf86vidmodemodeinfo"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"xf86vidmodemodeinfo"},{"name":"xf86vidmodemodeinfo"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"xf86vidmodemodeinfo"}],"output":{"name":"xf86vidmodemodeinfo"}}],[11,"clone","","",17,{"inputs":[{"name":"xf86vidmodemodeline"}],"output":{"name":"xf86vidmodemodeline"}}],[11,"clone","","",18,{"inputs":[{"name":"xf86vidmodemonitor"}],"output":{"name":"xf86vidmodemonitor"}}],[11,"clone","","",19,{"inputs":[{"name":"xf86vidmodenotifyevent"}],"output":{"name":"xf86vidmodenotifyevent"}}],[11,"clone","","",20,{"inputs":[{"name":"xf86vidmodesyncrange"}],"output":{"name":"xf86vidmodesyncrange"}}],[0,"xfixes","x11_dl","",null,null],[6,"PointerBarrier","x11_dl::xfixes","",null,null],[0,"xinerama","x11_dl","",null,null],[3,"Xlib","x11_dl::xinerama","",null,null],[12,"XineramaIsActive","","",21,null],[12,"XineramaQueryExtension","","",21,null],[12,"XineramaQueryScreens","","",21,null],[12,"XineramaQueryVersion","","",21,null],[12,"XPanoramiXAllocInfo","","",21,null],[12,"XPanoramiXGetScreenCount","","",21,null],[12,"XPanoramiXGetScreenSize","","",21,null],[12,"XPanoramiXGetState","","",21,null],[12,"XPanoramiXQueryExtension","","",21,null],[12,"XPanoramiXQueryVersion","","",21,null],[3,"XineramaScreenInfo","","",null,null],[12,"screen_number","","",22,null],[12,"x_org","","",22,null],[12,"y_org","","",22,null],[12,"width","","",22,null],[12,"height","","",22,null],[3,"XPanoramiXInfo","","",null,null],[12,"window","","",23,null],[12,"screen","","",23,null],[12,"State","","",23,null],[12,"width","","",23,null],[12,"height","","",23,null],[12,"ScreenCount","","",23,null],[12,"eventMask","","",23,null],[11,"open","","",21,{"inputs":[{"name":"xlib"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"xineramascreeninfo"},{"name":"xineramascreeninfo"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"xineramascreeninfo"},{"name":"xineramascreeninfo"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"xineramascreeninfo"}],"output":{"name":"xineramascreeninfo"}}],[11,"eq","","",23,{"inputs":[{"name":"xpanoramixinfo"},{"name":"xpanoramixinfo"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"xpanoramixinfo"},{"name":"xpanoramixinfo"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"xpanoramixinfo"}],"output":{"name":"xpanoramixinfo"}}],[0,"xinput","x11_dl","",null,null],[3,"XInput","x11_dl::xinput","",null,null],[12,"XAllowDeviceEvents","","",24,null],[12,"XChangeDeviceControl","","",24,null],[12,"XChangeDeviceDontPropagateList","","",24,null],[12,"XChangeDeviceKeyMapping","","",24,null],[12,"XChangeDeviceProperty","","",24,null],[12,"XChangeFeedbackControl","","",24,null],[12,"XChangeKeyboardDevice","","",24,null],[12,"XChangePointerDevice","","",24,null],[12,"XCloseDevice","","",24,null],[12,"XDeleteDeviceProperty","","",24,null],[12,"XDeviceBell","","",24,null],[12,"XFreeDeviceControl","","",24,null],[12,"XFreeDeviceList","","",24,null],[12,"XFreeDeviceMotionEvents","","",24,null],[12,"XFreeDeviceState","","",24,null],[12,"XFreeFeedbackList","","",24,null],[12,"XGetDeviceButtonMapping","","",24,null],[12,"XGetDeviceControl","","",24,null],[12,"XGetDeviceDontPropagateList","","",24,null],[12,"XGetDeviceFocus","","",24,null],[12,"XGetDeviceKeyMapping","","",24,null],[12,"XGetDeviceModifierMapping","","",24,null],[12,"XGetDeviceMotionEvents","","",24,null],[12,"XGetDeviceProperty","","",24,null],[12,"XGetExtensionVersion","","",24,null],[12,"XGetFeedbackControl","","",24,null],[12,"XGetSelectedExtensionEvents","","",24,null],[12,"XGrabDevice","","",24,null],[12,"XGrabDeviceButton","","",24,null],[12,"XGrabDeviceKey","","",24,null],[12,"XListDeviceProperties","","",24,null],[12,"XListInputDevices","","",24,null],[12,"XOpenDevice","","",24,null],[12,"XQueryDeviceState","","",24,null],[12,"XSelectExtensionEvent","","",24,null],[12,"XSendExtensionEvent","","",24,null],[12,"XSetDeviceButtonMapping","","",24,null],[12,"XSetDeviceFocus","","",24,null],[12,"XSetDeviceMode","","",24,null],[12,"XSetDeviceModifierMapping","","",24,null],[12,"XSetDeviceValuators","","",24,null],[12,"XUngrabDevice","","",24,null],[12,"XUngrabDeviceButton","","",24,null],[12,"XUngrabDeviceKey","","",24,null],[3,"XDevice","","",null,null],[12,"device_id","","",25,null],[12,"num_classes","","",25,null],[12,"classes","","",25,null],[3,"XDeviceControl","","",null,null],[12,"control","","",26,null],[12,"length","","",26,null],[3,"XDeviceInfo","","",null,null],[12,"id","","",27,null],[12,"type_","","",27,null],[12,"name","","",27,null],[12,"num_classes","","",27,null],[12,"use_","","",27,null],[12,"inputclassinfo","","",27,null],[3,"XDeviceState","","",null,null],[12,"device_id","","",28,null],[12,"num_classes","","",28,null],[12,"data","","",28,null],[3,"XDeviceTimeCoord","","",null,null],[12,"time","","",29,null],[12,"data","","",29,null],[3,"XExtensionVersion","","",null,null],[12,"present","","",30,null],[12,"major_version","","",30,null],[12,"minor_version","","",30,null],[3,"XFeedbackControl","","",null,null],[12,"class","","",31,null],[12,"length","","",31,null],[12,"id","","",31,null],[3,"XFeedbackState","","",null,null],[12,"class","","",32,null],[12,"length","","",32,null],[12,"id","","",32,null],[3,"XInputClass","","",null,null],[12,"class","","",33,null],[12,"length","","",33,null],[3,"XInputClassInfo","","",null,null],[12,"input_class","","",34,null],[12,"event_type_base","","",34,null],[4,"_XAnyClassinfo","","",null,null],[6,"XAnyClassPtr","","",null,null],[11,"open","","",24,{"inputs":[{"name":"xinput"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"xdevice"},{"name":"xdevice"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"xdevice"},{"name":"xdevice"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"xdevice"}],"output":{"name":"xdevice"}}],[11,"eq","","",26,{"inputs":[{"name":"xdevicecontrol"},{"name":"xdevicecontrol"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"xdevicecontrol"},{"name":"xdevicecontrol"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"xdevicecontrol"}],"output":{"name":"xdevicecontrol"}}],[11,"eq","","",27,{"inputs":[{"name":"xdeviceinfo"},{"name":"xdeviceinfo"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"xdeviceinfo"},{"name":"xdeviceinfo"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"xdeviceinfo"}],"output":{"name":"xdeviceinfo"}}],[11,"eq","","",28,{"inputs":[{"name":"xdevicestate"},{"name":"xdevicestate"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"xdevicestate"},{"name":"xdevicestate"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"xdevicestate"}],"output":{"name":"xdevicestate"}}],[11,"eq","","",29,{"inputs":[{"name":"xdevicetimecoord"},{"name":"xdevicetimecoord"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"xdevicetimecoord"},{"name":"xdevicetimecoord"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"xdevicetimecoord"}],"output":{"name":"xdevicetimecoord"}}],[11,"eq","","",30,{"inputs":[{"name":"xextensionversion"},{"name":"xextensionversion"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"xextensionversion"},{"name":"xextensionversion"}],"output":{"name":"bool"}}],[11,"clone","","",30,{"inputs":[{"name":"xextensionversion"}],"output":{"name":"xextensionversion"}}],[11,"eq","","",31,{"inputs":[{"name":"xfeedbackcontrol"},{"name":"xfeedbackcontrol"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"xfeedbackcontrol"},{"name":"xfeedbackcontrol"}],"output":{"name":"bool"}}],[11,"clone","","",31,{"inputs":[{"name":"xfeedbackcontrol"}],"output":{"name":"xfeedbackcontrol"}}],[11,"eq","","",32,{"inputs":[{"name":"xfeedbackstate"},{"name":"xfeedbackstate"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"xfeedbackstate"},{"name":"xfeedbackstate"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"xfeedbackstate"}],"output":{"name":"xfeedbackstate"}}],[11,"eq","","",33,{"inputs":[{"name":"xinputclass"},{"name":"xinputclass"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"xinputclass"},{"name":"xinputclass"}],"output":{"name":"bool"}}],[11,"clone","","",33,{"inputs":[{"name":"xinputclass"}],"output":{"name":"xinputclass"}}],[11,"eq","","",34,{"inputs":[{"name":"xinputclassinfo"},{"name":"xinputclassinfo"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"xinputclassinfo"},{"name":"xinputclassinfo"}],"output":{"name":"bool"}}],[11,"clone","","",34,{"inputs":[{"name":"xinputclassinfo"}],"output":{"name":"xinputclassinfo"}}],[0,"xinput2","x11_dl","",null,null],[3,"XInput2","x11_dl::xinput2","",null,null],[12,"XIAllowEvents","","",35,null],[12,"XIAllowTouchEvents","","",35,null],[12,"XIBarrierReleasePointer","","",35,null],[12,"XIBarrierReleasePointers","","",35,null],[12,"XIChangeHierarchy","","",35,null],[12,"XIChangeProperty","","",35,null],[12,"XIDefineCursor","","",35,null],[12,"XIDeleteProperty","","",35,null],[12,"XIFreeDeviceInfo","","",35,null],[12,"XIGetClientPointer","","",35,null],[12,"XIGetFocus","","",35,null],[12,"XIGetProperty","","",35,null],[12,"XIGetSelectedEvents","","",35,null],[12,"XIGrabButton","","",35,null],[12,"XIGrabDevice","","",35,null],[12,"XIGrabEnter","","",35,null],[12,"XIGrabFocusIn","","",35,null],[12,"XIGrabKeycode","","",35,null],[12,"XIGrabTouchBegin","","",35,null],[12,"XIListProperties","","",35,null],[12,"XIQueryDevice","","",35,null],[12,"XIQueryPointer","","",35,null],[12,"XIQueryVersion","","",35,null],[12,"XISelectEvents","","",35,null],[12,"XISetClientPointer","","",35,null],[12,"XISetFocus","","",35,null],[12,"XIUndefineCursor","","",35,null],[12,"XIUngrabButton","","",35,null],[12,"XIUngrabDevice","","",35,null],[12,"XIUngrabEnter","","",35,null],[12,"XIUngrabFocusIn","","",35,null],[12,"XIUngrabKeycode","","",35,null],[12,"XIUngrabTouchBegin","","",35,null],[12,"XIWarpPointer","","",35,null],[3,"Struct_Unnamed1","","",null,null],[12,"_type","","",36,null],[12,"name","","",36,null],[12,"send_core","","",36,null],[12,"enable","","",36,null],[3,"Struct_Unnamed2","","",null,null],[12,"_type","","",37,null],[12,"deviceid","","",37,null],[12,"return_mode","","",37,null],[12,"return_pointer","","",37,null],[12,"return_keyboard","","",37,null],[3,"Struct_Unnamed3","","",null,null],[12,"_type","","",38,null],[12,"deviceid","","",38,null],[12,"new_master","","",38,null],[3,"Struct_Unnamed4","","",null,null],[12,"_type","","",39,null],[12,"deviceid","","",39,null],[3,"Union_Unnamed5","","",null,null],[12,"_bindgen_data_","","",40,null],[3,"Struct_Unnamed6","","",null,null],[12,"base","","",41,null],[12,"latched","","",41,null],[12,"locked","","",41,null],[12,"effective","","",41,null],[3,"Struct_Unnamed7","","",null,null],[12,"mask_len","","",42,null],[12,"mask","","",42,null],[3,"Struct_Unnamed8","","",null,null],[12,"mask_len","","",43,null],[12,"mask","","",43,null],[12,"values","","",43,null],[3,"Struct_Unnamed9","","",null,null],[12,"deviceid","","",44,null],[12,"mask_len","","",44,null],[12,"mask","","",44,null],[3,"Struct_Unnamed10","","",null,null],[12,"_type","","",45,null],[12,"sourceid","","",45,null],[3,"Struct_Unnamed11","","",null,null],[12,"_type","","",46,null],[12,"sourceid","","",46,null],[12,"num_buttons","","",46,null],[12,"labels","","",46,null],[12,"state","","",46,null],[3,"Struct_Unnamed12","","",null,null],[12,"_type","","",47,null],[12,"sourceid","","",47,null],[12,"num_keycodes","","",47,null],[12,"keycodes","","",47,null],[3,"Struct_Unnamed13","","",null,null],[12,"_type","","",48,null],[12,"sourceid","","",48,null],[12,"number","","",48,null],[12,"label","","",48,null],[12,"min","","",48,null],[12,"max","","",48,null],[12,"value","","",48,null],[12,"resolution","","",48,null],[12,"mode","","",48,null],[3,"Struct_Unnamed14","","",null,null],[12,"_type","","",49,null],[12,"sourceid","","",49,null],[12,"number","","",49,null],[12,"scroll_type","","",49,null],[12,"increment","","",49,null],[12,"flags","","",49,null],[3,"Struct_Unnamed15","","",null,null],[12,"_type","","",50,null],[12,"sourceid","","",50,null],[12,"mode","","",50,null],[12,"num_touches","","",50,null],[3,"Struct_Unnamed16","","",null,null],[12,"deviceid","","",51,null],[12,"name","","",51,null],[12,"_use","","",51,null],[12,"attachment","","",51,null],[12,"enabled","","",51,null],[12,"num_classes","","",51,null],[12,"classes","","",51,null],[3,"Struct_Unnamed17","","",null,null],[12,"modifiers","","",52,null],[12,"status","","",52,null],[3,"Struct_Unnamed18","","",null,null],[12,"deviceid","","",53,null],[12,"barrier","","",53,null],[12,"eventid","","",53,null],[3,"Struct_Unnamed19","","",null,null],[12,"_type","","",54,null],[12,"serial","","",54,null],[12,"send_event","","",54,null],[12,"display","","",54,null],[12,"extension","","",54,null],[12,"evtype","","",54,null],[12,"time","","",54,null],[3,"Struct_Unnamed20","","",null,null],[12,"deviceid","","",55,null],[12,"attachment","","",55,null],[12,"_use","","",55,null],[12,"enabled","","",55,null],[12,"flags","","",55,null],[3,"Struct_Unnamed21","","",null,null],[12,"_type","","",56,null],[12,"serial","","",56,null],[12,"send_event","","",56,null],[12,"display","","",56,null],[12,"extension","","",56,null],[12,"evtype","","",56,null],[12,"time","","",56,null],[12,"flags","","",56,null],[12,"num_info","","",56,null],[12,"info","","",56,null],[3,"Struct_Unnamed22","","",null,null],[12,"_type","","",57,null],[12,"serial","","",57,null],[12,"send_event","","",57,null],[12,"display","","",57,null],[12,"extension","","",57,null],[12,"evtype","","",57,null],[12,"time","","",57,null],[12,"deviceid","","",57,null],[12,"sourceid","","",57,null],[12,"reason","","",57,null],[12,"num_classes","","",57,null],[12,"classes","","",57,null],[3,"Struct_Unnamed23","","",null,null],[12,"_type","","",58,null],[12,"serial","","",58,null],[12,"send_event","","",58,null],[12,"display","","",58,null],[12,"extension","","",58,null],[12,"evtype","","",58,null],[12,"time","","",58,null],[12,"deviceid","","",58,null],[12,"sourceid","","",58,null],[12,"detail","","",58,null],[12,"root","","",58,null],[12,"event","","",58,null],[12,"child","","",58,null],[12,"root_x","","",58,null],[12,"root_y","","",58,null],[12,"event_x","","",58,null],[12,"event_y","","",58,null],[12,"flags","","",58,null],[12,"buttons","","",58,null],[12,"valuators","","",58,null],[12,"mods","","",58,null],[12,"group","","",58,null],[3,"Struct_Unnamed24","","",null,null],[12,"_type","","",59,null],[12,"serial","","",59,null],[12,"send_event","","",59,null],[12,"display","","",59,null],[12,"extension","","",59,null],[12,"evtype","","",59,null],[12,"time","","",59,null],[12,"deviceid","","",59,null],[12,"sourceid","","",59,null],[12,"detail","","",59,null],[12,"flags","","",59,null],[12,"valuators","","",59,null],[12,"raw_values","","",59,null],[3,"Struct_Unnamed25","","",null,null],[12,"_type","","",60,null],[12,"serial","","",60,null],[12,"send_event","","",60,null],[12,"display","","",60,null],[12,"extension","","",60,null],[12,"evtype","","",60,null],[12,"time","","",60,null],[12,"deviceid","","",60,null],[12,"sourceid","","",60,null],[12,"detail","","",60,null],[12,"root","","",60,null],[12,"event","","",60,null],[12,"child","","",60,null],[12,"root_x","","",60,null],[12,"root_y","","",60,null],[12,"event_x","","",60,null],[12,"event_y","","",60,null],[12,"mode","","",60,null],[12,"focus","","",60,null],[12,"same_screen","","",60,null],[12,"buttons","","",60,null],[12,"mods","","",60,null],[12,"group","","",60,null],[3,"Struct_Unnamed26","","",null,null],[12,"_type","","",61,null],[12,"serial","","",61,null],[12,"send_event","","",61,null],[12,"display","","",61,null],[12,"extension","","",61,null],[12,"evtype","","",61,null],[12,"time","","",61,null],[12,"deviceid","","",61,null],[12,"property","","",61,null],[12,"what","","",61,null],[3,"Struct_Unnamed27","","",null,null],[12,"_type","","",62,null],[12,"serial","","",62,null],[12,"send_event","","",62,null],[12,"display","","",62,null],[12,"extension","","",62,null],[12,"evtype","","",62,null],[12,"time","","",62,null],[12,"deviceid","","",62,null],[12,"sourceid","","",62,null],[12,"touchid","","",62,null],[12,"root","","",62,null],[12,"event","","",62,null],[12,"child","","",62,null],[12,"flags","","",62,null],[3,"Struct_Unnamed28","","",null,null],[12,"_type","","",63,null],[12,"serial","","",63,null],[12,"send_event","","",63,null],[12,"display","","",63,null],[12,"extension","","",63,null],[12,"evtype","","",63,null],[12,"time","","",63,null],[12,"deviceid","","",63,null],[12,"sourceid","","",63,null],[12,"event","","",63,null],[12,"root","","",63,null],[12,"root_x","","",63,null],[12,"root_y","","",63,null],[12,"dx","","",63,null],[12,"dy","","",63,null],[12,"dtime","","",63,null],[12,"flags","","",63,null],[12,"barrier","","",63,null],[12,"eventid","","",63,null],[5,"XISetMask","","",null,null],[5,"XIClearMask","","",null,null],[5,"XIMaskIsSet","","",null,null],[6,"XIAddMasterInfo","","",null,null],[6,"XIRemoveMasterInfo","","",null,null],[6,"XIAttachSlaveInfo","","",null,null],[6,"XIDetachSlaveInfo","","",null,null],[6,"XIAnyHierarchyChangeInfo","","",null,null],[6,"XIModifierState","","",null,null],[6,"XIGroupState","","",null,null],[6,"XIButtonState","","",null,null],[6,"XIValuatorState","","",null,null],[6,"XIEventMask","","",null,null],[6,"XIAnyClassInfo","","",null,null],[6,"XIButtonClassInfo","","",null,null],[6,"XIKeyClassInfo","","",null,null],[6,"XIValuatorClassInfo","","",null,null],[6,"XIScrollClassInfo","","",null,null],[6,"XITouchClassInfo","","",null,null],[6,"XIDeviceInfo","","",null,null],[6,"XIGrabModifiers","","",null,null],[6,"BarrierEventID","","",null,null],[6,"XIBarrierReleasePointerInfo","","",null,null],[6,"XIEvent","","",null,null],[6,"XIHierarchyInfo","","",null,null],[6,"XIHierarchyEvent","","",null,null],[6,"XIDeviceChangedEvent","","",null,null],[6,"XIDeviceEvent","","",null,null],[6,"XIRawEvent","","",null,null],[6,"XIEnterEvent","","",null,null],[6,"XILeaveEvent","","",null,null],[6,"XIFocusInEvent","","",null,null],[6,"XIFocusOutEvent","","",null,null],[6,"XIPropertyEvent","","",null,null],[6,"XITouchOwnershipEvent","","",null,null],[6,"XIBarrierEvent","","",null,null],[17,"XInput_2_0","","",null,null],[17,"XI_2_Major","","",null,null],[17,"XI_2_Minor","","",null,null],[17,"XIPropertyDeleted","","",null,null],[17,"XIPropertyCreated","","",null,null],[17,"XIPropertyModified","","",null,null],[17,"XIPropModeReplace","","",null,null],[17,"XIPropModePrepend","","",null,null],[17,"XIPropModeAppend","","",null,null],[17,"XINotifyNormal","","",null,null],[17,"XINotifyGrab","","",null,null],[17,"XINotifyUngrab","","",null,null],[17,"XINotifyWhileGrabbed","","",null,null],[17,"XINotifyPassiveGrab","","",null,null],[17,"XINotifyPassiveUngrab","","",null,null],[17,"XINotifyAncestor","","",null,null],[17,"XINotifyVirtual","","",null,null],[17,"XINotifyInferior","","",null,null],[17,"XINotifyNonlinear","","",null,null],[17,"XINotifyNonlinearVirtual","","",null,null],[17,"XINotifyPointer","","",null,null],[17,"XINotifyPointerRoot","","",null,null],[17,"XINotifyDetailNone","","",null,null],[17,"XIGrabModeSync","","",null,null],[17,"XIGrabModeAsync","","",null,null],[17,"XIGrabModeTouch","","",null,null],[17,"XIGrabSuccess","","",null,null],[17,"XIAlreadyGrabbed","","",null,null],[17,"XIGrabInvalidTime","","",null,null],[17,"XIGrabNotViewable","","",null,null],[17,"XIGrabFrozen","","",null,null],[17,"XIGrabtypeButton","","",null,null],[17,"XIGrabtypeKeycode","","",null,null],[17,"XIGrabtypeEnter","","",null,null],[17,"XIGrabtypeFocusIn","","",null,null],[17,"XIGrabtypeTouchBegin","","",null,null],[17,"XIAnyButton","","",null,null],[17,"XIAnyKeycode","","",null,null],[17,"XIAsyncDevice","","",null,null],[17,"XISyncDevice","","",null,null],[17,"XIReplayDevice","","",null,null],[17,"XIAsyncPairedDevice","","",null,null],[17,"XIAsyncPair","","",null,null],[17,"XISyncPair","","",null,null],[17,"XIAcceptTouch","","",null,null],[17,"XIRejectTouch","","",null,null],[17,"XISlaveSwitch","","",null,null],[17,"XIDeviceChange","","",null,null],[17,"XIMasterAdded","","",null,null],[17,"XIMasterRemoved","","",null,null],[17,"XISlaveAdded","","",null,null],[17,"XISlaveRemoved","","",null,null],[17,"XISlaveAttached","","",null,null],[17,"XISlaveDetached","","",null,null],[17,"XIDeviceEnabled","","",null,null],[17,"XIDeviceDisabled","","",null,null],[17,"XIAddMaster","","",null,null],[17,"XIRemoveMaster","","",null,null],[17,"XIAttachSlave","","",null,null],[17,"XIDetachSlave","","",null,null],[17,"XIAttachToMaster","","",null,null],[17,"XIFloating","","",null,null],[17,"XIModeRelative","","",null,null],[17,"XIModeAbsolute","","",null,null],[17,"XIMasterPointer","","",null,null],[17,"XIMasterKeyboard","","",null,null],[17,"XISlavePointer","","",null,null],[17,"XISlaveKeyboard","","",null,null],[17,"XIFloatingSlave","","",null,null],[17,"XIKeyClass","","",null,null],[17,"XIButtonClass","","",null,null],[17,"XIValuatorClass","","",null,null],[17,"XIScrollClass","","",null,null],[17,"XITouchClass","","",null,null],[17,"XIScrollTypeVertical","","",null,null],[17,"XIScrollTypeHorizontal","","",null,null],[17,"XIScrollFlagNoEmulation","","",null,null],[17,"XIScrollFlagPreferred","","",null,null],[17,"XIKeyRepeat","","",null,null],[17,"XIPointerEmulated","","",null,null],[17,"XITouchPendingEnd","","",null,null],[17,"XITouchEmulatingPointer","","",null,null],[17,"XIBarrierPointerReleased","","",null,null],[17,"XIBarrierDeviceIsGrabbed","","",null,null],[17,"XIDirectTouch","","",null,null],[17,"XIDependentTouch","","",null,null],[17,"XIAllDevices","","",null,null],[17,"XIAllMasterDevices","","",null,null],[17,"XI_DeviceChanged","","",null,null],[17,"XI_KeyPress","","",null,null],[17,"XI_KeyRelease","","",null,null],[17,"XI_ButtonPress","","",null,null],[17,"XI_ButtonRelease","","",null,null],[17,"XI_Motion","","",null,null],[17,"XI_Enter","","",null,null],[17,"XI_Leave","","",null,null],[17,"XI_FocusIn","","",null,null],[17,"XI_FocusOut","","",null,null],[17,"XI_HierarchyChanged","","",null,null],[17,"XI_PropertyEvent","","",null,null],[17,"XI_RawKeyPress","","",null,null],[17,"XI_RawKeyRelease","","",null,null],[17,"XI_RawButtonPress","","",null,null],[17,"XI_RawButtonRelease","","",null,null],[17,"XI_RawMotion","","",null,null],[17,"XI_TouchBegin","","",null,null],[17,"XI_TouchUpdate","","",null,null],[17,"XI_TouchEnd","","",null,null],[17,"XI_TouchOwnership","","",null,null],[17,"XI_RawTouchBegin","","",null,null],[17,"XI_RawTouchUpdate","","",null,null],[17,"XI_RawTouchEnd","","",null,null],[17,"XI_BarrierHit","","",null,null],[17,"XI_BarrierLeave","","",null,null],[17,"XI_LASTEVENT","","",null,null],[17,"XI_DeviceChangedMask","","",null,null],[17,"XI_KeyPressMask","","",null,null],[17,"XI_KeyReleaseMask","","",null,null],[17,"XI_ButtonPressMask","","",null,null],[17,"XI_ButtonReleaseMask","","",null,null],[17,"XI_MotionMask","","",null,null],[17,"XI_EnterMask","","",null,null],[17,"XI_LeaveMask","","",null,null],[17,"XI_FocusInMask","","",null,null],[17,"XI_FocusOutMask","","",null,null],[17,"XI_HierarchyChangedMask","","",null,null],[17,"XI_PropertyEventMask","","",null,null],[17,"XI_RawKeyPressMask","","",null,null],[17,"XI_RawKeyReleaseMask","","",null,null],[17,"XI_RawButtonPressMask","","",null,null],[17,"XI_RawButtonReleaseMask","","",null,null],[17,"XI_RawMotionMask","","",null,null],[17,"XI_TouchBeginMask","","",null,null],[17,"XI_TouchEndMask","","",null,null],[17,"XI_TouchOwnershipChangedMask","","",null,null],[17,"XI_TouchUpdateMask","","",null,null],[17,"XI_RawTouchBeginMask","","",null,null],[17,"XI_RawTouchEndMask","","",null,null],[17,"XI_RawTouchUpdateMask","","",null,null],[17,"XI_BarrierHitMask","","",null,null],[17,"XI_BarrierLeaveMask","","",null,null],[11,"open","","",35,{"inputs":[{"name":"xinput2"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"struct_unnamed1"}],"output":{"name":"self"}}],[11,"default","","",36,{"inputs":[{"name":"struct_unnamed1"}],"output":{"name":"self"}}],[11,"clone","","",37,{"inputs":[{"name":"struct_unnamed2"}],"output":{"name":"self"}}],[11,"default","","",37,{"inputs":[{"name":"struct_unnamed2"}],"output":{"name":"self"}}],[11,"clone","","",38,{"inputs":[{"name":"struct_unnamed3"}],"output":{"name":"self"}}],[11,"default","","",38,{"inputs":[{"name":"struct_unnamed3"}],"output":{"name":"self"}}],[11,"clone","","",39,{"inputs":[{"name":"struct_unnamed4"}],"output":{"name":"self"}}],[11,"default","","",39,{"inputs":[{"name":"struct_unnamed4"}],"output":{"name":"self"}}],[11,"_type","","",40,null],[11,"add","","",40,null],[11,"remove","","",40,null],[11,"attach","","",40,null],[11,"detach","","",40,null],[11,"clone","","",40,{"inputs":[{"name":"union_unnamed5"}],"output":{"name":"self"}}],[11,"default","","",40,{"inputs":[{"name":"union_unnamed5"}],"output":{"name":"self"}}],[11,"clone","","",41,{"inputs":[{"name":"struct_unnamed6"}],"output":{"name":"self"}}],[11,"default","","",41,{"inputs":[{"name":"struct_unnamed6"}],"output":{"name":"self"}}],[11,"clone","","",42,{"inputs":[{"name":"struct_unnamed7"}],"output":{"name":"self"}}],[11,"default","","",42,{"inputs":[{"name":"struct_unnamed7"}],"output":{"name":"self"}}],[11,"clone","","",43,{"inputs":[{"name":"struct_unnamed8"}],"output":{"name":"self"}}],[11,"default","","",43,{"inputs":[{"name":"struct_unnamed8"}],"output":{"name":"self"}}],[11,"clone","","",44,{"inputs":[{"name":"struct_unnamed9"}],"output":{"name":"self"}}],[11,"default","","",44,{"inputs":[{"name":"struct_unnamed9"}],"output":{"name":"self"}}],[11,"clone","","",45,{"inputs":[{"name":"struct_unnamed10"}],"output":{"name":"self"}}],[11,"default","","",45,{"inputs":[{"name":"struct_unnamed10"}],"output":{"name":"self"}}],[11,"clone","","",46,{"inputs":[{"name":"struct_unnamed11"}],"output":{"name":"self"}}],[11,"default","","",46,{"inputs":[{"name":"struct_unnamed11"}],"output":{"name":"self"}}],[11,"clone","","",47,{"inputs":[{"name":"struct_unnamed12"}],"output":{"name":"self"}}],[11,"default","","",47,{"inputs":[{"name":"struct_unnamed12"}],"output":{"name":"self"}}],[11,"clone","","",48,{"inputs":[{"name":"struct_unnamed13"}],"output":{"name":"self"}}],[11,"default","","",48,{"inputs":[{"name":"struct_unnamed13"}],"output":{"name":"self"}}],[11,"clone","","",49,{"inputs":[{"name":"struct_unnamed14"}],"output":{"name":"self"}}],[11,"default","","",49,{"inputs":[{"name":"struct_unnamed14"}],"output":{"name":"self"}}],[11,"clone","","",50,{"inputs":[{"name":"struct_unnamed15"}],"output":{"name":"self"}}],[11,"default","","",50,{"inputs":[{"name":"struct_unnamed15"}],"output":{"name":"self"}}],[11,"clone","","",51,{"inputs":[{"name":"struct_unnamed16"}],"output":{"name":"self"}}],[11,"default","","",51,{"inputs":[{"name":"struct_unnamed16"}],"output":{"name":"self"}}],[11,"clone","","",52,{"inputs":[{"name":"struct_unnamed17"}],"output":{"name":"self"}}],[11,"default","","",52,{"inputs":[{"name":"struct_unnamed17"}],"output":{"name":"self"}}],[11,"clone","","",53,{"inputs":[{"name":"struct_unnamed18"}],"output":{"name":"self"}}],[11,"default","","",53,{"inputs":[{"name":"struct_unnamed18"}],"output":{"name":"self"}}],[11,"clone","","",54,{"inputs":[{"name":"struct_unnamed19"}],"output":{"name":"self"}}],[11,"default","","",54,{"inputs":[{"name":"struct_unnamed19"}],"output":{"name":"self"}}],[11,"clone","","",55,{"inputs":[{"name":"struct_unnamed20"}],"output":{"name":"self"}}],[11,"default","","",55,{"inputs":[{"name":"struct_unnamed20"}],"output":{"name":"self"}}],[11,"clone","","",56,{"inputs":[{"name":"struct_unnamed21"}],"output":{"name":"self"}}],[11,"default","","",56,{"inputs":[{"name":"struct_unnamed21"}],"output":{"name":"self"}}],[11,"clone","","",57,{"inputs":[{"name":"struct_unnamed22"}],"output":{"name":"self"}}],[11,"default","","",57,{"inputs":[{"name":"struct_unnamed22"}],"output":{"name":"self"}}],[11,"clone","","",58,{"inputs":[{"name":"struct_unnamed23"}],"output":{"name":"self"}}],[11,"default","","",58,{"inputs":[{"name":"struct_unnamed23"}],"output":{"name":"self"}}],[11,"clone","","",59,{"inputs":[{"name":"struct_unnamed24"}],"output":{"name":"self"}}],[11,"default","","",59,{"inputs":[{"name":"struct_unnamed24"}],"output":{"name":"self"}}],[11,"clone","","",60,{"inputs":[{"name":"struct_unnamed25"}],"output":{"name":"self"}}],[11,"default","","",60,{"inputs":[{"name":"struct_unnamed25"}],"output":{"name":"self"}}],[11,"clone","","",61,{"inputs":[{"name":"struct_unnamed26"}],"output":{"name":"self"}}],[11,"default","","",61,{"inputs":[{"name":"struct_unnamed26"}],"output":{"name":"self"}}],[11,"clone","","",62,{"inputs":[{"name":"struct_unnamed27"}],"output":{"name":"self"}}],[11,"default","","",62,{"inputs":[{"name":"struct_unnamed27"}],"output":{"name":"self"}}],[11,"clone","","",63,{"inputs":[{"name":"struct_unnamed28"}],"output":{"name":"self"}}],[11,"default","","",63,{"inputs":[{"name":"struct_unnamed28"}],"output":{"name":"self"}}],[0,"xlib","x11_dl","",null,null],[3,"Xlib","x11_dl::xlib","",null,null],[12,"XActivateScreenSaver","","",64,null],[12,"XAddConnectionWatch","","",64,null],[12,"XAddExtension","","",64,null],[12,"XAddHost","","",64,null],[12,"XAddHosts","","",64,null],[12,"XAddPixel","","",64,null],[12,"XAddToExtensionList","","",64,null],[12,"XAddToSaveSet","","",64,null],[12,"XAllocClassHint","","",64,null],[12,"XAllocColor","","",64,null],[12,"XAllocColorCells","","",64,null],[12,"XAllocColorPlanes","","",64,null],[12,"XAllocIconSize","","",64,null],[12,"XAllocNamedColor","","",64,null],[12,"XAllocSizeHints","","",64,null],[12,"XAllocStandardColormap","","",64,null],[12,"XAllocWMHints","","",64,null],[12,"XAllowEvents","","",64,null],[12,"XAllPlanes","","",64,null],[12,"XAutoRepeatOff","","",64,null],[12,"XAutoRepeatOn","","",64,null],[12,"XBaseFontNameListOfFontSet","","",64,null],[12,"XBell","","",64,null],[12,"XBitmapBitOrder","","",64,null],[12,"XBitmapPad","","",64,null],[12,"XBitmapUnit","","",64,null],[12,"XBlackPixel","","",64,null],[12,"XBlackPixelOfScreen","","",64,null],[12,"XCellsOfScreen","","",64,null],[12,"XChangeActivePointerGrab","","",64,null],[12,"XChangeGC","","",64,null],[12,"XChangeKeyboardControl","","",64,null],[12,"XChangeKeyboardMapping","","",64,null],[12,"XChangePointerControl","","",64,null],[12,"XChangeProperty","","",64,null],[12,"XChangeSaveSet","","",64,null],[12,"XChangeWindowAttributes","","",64,null],[12,"XCheckIfEvent","","",64,null],[12,"XCheckMaskEvent","","",64,null],[12,"XCheckTypedEvent","","",64,null],[12,"XCheckTypedWindowEvent","","",64,null],[12,"XCheckWindowEvent","","",64,null],[12,"XCirculateSubwindows","","",64,null],[12,"XCirculateSubwindowsDown","","",64,null],[12,"XCirculateSubwindowsUp","","",64,null],[12,"XClearArea","","",64,null],[12,"XClearWindow","","",64,null],[12,"XClipBox","","",64,null],[12,"XCloseDisplay","","",64,null],[12,"XCloseIM","","",64,null],[12,"XCloseOM","","",64,null],[12,"XcmsAddColorSpace","","",64,null],[12,"XcmsAddFunctionSet","","",64,null],[12,"XcmsAllocColor","","",64,null],[12,"XcmsAllocNamedColor","","",64,null],[12,"XcmsCCCOfColormap","","",64,null],[12,"XcmsCIELabClipab","","",64,null],[12,"XcmsCIELabClipL","","",64,null],[12,"XcmsCIELabClipLab","","",64,null],[12,"XcmsCIELabQueryMaxC","","",64,null],[12,"XcmsCIELabQueryMaxL","","",64,null],[12,"XcmsCIELabQueryMaxLC","","",64,null],[12,"XcmsCIELabQueryMinL","","",64,null],[12,"XcmsCIELabToCIEXYZ","","",64,null],[12,"XcmsCIELabWhiteShiftColors","","",64,null],[12,"XcmsCIELuvClipL","","",64,null],[12,"XcmsCIELuvClipLuv","","",64,null],[12,"XcmsCIELuvClipuv","","",64,null],[12,"XcmsCIELuvQueryMaxC","","",64,null],[12,"XcmsCIELuvQueryMaxL","","",64,null],[12,"XcmsCIELuvQueryMaxLC","","",64,null],[12,"XcmsCIELuvQueryMinL","","",64,null],[12,"XcmsCIELuvToCIEuvY","","",64,null],[12,"XcmsCIELuvWhiteShiftColors","","",64,null],[12,"XcmsCIEuvYToCIELuv","","",64,null],[12,"XcmsCIEuvYToCIEXYZ","","",64,null],[12,"XcmsCIEuvYToTekHVC","","",64,null],[12,"XcmsCIExyYToCIEXYZ","","",64,null],[12,"XcmsCIEXYZToCIELab","","",64,null],[12,"XcmsCIEXYZToCIEuvY","","",64,null],[12,"XcmsCIEXYZToCIExyY","","",64,null],[12,"XcmsCIEXYZToRGBi","","",64,null],[12,"XcmsClientWhitePointOfCCC","","",64,null],[12,"XcmsConvertColors","","",64,null],[12,"XcmsCreateCCC","","",64,null],[12,"XcmsDefaultCCC","","",64,null],[12,"XcmsDisplayOfCCC","","",64,null],[12,"XcmsFormatOfPrefix","","",64,null],[12,"XcmsFreeCCC","","",64,null],[12,"XcmsLookupColor","","",64,null],[12,"XcmsPrefixOfFormat","","",64,null],[12,"XcmsQueryBlack","","",64,null],[12,"XcmsQueryBlue","","",64,null],[12,"XcmsQueryColor","","",64,null],[12,"XcmsQueryColors","","",64,null],[12,"XcmsQueryGreen","","",64,null],[12,"XcmsQueryRed","","",64,null],[12,"XcmsQueryWhite","","",64,null],[12,"XcmsRGBiToCIEXYZ","","",64,null],[12,"XcmsRGBiToRGB","","",64,null],[12,"XcmsRGBToRGBi","","",64,null],[12,"XcmsScreenNumberOfCCC","","",64,null],[12,"XcmsScreenWhitePointOfCCC","","",64,null],[12,"XcmsSetCCCOfColormap","","",64,null],[12,"XcmsSetCompressionProc","","",64,null],[12,"XcmsSetWhiteAdjustProc","","",64,null],[12,"XcmsSetWhitePoint","","",64,null],[12,"XcmsStoreColor","","",64,null],[12,"XcmsStoreColors","","",64,null],[12,"XcmsTekHVCClipC","","",64,null],[12,"XcmsTekHVCClipV","","",64,null],[12,"XcmsTekHVCClipVC","","",64,null],[12,"XcmsTekHVCQueryMaxC","","",64,null],[12,"XcmsTekHVCQueryMaxV","","",64,null],[12,"XcmsTekHVCQueryMaxVC","","",64,null],[12,"XcmsTekHVCQueryMaxVSamples","","",64,null],[12,"XcmsTekHVCQueryMinV","","",64,null],[12,"XcmsTekHVCToCIEuvY","","",64,null],[12,"XcmsTekHVCWhiteShiftColors","","",64,null],[12,"XcmsVisualOfCCC","","",64,null],[12,"XConfigureWindow","","",64,null],[12,"XConnectionNumber","","",64,null],[12,"XContextDependentDrawing","","",64,null],[12,"XContextualDrawing","","",64,null],[12,"XConvertCase","","",64,null],[12,"XConvertSelection","","",64,null],[12,"XCopyArea","","",64,null],[12,"XCopyColormapAndFree","","",64,null],[12,"XCopyGC","","",64,null],[12,"XCopyPlane","","",64,null],[12,"XCreateBitmapFromData","","",64,null],[12,"XCreateColormap","","",64,null],[12,"XCreateFontCursor","","",64,null],[12,"XCreateFontSet","","",64,null],[12,"XCreateGC","","",64,null],[12,"XCreateGlyphCursor","","",64,null],[12,"XCreateImage","","",64,null],[12,"XCreatePixmap","","",64,null],[12,"XCreatePixmapCursor","","",64,null],[12,"XCreatePixmapFromBitmapData","","",64,null],[12,"XCreateRegion","","",64,null],[12,"XCreateSimpleWindow","","",64,null],[12,"XCreateWindow","","",64,null],[12,"XDefaultColormap","","",64,null],[12,"XDefaultColormapOfScreen","","",64,null],[12,"XDefaultDepth","","",64,null],[12,"XDefaultDepthOfScreen","","",64,null],[12,"XDefaultGC","","",64,null],[12,"XDefaultGCOfScreen","","",64,null],[12,"XDefaultRootWindow","","",64,null],[12,"XDefaultScreen","","",64,null],[12,"XDefaultScreenOfDisplay","","",64,null],[12,"XDefaultString","","",64,null],[12,"XDefaultVisual","","",64,null],[12,"XDefaultVisualOfScreen","","",64,null],[12,"XDefineCursor","","",64,null],[12,"XDeleteContext","","",64,null],[12,"XDeleteModifiermapEntry","","",64,null],[12,"XDeleteProperty","","",64,null],[12,"XDestroyIC","","",64,null],[12,"XDestroyImage","","",64,null],[12,"XDestroyOC","","",64,null],[12,"XDestroyRegion","","",64,null],[12,"XDestroySubwindows","","",64,null],[12,"XDestroyWindow","","",64,null],[12,"XDirectionalDependentDrawing","","",64,null],[12,"XDisableAccessControl","","",64,null],[12,"XDisplayCells","","",64,null],[12,"XDisplayHeight","","",64,null],[12,"XDisplayHeightMM","","",64,null],[12,"XDisplayKeycodes","","",64,null],[12,"XDisplayMotionBufferSize","","",64,null],[12,"XDisplayName","","",64,null],[12,"XDisplayOfIM","","",64,null],[12,"XDisplayOfOM","","",64,null],[12,"XDisplayOfScreen","","",64,null],[12,"XDisplayPlanes","","",64,null],[12,"XDisplayString","","",64,null],[12,"XDisplayWidth","","",64,null],[12,"XDisplayWidthMM","","",64,null],[12,"XDoesBackingStore","","",64,null],[12,"XDoesSaveUnders","","",64,null],[12,"XDrawArc","","",64,null],[12,"XDrawArcs","","",64,null],[12,"XDrawImageString","","",64,null],[12,"XDrawImageString16","","",64,null],[12,"XDrawLine","","",64,null],[12,"XDrawLines","","",64,null],[12,"XDrawPoint","","",64,null],[12,"XDrawPoints","","",64,null],[12,"XDrawRectangle","","",64,null],[12,"XDrawRectangles","","",64,null],[12,"XDrawSegments","","",64,null],[12,"XDrawString","","",64,null],[12,"XDrawString16","","",64,null],[12,"XDrawText","","",64,null],[12,"XDrawText16","","",64,null],[12,"XEHeadOfExtensionList","","",64,null],[12,"XEmptyRegion","","",64,null],[12,"XEnableAccessControl","","",64,null],[12,"XEqualRegion","","",64,null],[12,"XESetBeforeFlush","","",64,null],[12,"XESetCloseDisplay","","",64,null],[12,"XESetCopyEventCookie","","",64,null],[12,"XESetCopyGC","","",64,null],[12,"XESetCreateFont","","",64,null],[12,"XESetCreateGC","","",64,null],[12,"XESetError","","",64,null],[12,"XESetErrorString","","",64,null],[12,"XESetEventToWire","","",64,null],[12,"XESetFlushGC","","",64,null],[12,"XESetFreeFont","","",64,null],[12,"XESetFreeGC","","",64,null],[12,"XESetPrintErrorValues","","",64,null],[12,"XESetWireToError","","",64,null],[12,"XESetWireToEvent","","",64,null],[12,"XESetWireToEventCookie","","",64,null],[12,"XEventMaskOfScreen","","",64,null],[12,"XEventsQueued","","",64,null],[12,"XExtendedMaxRequestSize","","",64,null],[12,"XExtentsOfFontSet","","",64,null],[12,"XFetchBuffer","","",64,null],[12,"XFetchBytes","","",64,null],[12,"XFetchName","","",64,null],[12,"XFillArc","","",64,null],[12,"XFillArcs","","",64,null],[12,"XFillPolygon","","",64,null],[12,"XFillRectangle","","",64,null],[12,"XFillRectangles","","",64,null],[12,"XFilterEvent","","",64,null],[12,"XFindContext","","",64,null],[12,"XFindOnExtensionList","","",64,null],[12,"XFlush","","",64,null],[12,"XFlushGC","","",64,null],[12,"XFontsOfFontSet","","",64,null],[12,"XForceScreenSaver","","",64,null],[12,"XFree","","",64,null],[12,"XFreeColormap","","",64,null],[12,"XFreeColors","","",64,null],[12,"XFreeCursor","","",64,null],[12,"XFreeEventData","","",64,null],[12,"XFreeExtensionList","","",64,null],[12,"XFreeFont","","",64,null],[12,"XFreeFontInfo","","",64,null],[12,"XFreeFontNames","","",64,null],[12,"XFreeFontPath","","",64,null],[12,"XFreeFontSet","","",64,null],[12,"XFreeGC","","",64,null],[12,"XFreeModifiermap","","",64,null],[12,"XFreePixmap","","",64,null],[12,"XFreeStringList","","",64,null],[12,"XGContextFromGC","","",64,null],[12,"XGeometry","","",64,null],[12,"XGetAtomName","","",64,null],[12,"XGetAtomNames","","",64,null],[12,"XGetClassHint","","",64,null],[12,"XGetCommand","","",64,null],[12,"XGetDefault","","",64,null],[12,"XGetErrorDatabaseText","","",64,null],[12,"XGetErrorText","","",64,null],[12,"XGetEventData","","",64,null],[12,"XGetFontPath","","",64,null],[12,"XGetFontProperty","","",64,null],[12,"XGetGCValues","","",64,null],[12,"XGetGeometry","","",64,null],[12,"XGetIconName","","",64,null],[12,"XGetIconSizes","","",64,null],[12,"XGetImage","","",64,null],[12,"XGetInputFocus","","",64,null],[12,"XGetKeyboardControl","","",64,null],[12,"XGetKeyboardMapping","","",64,null],[12,"XGetModifierMapping","","",64,null],[12,"XGetMotionEvents","","",64,null],[12,"XGetNormalHints","","",64,null],[12,"XGetPixel","","",64,null],[12,"XGetPointerControl","","",64,null],[12,"XGetPointerMapping","","",64,null],[12,"XGetRGBColormaps","","",64,null],[12,"XGetScreenSaver","","",64,null],[12,"XGetSelectionOwner","","",64,null],[12,"XGetSizeHints","","",64,null],[12,"XGetStandardColormap","","",64,null],[12,"XGetSubImage","","",64,null],[12,"XGetTextProperty","","",64,null],[12,"XGetTransientForHint","","",64,null],[12,"XGetVisualInfo","","",64,null],[12,"XGetWindowAttributes","","",64,null],[12,"XGetWindowProperty","","",64,null],[12,"XGetWMClientMachine","","",64,null],[12,"XGetWMColormapWindows","","",64,null],[12,"XGetWMHints","","",64,null],[12,"XGetWMIconName","","",64,null],[12,"XGetWMName","","",64,null],[12,"XGetWMNormalHints","","",64,null],[12,"XGetWMProtocols","","",64,null],[12,"XGetWMSizeHints","","",64,null],[12,"XGetZoomHints","","",64,null],[12,"XGrabButton","","",64,null],[12,"XGrabKey","","",64,null],[12,"XGrabKeyboard","","",64,null],[12,"XGrabPointer","","",64,null],[12,"XGrabServer","","",64,null],[12,"XHeightMMOfScreen","","",64,null],[12,"XHeightOfScreen","","",64,null],[12,"XIconifyWindow","","",64,null],[12,"XIfEvent","","",64,null],[12,"XImageByteOrder","","",64,null],[12,"XIMOfIC","","",64,null],[12,"XInitExtension","","",64,null],[12,"XInitImage","","",64,null],[12,"XInitThreads","","",64,null],[12,"XInsertModifiermapEntry","","",64,null],[12,"XInstallColormap","","",64,null],[12,"XInternalConnectionNumbers","","",64,null],[12,"XInternAtom","","",64,null],[12,"XInternAtoms","","",64,null],[12,"XIntersectRegion","","",64,null],[12,"XkbAddDeviceLedInfo","","",64,null],[12,"XkbAddGeomColor","","",64,null],[12,"XkbAddGeomDoodad","","",64,null],[12,"XkbAddGeomKey","","",64,null],[12,"XkbAddGeomKeyAlias","","",64,null],[12,"XkbAddGeomOutline","","",64,null],[12,"XkbAddGeomOverlay","","",64,null],[12,"XkbAddGeomOverlayKey","","",64,null],[12,"XkbAddGeomOverlayRow","","",64,null],[12,"XkbAddGeomProperty","","",64,null],[12,"XkbAddGeomRow","","",64,null],[12,"XkbAddGeomSection","","",64,null],[12,"XkbAddGeomShape","","",64,null],[12,"XkbAddKeyType","","",64,null],[12,"XkbAllocClientMap","","",64,null],[12,"XkbAllocCompatMap","","",64,null],[12,"XkbAllocControls","","",64,null],[12,"XkbAllocDeviceInfo","","",64,null],[12,"XkbAllocGeomColors","","",64,null],[12,"XkbAllocGeomDoodads","","",64,null],[12,"XkbAllocGeometry","","",64,null],[12,"XkbAllocGeomKeyAliases","","",64,null],[12,"XkbAllocGeomKeys","","",64,null],[12,"XkbAllocGeomOutlines","","",64,null],[12,"XkbAllocGeomOverlayKeys","","",64,null],[12,"XkbAllocGeomOverlayRows","","",64,null],[12,"XkbAllocGeomOverlays","","",64,null],[12,"XkbAllocGeomPoints","","",64,null],[12,"XkbAllocGeomProps","","",64,null],[12,"XkbAllocGeomRows","","",64,null],[12,"XkbAllocGeomSectionDoodads","","",64,null],[12,"XkbAllocGeomSections","","",64,null],[12,"XkbAllocGeomShapes","","",64,null],[12,"XkbAllocIndicatorMaps","","",64,null],[12,"XkbAllocKeyboard","","",64,null],[12,"XkbAllocNames","","",64,null],[12,"XkbAllocServerMap","","",64,null],[12,"XkbApplyCompatMapToKey","","",64,null],[12,"XkbApplyVirtualModChanges","","",64,null],[12,"XkbBell","","",64,null],[12,"XkbBellEvent","","",64,null],[12,"XkbChangeDeviceInfo","","",64,null],[12,"XkbChangeEnabledControls","","",64,null],[12,"XkbChangeKeycodeRange","","",64,null],[12,"XkbChangeMap","","",64,null],[12,"XkbChangeNames","","",64,null],[12,"XkbChangeTypesOfKey","","",64,null],[12,"XkbComputeEffectiveMap","","",64,null],[12,"XkbComputeRowBounds","","",64,null],[12,"XkbComputeSectionBounds","","",64,null],[12,"XkbComputeShapeBounds","","",64,null],[12,"XkbComputeShapeTop","","",64,null],[12,"XkbCopyKeyType","","",64,null],[12,"XkbCopyKeyTypes","","",64,null],[12,"XkbDeviceBell","","",64,null],[12,"XkbDeviceBellEvent","","",64,null],[12,"XkbFindOverlayForKey","","",64,null],[12,"XkbForceBell","","",64,null],[12,"XkbForceDeviceBell","","",64,null],[12,"XkbFreeClientMap","","",64,null],[12,"XkbFreeCompatMap","","",64,null],[12,"XkbFreeComponentList","","",64,null],[12,"XkbFreeControls","","",64,null],[12,"XkbFreeDeviceInfo","","",64,null],[12,"XkbFreeGeomColors","","",64,null],[12,"XkbFreeGeomDoodads","","",64,null],[12,"XkbFreeGeometry","","",64,null],[12,"XkbFreeGeomKeyAliases","","",64,null],[12,"XkbFreeGeomKeys","","",64,null],[12,"XkbFreeGeomOutlines","","",64,null],[12,"XkbFreeGeomOverlayKeys","","",64,null],[12,"XkbFreeGeomOverlayRows","","",64,null],[12,"XkbFreeGeomOverlays","","",64,null],[12,"XkbFreeGeomPoints","","",64,null],[12,"XkbFreeGeomProperties","","",64,null],[12,"XkbFreeGeomRows","","",64,null],[12,"XkbFreeGeomSections","","",64,null],[12,"XkbFreeGeomShapes","","",64,null],[12,"XkbFreeIndicatorMaps","","",64,null],[12,"XkbFreeKeyboard","","",64,null],[12,"XkbFreeNames","","",64,null],[12,"XkbFreeServerMap","","",64,null],[12,"XkbGetAutoRepeatRate","","",64,null],[12,"XkbGetAutoResetControls","","",64,null],[12,"XkbGetCompatMap","","",64,null],[12,"XkbGetControls","","",64,null],[12,"XkbGetDetectableAutoRepeat","","",64,null],[12,"XkbGetDeviceButtonActions","","",64,null],[12,"XkbGetDeviceInfo","","",64,null],[12,"XkbGetDeviceInfoChanges","","",64,null],[12,"XkbGetDeviceLedInfo","","",64,null],[12,"XkbGetGeometry","","",64,null],[12,"XkbGetIndicatorMap","","",64,null],[12,"XkbGetIndicatorState","","",64,null],[12,"XkbGetKeyActions","","",64,null],[12,"XkbGetKeyBehaviors","","",64,null],[12,"XkbGetKeyboard","","",64,null],[12,"XkbGetKeyboardByName","","",64,null],[12,"XkbGetKeyExplicitComponents","","",64,null],[12,"XkbGetKeyModifierMap","","",64,null],[12,"XkbGetKeySyms","","",64,null],[12,"XkbGetKeyTypes","","",64,null],[12,"XkbGetKeyVirtualModMap","","",64,null],[12,"XkbGetMap","","",64,null],[12,"XkbGetMapChanges","","",64,null],[12,"XkbGetNamedDeviceIndicator","","",64,null],[12,"XkbGetNamedGeometry","","",64,null],[12,"XkbGetNamedIndicator","","",64,null],[12,"XkbGetNames","","",64,null],[12,"XkbGetPerClientControls","","",64,null],[12,"XkbGetState","","",64,null],[12,"XkbGetUpdatedMap","","",64,null],[12,"XkbGetVirtualMods","","",64,null],[12,"XkbGetXlibControls","","",64,null],[12,"XkbIgnoreExtension","","",64,null],[12,"XkbInitCanonicalKeyTypes","","",64,null],[12,"XkbKeycodeToKeysym","","",64,null],[12,"XkbKeysymToModifiers","","",64,null],[12,"XkbKeyTypesForCoreSymbols","","",64,null],[12,"XkbLatchGroup","","",64,null],[12,"XkbLatchModifiers","","",64,null],[12,"XkbLibraryVersion","","",64,null],[12,"XkbListComponents","","",64,null],[12,"XkbLockGroup","","",64,null],[12,"XkbLockModifiers","","",64,null],[12,"XkbLookupKeyBinding","","",64,null],[12,"XkbLookupKeySym","","",64,null],[12,"XkbNoteControlsChanges","","",64,null],[12,"XkbNoteDeviceChanges","","",64,null],[12,"XkbNoteMapChanges","","",64,null],[12,"XkbNoteNameChanges","","",64,null],[12,"XkbOpenDisplay","","",64,null],[12,"XkbQueryExtension","","",64,null],[12,"XkbRefreshKeyboardMapping","","",64,null],[12,"XkbResizeDeviceButtonActions","","",64,null],[12,"XkbResizeKeyActions","","",64,null],[12,"XkbResizeKeySyms","","",64,null],[12,"XkbResizeKeyType","","",64,null],[12,"XkbSelectEventDetails","","",64,null],[12,"XkbSelectEvents","","",64,null],[12,"XkbSetAtomFuncs","","",64,null],[12,"XkbSetAutoRepeatRate","","",64,null],[12,"XkbSetAutoResetControls","","",64,null],[12,"XkbSetCompatMap","","",64,null],[12,"XkbSetControls","","",64,null],[12,"XkbSetDebuggingFlags","","",64,null],[12,"XkbSetDetectableAutoRepeat","","",64,null],[12,"XkbSetDeviceButtonActions","","",64,null],[12,"XkbSetDeviceInfo","","",64,null],[12,"XkbSetDeviceLedInfo","","",64,null],[12,"XkbSetGeometry","","",64,null],[12,"XkbSetIgnoreLockMods","","",64,null],[12,"XkbSetIndicatorMap","","",64,null],[12,"XkbSetMap","","",64,null],[12,"XkbSetNamedDeviceIndicator","","",64,null],[12,"XkbSetNamedIndicator","","",64,null],[12,"XkbSetNames","","",64,null],[12,"XkbSetPerClientControls","","",64,null],[12,"XkbSetServerInternalMods","","",64,null],[12,"XkbSetXlibControls","","",64,null],[12,"XkbToControl","","",64,null],[12,"XkbTranslateKeyCode","","",64,null],[12,"XkbTranslateKeySym","","",64,null],[12,"XkbUpdateActionVirtualMods","","",64,null],[12,"XkbUpdateKeyTypeVirtualMods","","",64,null],[12,"XkbUpdateMapFromCore","","",64,null],[12,"XkbUseExtension","","",64,null],[12,"XkbVirtualModsToReal","","",64,null],[12,"XkbXlibControlsImplemented","","",64,null],[12,"XKeycodeToKeysym","","",64,null],[12,"XKeysymToKeycode","","",64,null],[12,"XKeysymToString","","",64,null],[12,"XKillClient","","",64,null],[12,"XLastKnownRequestProcessed","","",64,null],[12,"XListDepths","","",64,null],[12,"XListExtensions","","",64,null],[12,"XListFonts","","",64,null],[12,"XListFontsWithInfo","","",64,null],[12,"XListHosts","","",64,null],[12,"XListInstalledColormaps","","",64,null],[12,"XListPixmapFormats","","",64,null],[12,"XListProperties","","",64,null],[12,"XLoadFont","","",64,null],[12,"XLoadQueryFont","","",64,null],[12,"XLocaleOfFontSet","","",64,null],[12,"XLocaleOfIM","","",64,null],[12,"XLocaleOfOM","","",64,null],[12,"XLockDisplay","","",64,null],[12,"XLookupColor","","",64,null],[12,"XLookupKeysym","","",64,null],[12,"XLookupString","","",64,null],[12,"XLowerWindow","","",64,null],[12,"XMapRaised","","",64,null],[12,"XMapSubwindows","","",64,null],[12,"XMapWindow","","",64,null],[12,"XMaskEvent","","",64,null],[12,"XMatchVisualInfo","","",64,null],[12,"XMaxCmapsOfScreen","","",64,null],[12,"XMaxRequestSize","","",64,null],[12,"XmbDrawImageString","","",64,null],[12,"XmbDrawString","","",64,null],[12,"XmbDrawText","","",64,null],[12,"XmbLookupString","","",64,null],[12,"XmbResetIC","","",64,null],[12,"XmbSetWMProperties","","",64,null],[12,"XmbTextEscapement","","",64,null],[12,"XmbTextExtents","","",64,null],[12,"XmbTextListToTextProperty","","",64,null],[12,"XmbTextPerCharExtents","","",64,null],[12,"XmbTextPropertyToTextList","","",64,null],[12,"XMinCmapsOfScreen","","",64,null],[12,"XMoveResizeWindow","","",64,null],[12,"XMoveWindow","","",64,null],[12,"XNewModifiermap","","",64,null],[12,"XNextEvent","","",64,null],[12,"XNextRequest","","",64,null],[12,"XNoOp","","",64,null],[12,"XOffsetRegion","","",64,null],[12,"XOMOfOC","","",64,null],[12,"XOpenDisplay","","",64,null],[12,"XOpenIM","","",64,null],[12,"XOpenOM","","",64,null],[12,"XParseColor","","",64,null],[12,"XParseGeometry","","",64,null],[12,"XPeekEvent","","",64,null],[12,"XPeekIfEvent","","",64,null],[12,"XPending","","",64,null],[12,"Xpermalloc","","",64,null],[12,"XPlanesOfScreen","","",64,null],[12,"XPointInRegion","","",64,null],[12,"XPolygonRegion","","",64,null],[12,"XProcessInternalConnection","","",64,null],[12,"XProtocolRevision","","",64,null],[12,"XProtocolVersion","","",64,null],[12,"XPutBackEvent","","",64,null],[12,"XPutImage","","",64,null],[12,"XPutPixel","","",64,null],[12,"XQLength","","",64,null],[12,"XQueryBestCursor","","",64,null],[12,"XQueryBestSize","","",64,null],[12,"XQueryBestStipple","","",64,null],[12,"XQueryBestTile","","",64,null],[12,"XQueryColor","","",64,null],[12,"XQueryColors","","",64,null],[12,"XQueryExtension","","",64,null],[12,"XQueryFont","","",64,null],[12,"XQueryKeymap","","",64,null],[12,"XQueryPointer","","",64,null],[12,"XQueryTextExtents","","",64,null],[12,"XQueryTextExtents16","","",64,null],[12,"XQueryTree","","",64,null],[12,"XRaiseWindow","","",64,null],[12,"XReadBitmapFile","","",64,null],[12,"XReadBitmapFileData","","",64,null],[12,"XRebindKeysym","","",64,null],[12,"XRecolorCursor","","",64,null],[12,"XReconfigureWMWindow","","",64,null],[12,"XRectInRegion","","",64,null],[12,"XRefreshKeyboardMapping","","",64,null],[12,"XRegisterIMInstantiateCallback","","",64,null],[12,"XRemoveConnectionWatch","","",64,null],[12,"XRemoveFromSaveSet","","",64,null],[12,"XRemoveHost","","",64,null],[12,"XRemoveHosts","","",64,null],[12,"XReparentWindow","","",64,null],[12,"XResetScreenSaver","","",64,null],[12,"XResizeWindow","","",64,null],[12,"XResourceManagerString","","",64,null],[12,"XRestackWindows","","",64,null],[12,"XrmCombineDatabase","","",64,null],[12,"XrmCombineFileDatabase","","",64,null],[12,"XrmDestroyDatabase","","",64,null],[12,"XrmEnumerateDatabase","","",64,null],[12,"XrmGetDatabase","","",64,null],[12,"XrmGetFileDatabase","","",64,null],[12,"XrmGetResource","","",64,null],[12,"XrmGetStringDatabase","","",64,null],[12,"XrmInitialize","","",64,null],[12,"XrmLocaleOfDatabase","","",64,null],[12,"XrmMergeDatabases","","",64,null],[12,"XrmParseCommand","","",64,null],[12,"XrmPermStringToQuark","","",64,null],[12,"XrmPutFileDatabase","","",64,null],[12,"XrmPutLineResource","","",64,null],[12,"XrmPutResource","","",64,null],[12,"XrmPutStringResource","","",64,null],[12,"XrmQGetResource","","",64,null],[12,"XrmQGetSearchList","","",64,null],[12,"XrmQGetSearchResource","","",64,null],[12,"XrmQPutResource","","",64,null],[12,"XrmQPutStringResource","","",64,null],[12,"XrmQuarkToString","","",64,null],[12,"XrmSetDatabase","","",64,null],[12,"XrmStringToBindingQuarkList","","",64,null],[12,"XrmStringToQuark","","",64,null],[12,"XrmStringToQuarkList","","",64,null],[12,"XrmUniqueQuark","","",64,null],[12,"XRootWindow","","",64,null],[12,"XRootWindowOfScreen","","",64,null],[12,"XRotateBuffers","","",64,null],[12,"XRotateWindowProperties","","",64,null],[12,"XSaveContext","","",64,null],[12,"XScreenCount","","",64,null],[12,"XScreenNumberOfScreen","","",64,null],[12,"XScreenOfDisplay","","",64,null],[12,"XScreenResourceString","","",64,null],[12,"XSelectInput","","",64,null],[12,"XSendEvent","","",64,null],[12,"XServerVendor","","",64,null],[12,"XSetAccessControl","","",64,null],[12,"XSetAfterFunction","","",64,null],[12,"XSetArcMode","","",64,null],[12,"XSetAuthorization","","",64,null],[12,"XSetBackground","","",64,null],[12,"XSetClassHint","","",64,null],[12,"XSetClipMask","","",64,null],[12,"XSetClipOrigin","","",64,null],[12,"XSetClipRectangles","","",64,null],[12,"XSetCloseDownMode","","",64,null],[12,"XSetCommand","","",64,null],[12,"XSetDashes","","",64,null],[12,"XSetErrorHandler","","",64,null],[12,"XSetFillRule","","",64,null],[12,"XSetFillStyle","","",64,null],[12,"XSetFont","","",64,null],[12,"XSetFontPath","","",64,null],[12,"XSetForeground","","",64,null],[12,"XSetFunction","","",64,null],[12,"XSetGraphicsExposures","","",64,null],[12,"XSetICFocus","","",64,null],[12,"XSetIconName","","",64,null],[12,"XSetIconSizes","","",64,null],[12,"XSetInputFocus","","",64,null],[12,"XSetIOErrorHandler","","",64,null],[12,"XSetLineAttributes","","",64,null],[12,"XSetLocaleModifiers","","",64,null],[12,"XSetModifierMapping","","",64,null],[12,"XSetNormalHints","","",64,null],[12,"XSetPlaneMask","","",64,null],[12,"XSetPointerMapping","","",64,null],[12,"XSetRegion","","",64,null],[12,"XSetRGBColormaps","","",64,null],[12,"XSetScreenSaver","","",64,null],[12,"XSetSelectionOwner","","",64,null],[12,"XSetSizeHints","","",64,null],[12,"XSetStandardColormap","","",64,null],[12,"XSetStandardProperties","","",64,null],[12,"XSetState","","",64,null],[12,"XSetStipple","","",64,null],[12,"XSetSubwindowMode","","",64,null],[12,"XSetTextProperty","","",64,null],[12,"XSetTile","","",64,null],[12,"XSetTransientForHint","","",64,null],[12,"XSetTSOrigin","","",64,null],[12,"XSetWindowBackground","","",64,null],[12,"XSetWindowBackgroundPixmap","","",64,null],[12,"XSetWindowBorder","","",64,null],[12,"XSetWindowBorderPixmap","","",64,null],[12,"XSetWindowBorderWidth","","",64,null],[12,"XSetWindowColormap","","",64,null],[12,"XSetWMClientMachine","","",64,null],[12,"XSetWMColormapWindows","","",64,null],[12,"XSetWMHints","","",64,null],[12,"XSetWMIconName","","",64,null],[12,"XSetWMName","","",64,null],[12,"XSetWMNormalHints","","",64,null],[12,"XSetWMProperties","","",64,null],[12,"XSetWMProtocols","","",64,null],[12,"XSetWMSizeHints","","",64,null],[12,"XSetZoomHints","","",64,null],[12,"XShrinkRegion","","",64,null],[12,"XStoreBuffer","","",64,null],[12,"XStoreBytes","","",64,null],[12,"XStoreColor","","",64,null],[12,"XStoreColors","","",64,null],[12,"XStoreName","","",64,null],[12,"XStoreNamedColor","","",64,null],[12,"XStringListToTextProperty","","",64,null],[12,"XStringToKeysym","","",64,null],[12,"XSubImage","","",64,null],[12,"XSubtractRegion","","",64,null],[12,"XSupportsLocale","","",64,null],[12,"XSync","","",64,null],[12,"XSynchronize","","",64,null],[12,"XTextExtents","","",64,null],[12,"XTextExtents16","","",64,null],[12,"XTextPropertyToStringList","","",64,null],[12,"XTextWidth","","",64,null],[12,"XTextWidth16","","",64,null],[12,"XTranslateCoordinates","","",64,null],[12,"XUndefineCursor","","",64,null],[12,"XUngrabButton","","",64,null],[12,"XUngrabKey","","",64,null],[12,"XUngrabKeyboard","","",64,null],[12,"XUngrabPointer","","",64,null],[12,"XUngrabServer","","",64,null],[12,"XUninstallColormap","","",64,null],[12,"XUnionRectWithRegion","","",64,null],[12,"XUnionRegion","","",64,null],[12,"XUnloadFont","","",64,null],[12,"XUnlockDisplay","","",64,null],[12,"XUnmapSubwindows","","",64,null],[12,"XUnmapWindow","","",64,null],[12,"XUnregisterIMInstantiateCallback","","",64,null],[12,"XUnsetICFocus","","",64,null],[12,"Xutf8DrawImageString","","",64,null],[12,"Xutf8DrawString","","",64,null],[12,"Xutf8DrawText","","",64,null],[12,"Xutf8LookupString","","",64,null],[12,"Xutf8ResetIC","","",64,null],[12,"Xutf8SetWMProperties","","",64,null],[12,"Xutf8TextEscapement","","",64,null],[12,"Xutf8TextExtents","","",64,null],[12,"Xutf8TextListToTextProperty","","",64,null],[12,"Xutf8TextPerCharExtents","","",64,null],[12,"Xutf8TextPropertyToTextList","","",64,null],[12,"XVendorRelease","","",64,null],[12,"XVisualIDFromVisual","","",64,null],[12,"XWarpPointer","","",64,null],[12,"XwcDrawImageString","","",64,null],[12,"XwcDrawString","","",64,null],[12,"XwcDrawText","","",64,null],[12,"XwcFreeStringList","","",64,null],[12,"XwcLookupString","","",64,null],[12,"XwcResetIC","","",64,null],[12,"XwcTextEscapement","","",64,null],[12,"XwcTextExtents","","",64,null],[12,"XwcTextListToTextProperty","","",64,null],[12,"XwcTextPerCharExtents","","",64,null],[12,"XwcTextPropertyToTextList","","",64,null],[12,"XWhitePixel","","",64,null],[12,"XWhitePixelOfScreen","","",64,null],[12,"XWidthMMOfScreen","","",64,null],[12,"XWidthOfScreen","","",64,null],[12,"XWindowEvent","","",64,null],[12,"XWithdrawWindow","","",64,null],[12,"XWMGeometry","","",64,null],[12,"XWriteBitmapFile","","",64,null],[12,"XXorRegion","","",64,null],[12,"XCreateIC","","",64,null],[12,"XCreateOC","","",64,null],[12,"XGetICValues","","",64,null],[12,"XGetIMValues","","",64,null],[12,"XGetOCValues","","",64,null],[12,"XGetOMValues","","",64,null],[12,"XSetICValues","","",64,null],[12,"XSetIMValues","","",64,null],[12,"XSetOCValues","","",64,null],[12,"XSetOMValues","","",64,null],[12,"XVaCreateNestedList","","",64,null],[3,"_XcmsCCC","","",null,null],[3,"XcmsColor","","",null,null],[3,"_XcmsColorSpace","","",null,null],[3,"_XcmsFunctionSet","","",null,null],[3,"_XkbAction","","",null,null],[3,"_XkbBounds","","",null,null],[3,"_XkbChanges","","",null,null],[3,"_XkbClientMapRec","","",null,null],[3,"_XkbColor","","",null,null],[3,"_XkbComponentList","","",null,null],[3,"_XkbComponentNames","","",null,null],[3,"_XkbControls","","",null,null],[3,"_XkbControlsChanges","","",null,null],[3,"_XkbControlsNotify","","",null,null],[3,"_XkbDeviceChanges","","",null,null],[3,"_XkbDeviceInfo","","",null,null],[3,"_XkbDeviceLedInfo","","",null,null],[3,"_XkbDoodad","","",null,null],[3,"_XkbExtensionDeviceNotify","","",null,null],[3,"_XkbGeometry","","",null,null],[3,"_XkbGeometrySizes","","",null,null],[3,"_XkbIndicatorMapRec","","",null,null],[3,"_XkbKey","","",null,null],[3,"_XkbKeyType","","",null,null],[3,"_XkbMapChanges","","",null,null],[3,"_XkbMapNotifyEvent","","",null,null],[3,"_XkbMods","","",null,null],[3,"_XkbNameChanges","","",null,null],[3,"_XkbNamesNotify","","",null,null],[3,"_XkbOutline","","",null,null],[3,"_XkbOverlay","","",null,null],[3,"_XkbOverlayKey","","",null,null],[3,"_XkbOverlayRow","","",null,null],[3,"_XkbProperty","","",null,null],[3,"_XkbRow","","",null,null],[3,"_XkbSection","","",null,null],[3,"_XkbServerMapRec","","",null,null],[3,"_XkbShape","","",null,null],[3,"_XkbStateRec","","",null,null],[3,"_XkbSymInterpretRec","","",null,null],[3,"XEvent","","",null,null],[12,"pad","","",65,null],[3,"XAnyEvent","","",null,null],[12,"type_","","",66,null],[12,"serial","","",66,null],[12,"send_event","","",66,null],[12,"display","","",66,null],[12,"window","","",66,null],[3,"XButtonEvent","","",null,null],[12,"type_","","",67,null],[12,"serial","","",67,null],[12,"send_event","","",67,null],[12,"display","","",67,null],[12,"window","","",67,null],[12,"root","","",67,null],[12,"subwindow","","",67,null],[12,"time","","",67,null],[12,"x","","",67,null],[12,"y","","",67,null],[12,"x_root","","",67,null],[12,"y_root","","",67,null],[12,"state","","",67,null],[12,"button","","",67,null],[12,"same_screen","","",67,null],[3,"XCirculateEvent","","",null,null],[12,"type_","","",68,null],[12,"serial","","",68,null],[12,"send_event","","",68,null],[12,"display","","",68,null],[12,"event","","",68,null],[12,"window","","",68,null],[12,"place","","",68,null],[3,"XCirculateRequestEvent","","",null,null],[12,"type_","","",69,null],[12,"serial","","",69,null],[12,"send_event","","",69,null],[12,"display","","",69,null],[12,"parent","","",69,null],[12,"window","","",69,null],[12,"place","","",69,null],[3,"XClientMessageEvent","","",null,null],[12,"type_","","",70,null],[12,"serial","","",70,null],[12,"send_event","","",70,null],[12,"display","","",70,null],[12,"window","","",70,null],[12,"message_type","","",70,null],[12,"format","","",70,null],[12,"data","","",70,null],[3,"XColormapEvent","","",null,null],[12,"type_","","",71,null],[12,"serial","","",71,null],[12,"send_event","","",71,null],[12,"display","","",71,null],[12,"window","","",71,null],[12,"colormap","","",71,null],[12,"new","","",71,null],[12,"state","","",71,null],[3,"XConfigureEvent","","",null,null],[12,"type_","","",72,null],[12,"serial","","",72,null],[12,"send_event","","",72,null],[12,"display","","",72,null],[12,"event","","",72,null],[12,"window","","",72,null],[12,"x","","",72,null],[12,"y","","",72,null],[12,"width","","",72,null],[12,"height","","",72,null],[12,"border_width","","",72,null],[12,"above","","",72,null],[12,"override_redirect","","",72,null],[3,"XConfigureRequestEvent","","",null,null],[12,"type_","","",73,null],[12,"serial","","",73,null],[12,"send_event","","",73,null],[12,"display","","",73,null],[12,"parent","","",73,null],[12,"window","","",73,null],[12,"x","","",73,null],[12,"y","","",73,null],[12,"width","","",73,null],[12,"height","","",73,null],[12,"border_width","","",73,null],[12,"above","","",73,null],[12,"detail","","",73,null],[12,"value_mask","","",73,null],[3,"XCreateWindowEvent","","",null,null],[12,"type_","","",74,null],[12,"serial","","",74,null],[12,"send_event","","",74,null],[12,"display","","",74,null],[12,"parent","","",74,null],[12,"window","","",74,null],[12,"x","","",74,null],[12,"y","","",74,null],[12,"width","","",74,null],[12,"height","","",74,null],[12,"border_width","","",74,null],[12,"override_redirect","","",74,null],[3,"XCrossingEvent","","",null,null],[12,"type_","","",75,null],[12,"serial","","",75,null],[12,"send_event","","",75,null],[12,"display","","",75,null],[12,"window","","",75,null],[12,"root","","",75,null],[12,"subwindow","","",75,null],[12,"time","","",75,null],[12,"x","","",75,null],[12,"y","","",75,null],[12,"x_root","","",75,null],[12,"y_root","","",75,null],[12,"mode","","",75,null],[12,"detail","","",75,null],[12,"same_screen","","",75,null],[12,"focus","","",75,null],[12,"state","","",75,null],[3,"XDestroyWindowEvent","","",null,null],[12,"type_","","",76,null],[12,"serial","","",76,null],[12,"send_event","","",76,null],[12,"display","","",76,null],[12,"event","","",76,null],[12,"window","","",76,null],[3,"XErrorEvent","","",null,null],[12,"type_","","",77,null],[12,"display","","",77,null],[12,"resourceid","","",77,null],[12,"serial","","",77,null],[12,"error_code","","",77,null],[12,"request_code","","",77,null],[12,"minor_code","","",77,null],[3,"XExposeEvent","","",null,null],[12,"type_","","",78,null],[12,"serial","","",78,null],[12,"send_event","","",78,null],[12,"display","","",78,null],[12,"window","","",78,null],[12,"x","","",78,null],[12,"y","","",78,null],[12,"width","","",78,null],[12,"height","","",78,null],[12,"count","","",78,null],[3,"XFocusChangeEvent","","",null,null],[12,"type_","","",79,null],[12,"serial","","",79,null],[12,"send_event","","",79,null],[12,"display","","",79,null],[12,"window","","",79,null],[12,"mode","","",79,null],[12,"detail","","",79,null],[3,"XGraphicsExposeEvent","","",null,null],[12,"type_","","",80,null],[12,"serial","","",80,null],[12,"send_event","","",80,null],[12,"display","","",80,null],[12,"drawable","","",80,null],[12,"x","","",80,null],[12,"y","","",80,null],[12,"width","","",80,null],[12,"height","","",80,null],[12,"count","","",80,null],[12,"major_code","","",80,null],[12,"minor_code","","",80,null],[3,"XGravityEvent","","",null,null],[12,"type_","","",81,null],[12,"serial","","",81,null],[12,"send_event","","",81,null],[12,"display","","",81,null],[12,"event","","",81,null],[12,"window","","",81,null],[12,"x","","",81,null],[12,"y","","",81,null],[3,"XKeyEvent","","",null,null],[12,"type_","","",82,null],[12,"serial","","",82,null],[12,"send_event","","",82,null],[12,"display","","",82,null],[12,"window","","",82,null],[12,"root","","",82,null],[12,"subwindow","","",82,null],[12,"time","","",82,null],[12,"x","","",82,null],[12,"y","","",82,null],[12,"x_root","","",82,null],[12,"y_root","","",82,null],[12,"state","","",82,null],[12,"keycode","","",82,null],[12,"same_screen","","",82,null],[3,"XKeymapEvent","","",null,null],[12,"type_","","",83,null],[12,"serial","","",83,null],[12,"send_event","","",83,null],[12,"display","","",83,null],[12,"window","","",83,null],[12,"key_vector","","",83,null],[3,"XMapEvent","","",null,null],[12,"type_","","",84,null],[12,"serial","","",84,null],[12,"send_event","","",84,null],[12,"display","","",84,null],[12,"event","","",84,null],[12,"window","","",84,null],[12,"override_redirect","","",84,null],[3,"XMappingEvent","","",null,null],[12,"type_","","",85,null],[12,"serial","","",85,null],[12,"send_event","","",85,null],[12,"display","","",85,null],[12,"event","","",85,null],[12,"request","","",85,null],[12,"first_keycode","","",85,null],[12,"count","","",85,null],[3,"XMapRequestEvent","","",null,null],[12,"type_","","",86,null],[12,"serial","","",86,null],[12,"send_event","","",86,null],[12,"display","","",86,null],[12,"parent","","",86,null],[12,"window","","",86,null],[3,"XMotionEvent","","",null,null],[12,"type_","","",87,null],[12,"serial","","",87,null],[12,"send_event","","",87,null],[12,"display","","",87,null],[12,"window","","",87,null],[12,"root","","",87,null],[12,"subwindow","","",87,null],[12,"time","","",87,null],[12,"x","","",87,null],[12,"y","","",87,null],[12,"x_root","","",87,null],[12,"y_root","","",87,null],[12,"state","","",87,null],[12,"is_hint","","",87,null],[12,"same_screen","","",87,null],[3,"XNoExposeEvent","","",null,null],[12,"type_","","",88,null],[12,"serial","","",88,null],[12,"send_event","","",88,null],[12,"display","","",88,null],[12,"drawable","","",88,null],[12,"major_code","","",88,null],[12,"minor_code","","",88,null],[3,"XPropertyEvent","","",null,null],[12,"type_","","",89,null],[12,"serial","","",89,null],[12,"send_event","","",89,null],[12,"display","","",89,null],[12,"window","","",89,null],[12,"atom","","",89,null],[12,"time","","",89,null],[12,"state","","",89,null],[3,"XReparentEvent","","",null,null],[12,"type_","","",90,null],[12,"serial","","",90,null],[12,"send_event","","",90,null],[12,"display","","",90,null],[12,"event","","",90,null],[12,"window","","",90,null],[12,"parent","","",90,null],[12,"x","","",90,null],[12,"y","","",90,null],[12,"override_redirect","","",90,null],[3,"XResizeRequestEvent","","",null,null],[12,"type_","","",91,null],[12,"serial","","",91,null],[12,"send_event","","",91,null],[12,"display","","",91,null],[12,"window","","",91,null],[12,"width","","",91,null],[12,"height","","",91,null],[3,"XSelectionClearEvent","","",null,null],[12,"type_","","",92,null],[12,"serial","","",92,null],[12,"send_event","","",92,null],[12,"display","","",92,null],[12,"window","","",92,null],[12,"selection","","",92,null],[12,"time","","",92,null],[3,"XSelectionEvent","","",null,null],[12,"type_","","",93,null],[12,"serial","","",93,null],[12,"send_event","","",93,null],[12,"display","","",93,null],[12,"requestor","","",93,null],[12,"selection","","",93,null],[12,"target","","",93,null],[12,"property","","",93,null],[12,"time","","",93,null],[3,"XSelectionRequestEvent","","",null,null],[12,"type_","","",94,null],[12,"serial","","",94,null],[12,"send_event","","",94,null],[12,"display","","",94,null],[12,"owner","","",94,null],[12,"requestor","","",94,null],[12,"selection","","",94,null],[12,"target","","",94,null],[12,"property","","",94,null],[12,"time","","",94,null],[3,"XUnmapEvent","","",null,null],[12,"type_","","",95,null],[12,"serial","","",95,null],[12,"send_event","","",95,null],[12,"display","","",95,null],[12,"event","","",95,null],[12,"window","","",95,null],[12,"from_configure","","",95,null],[3,"XVisibilityEvent","","",null,null],[12,"type_","","",96,null],[12,"serial","","",96,null],[12,"send_event","","",96,null],[12,"display","","",96,null],[12,"window","","",96,null],[12,"state","","",96,null],[3,"_XkbCompatMapRec","","",null,null],[12,"sym_interpret","","",97,null],[12,"groups","","",97,null],[12,"num_si","","",97,null],[12,"size_si","","",97,null],[3,"_XkbDesc","","",null,null],[12,"dpy","","",98,null],[12,"flags","","",98,null],[12,"device_spec","","",98,null],[12,"min_key_code","","",98,null],[12,"max_key_code","","",98,null],[12,"ctrls","","",98,null],[12,"server","","",98,null],[12,"map","","",98,null],[12,"indicators","","",98,null],[12,"names","","",98,null],[12,"compat","","",98,null],[12,"geom","","",98,null],[3,"_XkbIndicatorRec","","",null,null],[12,"phys_indicators","","",99,null],[12,"maps","","",99,null],[3,"_XkbKeyAliasRec","","",null,null],[12,"real","","",100,null],[12,"alias","","",100,null],[3,"_XkbKeyNameRec","","",null,null],[12,"name","","",101,null],[3,"_XkbNamesRec","","",null,null],[12,"keycodes","","",102,null],[12,"geometry","","",102,null],[12,"symbols","","",102,null],[12,"types","","",102,null],[12,"compat","","",102,null],[12,"vmods","","",102,null],[12,"indicators","","",102,null],[12,"groups","","",102,null],[12,"keys","","",102,null],[12,"key_aliases","","",102,null],[12,"radio_groups","","",102,null],[12,"phys_symbols","","",102,null],[12,"num_keys","","",102,null],[12,"num_key_aliases","","",102,null],[12,"num_rg","","",102,null],[3,"Depth","","",null,null],[12,"depth","","",103,null],[12,"nvisuals","","",103,null],[12,"visuals","","",103,null],[3,"Screen","","",null,null],[12,"ext_data","","",104,null],[12,"display","","",104,null],[12,"root","","",104,null],[12,"width","","",104,null],[12,"height","","",104,null],[12,"mwidth","","",104,null],[12,"mheight","","",104,null],[12,"ndepths","","",104,null],[12,"depths","","",104,null],[12,"root_depth","","",104,null],[12,"root_visual","","",104,null],[12,"default_gc","","",104,null],[12,"cmap","","",104,null],[12,"white_pixel","","",104,null],[12,"black_pixel","","",104,null],[12,"max_maps","","",104,null],[12,"min_maps","","",104,null],[12,"backing_store","","",104,null],[12,"save_unders","","",104,null],[12,"root_input_mask","","",104,null],[3,"ScreenFormat","","",null,null],[12,"ext_data","","",105,null],[12,"depth","","",105,null],[12,"bits_per_pixel","","",105,null],[12,"scanline_pad","","",105,null],[3,"Visual","","",null,null],[12,"ext_data","","",106,null],[12,"visualid","","",106,null],[12,"class","","",106,null],[12,"red_mask","","",106,null],[12,"green_mask","","",106,null],[12,"blue_mask","","",106,null],[12,"bits_per_rgb","","",106,null],[12,"map_entries","","",106,null],[3,"XArc","","",null,null],[12,"x","","",107,null],[12,"y","","",107,null],[12,"width","","",107,null],[12,"height","","",107,null],[12,"angle1","","",107,null],[12,"angle2","","",107,null],[3,"XChar2b","","",null,null],[12,"byte1","","",108,null],[12,"byte2","","",108,null],[3,"XCharStruct","","",null,null],[12,"lbearing","","",109,null],[12,"rbearing","","",109,null],[12,"width","","",109,null],[12,"ascent","","",109,null],[12,"descent","","",109,null],[12,"attributes","","",109,null],[3,"XClassHint","","",null,null],[12,"res_name","","",110,null],[12,"res_class","","",110,null],[3,"XColor","","",null,null],[12,"pixel","","",111,null],[12,"red","","",111,null],[12,"green","","",111,null],[12,"blue","","",111,null],[12,"flags","","",111,null],[12,"pad","","",111,null],[3,"XComposeStatus","","",null,null],[12,"compose_ptr","","",112,null],[12,"chars_matched","","",112,null],[3,"XExtCodes","","",null,null],[12,"extension","","",113,null],[12,"major_opcode","","",113,null],[12,"first_event","","",113,null],[12,"first_error","","",113,null],[3,"XExtData","","",null,null],[12,"number","","",114,null],[12,"next","","",114,null],[12,"free_private","","",114,null],[12,"private_data","","",114,null],[3,"XFontProp","","",null,null],[12,"name","","",115,null],[12,"card32","","",115,null],[3,"XFontSetExtents","","",null,null],[12,"max_ink_extent","","",116,null],[12,"max_logical_extent","","",116,null],[3,"XFontStruct","","",null,null],[12,"ext_data","","",117,null],[12,"fid","","",117,null],[12,"direction","","",117,null],[12,"min_char_or_byte2","","",117,null],[12,"max_char_or_byte2","","",117,null],[12,"min_byte1","","",117,null],[12,"max_byte1","","",117,null],[12,"all_chars_exist","","",117,null],[12,"default_char","","",117,null],[12,"n_properties","","",117,null],[12,"properties","","",117,null],[12,"min_bounds","","",117,null],[12,"max_bounds","","",117,null],[12,"per_char","","",117,null],[12,"ascent","","",117,null],[12,"descent","","",117,null],[3,"XGCValues","","",null,null],[12,"function","","",118,null],[12,"plane_mask","","",118,null],[12,"foreground","","",118,null],[12,"background","","",118,null],[12,"line_width","","",118,null],[12,"line_style","","",118,null],[12,"cap_style","","",118,null],[12,"join_style","","",118,null],[12,"fill_style","","",118,null],[12,"fill_rule","","",118,null],[12,"arc_mode","","",118,null],[12,"tile","","",118,null],[12,"stipple","","",118,null],[12,"ts_x_origin","","",118,null],[12,"ts_y_origin","","",118,null],[12,"font","","",118,null],[12,"subwindow_mode","","",118,null],[12,"graphics_exposures","","",118,null],[12,"clip_x_origin","","",118,null],[12,"clip_y_origin","","",118,null],[12,"clip_mask","","",118,null],[12,"dash_offset","","",118,null],[12,"dashes","","",118,null],[3,"XGenericEventCookie","","",null,null],[12,"type_","","",119,null],[12,"serial","","",119,null],[12,"send_event","","",119,null],[12,"display","","",119,null],[12,"extension","","",119,null],[12,"evtype","","",119,null],[12,"cookie","","",119,null],[12,"data","","",119,null],[3,"XHostAddress","","",null,null],[12,"family","","",120,null],[12,"length","","",120,null],[12,"address","","",120,null],[3,"XIconSize","","",null,null],[12,"min_width","","",121,null],[12,"min_height","","",121,null],[12,"max_width","","",121,null],[12,"max_height","","",121,null],[12,"width_inc","","",121,null],[12,"height_inc","","",121,null],[3,"XImage","","",null,null],[12,"width","","",122,null],[12,"height","","",122,null],[12,"xoffset","","",122,null],[12,"format","","",122,null],[12,"data","","",122,null],[12,"byte_order","","",122,null],[12,"bitmap_unit","","",122,null],[12,"bitmap_bit_order","","",122,null],[12,"bitmap_pad","","",122,null],[12,"depth","","",122,null],[12,"bytes_per_line","","",122,null],[12,"bits_per_pixel","","",122,null],[12,"red_mask","","",122,null],[12,"green_mask","","",122,null],[12,"blue_mask","","",122,null],[12,"obdata","","",122,null],[12,"funcs","","",122,null],[3,"XKeyboardControl","","",null,null],[12,"key_click_percent","","",123,null],[12,"bell_percent","","",123,null],[12,"bell_pitch","","",123,null],[12,"bell_duration","","",123,null],[12,"led","","",123,null],[12,"led_mode","","",123,null],[12,"key","","",123,null],[12,"auto_repeat_mode","","",123,null],[3,"XKeyboardState","","",null,null],[12,"key_click_percent","","",124,null],[12,"bell_percent","","",124,null],[12,"bell_pitch","","",124,null],[12,"bell_duration","","",124,null],[12,"led_mask","","",124,null],[12,"global_auto_repeat","","",124,null],[12,"auto_repeats","","",124,null],[3,"XmbTextItem","","",null,null],[12,"chars","","",125,null],[12,"nchars","","",125,null],[12,"delta","","",125,null],[12,"font_set","","",125,null],[3,"XModifierKeymap","","",null,null],[12,"max_keypermod","","",126,null],[12,"modifiermap","","",126,null],[3,"XOMCharSetList","","",null,null],[12,"charset_count","","",127,null],[12,"charset_list","","",127,null],[3,"XPixmapFormatValues","","",null,null],[12,"depth","","",128,null],[12,"bits_per_pixel","","",128,null],[12,"scanline_pad","","",128,null],[3,"XPoint","","",null,null],[12,"x","","",129,null],[12,"y","","",129,null],[3,"XRectangle","","",null,null],[12,"x","","",130,null],[12,"y","","",130,null],[12,"width","","",130,null],[12,"height","","",130,null],[3,"XrmOptionDescRec","","",null,null],[12,"option","","",131,null],[12,"specifier","","",131,null],[12,"argKind","","",131,null],[12,"value","","",131,null],[3,"XrmValue","","",null,null],[12,"size","","",132,null],[12,"addr","","",132,null],[3,"XSegment","","",null,null],[12,"x1","","",133,null],[12,"y1","","",133,null],[12,"x2","","",133,null],[12,"y2","","",133,null],[3,"XSetWindowAttributes","","",null,null],[12,"background_pixmap","","",134,null],[12,"background_pixel","","",134,null],[12,"border_pixmap","","",134,null],[12,"border_pixel","","",134,null],[12,"bit_gravity","","",134,null],[12,"win_gravity","","",134,null],[12,"backing_store","","",134,null],[12,"backing_planes","","",134,null],[12,"backing_pixel","","",134,null],[12,"save_under","","",134,null],[12,"event_mask","","",134,null],[12,"do_not_propagate_mask","","",134,null],[12,"override_redirect","","",134,null],[12,"colormap","","",134,null],[12,"cursor","","",134,null],[3,"XSizeHints","","",null,null],[12,"flags","","",135,null],[12,"x","","",135,null],[12,"y","","",135,null],[12,"width","","",135,null],[12,"height","","",135,null],[12,"min_width","","",135,null],[12,"min_height","","",135,null],[12,"max_width","","",135,null],[12,"max_height","","",135,null],[12,"width_inc","","",135,null],[12,"height_inc","","",135,null],[12,"min_aspect","","",135,null],[12,"max_aspect","","",135,null],[12,"base_width","","",135,null],[12,"base_height","","",135,null],[12,"win_gravity","","",135,null],[3,"XStandardColormap","","",null,null],[12,"colormap","","",136,null],[12,"red_max","","",136,null],[12,"red_mult","","",136,null],[12,"green_max","","",136,null],[12,"green_mult","","",136,null],[12,"blue_max","","",136,null],[12,"blue_mult","","",136,null],[12,"base_pixel","","",136,null],[12,"visualid","","",136,null],[12,"killid","","",136,null],[3,"XTextItem","","",null,null],[12,"chars","","",137,null],[12,"nchars","","",137,null],[12,"delta","","",137,null],[12,"font","","",137,null],[3,"XTextItem16","","",null,null],[12,"chars","","",138,null],[12,"nchars","","",138,null],[12,"delta","","",138,null],[12,"font","","",138,null],[3,"XTextProperty","","",null,null],[12,"value","","",139,null],[12,"encoding","","",139,null],[12,"format","","",139,null],[12,"nitems","","",139,null],[3,"XTimeCoord","","",null,null],[12,"time","","",140,null],[12,"x","","",140,null],[12,"y","","",140,null],[3,"XVisualInfo","","",null,null],[12,"visual","","",141,null],[12,"visualid","","",141,null],[12,"screen","","",141,null],[12,"depth","","",141,null],[12,"class","","",141,null],[12,"red_mask","","",141,null],[12,"green_mask","","",141,null],[12,"blue_mask","","",141,null],[12,"colormap_size","","",141,null],[12,"bits_per_rgb","","",141,null],[3,"XwcTextItem","","",null,null],[12,"chars","","",142,null],[12,"nchars","","",142,null],[12,"delta","","",142,null],[12,"font_set","","",142,null],[3,"XWindowAttributes","","",null,null],[12,"x","","",143,null],[12,"y","","",143,null],[12,"width","","",143,null],[12,"height","","",143,null],[12,"border_width","","",143,null],[12,"depth","","",143,null],[12,"visual","","",143,null],[12,"root","","",143,null],[12,"class","","",143,null],[12,"bit_gravity","","",143,null],[12,"win_gravity","","",143,null],[12,"backing_store","","",143,null],[12,"backing_planes","","",143,null],[12,"backing_pixel","","",143,null],[12,"save_under","","",143,null],[12,"colormap","","",143,null],[12,"map_installed","","",143,null],[12,"map_state","","",143,null],[12,"all_event_masks","","",143,null],[12,"your_event_mask","","",143,null],[12,"do_not_propagate_mask","","",143,null],[12,"override_redirect","","",143,null],[12,"screen","","",143,null],[3,"XWindowChanges","","",null,null],[12,"x","","",144,null],[12,"y","","",144,null],[12,"width","","",144,null],[12,"height","","",144,null],[12,"border_width","","",144,null],[12,"sibling","","",144,null],[12,"stack_mode","","",144,null],[3,"XWMHints","","",null,null],[12,"flags","","",145,null],[12,"input","","",145,null],[12,"initial_state","","",145,null],[12,"icon_pixmap","","",145,null],[12,"icon_window","","",145,null],[12,"icon_x","","",145,null],[12,"icon_y","","",145,null],[12,"icon_mask","","",145,null],[12,"window_group","","",145,null],[3,"AspectRatio","","",null,null],[12,"x","","",146,null],[12,"y","","",146,null],[3,"ClientMessageData","","",null,null],[3,"ImageFns","","",null,null],[12,"create_image","","",147,null],[12,"destroy_image","","",147,null],[12,"get_pixel","","",147,null],[12,"put_pixel","","",147,null],[12,"sub_image","","",147,null],[12,"add_pixel","","",147,null],[4,"_XDisplay","","",null,null],[4,"xError","","",null,null],[4,"xEvent","","",null,null],[4,"_XGC","","",null,null],[4,"_XIC","","",null,null],[4,"_XIM","","",null,null],[4,"_XRegion","","",null,null],[4,"_XOC","","",null,null],[4,"_XOM","","",null,null],[4,"_XrmHashBucketRec","","",null,null],[6,"Atom","","",null,null],[6,"Bool","","",null,null],[6,"Colormap","","",null,null],[6,"Cursor","","",null,null],[6,"Drawable","","",null,null],[6,"Font","","",null,null],[6,"GContext","","",null,null],[6,"KeyCode","","",null,null],[6,"KeySym","","",null,null],[6,"Mask","","",null,null],[6,"Pixmap","","",null,null],[6,"Status","","",null,null],[6,"Time","","",null,null],[6,"VisualID","","",null,null],[6,"Window","","",null,null],[6,"XID","","",null,null],[6,"XPointer","","",null,null],[6,"XEDataObject","","",null,null],[6,"Display","","",null,null],[6,"GC","","",null,null],[6,"Region","","",null,null],[6,"XcmsCCC","","",null,null],[6,"XcmsColorSpace","","",null,null],[6,"XcmsFunctionSet","","",null,null],[6,"XFontSet","","",null,null],[6,"XIC","","",null,null],[6,"XIM","","",null,null],[6,"XkbAction","","",null,null],[6,"XkbBoundsPtr","","",null,null],[6,"XkbChangesPtr","","",null,null],[6,"XkbClientMapPtr","","",null,null],[6,"XkbColorPtr","","",null,null],[6,"XkbCompatMapPtr","","",null,null],[6,"XkbComponentListPtr","","",null,null],[6,"XkbComponentNamesPtr","","",null,null],[6,"XkbControlsChangesPtr","","",null,null],[6,"XkbControlsNotifyEvent","","",null,null],[6,"XkbControlsPtr","","",null,null],[6,"XkbDescPtr","","",null,null],[6,"XkbDeviceChangesPtr","","",null,null],[6,"XkbDeviceInfoPtr","","",null,null],[6,"XkbDeviceLedInfoPtr","","",null,null],[6,"XkbDoodadPtr","","",null,null],[6,"XkbExtensionDeviceNotifyEvent","","",null,null],[6,"XkbGeometryPtr","","",null,null],[6,"XkbGeometrySizesPtr","","",null,null],[6,"XkbIndicatorMapPtr","","",null,null],[6,"XkbIndicatorMapRec","","",null,null],[6,"XkbIndicatorPtr","","",null,null],[6,"XkbKeyTypePtr","","",null,null],[6,"XkbMapChangesPtr","","",null,null],[6,"XkbMapNotifyEvent","","",null,null],[6,"XkbModsPtr","","",null,null],[6,"XkbModsRec","","",null,null],[6,"XkbNameChangesPtr","","",null,null],[6,"XkbNamesNotifyEvent","","",null,null],[6,"XkbNamesPtr","","",null,null],[6,"XkbKeyAliasPtr","","",null,null],[6,"XkbKeyNamePtr","","",null,null],[6,"XkbKeyPtr","","",null,null],[6,"XkbOutlinePtr","","",null,null],[6,"XkbOverlayKeyPtr","","",null,null],[6,"XkbOverlayPtr","","",null,null],[6,"XkbOverlayRowPtr","","",null,null],[6,"XkbPropertyPtr","","",null,null],[6,"XkbRowPtr","","",null,null],[6,"XkbSectionPtr","","",null,null],[6,"XkbServerMapPtr","","",null,null],[6,"XkbShapePtr","","",null,null],[6,"XkbStatePtr","","",null,null],[6,"XkbSymInterpretPtr","","",null,null],[6,"XOM","","",null,null],[6,"XrmDatabase","","",null,null],[6,"XrmOptionDescList","","",null,null],[6,"XConnectionWatchProc","","",null,null],[6,"XICCEncodingStyle","","",null,null],[6,"XOrientation","","",null,null],[6,"XrmBinding","","",null,null],[6,"XrmOptionKind","","",null,null],[6,"XButtonPressedEvent","","",null,null],[6,"XButtonReleasedEvent","","",null,null],[6,"XEnterWindowEvent","","",null,null],[6,"XLeaveWindowEvent","","",null,null],[6,"XFocusInEvent","","",null,null],[6,"XFocusOutEvent","","",null,null],[6,"XKeyPressedEvent","","",null,null],[6,"XKeyReleasedEvent","","",null,null],[6,"XPointerMovedEvent","","",null,null],[17,"AllocNone","","",null,null],[17,"AllocAll","","",null,null],[17,"XkbKeyNameLength","","",null,null],[17,"XkbNumIndicators","","",null,null],[17,"XkbNumKbdGroups","","",null,null],[17,"XkbNumVirtualMods","","",null,null],[17,"XA_PRIMARY","","",null,null],[17,"XA_SECONDARY","","",null,null],[17,"XA_ARC","","",null,null],[17,"XA_ATOM","","",null,null],[17,"XA_BITMAP","","",null,null],[17,"XA_CARDINAL","","",null,null],[17,"XA_COLORMAP","","",null,null],[17,"XA_CURSOR","","",null,null],[17,"XA_CUT_BUFFER0","","",null,null],[17,"XA_CUT_BUFFER1","","",null,null],[17,"XA_CUT_BUFFER2","","",null,null],[17,"XA_CUT_BUFFER3","","",null,null],[17,"XA_CUT_BUFFER4","","",null,null],[17,"XA_CUT_BUFFER5","","",null,null],[17,"XA_CUT_BUFFER6","","",null,null],[17,"XA_CUT_BUFFER7","","",null,null],[17,"XA_DRAWABLE","","",null,null],[17,"XA_FONT","","",null,null],[17,"XA_INTEGER","","",null,null],[17,"XA_PIXMAP","","",null,null],[17,"XA_POINT","","",null,null],[17,"XA_RECTANGLE","","",null,null],[17,"XA_RESOURCE_MANAGER","","",null,null],[17,"XA_RGB_COLOR_MAP","","",null,null],[17,"XA_RGB_BEST_MAP","","",null,null],[17,"XA_RGB_BLUE_MAP","","",null,null],[17,"XA_RGB_DEFAULT_MAP","","",null,null],[17,"XA_RGB_GRAY_MAP","","",null,null],[17,"XA_RGB_GREEN_MAP","","",null,null],[17,"XA_RGB_RED_MAP","","",null,null],[17,"XA_STRING","","",null,null],[17,"XA_VISUALID","","",null,null],[17,"XA_WINDOW","","",null,null],[17,"XA_WM_COMMAND","","",null,null],[17,"XA_WM_HINTS","","",null,null],[17,"XA_WM_CLIENT_MACHINE","","",null,null],[17,"XA_WM_ICON_NAME","","",null,null],[17,"XA_WM_ICON_SIZE","","",null,null],[17,"XA_WM_NAME","","",null,null],[17,"XA_WM_NORMAL_HINTS","","",null,null],[17,"XA_WM_SIZE_HINTS","","",null,null],[17,"XA_WM_ZOOM_HINTS","","",null,null],[17,"XA_MIN_SPACE","","",null,null],[17,"XA_NORM_SPACE","","",null,null],[17,"XA_MAX_SPACE","","",null,null],[17,"XA_END_SPACE","","",null,null],[17,"XA_SUPERSCRIPT_X","","",null,null],[17,"XA_SUPERSCRIPT_Y","","",null,null],[17,"XA_SUBSCRIPT_X","","",null,null],[17,"XA_SUBSCRIPT_Y","","",null,null],[17,"XA_UNDERLINE_POSITION","","",null,null],[17,"XA_UNDERLINE_THICKNESS","","",null,null],[17,"XA_STRIKEOUT_ASCENT","","",null,null],[17,"XA_STRIKEOUT_DESCENT","","",null,null],[17,"XA_ITALIC_ANGLE","","",null,null],[17,"XA_X_HEIGHT","","",null,null],[17,"XA_QUAD_WIDTH","","",null,null],[17,"XA_WEIGHT","","",null,null],[17,"XA_POINT_SIZE","","",null,null],[17,"XA_RESOLUTION","","",null,null],[17,"XA_COPYRIGHT","","",null,null],[17,"XA_NOTICE","","",null,null],[17,"XA_FONT_NAME","","",null,null],[17,"XA_FAMILY_NAME","","",null,null],[17,"XA_FULL_NAME","","",null,null],[17,"XA_CAP_HEIGHT","","",null,null],[17,"XA_WM_CLASS","","",null,null],[17,"XA_WM_TRANSIENT_FOR","","",null,null],[17,"False","","",null,null],[17,"True","","",null,null],[17,"Unsorted","","",null,null],[17,"YSorted","","",null,null],[17,"YXSorted","","",null,null],[17,"YXBanded","","",null,null],[17,"DoRed","","",null,null],[17,"DoGreen","","",null,null],[17,"DoBlue","","",null,null],[17,"Success","","",null,null],[17,"BadRequest","","",null,null],[17,"BadValue","","",null,null],[17,"BadWindow","","",null,null],[17,"BadPixmap","","",null,null],[17,"BadAtom","","",null,null],[17,"BadCursor","","",null,null],[17,"BadFont","","",null,null],[17,"BadMatch","","",null,null],[17,"BadDrawable","","",null,null],[17,"BadAccess","","",null,null],[17,"BadAlloc","","",null,null],[17,"BadColor","","",null,null],[17,"BadGC","","",null,null],[17,"BadIDChoice","","",null,null],[17,"BadName","","",null,null],[17,"BadLength","","",null,null],[17,"BadImplementation","","",null,null],[17,"FirstExtensionError","","",null,null],[17,"LastExtensionError","","",null,null],[17,"KeyPress","","",null,null],[17,"KeyRelease","","",null,null],[17,"ButtonPress","","",null,null],[17,"ButtonRelease","","",null,null],[17,"MotionNotify","","",null,null],[17,"EnterNotify","","",null,null],[17,"LeaveNotify","","",null,null],[17,"FocusIn","","",null,null],[17,"FocusOut","","",null,null],[17,"KeymapNotify","","",null,null],[17,"Expose","","",null,null],[17,"GraphicsExpose","","",null,null],[17,"NoExpose","","",null,null],[17,"VisibilityNotify","","",null,null],[17,"CreateNotify","","",null,null],[17,"DestroyNotify","","",null,null],[17,"UnmapNotify","","",null,null],[17,"MapNotify","","",null,null],[17,"MapRequest","","",null,null],[17,"ReparentNotify","","",null,null],[17,"ConfigureNotify","","",null,null],[17,"ConfigureRequest","","",null,null],[17,"GravityNotify","","",null,null],[17,"ResizeRequest","","",null,null],[17,"CirculateNotify","","",null,null],[17,"CirculateRequest","","",null,null],[17,"PropertyNotify","","",null,null],[17,"SelectionClear","","",null,null],[17,"SelectionRequest","","",null,null],[17,"SelectionNotify","","",null,null],[17,"ColormapNotify","","",null,null],[17,"ClientMessage","","",null,null],[17,"MappingNotify","","",null,null],[17,"GenericEvent","","",null,null],[17,"LASTEvent","","",null,null],[17,"NoEventMask","","",null,null],[17,"KeyPressMask","","",null,null],[17,"KeyReleaseMask","","",null,null],[17,"ButtonPressMask","","",null,null],[17,"ButtonReleaseMask","","",null,null],[17,"EnterWindowMask","","",null,null],[17,"LeaveWindowMask","","",null,null],[17,"PointerMotionMask","","",null,null],[17,"PointerMotionHintMask","","",null,null],[17,"Button1MotionMask","","",null,null],[17,"Button2MotionMask","","",null,null],[17,"Button3MotionMask","","",null,null],[17,"Button4MotionMask","","",null,null],[17,"Button5MotionMask","","",null,null],[17,"ButtonMotionMask","","",null,null],[17,"KeymapStateMask","","",null,null],[17,"ExposureMask","","",null,null],[17,"VisibilityChangeMask","","",null,null],[17,"StructureNotifyMask","","",null,null],[17,"ResizeRedirectMask","","",null,null],[17,"SubstructureNotifyMask","","",null,null],[17,"SubstructureRedirectMask","","",null,null],[17,"FocusChangeMask","","",null,null],[17,"PropertyChangeMask","","",null,null],[17,"ColormapChangeMask","","",null,null],[17,"OwnerGrabButtonMask","","",null,null],[17,"PropModeReplace","","",null,null],[17,"PropModePrepend","","",null,null],[17,"PropModeAppend","","",null,null],[17,"ShiftMapIndex","","",null,null],[17,"LockMapIndex","","",null,null],[17,"ControlMapIndex","","",null,null],[17,"Mod1MapIndex","","",null,null],[17,"Mod2MapIndex","","",null,null],[17,"Mod3MapIndex","","",null,null],[17,"Mod4MapIndex","","",null,null],[17,"Mod5MapIndex","","",null,null],[17,"Button1Mask","","",null,null],[17,"Button2Mask","","",null,null],[17,"Button3Mask","","",null,null],[17,"Button4Mask","","",null,null],[17,"Button5Mask","","",null,null],[17,"AnyModifier","","",null,null],[17,"NotifyNormal","","",null,null],[17,"NotifyGrab","","",null,null],[17,"NotifyUngrab","","",null,null],[17,"NotifyWhileGrabbed","","",null,null],[17,"NotifyHint","","",null,null],[17,"NotifyAncestor","","",null,null],[17,"NotifyVirtual","","",null,null],[17,"NotifyInferior","","",null,null],[17,"NotifyNonlinear","","",null,null],[17,"NotifyNonlinearVirtual","","",null,null],[17,"NotifyPointer","","",null,null],[17,"NotifyPointerRoot","","",null,null],[17,"NotifyDetailNone","","",null,null],[17,"VisibilityUnobscured","","",null,null],[17,"VisibilityPartiallyObscured","","",null,null],[17,"VisibilityFullyObscured","","",null,null],[17,"PlaceOnTop","","",null,null],[17,"PlaceOnBottom","","",null,null],[17,"FamilyInternet","","",null,null],[17,"FamilyDECnet","","",null,null],[17,"FamilyChaos","","",null,null],[17,"FamilyInternet6","","",null,null],[17,"FamilyServerInterpreted","","",null,null],[17,"PropertyNewValue","","",null,null],[17,"PropertyDelete","","",null,null],[17,"ColormapUninstalled","","",null,null],[17,"ColormapInstalled","","",null,null],[17,"GrabModeSync","","",null,null],[17,"GrabModeAsync","","",null,null],[17,"GrabSuccess","","",null,null],[17,"AlreadyGrabbed","","",null,null],[17,"GrabInvalidTime","","",null,null],[17,"GrabNotViewable","","",null,null],[17,"GrabFrozen","","",null,null],[17,"AsyncPointer","","",null,null],[17,"SyncPointer","","",null,null],[17,"ReplayPointer","","",null,null],[17,"AsyncKeyboard","","",null,null],[17,"SyncKeyboard","","",null,null],[17,"ReplayKeyboard","","",null,null],[17,"AsyncBoth","","",null,null],[17,"SyncBoth","","",null,null],[17,"RevertToNone","","",null,null],[17,"RevertToPointerRoot","","",null,null],[17,"RevertToParent","","",null,null],[17,"CWX","","",null,null],[17,"CWY","","",null,null],[17,"CWWidth","","",null,null],[17,"CWHeight","","",null,null],[17,"CWBorderWidth","","",null,null],[17,"CWSibling","","",null,null],[17,"CWStackMode","","",null,null],[17,"ForgetGravity","","",null,null],[17,"UnmapGravity","","",null,null],[17,"NorthWestGravity","","",null,null],[17,"NorthGravity","","",null,null],[17,"NorthEastGravity","","",null,null],[17,"WestGravity","","",null,null],[17,"CenterGravity","","",null,null],[17,"EastGravity","","",null,null],[17,"SouthWestGravity","","",null,null],[17,"SouthGravity","","",null,null],[17,"SouthEastGravity","","",null,null],[17,"StaticGravity","","",null,null],[17,"XYBitmap","","",null,null],[17,"XYPixmap","","",null,null],[17,"ZPixmap","","",null,null],[17,"NotUseful","","",null,null],[17,"WhenMapped","","",null,null],[17,"Always","","",null,null],[17,"IsUnmapped","","",null,null],[17,"IsUnviewable","","",null,null],[17,"IsViewable","","",null,null],[17,"ShiftMask","","",null,null],[17,"LockMask","","",null,null],[17,"ControlMask","","",null,null],[17,"Mod1Mask","","",null,null],[17,"Mod2Mask","","",null,null],[17,"Mod3Mask","","",null,null],[17,"Mod4Mask","","",null,null],[17,"Mod5Mask","","",null,null],[17,"Button1","","",null,null],[17,"Button2","","",null,null],[17,"Button3","","",null,null],[17,"Button4","","",null,null],[17,"Button5","","",null,null],[17,"USPosition","","",null,null],[17,"USSize","","",null,null],[17,"PPosition","","",null,null],[17,"PSize","","",null,null],[17,"PMinSize","","",null,null],[17,"PMaxSize","","",null,null],[17,"PResizeInc","","",null,null],[17,"PAspect","","",null,null],[17,"PBaseSize","","",null,null],[17,"PWinGravity","","",null,null],[17,"PAllHints","","",null,null],[17,"SetModeInsert","","",null,null],[17,"SetModeDelete","","",null,null],[17,"DestroyAll","","",null,null],[17,"RetainPermanent","","",null,null],[17,"RetainTemporary","","",null,null],[17,"Above","","",null,null],[17,"Below","","",null,null],[17,"TopIf","","",null,null],[17,"BottomIf","","",null,null],[17,"Opposite","","",null,null],[17,"RaiseLowest","","",null,null],[17,"LowerHighest","","",null,null],[17,"GXclear","","",null,null],[17,"GXand","","",null,null],[17,"GXandReverse","","",null,null],[17,"GXcopy","","",null,null],[17,"GXandInverted","","",null,null],[17,"GXnoop","","",null,null],[17,"GXxor","","",null,null],[17,"GXor","","",null,null],[17,"GXnor","","",null,null],[17,"GXequiv","","",null,null],[17,"GXinvert","","",null,null],[17,"GXorReverse","","",null,null],[17,"GXcopyInverted","","",null,null],[17,"GXorInverted","","",null,null],[17,"GXnand","","",null,null],[17,"GXset","","",null,null],[17,"LineSolid","","",null,null],[17,"LineOnOffDash","","",null,null],[17,"LineDoubleDash","","",null,null],[17,"CapNotLast","","",null,null],[17,"CapButt","","",null,null],[17,"CapRound","","",null,null],[17,"CapProjecting","","",null,null],[17,"JoinMiter","","",null,null],[17,"JoinRound","","",null,null],[17,"JoinBevel","","",null,null],[17,"FillSolid","","",null,null],[17,"FillTiled","","",null,null],[17,"FillStippled","","",null,null],[17,"FillOpaqueStippled","","",null,null],[17,"EvenOddRule","","",null,null],[17,"WindingRule","","",null,null],[17,"ClipByChildren","","",null,null],[17,"IncludeInferiors","","",null,null],[17,"CoordModeOrigin","","",null,null],[17,"CoordModePrevious","","",null,null],[17,"Complex","","",null,null],[17,"Nonconvex","","",null,null],[17,"Convex","","",null,null],[17,"ArcChord","","",null,null],[17,"ArcPieSlice","","",null,null],[17,"GCFunction","","",null,null],[17,"GCPlaneMask","","",null,null],[17,"GCForeground","","",null,null],[17,"GCBackground","","",null,null],[17,"GCLineWidth","","",null,null],[17,"GCLineStyle","","",null,null],[17,"GCCapStyle","","",null,null],[17,"GCJoinStyle","","",null,null],[17,"GCFillStyle","","",null,null],[17,"GCFillRule","","",null,null],[17,"GCTile","","",null,null],[17,"GCStipple","","",null,null],[17,"GCTileStipXOrigin","","",null,null],[17,"GCTileStipYOrigin","","",null,null],[17,"GCFont","","",null,null],[17,"GCSubwindowMode","","",null,null],[17,"GCGraphicsExposures","","",null,null],[17,"GCClipXOrigin","","",null,null],[17,"GCClipYOrigin","","",null,null],[17,"GCClipMask","","",null,null],[17,"GCDashOffset","","",null,null],[17,"GCDashList","","",null,null],[17,"GCArcMode","","",null,null],[17,"GCLastBit","","",null,null],[17,"FontLeftToRight","","",null,null],[17,"FontRightToLeft","","",null,null],[17,"FontChange","","",null,null],[17,"CursorShape","","",null,null],[17,"TileShape","","",null,null],[17,"StippleShape","","",null,null],[17,"AutoRepeatModeOff","","",null,null],[17,"AutoRepeatModeOn","","",null,null],[17,"AutoRepeatModeDefault","","",null,null],[17,"LedModeOff","","",null,null],[17,"LedModeOn","","",null,null],[17,"KBKeyClickPercent","","",null,null],[17,"KBBellPercent","","",null,null],[17,"KBBellPitch","","",null,null],[17,"KBBellDuration","","",null,null],[17,"KBLed","","",null,null],[17,"KBLedMode","","",null,null],[17,"KBKey","","",null,null],[17,"KBAutoRepeatMode","","",null,null],[17,"MappingSuccess","","",null,null],[17,"MappingBusy","","",null,null],[17,"MappingFailed","","",null,null],[17,"MappingModifier","","",null,null],[17,"MappingKeyboard","","",null,null],[17,"MappingPointer","","",null,null],[17,"DontPreferBlanking","","",null,null],[17,"PreferBlanking","","",null,null],[17,"DefaultBlanking","","",null,null],[17,"DisableScreenSaver","","",null,null],[17,"DisableScreenInterval","","",null,null],[17,"DontAllowExposures","","",null,null],[17,"AllowExposures","","",null,null],[17,"DefaultExposures","","",null,null],[17,"ScreenSaverReset","","",null,null],[17,"ScreenSaverActive","","",null,null],[17,"HostInsert","","",null,null],[17,"HostDelete","","",null,null],[17,"EnableAccess","","",null,null],[17,"DisableAccess","","",null,null],[17,"StaticGray","","",null,null],[17,"GrayScale","","",null,null],[17,"StaticColor","","",null,null],[17,"PseudoColor","","",null,null],[17,"TrueColor","","",null,null],[17,"DirectColor","","",null,null],[17,"VisualNoMask","","",null,null],[17,"VisualIDMask","","",null,null],[17,"VisualScreenMask","","",null,null],[17,"VisualDepthMask","","",null,null],[17,"VisualClassMask","","",null,null],[17,"VisualRedMaskMask","","",null,null],[17,"VisualGreenMaskMask","","",null,null],[17,"VisualBlueMaskMask","","",null,null],[17,"VisualColormapSizeMask","","",null,null],[17,"VisualBitsPerRGBMask","","",null,null],[17,"VisualAllMask","","",null,null],[17,"CWBackPixmap","","",null,null],[17,"CWBackPixel","","",null,null],[17,"CWBorderPixmap","","",null,null],[17,"CWBorderPixel","","",null,null],[17,"CWBitGravity","","",null,null],[17,"CWWinGravity","","",null,null],[17,"CWBackingStore","","",null,null],[17,"CWBackingPlanes","","",null,null],[17,"CWBackingPixel","","",null,null],[17,"CWOverrideRedirect","","",null,null],[17,"CWSaveUnder","","",null,null],[17,"CWEventMask","","",null,null],[17,"CWDontPropagate","","",null,null],[17,"CWColormap","","",null,null],[17,"CWCursor","","",null,null],[17,"InputOutput","","",null,null],[17,"InputOnly","","",null,null],[17,"XIMPreeditArea","","",null,null],[17,"XIMPreeditCallbacks","","",null,null],[17,"XIMPreeditPosition","","",null,null],[17,"XIMPreeditNothing","","",null,null],[17,"XIMPreeditNone","","",null,null],[17,"XIMStatusArea","","",null,null],[17,"XIMStatusCallbacks","","",null,null],[17,"XIMStatusNothing","","",null,null],[17,"XIMStatusNone","","",null,null],[17,"LSBFirst","","",null,null],[17,"MSBFirst","","",null,null],[17,"ParentRelative","","",null,null],[17,"CopyFromParent","","",null,null],[17,"PointerWindow","","",null,null],[17,"InputFocus","","",null,null],[17,"PointerRoot","","",null,null],[17,"AnyPropertyType","","",null,null],[17,"AnyKey","","",null,null],[17,"AnyButton","","",null,null],[17,"AllTemporary","","",null,null],[17,"CurrentTime","","",null,null],[17,"NoSymbol","","",null,null],[17,"X_PROTOCOL","","",null,null],[17,"X_PROTOCOL_REVISION","","",null,null],[17,"XNVaNestedList","","",null,null],[17,"XNQueryInputStyle","","",null,null],[17,"XNClientWindow","","",null,null],[17,"XNInputStyle","","",null,null],[17,"XNFocusWindow","","",null,null],[17,"XNResourceName","","",null,null],[17,"XNResourceClass","","",null,null],[17,"XNGeometryCallback","","",null,null],[17,"XNDestroyCallback","","",null,null],[17,"XNFilterEvents","","",null,null],[17,"XNPreeditStartCallback","","",null,null],[17,"XNPreeditDoneCallback","","",null,null],[17,"XNPreeditDrawCallback","","",null,null],[17,"XNPreeditCaretCallback","","",null,null],[17,"XNPreeditStateNotifyCallback","","",null,null],[17,"XNPreeditAttributes","","",null,null],[17,"XNStatusStartCallback","","",null,null],[17,"XNStatusDoneCallback","","",null,null],[17,"XNStatusDrawCallback","","",null,null],[17,"XNStatusAttributes","","",null,null],[17,"XNArea","","",null,null],[17,"XNAreaNeeded","","",null,null],[17,"XNSpotLocation","","",null,null],[17,"XNColormap","","",null,null],[17,"XNStdColormap","","",null,null],[17,"XNForeground","","",null,null],[17,"XNBackground","","",null,null],[17,"XNBackgroundPixmap","","",null,null],[17,"XNFontSet","","",null,null],[17,"XNLineSpace","","",null,null],[17,"XNCursor","","",null,null],[17,"XNQueryIMValuesList","","",null,null],[17,"XNQueryICValuesList","","",null,null],[17,"XNVisiblePosition","","",null,null],[17,"XNR6PreeditCallback","","",null,null],[17,"XNStringConversionCallback","","",null,null],[17,"XNStringConversion","","",null,null],[17,"XNResetState","","",null,null],[17,"XNHotKey","","",null,null],[17,"XNHotKeyState","","",null,null],[17,"XNPreeditState","","",null,null],[17,"XNSeparatorofNestedList","","",null,null],[17,"XBufferOverflow","","",null,null],[17,"XLookupNone","","",null,null],[17,"XLookupChars","","",null,null],[17,"XLookupKeySym","","",null,null],[17,"XLookupBoth","","",null,null],[11,"open","","",64,{"inputs":[{"name":"xlib"}],"output":{"name":"result"}}],[11,"eq","","",65,{"inputs":[{"name":"xevent"},{"name":"xevent"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"xevent"},{"name":"xevent"}],"output":{"name":"bool"}}],[11,"clone","","",65,{"inputs":[{"name":"xevent"}],"output":{"name":"xevent"}}],[11,"get_type","","",65,{"inputs":[{"name":"xevent"}],"output":{"name":"c_int"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xanyevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xbuttonevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xcirculateevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xcirculaterequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xclientmessageevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xcolormapevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xconfigureevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xconfigurerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xcreatewindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xcrossingevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xdestroywindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xerrorevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xfocuschangeevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xgraphicsexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xgravityevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xkeyevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xkeymapevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xmappingevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xmotionevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xnoexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xpropertyevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xreparentevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xresizerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xselectionclearevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xselectionevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xselectionrequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xunmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xvisibilityevent"}],"output":{"name":"xevent"}}],[11,"eq","","",66,{"inputs":[{"name":"xanyevent"},{"name":"xanyevent"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"xanyevent"},{"name":"xanyevent"}],"output":{"name":"bool"}}],[11,"clone","","",66,{"inputs":[{"name":"xanyevent"}],"output":{"name":"xanyevent"}}],[11,"from","","",66,{"inputs":[{"name":"xanyevent"},{"name":"xevent"}],"output":{"name":"xanyevent"}}],[11,"eq","","",67,{"inputs":[{"name":"xbuttonevent"},{"name":"xbuttonevent"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"xbuttonevent"},{"name":"xbuttonevent"}],"output":{"name":"bool"}}],[11,"clone","","",67,{"inputs":[{"name":"xbuttonevent"}],"output":{"name":"xbuttonevent"}}],[11,"from","","",67,{"inputs":[{"name":"xbuttonevent"},{"name":"xevent"}],"output":{"name":"xbuttonevent"}}],[11,"eq","","",68,{"inputs":[{"name":"xcirculateevent"},{"name":"xcirculateevent"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"xcirculateevent"},{"name":"xcirculateevent"}],"output":{"name":"bool"}}],[11,"clone","","",68,{"inputs":[{"name":"xcirculateevent"}],"output":{"name":"xcirculateevent"}}],[11,"from","","",68,{"inputs":[{"name":"xcirculateevent"},{"name":"xevent"}],"output":{"name":"xcirculateevent"}}],[11,"eq","","",69,{"inputs":[{"name":"xcirculaterequestevent"},{"name":"xcirculaterequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",69,{"inputs":[{"name":"xcirculaterequestevent"},{"name":"xcirculaterequestevent"}],"output":{"name":"bool"}}],[11,"clone","","",69,{"inputs":[{"name":"xcirculaterequestevent"}],"output":{"name":"xcirculaterequestevent"}}],[11,"from","","",69,{"inputs":[{"name":"xcirculaterequestevent"},{"name":"xevent"}],"output":{"name":"xcirculaterequestevent"}}],[11,"eq","","",70,{"inputs":[{"name":"xclientmessageevent"},{"name":"xclientmessageevent"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"xclientmessageevent"},{"name":"xclientmessageevent"}],"output":{"name":"bool"}}],[11,"clone","","",70,{"inputs":[{"name":"xclientmessageevent"}],"output":{"name":"xclientmessageevent"}}],[11,"from","","",70,{"inputs":[{"name":"xclientmessageevent"},{"name":"xevent"}],"output":{"name":"xclientmessageevent"}}],[11,"eq","","",71,{"inputs":[{"name":"xcolormapevent"},{"name":"xcolormapevent"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"xcolormapevent"},{"name":"xcolormapevent"}],"output":{"name":"bool"}}],[11,"clone","","",71,{"inputs":[{"name":"xcolormapevent"}],"output":{"name":"xcolormapevent"}}],[11,"from","","",71,{"inputs":[{"name":"xcolormapevent"},{"name":"xevent"}],"output":{"name":"xcolormapevent"}}],[11,"eq","","",72,{"inputs":[{"name":"xconfigureevent"},{"name":"xconfigureevent"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"xconfigureevent"},{"name":"xconfigureevent"}],"output":{"name":"bool"}}],[11,"clone","","",72,{"inputs":[{"name":"xconfigureevent"}],"output":{"name":"xconfigureevent"}}],[11,"from","","",72,{"inputs":[{"name":"xconfigureevent"},{"name":"xevent"}],"output":{"name":"xconfigureevent"}}],[11,"eq","","",73,{"inputs":[{"name":"xconfigurerequestevent"},{"name":"xconfigurerequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"xconfigurerequestevent"},{"name":"xconfigurerequestevent"}],"output":{"name":"bool"}}],[11,"clone","","",73,{"inputs":[{"name":"xconfigurerequestevent"}],"output":{"name":"xconfigurerequestevent"}}],[11,"from","","",73,{"inputs":[{"name":"xconfigurerequestevent"},{"name":"xevent"}],"output":{"name":"xconfigurerequestevent"}}],[11,"eq","","",74,{"inputs":[{"name":"xcreatewindowevent"},{"name":"xcreatewindowevent"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"xcreatewindowevent"},{"name":"xcreatewindowevent"}],"output":{"name":"bool"}}],[11,"clone","","",74,{"inputs":[{"name":"xcreatewindowevent"}],"output":{"name":"xcreatewindowevent"}}],[11,"from","","",74,{"inputs":[{"name":"xcreatewindowevent"},{"name":"xevent"}],"output":{"name":"xcreatewindowevent"}}],[11,"eq","","",75,{"inputs":[{"name":"xcrossingevent"},{"name":"xcrossingevent"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"xcrossingevent"},{"name":"xcrossingevent"}],"output":{"name":"bool"}}],[11,"clone","","",75,{"inputs":[{"name":"xcrossingevent"}],"output":{"name":"xcrossingevent"}}],[11,"from","","",75,{"inputs":[{"name":"xcrossingevent"},{"name":"xevent"}],"output":{"name":"xcrossingevent"}}],[11,"eq","","",76,{"inputs":[{"name":"xdestroywindowevent"},{"name":"xdestroywindowevent"}],"output":{"name":"bool"}}],[11,"ne","","",76,{"inputs":[{"name":"xdestroywindowevent"},{"name":"xdestroywindowevent"}],"output":{"name":"bool"}}],[11,"clone","","",76,{"inputs":[{"name":"xdestroywindowevent"}],"output":{"name":"xdestroywindowevent"}}],[11,"from","","",76,{"inputs":[{"name":"xdestroywindowevent"},{"name":"xevent"}],"output":{"name":"xdestroywindowevent"}}],[11,"eq","","",77,{"inputs":[{"name":"xerrorevent"},{"name":"xerrorevent"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"xerrorevent"},{"name":"xerrorevent"}],"output":{"name":"bool"}}],[11,"clone","","",77,{"inputs":[{"name":"xerrorevent"}],"output":{"name":"xerrorevent"}}],[11,"from","","",77,{"inputs":[{"name":"xerrorevent"},{"name":"xevent"}],"output":{"name":"xerrorevent"}}],[11,"eq","","",78,{"inputs":[{"name":"xexposeevent"},{"name":"xexposeevent"}],"output":{"name":"bool"}}],[11,"ne","","",78,{"inputs":[{"name":"xexposeevent"},{"name":"xexposeevent"}],"output":{"name":"bool"}}],[11,"clone","","",78,{"inputs":[{"name":"xexposeevent"}],"output":{"name":"xexposeevent"}}],[11,"from","","",78,{"inputs":[{"name":"xexposeevent"},{"name":"xevent"}],"output":{"name":"xexposeevent"}}],[11,"eq","","",79,{"inputs":[{"name":"xfocuschangeevent"},{"name":"xfocuschangeevent"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"xfocuschangeevent"},{"name":"xfocuschangeevent"}],"output":{"name":"bool"}}],[11,"clone","","",79,{"inputs":[{"name":"xfocuschangeevent"}],"output":{"name":"xfocuschangeevent"}}],[11,"from","","",79,{"inputs":[{"name":"xfocuschangeevent"},{"name":"xevent"}],"output":{"name":"xfocuschangeevent"}}],[11,"eq","","",80,{"inputs":[{"name":"xgraphicsexposeevent"},{"name":"xgraphicsexposeevent"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"xgraphicsexposeevent"},{"name":"xgraphicsexposeevent"}],"output":{"name":"bool"}}],[11,"clone","","",80,{"inputs":[{"name":"xgraphicsexposeevent"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"from","","",80,{"inputs":[{"name":"xgraphicsexposeevent"},{"name":"xevent"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"eq","","",81,{"inputs":[{"name":"xgravityevent"},{"name":"xgravityevent"}],"output":{"name":"bool"}}],[11,"ne","","",81,{"inputs":[{"name":"xgravityevent"},{"name":"xgravityevent"}],"output":{"name":"bool"}}],[11,"clone","","",81,{"inputs":[{"name":"xgravityevent"}],"output":{"name":"xgravityevent"}}],[11,"from","","",81,{"inputs":[{"name":"xgravityevent"},{"name":"xevent"}],"output":{"name":"xgravityevent"}}],[11,"eq","","",82,{"inputs":[{"name":"xkeyevent"},{"name":"xkeyevent"}],"output":{"name":"bool"}}],[11,"ne","","",82,{"inputs":[{"name":"xkeyevent"},{"name":"xkeyevent"}],"output":{"name":"bool"}}],[11,"clone","","",82,{"inputs":[{"name":"xkeyevent"}],"output":{"name":"xkeyevent"}}],[11,"from","","",82,{"inputs":[{"name":"xkeyevent"},{"name":"xevent"}],"output":{"name":"xkeyevent"}}],[11,"eq","","",83,{"inputs":[{"name":"xkeymapevent"},{"name":"xkeymapevent"}],"output":{"name":"bool"}}],[11,"ne","","",83,{"inputs":[{"name":"xkeymapevent"},{"name":"xkeymapevent"}],"output":{"name":"bool"}}],[11,"clone","","",83,{"inputs":[{"name":"xkeymapevent"}],"output":{"name":"xkeymapevent"}}],[11,"from","","",83,{"inputs":[{"name":"xkeymapevent"},{"name":"xevent"}],"output":{"name":"xkeymapevent"}}],[11,"eq","","",84,{"inputs":[{"name":"xmapevent"},{"name":"xmapevent"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"xmapevent"},{"name":"xmapevent"}],"output":{"name":"bool"}}],[11,"clone","","",84,{"inputs":[{"name":"xmapevent"}],"output":{"name":"xmapevent"}}],[11,"from","","",84,{"inputs":[{"name":"xmapevent"},{"name":"xevent"}],"output":{"name":"xmapevent"}}],[11,"eq","","",85,{"inputs":[{"name":"xmappingevent"},{"name":"xmappingevent"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"xmappingevent"},{"name":"xmappingevent"}],"output":{"name":"bool"}}],[11,"clone","","",85,{"inputs":[{"name":"xmappingevent"}],"output":{"name":"xmappingevent"}}],[11,"from","","",85,{"inputs":[{"name":"xmappingevent"},{"name":"xevent"}],"output":{"name":"xmappingevent"}}],[11,"eq","","",86,{"inputs":[{"name":"xmaprequestevent"},{"name":"xmaprequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"xmaprequestevent"},{"name":"xmaprequestevent"}],"output":{"name":"bool"}}],[11,"clone","","",86,{"inputs":[{"name":"xmaprequestevent"}],"output":{"name":"xmaprequestevent"}}],[11,"from","","",86,{"inputs":[{"name":"xmaprequestevent"},{"name":"xevent"}],"output":{"name":"xmaprequestevent"}}],[11,"eq","","",87,{"inputs":[{"name":"xmotionevent"},{"name":"xmotionevent"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"xmotionevent"},{"name":"xmotionevent"}],"output":{"name":"bool"}}],[11,"clone","","",87,{"inputs":[{"name":"xmotionevent"}],"output":{"name":"xmotionevent"}}],[11,"from","","",87,{"inputs":[{"name":"xmotionevent"},{"name":"xevent"}],"output":{"name":"xmotionevent"}}],[11,"eq","","",88,{"inputs":[{"name":"xnoexposeevent"},{"name":"xnoexposeevent"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"xnoexposeevent"},{"name":"xnoexposeevent"}],"output":{"name":"bool"}}],[11,"clone","","",88,{"inputs":[{"name":"xnoexposeevent"}],"output":{"name":"xnoexposeevent"}}],[11,"from","","",88,{"inputs":[{"name":"xnoexposeevent"},{"name":"xevent"}],"output":{"name":"xnoexposeevent"}}],[11,"eq","","",89,{"inputs":[{"name":"xpropertyevent"},{"name":"xpropertyevent"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"xpropertyevent"},{"name":"xpropertyevent"}],"output":{"name":"bool"}}],[11,"clone","","",89,{"inputs":[{"name":"xpropertyevent"}],"output":{"name":"xpropertyevent"}}],[11,"from","","",89,{"inputs":[{"name":"xpropertyevent"},{"name":"xevent"}],"output":{"name":"xpropertyevent"}}],[11,"eq","","",90,{"inputs":[{"name":"xreparentevent"},{"name":"xreparentevent"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"xreparentevent"},{"name":"xreparentevent"}],"output":{"name":"bool"}}],[11,"clone","","",90,{"inputs":[{"name":"xreparentevent"}],"output":{"name":"xreparentevent"}}],[11,"from","","",90,{"inputs":[{"name":"xreparentevent"},{"name":"xevent"}],"output":{"name":"xreparentevent"}}],[11,"eq","","",91,{"inputs":[{"name":"xresizerequestevent"},{"name":"xresizerequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"xresizerequestevent"},{"name":"xresizerequestevent"}],"output":{"name":"bool"}}],[11,"clone","","",91,{"inputs":[{"name":"xresizerequestevent"}],"output":{"name":"xresizerequestevent"}}],[11,"from","","",91,{"inputs":[{"name":"xresizerequestevent"},{"name":"xevent"}],"output":{"name":"xresizerequestevent"}}],[11,"eq","","",92,{"inputs":[{"name":"xselectionclearevent"},{"name":"xselectionclearevent"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"xselectionclearevent"},{"name":"xselectionclearevent"}],"output":{"name":"bool"}}],[11,"clone","","",92,{"inputs":[{"name":"xselectionclearevent"}],"output":{"name":"xselectionclearevent"}}],[11,"from","","",92,{"inputs":[{"name":"xselectionclearevent"},{"name":"xevent"}],"output":{"name":"xselectionclearevent"}}],[11,"eq","","",93,{"inputs":[{"name":"xselectionevent"},{"name":"xselectionevent"}],"output":{"name":"bool"}}],[11,"ne","","",93,{"inputs":[{"name":"xselectionevent"},{"name":"xselectionevent"}],"output":{"name":"bool"}}],[11,"clone","","",93,{"inputs":[{"name":"xselectionevent"}],"output":{"name":"xselectionevent"}}],[11,"from","","",93,{"inputs":[{"name":"xselectionevent"},{"name":"xevent"}],"output":{"name":"xselectionevent"}}],[11,"eq","","",94,{"inputs":[{"name":"xselectionrequestevent"},{"name":"xselectionrequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",94,{"inputs":[{"name":"xselectionrequestevent"},{"name":"xselectionrequestevent"}],"output":{"name":"bool"}}],[11,"clone","","",94,{"inputs":[{"name":"xselectionrequestevent"}],"output":{"name":"xselectionrequestevent"}}],[11,"from","","",94,{"inputs":[{"name":"xselectionrequestevent"},{"name":"xevent"}],"output":{"name":"xselectionrequestevent"}}],[11,"eq","","",95,{"inputs":[{"name":"xunmapevent"},{"name":"xunmapevent"}],"output":{"name":"bool"}}],[11,"ne","","",95,{"inputs":[{"name":"xunmapevent"},{"name":"xunmapevent"}],"output":{"name":"bool"}}],[11,"clone","","",95,{"inputs":[{"name":"xunmapevent"}],"output":{"name":"xunmapevent"}}],[11,"from","","",95,{"inputs":[{"name":"xunmapevent"},{"name":"xevent"}],"output":{"name":"xunmapevent"}}],[11,"eq","","",96,{"inputs":[{"name":"xvisibilityevent"},{"name":"xvisibilityevent"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"xvisibilityevent"},{"name":"xvisibilityevent"}],"output":{"name":"bool"}}],[11,"clone","","",96,{"inputs":[{"name":"xvisibilityevent"}],"output":{"name":"xvisibilityevent"}}],[11,"from","","",96,{"inputs":[{"name":"xvisibilityevent"},{"name":"xevent"}],"output":{"name":"xvisibilityevent"}}],[11,"eq","","",98,{"inputs":[{"name":"_xkbdesc"},{"name":"_xkbdesc"}],"output":{"name":"bool"}}],[11,"ne","","",98,{"inputs":[{"name":"_xkbdesc"},{"name":"_xkbdesc"}],"output":{"name":"bool"}}],[11,"clone","","",98,{"inputs":[{"name":"_xkbdesc"}],"output":{"name":"_xkbdesc"}}],[11,"eq","","",100,{"inputs":[{"name":"_xkbkeyaliasrec"},{"name":"_xkbkeyaliasrec"}],"output":{"name":"bool"}}],[11,"ne","","",100,{"inputs":[{"name":"_xkbkeyaliasrec"},{"name":"_xkbkeyaliasrec"}],"output":{"name":"bool"}}],[11,"clone","","",100,{"inputs":[{"name":"_xkbkeyaliasrec"}],"output":{"name":"_xkbkeyaliasrec"}}],[11,"eq","","",101,{"inputs":[{"name":"_xkbkeynamerec"},{"name":"_xkbkeynamerec"}],"output":{"name":"bool"}}],[11,"ne","","",101,{"inputs":[{"name":"_xkbkeynamerec"},{"name":"_xkbkeynamerec"}],"output":{"name":"bool"}}],[11,"clone","","",101,{"inputs":[{"name":"_xkbkeynamerec"}],"output":{"name":"_xkbkeynamerec"}}],[11,"eq","","",102,{"inputs":[{"name":"_xkbnamesrec"},{"name":"_xkbnamesrec"}],"output":{"name":"bool"}}],[11,"ne","","",102,{"inputs":[{"name":"_xkbnamesrec"},{"name":"_xkbnamesrec"}],"output":{"name":"bool"}}],[11,"clone","","",102,{"inputs":[{"name":"_xkbnamesrec"}],"output":{"name":"_xkbnamesrec"}}],[11,"eq","","",103,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"clone","","",103,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"eq","","",104,{"inputs":[{"name":"screen"},{"name":"screen"}],"output":{"name":"bool"}}],[11,"ne","","",104,{"inputs":[{"name":"screen"},{"name":"screen"}],"output":{"name":"bool"}}],[11,"clone","","",104,{"inputs":[{"name":"screen"}],"output":{"name":"screen"}}],[11,"eq","","",105,{"inputs":[{"name":"screenformat"},{"name":"screenformat"}],"output":{"name":"bool"}}],[11,"ne","","",105,{"inputs":[{"name":"screenformat"},{"name":"screenformat"}],"output":{"name":"bool"}}],[11,"clone","","",105,{"inputs":[{"name":"screenformat"}],"output":{"name":"screenformat"}}],[11,"eq","","",106,{"inputs":[{"name":"visual"},{"name":"visual"}],"output":{"name":"bool"}}],[11,"ne","","",106,{"inputs":[{"name":"visual"},{"name":"visual"}],"output":{"name":"bool"}}],[11,"clone","","",106,{"inputs":[{"name":"visual"}],"output":{"name":"visual"}}],[11,"eq","","",107,{"inputs":[{"name":"xarc"},{"name":"xarc"}],"output":{"name":"bool"}}],[11,"ne","","",107,{"inputs":[{"name":"xarc"},{"name":"xarc"}],"output":{"name":"bool"}}],[11,"clone","","",107,{"inputs":[{"name":"xarc"}],"output":{"name":"xarc"}}],[11,"eq","","",108,{"inputs":[{"name":"xchar2b"},{"name":"xchar2b"}],"output":{"name":"bool"}}],[11,"ne","","",108,{"inputs":[{"name":"xchar2b"},{"name":"xchar2b"}],"output":{"name":"bool"}}],[11,"clone","","",108,{"inputs":[{"name":"xchar2b"}],"output":{"name":"xchar2b"}}],[11,"eq","","",109,{"inputs":[{"name":"xcharstruct"},{"name":"xcharstruct"}],"output":{"name":"bool"}}],[11,"ne","","",109,{"inputs":[{"name":"xcharstruct"},{"name":"xcharstruct"}],"output":{"name":"bool"}}],[11,"clone","","",109,{"inputs":[{"name":"xcharstruct"}],"output":{"name":"xcharstruct"}}],[11,"eq","","",110,{"inputs":[{"name":"xclasshint"},{"name":"xclasshint"}],"output":{"name":"bool"}}],[11,"ne","","",110,{"inputs":[{"name":"xclasshint"},{"name":"xclasshint"}],"output":{"name":"bool"}}],[11,"clone","","",110,{"inputs":[{"name":"xclasshint"}],"output":{"name":"xclasshint"}}],[11,"eq","","",111,{"inputs":[{"name":"xcolor"},{"name":"xcolor"}],"output":{"name":"bool"}}],[11,"ne","","",111,{"inputs":[{"name":"xcolor"},{"name":"xcolor"}],"output":{"name":"bool"}}],[11,"clone","","",111,{"inputs":[{"name":"xcolor"}],"output":{"name":"xcolor"}}],[11,"eq","","",112,{"inputs":[{"name":"xcomposestatus"},{"name":"xcomposestatus"}],"output":{"name":"bool"}}],[11,"ne","","",112,{"inputs":[{"name":"xcomposestatus"},{"name":"xcomposestatus"}],"output":{"name":"bool"}}],[11,"clone","","",112,{"inputs":[{"name":"xcomposestatus"}],"output":{"name":"xcomposestatus"}}],[11,"eq","","",113,{"inputs":[{"name":"xextcodes"},{"name":"xextcodes"}],"output":{"name":"bool"}}],[11,"ne","","",113,{"inputs":[{"name":"xextcodes"},{"name":"xextcodes"}],"output":{"name":"bool"}}],[11,"clone","","",113,{"inputs":[{"name":"xextcodes"}],"output":{"name":"xextcodes"}}],[11,"eq","","",115,{"inputs":[{"name":"xfontprop"},{"name":"xfontprop"}],"output":{"name":"bool"}}],[11,"ne","","",115,{"inputs":[{"name":"xfontprop"},{"name":"xfontprop"}],"output":{"name":"bool"}}],[11,"clone","","",115,{"inputs":[{"name":"xfontprop"}],"output":{"name":"xfontprop"}}],[11,"eq","","",116,{"inputs":[{"name":"xfontsetextents"},{"name":"xfontsetextents"}],"output":{"name":"bool"}}],[11,"ne","","",116,{"inputs":[{"name":"xfontsetextents"},{"name":"xfontsetextents"}],"output":{"name":"bool"}}],[11,"clone","","",116,{"inputs":[{"name":"xfontsetextents"}],"output":{"name":"xfontsetextents"}}],[11,"eq","","",117,{"inputs":[{"name":"xfontstruct"},{"name":"xfontstruct"}],"output":{"name":"bool"}}],[11,"ne","","",117,{"inputs":[{"name":"xfontstruct"},{"name":"xfontstruct"}],"output":{"name":"bool"}}],[11,"clone","","",117,{"inputs":[{"name":"xfontstruct"}],"output":{"name":"xfontstruct"}}],[11,"eq","","",118,{"inputs":[{"name":"xgcvalues"},{"name":"xgcvalues"}],"output":{"name":"bool"}}],[11,"ne","","",118,{"inputs":[{"name":"xgcvalues"},{"name":"xgcvalues"}],"output":{"name":"bool"}}],[11,"clone","","",118,{"inputs":[{"name":"xgcvalues"}],"output":{"name":"xgcvalues"}}],[11,"eq","","",119,{"inputs":[{"name":"xgenericeventcookie"},{"name":"xgenericeventcookie"}],"output":{"name":"bool"}}],[11,"ne","","",119,{"inputs":[{"name":"xgenericeventcookie"},{"name":"xgenericeventcookie"}],"output":{"name":"bool"}}],[11,"clone","","",119,{"inputs":[{"name":"xgenericeventcookie"}],"output":{"name":"xgenericeventcookie"}}],[11,"from","","",119,{"inputs":[{"name":"xgenericeventcookie"},{"name":"xevent"}],"output":{"name":"xgenericeventcookie"}}],[11,"eq","","",120,{"inputs":[{"name":"xhostaddress"},{"name":"xhostaddress"}],"output":{"name":"bool"}}],[11,"ne","","",120,{"inputs":[{"name":"xhostaddress"},{"name":"xhostaddress"}],"output":{"name":"bool"}}],[11,"clone","","",120,{"inputs":[{"name":"xhostaddress"}],"output":{"name":"xhostaddress"}}],[11,"eq","","",121,{"inputs":[{"name":"xiconsize"},{"name":"xiconsize"}],"output":{"name":"bool"}}],[11,"ne","","",121,{"inputs":[{"name":"xiconsize"},{"name":"xiconsize"}],"output":{"name":"bool"}}],[11,"clone","","",121,{"inputs":[{"name":"xiconsize"}],"output":{"name":"xiconsize"}}],[11,"eq","","",122,{"inputs":[{"name":"ximage"},{"name":"ximage"}],"output":{"name":"bool"}}],[11,"ne","","",122,{"inputs":[{"name":"ximage"},{"name":"ximage"}],"output":{"name":"bool"}}],[11,"clone","","",122,{"inputs":[{"name":"ximage"}],"output":{"name":"ximage"}}],[11,"eq","","",123,{"inputs":[{"name":"xkeyboardcontrol"},{"name":"xkeyboardcontrol"}],"output":{"name":"bool"}}],[11,"ne","","",123,{"inputs":[{"name":"xkeyboardcontrol"},{"name":"xkeyboardcontrol"}],"output":{"name":"bool"}}],[11,"clone","","",123,{"inputs":[{"name":"xkeyboardcontrol"}],"output":{"name":"xkeyboardcontrol"}}],[11,"eq","","",124,{"inputs":[{"name":"xkeyboardstate"},{"name":"xkeyboardstate"}],"output":{"name":"bool"}}],[11,"ne","","",124,{"inputs":[{"name":"xkeyboardstate"},{"name":"xkeyboardstate"}],"output":{"name":"bool"}}],[11,"clone","","",124,{"inputs":[{"name":"xkeyboardstate"}],"output":{"name":"xkeyboardstate"}}],[11,"eq","","",125,{"inputs":[{"name":"xmbtextitem"},{"name":"xmbtextitem"}],"output":{"name":"bool"}}],[11,"ne","","",125,{"inputs":[{"name":"xmbtextitem"},{"name":"xmbtextitem"}],"output":{"name":"bool"}}],[11,"clone","","",125,{"inputs":[{"name":"xmbtextitem"}],"output":{"name":"xmbtextitem"}}],[11,"eq","","",126,{"inputs":[{"name":"xmodifierkeymap"},{"name":"xmodifierkeymap"}],"output":{"name":"bool"}}],[11,"ne","","",126,{"inputs":[{"name":"xmodifierkeymap"},{"name":"xmodifierkeymap"}],"output":{"name":"bool"}}],[11,"clone","","",126,{"inputs":[{"name":"xmodifierkeymap"}],"output":{"name":"xmodifierkeymap"}}],[11,"eq","","",127,{"inputs":[{"name":"xomcharsetlist"},{"name":"xomcharsetlist"}],"output":{"name":"bool"}}],[11,"ne","","",127,{"inputs":[{"name":"xomcharsetlist"},{"name":"xomcharsetlist"}],"output":{"name":"bool"}}],[11,"clone","","",127,{"inputs":[{"name":"xomcharsetlist"}],"output":{"name":"xomcharsetlist"}}],[11,"eq","","",128,{"inputs":[{"name":"xpixmapformatvalues"},{"name":"xpixmapformatvalues"}],"output":{"name":"bool"}}],[11,"ne","","",128,{"inputs":[{"name":"xpixmapformatvalues"},{"name":"xpixmapformatvalues"}],"output":{"name":"bool"}}],[11,"clone","","",128,{"inputs":[{"name":"xpixmapformatvalues"}],"output":{"name":"xpixmapformatvalues"}}],[11,"eq","","",129,{"inputs":[{"name":"xpoint"},{"name":"xpoint"}],"output":{"name":"bool"}}],[11,"ne","","",129,{"inputs":[{"name":"xpoint"},{"name":"xpoint"}],"output":{"name":"bool"}}],[11,"clone","","",129,{"inputs":[{"name":"xpoint"}],"output":{"name":"xpoint"}}],[11,"eq","","",130,{"inputs":[{"name":"xrectangle"},{"name":"xrectangle"}],"output":{"name":"bool"}}],[11,"ne","","",130,{"inputs":[{"name":"xrectangle"},{"name":"xrectangle"}],"output":{"name":"bool"}}],[11,"clone","","",130,{"inputs":[{"name":"xrectangle"}],"output":{"name":"xrectangle"}}],[11,"eq","","",131,{"inputs":[{"name":"xrmoptiondescrec"},{"name":"xrmoptiondescrec"}],"output":{"name":"bool"}}],[11,"ne","","",131,{"inputs":[{"name":"xrmoptiondescrec"},{"name":"xrmoptiondescrec"}],"output":{"name":"bool"}}],[11,"clone","","",131,{"inputs":[{"name":"xrmoptiondescrec"}],"output":{"name":"xrmoptiondescrec"}}],[11,"eq","","",132,{"inputs":[{"name":"xrmvalue"},{"name":"xrmvalue"}],"output":{"name":"bool"}}],[11,"ne","","",132,{"inputs":[{"name":"xrmvalue"},{"name":"xrmvalue"}],"output":{"name":"bool"}}],[11,"clone","","",132,{"inputs":[{"name":"xrmvalue"}],"output":{"name":"xrmvalue"}}],[11,"eq","","",133,{"inputs":[{"name":"xsegment"},{"name":"xsegment"}],"output":{"name":"bool"}}],[11,"ne","","",133,{"inputs":[{"name":"xsegment"},{"name":"xsegment"}],"output":{"name":"bool"}}],[11,"clone","","",133,{"inputs":[{"name":"xsegment"}],"output":{"name":"xsegment"}}],[11,"eq","","",134,{"inputs":[{"name":"xsetwindowattributes"},{"name":"xsetwindowattributes"}],"output":{"name":"bool"}}],[11,"ne","","",134,{"inputs":[{"name":"xsetwindowattributes"},{"name":"xsetwindowattributes"}],"output":{"name":"bool"}}],[11,"clone","","",134,{"inputs":[{"name":"xsetwindowattributes"}],"output":{"name":"xsetwindowattributes"}}],[11,"eq","","",135,{"inputs":[{"name":"xsizehints"},{"name":"xsizehints"}],"output":{"name":"bool"}}],[11,"ne","","",135,{"inputs":[{"name":"xsizehints"},{"name":"xsizehints"}],"output":{"name":"bool"}}],[11,"clone","","",135,{"inputs":[{"name":"xsizehints"}],"output":{"name":"xsizehints"}}],[11,"eq","","",136,{"inputs":[{"name":"xstandardcolormap"},{"name":"xstandardcolormap"}],"output":{"name":"bool"}}],[11,"ne","","",136,{"inputs":[{"name":"xstandardcolormap"},{"name":"xstandardcolormap"}],"output":{"name":"bool"}}],[11,"clone","","",136,{"inputs":[{"name":"xstandardcolormap"}],"output":{"name":"xstandardcolormap"}}],[11,"eq","","",137,{"inputs":[{"name":"xtextitem"},{"name":"xtextitem"}],"output":{"name":"bool"}}],[11,"ne","","",137,{"inputs":[{"name":"xtextitem"},{"name":"xtextitem"}],"output":{"name":"bool"}}],[11,"clone","","",137,{"inputs":[{"name":"xtextitem"}],"output":{"name":"xtextitem"}}],[11,"eq","","",138,{"inputs":[{"name":"xtextitem16"},{"name":"xtextitem16"}],"output":{"name":"bool"}}],[11,"ne","","",138,{"inputs":[{"name":"xtextitem16"},{"name":"xtextitem16"}],"output":{"name":"bool"}}],[11,"clone","","",138,{"inputs":[{"name":"xtextitem16"}],"output":{"name":"xtextitem16"}}],[11,"eq","","",139,{"inputs":[{"name":"xtextproperty"},{"name":"xtextproperty"}],"output":{"name":"bool"}}],[11,"ne","","",139,{"inputs":[{"name":"xtextproperty"},{"name":"xtextproperty"}],"output":{"name":"bool"}}],[11,"clone","","",139,{"inputs":[{"name":"xtextproperty"}],"output":{"name":"xtextproperty"}}],[11,"eq","","",140,{"inputs":[{"name":"xtimecoord"},{"name":"xtimecoord"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"xtimecoord"},{"name":"xtimecoord"}],"output":{"name":"bool"}}],[11,"clone","","",140,{"inputs":[{"name":"xtimecoord"}],"output":{"name":"xtimecoord"}}],[11,"eq","","",141,{"inputs":[{"name":"xvisualinfo"},{"name":"xvisualinfo"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"xvisualinfo"},{"name":"xvisualinfo"}],"output":{"name":"bool"}}],[11,"clone","","",141,{"inputs":[{"name":"xvisualinfo"}],"output":{"name":"xvisualinfo"}}],[11,"eq","","",142,{"inputs":[{"name":"xwctextitem"},{"name":"xwctextitem"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"xwctextitem"},{"name":"xwctextitem"}],"output":{"name":"bool"}}],[11,"clone","","",142,{"inputs":[{"name":"xwctextitem"}],"output":{"name":"xwctextitem"}}],[11,"eq","","",143,{"inputs":[{"name":"xwindowattributes"},{"name":"xwindowattributes"}],"output":{"name":"bool"}}],[11,"ne","","",143,{"inputs":[{"name":"xwindowattributes"},{"name":"xwindowattributes"}],"output":{"name":"bool"}}],[11,"clone","","",143,{"inputs":[{"name":"xwindowattributes"}],"output":{"name":"xwindowattributes"}}],[11,"eq","","",144,{"inputs":[{"name":"xwindowchanges"},{"name":"xwindowchanges"}],"output":{"name":"bool"}}],[11,"ne","","",144,{"inputs":[{"name":"xwindowchanges"},{"name":"xwindowchanges"}],"output":{"name":"bool"}}],[11,"clone","","",144,{"inputs":[{"name":"xwindowchanges"}],"output":{"name":"xwindowchanges"}}],[11,"eq","","",145,{"inputs":[{"name":"xwmhints"},{"name":"xwmhints"}],"output":{"name":"bool"}}],[11,"ne","","",145,{"inputs":[{"name":"xwmhints"},{"name":"xwmhints"}],"output":{"name":"bool"}}],[11,"clone","","",145,{"inputs":[{"name":"xwmhints"}],"output":{"name":"xwmhints"}}],[11,"eq","","",146,{"inputs":[{"name":"aspectratio"},{"name":"aspectratio"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"aspectratio"},{"name":"aspectratio"}],"output":{"name":"bool"}}],[11,"clone","","",146,{"inputs":[{"name":"aspectratio"}],"output":{"name":"aspectratio"}}],[11,"eq","","",148,{"inputs":[{"name":"clientmessagedata"},{"name":"clientmessagedata"}],"output":{"name":"bool"}}],[11,"ne","","",148,{"inputs":[{"name":"clientmessagedata"},{"name":"clientmessagedata"}],"output":{"name":"bool"}}],[11,"clone","","",148,{"inputs":[{"name":"clientmessagedata"}],"output":{"name":"clientmessagedata"}}],[11,"new","","",148,{"inputs":[{"name":"clientmessagedata"}],"output":{"name":"clientmessagedata"}}],[11,"get_byte","","",148,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"}],"output":{"name":"c_char"}}],[11,"get_long","","",148,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"}],"output":{"name":"c_long"}}],[11,"get_short","","",148,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"}],"output":{"name":"c_short"}}],[11,"set_byte","","",148,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"},{"name":"c_char"}],"output":null}],[11,"set_long","","",148,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"},{"name":"c_long"}],"output":null}],[11,"set_short","","",148,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"},{"name":"c_short"}],"output":null}],[11,"clone","","",147,{"inputs":[{"name":"imagefns"}],"output":{"name":"imagefns"}}],[11,"eq","","",147,{"inputs":[{"name":"imagefns"},{"name":"imagefns"}],"output":{"name":"bool"}}],[0,"xmu","x11_dl","",null,null],[3,"Xmu","x11_dl::xmu","",null,null],[12,"XmuAddCloseDisplayHook","","",149,null],[12,"XmuAddInitializer","","",149,null],[12,"XmuAllStandardColormaps","","",149,null],[12,"XmuAppendSegment","","",149,null],[12,"XmuAreaAnd","","",149,null],[12,"XmuAreaCopy","","",149,null],[12,"XmuAreaDup","","",149,null],[12,"XmuAreaNot","","",149,null],[12,"XmuAreaOrXor","","",149,null],[12,"XmuCallInitializers","","",149,null],[12,"XmuClientWindow","","",149,null],[12,"XmuCompareISOLatin1","","",149,null],[12,"XmuConvertStandardSelection","","",149,null],[12,"XmuCopyISOLatin1Lowered","","",149,null],[12,"XmuCopyISOLatin1Uppered","","",149,null],[12,"XmuCreateColormap","","",149,null],[12,"XmuCreatePixmapFromBitmap","","",149,null],[12,"XmuCreateStippledPixmap","","",149,null],[12,"XmuCursorNameToIndex","","",149,null],[12,"XmuCvtBackingStoreToString","","",149,null],[12,"XmuCvtFunctionToCallback","","",149,null],[12,"XmuCvtGravityToString","","",149,null],[12,"XmuCvtJustifyToString","","",149,null],[12,"XmuCvtLongToString","","",149,null],[12,"XmuCvtOrientationToString","","",149,null],[12,"XmuCvtShapeStyleToString","","",149,null],[12,"XmuCvtStringToBackingStore","","",149,null],[12,"XmuCvtStringToBitmap","","",149,null],[12,"XmuCvtStringToColorCursor","","",149,null],[12,"XmuCvtStringToCursor","","",149,null],[12,"XmuCvtStringToGravity","","",149,null],[12,"XmuCvtStringToJustify","","",149,null],[12,"XmuCvtStringToLong","","",149,null],[12,"XmuCvtStringToOrientation","","",149,null],[12,"XmuCvtStringToShapeStyle","","",149,null],[12,"XmuCvtStringToWidget","","",149,null],[12,"XmuCvtWidgetToString","","",149,null],[12,"XmuDeleteStandardColormap","","",149,null],[12,"XmuDestroyScanlineList","","",149,null],[12,"XmuDestroySegmentList","","",149,null],[12,"XmuDistinguishableColors","","",149,null],[12,"XmuDistinguishablePixels","","",149,null],[12,"XmuDQAddDisplay","","",149,null],[12,"XmuDQCreate","","",149,null],[12,"XmuDQDestroy","","",149,null],[12,"XmuDQLookupDisplay","","",149,null],[12,"XmuDQRemoveDisplay","","",149,null],[12,"XmuDrawLogo","","",149,null],[12,"XmuDrawRoundedRectangle","","",149,null],[12,"XmuFillRoundedRectangle","","",149,null],[12,"XmuGetAtomName","","",149,null],[12,"XmuGetColormapAllocation","","",149,null],[12,"XmuGetHostname","","",149,null],[12,"XmuInternAtom","","",149,null],[12,"XmuInternStrings","","",149,null],[12,"XmuLocateBitmapFile","","",149,null],[12,"XmuLocatePixmapFile","","",149,null],[12,"XmuLookupAPL","","",149,null],[12,"XmuLookupArabic","","",149,null],[12,"XmuLookupCloseDisplayHook","","",149,null],[12,"XmuLookupCyrillic","","",149,null],[12,"XmuLookupGreek","","",149,null],[12,"XmuLookupHebrew","","",149,null],[12,"XmuLookupJISX0201","","",149,null],[12,"XmuLookupKana","","",149,null],[12,"XmuLookupLatin1","","",149,null],[12,"XmuLookupLatin2","","",149,null],[12,"XmuLookupLatin3","","",149,null],[12,"XmuLookupLatin4","","",149,null],[12,"XmuLookupStandardColormap","","",149,null],[12,"XmuLookupString","","",149,null],[12,"XmuMakeAtom","","",149,null],[12,"XmuNameOfAtom","","",149,null],[12,"XmuNCopyISOLatin1Lowered","","",149,null],[12,"XmuNCopyISOLatin1Uppered","","",149,null],[12,"XmuNewArea","","",149,null],[12,"XmuNewCvtStringToWidget","","",149,null],[12,"XmuNewScanline","","",149,null],[12,"XmuNewSegment","","",149,null],[12,"XmuOptimizeArea","","",149,null],[12,"XmuOptimizeScanline","","",149,null],[12,"XmuPrintDefaultErrorMessage","","",149,null],[12,"XmuReadBitmapData","","",149,null],[12,"XmuReadBitmapDataFromFile","","",149,null],[12,"XmuRegisterExternalAgent","","",149,null],[12,"XmuReleaseStippledPixmap","","",149,null],[12,"XmuRemoveCloseDisplayHook","","",149,null],[12,"XmuReshapeWidget","","",149,null],[12,"XmuScanlineAnd","","",149,null],[12,"XmuScanlineAndSegment","","",149,null],[12,"XmuScanlineCopy","","",149,null],[12,"XmuScanlineEqu","","",149,null],[12,"XmuScanlineNot","","",149,null],[12,"XmuScanlineOr","","",149,null],[12,"XmuScanlineOrSegment","","",149,null],[12,"XmuScanlineXor","","",149,null],[12,"XmuScanlineXorSegment","","",149,null],[12,"XmuScreenOfWindow","","",149,null],[12,"XmuSimpleErrorHandler","","",149,null],[12,"XmuStandardColormap","","",149,null],[12,"XmuUpdateMapHints","","",149,null],[12,"XmuValidArea","","",149,null],[12,"XmuValidScanline","","",149,null],[12,"XmuVisualStandardColormaps","","",149,null],[12,"XmuWnCountOwnedResources","","",149,null],[12,"XmuWnFetchResources","","",149,null],[12,"XmuWnInitializeNodes","","",149,null],[12,"XmuWnNameToNode","","",149,null],[12,"XmuSnprintf","","",149,null],[12,"_XA_ATOM_PAIR","","",149,null],[12,"_XA_CHARACTER_POSITION","","",149,null],[12,"_XA_CLASS","","",149,null],[12,"_XA_CLIENT_WINDOW","","",149,null],[12,"_XA_CLIPBOARD","","",149,null],[12,"_XA_COMPOUND_TEXT","","",149,null],[12,"_XA_DECNET_ADDRESS","","",149,null],[12,"_XA_DELETE","","",149,null],[12,"_XA_FILENAME","","",149,null],[12,"_XA_HOSTNAME","","",149,null],[12,"_XA_IP_ADDRESS","","",149,null],[12,"_XA_LENGTH","","",149,null],[12,"_XA_LIST_LENGTH","","",149,null],[12,"_XA_NAME","","",149,null],[12,"_XA_NET_ADDRESS","","",149,null],[12,"_XA_NULL","","",149,null],[12,"_XA_OWNER_OS","","",149,null],[12,"_XA_SPAN","","",149,null],[12,"_XA_TARGETS","","",149,null],[12,"_XA_TEXT","","",149,null],[12,"_XA_TIMESTAMP","","",149,null],[12,"_XA_USER","","",149,null],[12,"_XA_UTF8_STRING","","",149,null],[3,"_AtomRec","","",null,null],[3,"_XmuArea","","",null,null],[3,"_XmuDisplayQueue","","",null,null],[3,"_XmuDisplayQueueEntry","","",null,null],[3,"_XmuScanline","","",null,null],[3,"_XmuSegment","","",null,null],[3,"_XmuWidgetNode","","",null,null],[6,"AtomPtr","","",null,null],[6,"XmuArea","","",null,null],[6,"XmuDisplayQueue","","",null,null],[6,"XmuDisplayQueueEntry","","",null,null],[6,"XmuScanline","","",null,null],[6,"XmuSegment","","",null,null],[6,"XmuWidgetNode","","",null,null],[11,"open","","",149,{"inputs":[{"name":"xmu"}],"output":{"name":"result"}}],[0,"xrecord","x11_dl","",null,null],[3,"Xf86vmode","x11_dl::xrecord","",null,null],[12,"XRecordAllocRange","","",150,null],[12,"XRecordCreateContext","","",150,null],[12,"XRecordDisableContext","","",150,null],[12,"XRecordEnableContext","","",150,null],[12,"XRecordEnableContextAsync","","",150,null],[12,"XRecordFreeContext","","",150,null],[12,"XRecordFreeData","","",150,null],[12,"XRecordFreeState","","",150,null],[12,"XRecordGetContext","","",150,null],[12,"XRecordIdBaseMask","","",150,null],[12,"XRecordProcessReplies","","",150,null],[12,"XRecordQueryVersion","","",150,null],[12,"XRecordRegisterClients","","",150,null],[12,"XRecordUnregisterClients","","",150,null],[3,"XRecordClientInfo","","",null,null],[12,"client","","",151,null],[12,"nranges","","",151,null],[12,"ranges","","",151,null],[3,"XRecordExtRange","","",null,null],[12,"ext_major","","",152,null],[12,"ext_minor","","",152,null],[3,"XRecordInterceptData","","",null,null],[12,"id_base","","",153,null],[12,"server_time","","",153,null],[12,"client_seq","","",153,null],[12,"category","","",153,null],[12,"client_swapped","","",153,null],[12,"data","","",153,null],[12,"data_len","","",153,null],[3,"XRecordRange","","",null,null],[12,"core_requests","","",154,null],[12,"core_replies","","",154,null],[12,"ext_requests","","",154,null],[12,"ext_replies","","",154,null],[12,"delivered_events","","",154,null],[12,"device_events","","",154,null],[12,"errors","","",154,null],[12,"client_started","","",154,null],[12,"client_died","","",154,null],[3,"XRecordRange8","","",null,null],[12,"first","","",155,null],[12,"last","","",155,null],[3,"XRecordRange16","","",null,null],[12,"first","","",156,null],[12,"last","","",156,null],[3,"XRecordState","","",null,null],[12,"enabled","","",157,null],[12,"datum_flags","","",157,null],[12,"nclients","","",157,null],[12,"client_info","","",157,null],[6,"XRecordClientSpec","","",null,null],[6,"XRecordContext","","",null,null],[17,"XRecordFromServerTime","","",null,null],[17,"XRecordFromClientTime","","",null,null],[17,"XRecordFromClientSequence","","",null,null],[17,"XRecordCurrentClients","","",null,null],[17,"XRecordFutureClients","","",null,null],[17,"XRecordAllClients","","",null,null],[17,"XRecordFromServer","","",null,null],[17,"XRecordFromClient","","",null,null],[17,"XRecordClientStarted","","",null,null],[17,"XRecordClientDied","","",null,null],[17,"XRecordStartOfData","","",null,null],[17,"XRecordEndOfData","","",null,null],[11,"open","","",150,{"inputs":[{"name":"xf86vmode"}],"output":{"name":"result"}}],[11,"eq","","",151,{"inputs":[{"name":"xrecordclientinfo"},{"name":"xrecordclientinfo"}],"output":{"name":"bool"}}],[11,"ne","","",151,{"inputs":[{"name":"xrecordclientinfo"},{"name":"xrecordclientinfo"}],"output":{"name":"bool"}}],[11,"clone","","",151,{"inputs":[{"name":"xrecordclientinfo"}],"output":{"name":"xrecordclientinfo"}}],[11,"eq","","",152,{"inputs":[{"name":"xrecordextrange"},{"name":"xrecordextrange"}],"output":{"name":"bool"}}],[11,"ne","","",152,{"inputs":[{"name":"xrecordextrange"},{"name":"xrecordextrange"}],"output":{"name":"bool"}}],[11,"clone","","",152,{"inputs":[{"name":"xrecordextrange"}],"output":{"name":"xrecordextrange"}}],[11,"eq","","",153,{"inputs":[{"name":"xrecordinterceptdata"},{"name":"xrecordinterceptdata"}],"output":{"name":"bool"}}],[11,"ne","","",153,{"inputs":[{"name":"xrecordinterceptdata"},{"name":"xrecordinterceptdata"}],"output":{"name":"bool"}}],[11,"clone","","",153,{"inputs":[{"name":"xrecordinterceptdata"}],"output":{"name":"xrecordinterceptdata"}}],[11,"eq","","",154,{"inputs":[{"name":"xrecordrange"},{"name":"xrecordrange"}],"output":{"name":"bool"}}],[11,"ne","","",154,{"inputs":[{"name":"xrecordrange"},{"name":"xrecordrange"}],"output":{"name":"bool"}}],[11,"clone","","",154,{"inputs":[{"name":"xrecordrange"}],"output":{"name":"xrecordrange"}}],[11,"eq","","",155,{"inputs":[{"name":"xrecordrange8"},{"name":"xrecordrange8"}],"output":{"name":"bool"}}],[11,"ne","","",155,{"inputs":[{"name":"xrecordrange8"},{"name":"xrecordrange8"}],"output":{"name":"bool"}}],[11,"clone","","",155,{"inputs":[{"name":"xrecordrange8"}],"output":{"name":"xrecordrange8"}}],[11,"eq","","",156,{"inputs":[{"name":"xrecordrange16"},{"name":"xrecordrange16"}],"output":{"name":"bool"}}],[11,"ne","","",156,{"inputs":[{"name":"xrecordrange16"},{"name":"xrecordrange16"}],"output":{"name":"bool"}}],[11,"clone","","",156,{"inputs":[{"name":"xrecordrange16"}],"output":{"name":"xrecordrange16"}}],[11,"eq","","",157,{"inputs":[{"name":"xrecordstate"},{"name":"xrecordstate"}],"output":{"name":"bool"}}],[11,"ne","","",157,{"inputs":[{"name":"xrecordstate"},{"name":"xrecordstate"}],"output":{"name":"bool"}}],[11,"clone","","",157,{"inputs":[{"name":"xrecordstate"}],"output":{"name":"xrecordstate"}}],[0,"xrender","x11_dl","",null,null],[3,"Xrender","x11_dl::xrender","",null,null],[12,"XRenderAddGlyphs","","",158,null],[12,"XRenderAddTraps","","",158,null],[12,"XRenderChangePicture","","",158,null],[12,"XRenderComposite","","",158,null],[12,"XRenderCompositeDoublePoly","","",158,null],[12,"XRenderCompositeString16","","",158,null],[12,"XRenderCompositeString32","","",158,null],[12,"XRenderCompositeString8","","",158,null],[12,"XRenderCompositeText16","","",158,null],[12,"XRenderCompositeText32","","",158,null],[12,"XRenderCompositeText8","","",158,null],[12,"XRenderCompositeTrapezoids","","",158,null],[12,"XRenderCompositeTriangles","","",158,null],[12,"XRenderCompositeTriFan","","",158,null],[12,"XRenderCompositeTriStrip","","",158,null],[12,"XRenderCreateAnimCursor","","",158,null],[12,"XRenderCreateConicalGradient","","",158,null],[12,"XRenderCreateCursor","","",158,null],[12,"XRenderCreateGlyphSet","","",158,null],[12,"XRenderCreateLinearGradient","","",158,null],[12,"XRenderCreatePicture","","",158,null],[12,"XRenderCreateRadialGradient","","",158,null],[12,"XRenderCreateSolidFill","","",158,null],[12,"XRenderFillRectangle","","",158,null],[12,"XRenderFillRectangles","","",158,null],[12,"XRenderFindFormat","","",158,null],[12,"XRenderFindStandardFormat","","",158,null],[12,"XRenderFindVisualFormat","","",158,null],[12,"XRenderFreeGlyphs","","",158,null],[12,"XRenderFreeGlyphSet","","",158,null],[12,"XRenderFreePicture","","",158,null],[12,"XRenderParseColor","","",158,null],[12,"XRenderQueryExtension","","",158,null],[12,"XRenderQueryFilters","","",158,null],[12,"XRenderQueryFormats","","",158,null],[12,"XRenderQueryPictIndexValues","","",158,null],[12,"XRenderQuerySubpixelOrder","","",158,null],[12,"XRenderQueryVersion","","",158,null],[12,"XRenderReferenceGlyphSet","","",158,null],[12,"XRenderSetPictureClipRectangles","","",158,null],[12,"XRenderSetPictureClipRegion","","",158,null],[12,"XRenderSetPictureFilter","","",158,null],[12,"XRenderSetPictureTransform","","",158,null],[12,"XRenderSetSubpixelOrder","","",158,null],[3,"_XAnimCursor","","",null,null],[12,"cursor","","",159,null],[12,"delay","","",159,null],[3,"_XCircle","","",null,null],[12,"x","","",160,null],[12,"y","","",160,null],[12,"radius","","",160,null],[3,"_XConicalGradient","","",null,null],[12,"center","","",161,null],[12,"angle","","",161,null],[3,"_XFilters","","",null,null],[12,"nfilter","","",162,null],[12,"filter","","",162,null],[12,"nalias","","",162,null],[12,"alias","","",162,null],[3,"_XGlyphElt8","","",null,null],[12,"glyphset","","",163,null],[12,"chars","","",163,null],[12,"nchars","","",163,null],[12,"xOff","","",163,null],[12,"yOff","","",163,null],[3,"_XGlyphElt16","","",null,null],[12,"glyphset","","",164,null],[12,"chars","","",164,null],[12,"nchars","","",164,null],[12,"xOff","","",164,null],[12,"yOff","","",164,null],[3,"_XGlyphElt32","","",null,null],[12,"glyphset","","",165,null],[12,"chars","","",165,null],[12,"nchars","","",165,null],[12,"xOff","","",165,null],[12,"yOff","","",165,null],[3,"_XGlyphInfo","","",null,null],[12,"width","","",166,null],[12,"height","","",166,null],[12,"x","","",166,null],[12,"y","","",166,null],[12,"xOff","","",166,null],[12,"yOff","","",166,null],[3,"_XIndexValue","","",null,null],[12,"pixel","","",167,null],[12,"red","","",167,null],[12,"green","","",167,null],[12,"blue","","",167,null],[12,"alpha","","",167,null],[3,"_XLinearGradient","","",null,null],[12,"p1","","",168,null],[12,"p2","","",168,null],[3,"_XLineFixed","","",null,null],[12,"p1","","",169,null],[12,"p2","","",169,null],[3,"_XPointDouble","","",null,null],[12,"x","","",170,null],[12,"y","","",170,null],[3,"_XPointFixed","","",null,null],[12,"x","","",171,null],[12,"y","","",171,null],[3,"_XRadialGradient","","",null,null],[12,"inner","","",172,null],[12,"outer","","",172,null],[3,"XRenderColor","","",null,null],[12,"red","","",173,null],[12,"green","","",173,null],[12,"blue","","",173,null],[12,"alpha","","",173,null],[3,"XRenderDirectFormat","","",null,null],[12,"red","","",174,null],[12,"redMask","","",174,null],[12,"green","","",174,null],[12,"greenMask","","",174,null],[12,"blue","","",174,null],[12,"blueMask","","",174,null],[12,"alpha","","",174,null],[12,"alphaMask","","",174,null],[3,"XRenderPictFormat","","",null,null],[12,"id","","",175,null],[12,"type_","","",175,null],[12,"depth","","",175,null],[12,"direct","","",175,null],[12,"colormap","","",175,null],[3,"_XRenderPictureAttributes","","",null,null],[12,"repeat","","",176,null],[12,"alpha_map","","",176,null],[12,"alpha_x_origin","","",176,null],[12,"alpha_y_origin","","",176,null],[12,"clip_x_origin","","",176,null],[12,"clip_y_origin","","",176,null],[12,"clip_mask","","",176,null],[12,"graphics_exposures","","",176,null],[12,"subwindow_mode","","",176,null],[12,"poly_edge","","",176,null],[12,"poly_mode","","",176,null],[12,"dither","","",176,null],[12,"component_alpha","","",176,null],[3,"_XSpanFix","","",null,null],[12,"left","","",177,null],[12,"right","","",177,null],[12,"y","","",177,null],[3,"_XTrap","","",null,null],[12,"top","","",178,null],[12,"bottom","","",178,null],[3,"_XTrapezoid","","",null,null],[12,"top","","",179,null],[12,"bottom","","",179,null],[12,"left","","",179,null],[12,"right","","",179,null],[3,"_XTriangle","","",null,null],[12,"p1","","",180,null],[12,"p2","","",180,null],[12,"p3","","",180,null],[3,"_XTransform","","",null,null],[12,"matrix","","",181,null],[6,"Glyph","","",null,null],[6,"GlyphSet","","",null,null],[6,"PictFormat","","",null,null],[6,"Picture","","",null,null],[6,"XDouble","","",null,null],[6,"XFixed","","",null,null],[6,"XAnimCursor","","",null,null],[6,"XCircle","","",null,null],[6,"XConicalGradient","","",null,null],[6,"XFilters","","",null,null],[6,"XGlyphElt8","","",null,null],[6,"XGlyphElt16","","",null,null],[6,"XGlyphElt32","","",null,null],[6,"XGlyphInfo","","",null,null],[6,"XIndexValue","","",null,null],[6,"XLinearGradient","","",null,null],[6,"XLineFixed","","",null,null],[6,"XPointDouble","","",null,null],[6,"XPointFixed","","",null,null],[6,"XRadialGradient","","",null,null],[6,"XRenderPictureAttributes","","",null,null],[6,"XSpanFix","","",null,null],[6,"XTrap","","",null,null],[6,"XTrapezoid","","",null,null],[6,"XTriangle","","",null,null],[6,"XTransform","","",null,null],[11,"open","","",158,{"inputs":[{"name":"xrender"}],"output":{"name":"result"}}],[11,"clone","","",159,{"inputs":[{"name":"_xanimcursor"}],"output":{"name":"_xanimcursor"}}],[11,"clone","","",160,{"inputs":[{"name":"_xcircle"}],"output":{"name":"_xcircle"}}],[11,"clone","","",161,{"inputs":[{"name":"_xconicalgradient"}],"output":{"name":"_xconicalgradient"}}],[11,"clone","","",162,{"inputs":[{"name":"_xfilters"}],"output":{"name":"_xfilters"}}],[11,"clone","","",163,{"inputs":[{"name":"_xglyphelt8"}],"output":{"name":"_xglyphelt8"}}],[11,"clone","","",164,{"inputs":[{"name":"_xglyphelt16"}],"output":{"name":"_xglyphelt16"}}],[11,"clone","","",165,{"inputs":[{"name":"_xglyphelt32"}],"output":{"name":"_xglyphelt32"}}],[11,"clone","","",166,{"inputs":[{"name":"_xglyphinfo"}],"output":{"name":"_xglyphinfo"}}],[11,"clone","","",167,{"inputs":[{"name":"_xindexvalue"}],"output":{"name":"_xindexvalue"}}],[11,"clone","","",168,{"inputs":[{"name":"_xlineargradient"}],"output":{"name":"_xlineargradient"}}],[11,"clone","","",169,{"inputs":[{"name":"_xlinefixed"}],"output":{"name":"_xlinefixed"}}],[11,"clone","","",170,{"inputs":[{"name":"_xpointdouble"}],"output":{"name":"_xpointdouble"}}],[11,"clone","","",171,{"inputs":[{"name":"_xpointfixed"}],"output":{"name":"_xpointfixed"}}],[11,"clone","","",172,{"inputs":[{"name":"_xradialgradient"}],"output":{"name":"_xradialgradient"}}],[11,"clone","","",173,{"inputs":[{"name":"xrendercolor"}],"output":{"name":"xrendercolor"}}],[11,"clone","","",174,{"inputs":[{"name":"xrenderdirectformat"}],"output":{"name":"xrenderdirectformat"}}],[11,"clone","","",175,{"inputs":[{"name":"xrenderpictformat"}],"output":{"name":"xrenderpictformat"}}],[11,"clone","","",176,{"inputs":[{"name":"_xrenderpictureattributes"}],"output":{"name":"_xrenderpictureattributes"}}],[11,"clone","","",177,{"inputs":[{"name":"_xspanfix"}],"output":{"name":"_xspanfix"}}],[11,"clone","","",178,{"inputs":[{"name":"_xtrap"}],"output":{"name":"_xtrap"}}],[11,"clone","","",179,{"inputs":[{"name":"_xtrapezoid"}],"output":{"name":"_xtrapezoid"}}],[11,"clone","","",180,{"inputs":[{"name":"_xtriangle"}],"output":{"name":"_xtriangle"}}],[11,"clone","","",181,{"inputs":[{"name":"_xtransform"}],"output":{"name":"_xtransform"}}],[0,"xt","x11_dl","",null,null],[3,"Xt","x11_dl::xt","",null,null],[12,"XtAddActions","","",182,null],[12,"XtAddCallback","","",182,null],[12,"XtAddCallbacks","","",182,null],[12,"XtAddConverter","","",182,null],[12,"XtAddEventHandler","","",182,null],[12,"XtAddExposureToRegion","","",182,null],[12,"XtAddGrab","","",182,null],[12,"XtAddInput","","",182,null],[12,"XtAddRawEventHandler","","",182,null],[12,"XtAddSignal","","",182,null],[12,"XtAddTimeOut","","",182,null],[12,"XtAddWorkProc","","",182,null],[12,"XtAllocateGC","","",182,null],[12,"XtAppAddActionHook","","",182,null],[12,"XtAppAddActions","","",182,null],[12,"XtAppAddBlockHook","","",182,null],[12,"XtAppAddConverter","","",182,null],[12,"XtAppAddInput","","",182,null],[12,"XtAppAddSignal","","",182,null],[12,"XtAppAddTimeOut","","",182,null],[12,"XtAppAddWorkProc","","",182,null],[12,"XtAppCreateShell","","",182,null],[12,"XtAppError","","",182,null],[12,"XtAppErrorMsg","","",182,null],[12,"XtAppGetErrorDatabase","","",182,null],[12,"XtAppGetErrorDatabaseText","","",182,null],[12,"XtAppGetExitFlag","","",182,null],[12,"XtAppGetSelectionTimeout","","",182,null],[12,"XtAppInitialize","","",182,null],[12,"XtAppLock","","",182,null],[12,"XtAppMainLoop","","",182,null],[12,"XtAppNextEvent","","",182,null],[12,"XtAppPeekEvent","","",182,null],[12,"XtAppPending","","",182,null],[12,"XtAppProcessEvent","","",182,null],[12,"XtAppReleaseCacheRefs","","",182,null],[12,"XtAppSetErrorHandler","","",182,null],[12,"XtAppSetErrorMsgHandler","","",182,null],[12,"XtAppSetExitFlag","","",182,null],[12,"XtAppSetFallbackResources","","",182,null],[12,"XtAppSetSelectionTimeout","","",182,null],[12,"XtAppSetTypeConverter","","",182,null],[12,"XtAppSetWarningHandler","","",182,null],[12,"XtAppSetWarningMsgHandler","","",182,null],[12,"XtAppUnlock","","",182,null],[12,"XtAppWarning","","",182,null],[12,"XtAppWarningMsg","","",182,null],[12,"XtAugmentTranslations","","",182,null],[12,"XtBuildEventMask","","",182,null],[12,"XtCallAcceptFocus","","",182,null],[12,"XtCallActionProc","","",182,null],[12,"XtCallbackExclusive","","",182,null],[12,"XtCallbackNone","","",182,null],[12,"XtCallbackNonexclusive","","",182,null],[12,"XtCallbackPopdown","","",182,null],[12,"XtCallbackReleaseCacheRef","","",182,null],[12,"XtCallbackReleaseCacheRefList","","",182,null],[12,"XtCallCallbackList","","",182,null],[12,"XtCallCallbacks","","",182,null],[12,"XtCallConverter","","",182,null],[12,"XtCalloc","","",182,null],[12,"XtCancelSelectionRequest","","",182,null],[12,"XtChangeManagedSet","","",182,null],[12,"XtClass","","",182,null],[12,"XtCloseDisplay","","",182,null],[12,"XtConfigureWidget","","",182,null],[12,"XtConvert","","",182,null],[12,"XtConvertAndStore","","",182,null],[12,"XtConvertCase","","",182,null],[12,"XtCreateApplicationContext","","",182,null],[12,"XtCreateApplicationShell","","",182,null],[12,"XtCreateManagedWidget","","",182,null],[12,"XtCreatePopupShell","","",182,null],[12,"XtCreateSelectionRequest","","",182,null],[12,"XtCreateWidget","","",182,null],[12,"XtCreateWindow","","",182,null],[12,"XtCvtColorToPixel","","",182,null],[12,"XtCvtIntToBool","","",182,null],[12,"XtCvtIntToBoolean","","",182,null],[12,"XtCvtIntToColor","","",182,null],[12,"XtCvtIntToFloat","","",182,null],[12,"XtCvtIntToFont","","",182,null],[12,"XtCvtIntToPixel","","",182,null],[12,"XtCvtIntToPixmap","","",182,null],[12,"XtCvtIntToShort","","",182,null],[12,"XtCvtIntToUnsignedChar","","",182,null],[12,"XtCvtStringToAcceleratorTable","","",182,null],[12,"XtCvtStringToAtom","","",182,null],[12,"XtCvtStringToBool","","",182,null],[12,"XtCvtStringToBoolean","","",182,null],[12,"XtCvtStringToCommandArgArray","","",182,null],[12,"XtCvtStringToCursor","","",182,null],[12,"XtCvtStringToDimension","","",182,null],[12,"XtCvtStringToDirectoryString","","",182,null],[12,"XtCvtStringToDisplay","","",182,null],[12,"XtCvtStringToFile","","",182,null],[12,"XtCvtStringToFloat","","",182,null],[12,"XtCvtStringToFont","","",182,null],[12,"XtCvtStringToFontSet","","",182,null],[12,"XtCvtStringToFontStruct","","",182,null],[12,"XtCvtStringToGravity","","",182,null],[12,"XtCvtStringToInitialState","","",182,null],[12,"XtCvtStringToInt","","",182,null],[12,"XtCvtStringToPixel","","",182,null],[12,"XtCvtStringToRestartStyle","","",182,null],[12,"XtCvtStringToShort","","",182,null],[12,"XtCvtStringToTranslationTable","","",182,null],[12,"XtCvtStringToUnsignedChar","","",182,null],[12,"XtCvtStringToVisual","","",182,null],[12,"XtDatabase","","",182,null],[12,"XtDestroyApplicationContext","","",182,null],[12,"XtDestroyGC","","",182,null],[12,"XtDestroyWidget","","",182,null],[12,"XtDirectConvert","","",182,null],[12,"XtDisownSelection","","",182,null],[12,"XtDispatchEvent","","",182,null],[12,"XtDispatchEventToWidget","","",182,null],[12,"XtDisplay","","",182,null],[12,"XtDisplayInitialize","","",182,null],[12,"XtDisplayOfObject","","",182,null],[12,"XtDisplayStringConversionWarning","","",182,null],[12,"XtDisplayToApplicationContext","","",182,null],[12,"XtError","","",182,null],[12,"XtErrorMsg","","",182,null],[12,"XtFindFile","","",182,null],[12,"XtFree","","",182,null],[12,"XtGetActionKeysym","","",182,null],[12,"XtGetActionList","","",182,null],[12,"XtGetApplicationNameAndClass","","",182,null],[12,"XtGetApplicationResources","","",182,null],[12,"XtGetClassExtension","","",182,null],[12,"XtGetConstraintResourceList","","",182,null],[12,"XtGetDisplays","","",182,null],[12,"XtGetErrorDatabase","","",182,null],[12,"XtGetErrorDatabaseText","","",182,null],[12,"XtGetGC","","",182,null],[12,"XtGetKeyboardFocusWidget","","",182,null],[12,"XtGetKeysymTable","","",182,null],[12,"XtGetMultiClickTime","","",182,null],[12,"XtGetResourceList","","",182,null],[12,"XtGetSelectionParameters","","",182,null],[12,"XtGetSelectionRequest","","",182,null],[12,"XtGetSelectionTimeout","","",182,null],[12,"XtGetSelectionValue","","",182,null],[12,"XtGetSelectionValueIncremental","","",182,null],[12,"XtGetSelectionValues","","",182,null],[12,"XtGetSelectionValuesIncremental","","",182,null],[12,"XtGetSubresources","","",182,null],[12,"XtGetSubvalues","","",182,null],[12,"XtGetValues","","",182,null],[12,"XtGrabButton","","",182,null],[12,"XtGrabKey","","",182,null],[12,"XtGrabKeyboard","","",182,null],[12,"XtGrabPointer","","",182,null],[12,"XtHasCallbacks","","",182,null],[12,"XtHooksOfDisplay","","",182,null],[12,"XtInitialize","","",182,null],[12,"XtInitializeWidgetClass","","",182,null],[12,"XtInsertEventHandler","","",182,null],[12,"XtInsertEventTypeHandler","","",182,null],[12,"XtInsertRawEventHandler","","",182,null],[12,"XtInstallAccelerators","","",182,null],[12,"XtInstallAllAccelerators","","",182,null],[12,"XtIsApplicationShell","","",182,null],[12,"XtIsComposite","","",182,null],[12,"XtIsConstraint","","",182,null],[12,"XtIsManaged","","",182,null],[12,"XtIsObject","","",182,null],[12,"XtIsOverrideShell","","",182,null],[12,"XtIsRealized","","",182,null],[12,"XtIsRectObj","","",182,null],[12,"XtIsSensitive","","",182,null],[12,"XtIsSessionShell","","",182,null],[12,"XtIsShell","","",182,null],[12,"XtIsSubclass","","",182,null],[12,"XtIsTopLevelShell","","",182,null],[12,"XtIsTransientShell","","",182,null],[12,"XtIsVendorShell","","",182,null],[12,"XtIsWidget","","",182,null],[12,"XtIsWMShell","","",182,null],[12,"XtKeysymToKeycodeList","","",182,null],[12,"XtLastEventProcessed","","",182,null],[12,"XtLastTimestampProcessed","","",182,null],[12,"XtMainLoop","","",182,null],[12,"XtMakeGeometryRequest","","",182,null],[12,"XtMakeResizeRequest","","",182,null],[12,"XtMalloc","","",182,null],[12,"XtManageChild","","",182,null],[12,"XtManageChildren","","",182,null],[12,"XtMapWidget","","",182,null],[12,"XtMenuPopupAction","","",182,null],[12,"XtMergeArgLists","","",182,null],[12,"XtMoveWidget","","",182,null],[12,"XtName","","",182,null],[12,"XtNameToWidget","","",182,null],[12,"XtNewString","","",182,null],[12,"XtNextEvent","","",182,null],[12,"XtNoticeSignal","","",182,null],[12,"XtOpenApplication","","",182,null],[12,"XtOpenDisplay","","",182,null],[12,"XtOverrideTranslations","","",182,null],[12,"XtOwnSelection","","",182,null],[12,"XtOwnSelectionIncremental","","",182,null],[12,"XtParent","","",182,null],[12,"XtParseAcceleratorTable","","",182,null],[12,"XtParseTranslationTable","","",182,null],[12,"XtPeekEvent","","",182,null],[12,"XtPending","","",182,null],[12,"XtPopdown","","",182,null],[12,"XtPopup","","",182,null],[12,"XtPopupSpringLoaded","","",182,null],[12,"XtProcessEvent","","",182,null],[12,"XtProcessLock","","",182,null],[12,"XtProcessUnlock","","",182,null],[12,"XtQueryGeometry","","",182,null],[12,"XtRealizeWidget","","",182,null],[12,"XtRealloc","","",182,null],[12,"XtRegisterCaseConverter","","",182,null],[12,"XtRegisterDrawable","","",182,null],[12,"XtRegisterExtensionSelector","","",182,null],[12,"XtRegisterGrabAction","","",182,null],[12,"XtReleaseGC","","",182,null],[12,"XtReleasePropertyAtom","","",182,null],[12,"XtRemoveActionHook","","",182,null],[12,"XtRemoveAllCallbacks","","",182,null],[12,"XtRemoveBlockHook","","",182,null],[12,"XtRemoveCallback","","",182,null],[12,"XtRemoveCallbacks","","",182,null],[12,"XtRemoveEventHandler","","",182,null],[12,"XtRemoveEventTypeHandler","","",182,null],[12,"XtRemoveGrab","","",182,null],[12,"XtRemoveInput","","",182,null],[12,"XtRemoveRawEventHandler","","",182,null],[12,"XtRemoveSignal","","",182,null],[12,"XtRemoveTimeOut","","",182,null],[12,"XtRemoveWorkProc","","",182,null],[12,"XtReservePropertyAtom","","",182,null],[12,"XtResizeWidget","","",182,null],[12,"XtResizeWindow","","",182,null],[12,"XtResolvePathname","","",182,null],[12,"XtScreen","","",182,null],[12,"XtScreenDatabase","","",182,null],[12,"XtScreenOfObject","","",182,null],[12,"XtSendSelectionRequest","","",182,null],[12,"XtSessionGetToken","","",182,null],[12,"XtSessionReturnToken","","",182,null],[12,"XtSetErrorHandler","","",182,null],[12,"XtSetErrorMsgHandler","","",182,null],[12,"XtSetEventDispatcher","","",182,null],[12,"XtSetKeyboardFocus","","",182,null],[12,"XtSetKeyTranslator","","",182,null],[12,"XtSetLanguageProc","","",182,null],[12,"XtSetMappedWhenManaged","","",182,null],[12,"XtSetMultiClickTime","","",182,null],[12,"XtSetSelectionParameters","","",182,null],[12,"XtSetSelectionTimeout","","",182,null],[12,"XtSetSensitive","","",182,null],[12,"XtSetSubvalues","","",182,null],[12,"XtSetTypeConverter","","",182,null],[12,"XtSetValues","","",182,null],[12,"XtSetWarningHandler","","",182,null],[12,"XtSetWarningMsgHandler","","",182,null],[12,"XtSetWMColormapWindows","","",182,null],[12,"XtStringConversionWarning","","",182,null],[12,"XtSuperclass","","",182,null],[12,"XtToolkitInitialize","","",182,null],[12,"XtToolkitThreadInitialize","","",182,null],[12,"XtTranslateCoords","","",182,null],[12,"XtTranslateKey","","",182,null],[12,"XtTranslateKeycode","","",182,null],[12,"XtUngrabButton","","",182,null],[12,"XtUngrabKey","","",182,null],[12,"XtUngrabKeyboard","","",182,null],[12,"XtUngrabPointer","","",182,null],[12,"XtUninstallTranslations","","",182,null],[12,"XtUnmanageChild","","",182,null],[12,"XtUnmanageChildren","","",182,null],[12,"XtUnmapWidget","","",182,null],[12,"XtUnrealizeWidget","","",182,null],[12,"XtUnregisterDrawable","","",182,null],[12,"XtWarning","","",182,null],[12,"XtWarningMsg","","",182,null],[12,"XtWidgetToApplicationContext","","",182,null],[12,"XtWindow","","",182,null],[12,"XtWindowOfObject","","",182,null],[12,"XtWindowToWidget","","",182,null],[12,"XtAsprintf","","",182,null],[12,"XtVaAppCreateShell","","",182,null],[12,"XtVaAppInitialize","","",182,null],[12,"XtVaCreateArgsList","","",182,null],[12,"XtVaCreateManagedWidget","","",182,null],[12,"XtVaCreatePopupShell","","",182,null],[12,"XtVaCreateWidget","","",182,null],[12,"XtVaGetApplicationResources","","",182,null],[12,"XtVaGetSubresources","","",182,null],[12,"XtVaGetSubvalues","","",182,null],[12,"XtVaGetValues","","",182,null],[12,"XtVaOpenApplication","","",182,null],[12,"XtVaSetSubvalues","","",182,null],[12,"XtVaSetValues","","",182,null],[3,"Arg","","",null,null],[3,"SubstitutionRec","","",null,null],[3,"_TranslationData","","",null,null],[3,"_WidgetClassRec","","",null,null],[3,"_WidgetRec","","",null,null],[3,"_XtActionsRec","","",null,null],[3,"_XtAppStruct","","",null,null],[3,"_XtCallbackRec","","",null,null],[3,"_XtCheckpointTokenRec","","",null,null],[3,"XtConvertArgRec","","",null,null],[3,"_XtResource","","",null,null],[3,"XtWidgetGeometry","","",null,null],[6,"XtCallbackStatus","","",null,null],[6,"XtGeometryResult","","",null,null],[6,"XtGrabKind","","",null,null],[6,"XtListPosition","","",null,null],[6,"ArgList","","",null,null],[6,"Substitution","","",null,null],[6,"Widget","","",null,null],[6,"WidgetClass","","",null,null],[6,"XtAccelerators","","",null,null],[6,"XtActionList","","",null,null],[6,"XtActionsRec","","",null,null],[6,"XtAppContext","","",null,null],[6,"XtCallbackList","","",null,null],[6,"XtCallbackRec","","",null,null],[6,"XtCheckpointToken","","",null,null],[6,"XtCheckpointTokenRec","","",null,null],[6,"XtConvertArgList","","",null,null],[6,"XtResource","","",null,null],[6,"XtResourceList","","",null,null],[6,"XtTranslations","","",null,null],[11,"open","","",182,{"inputs":[{"name":"xt"}],"output":{"name":"result"}}],[0,"xtest","x11_dl","",null,null],[3,"Xf86vmode","x11_dl::xtest","",null,null],[12,"XTestCompareCurrentCursorWithWindow","","",183,null],[12,"XTestCompareCursorWithWindow","","",183,null],[12,"XTestDiscard","","",183,null],[12,"XTestFakeButtonEvent","","",183,null],[12,"XTestFakeDeviceButtonEvent","","",183,null],[12,"XTestFakeDeviceKeyEvent","","",183,null],[12,"XTestFakeDeviceMotionEvent","","",183,null],[12,"XTestFakeKeyEvent","","",183,null],[12,"XTestFakeMotionEvent","","",183,null],[12,"XTestFakeProximityEvent","","",183,null],[12,"XTestFakeRelativeMotionEvent","","",183,null],[12,"XTestGrabControl","","",183,null],[12,"XTestQueryExtension","","",183,null],[12,"XTestSetGContextOfGC","","",183,null],[12,"XTestSetVisualIDOfVisual","","",183,null],[11,"open","","",183,{"inputs":[{"name":"xf86vmode"}],"output":{"name":"result"}}]],"paths":[[4,"OpenErrorKind"],[3,"OpenError"],[3,"Glx"],[3,"Xcursor"],[3,"_XcursorAnimate"],[3,"_XcursorChunkHeader"],[3,"_XcursorComment"],[3,"_XcursorComments"],[3,"_XcursorCursors"],[3,"_XcursorFile"],[3,"_XcursorFileHeader"],[3,"_XcursorFileToc"],[3,"_XcursorImage"],[3,"_XcursorImages"],[3,"Xf86vmode"],[3,"XF86VidModeGamma"],[3,"XF86VidModeModeInfo"],[3,"XF86VidModeModeLine"],[3,"XF86VidModeMonitor"],[3,"XF86VidModeNotifyEvent"],[3,"XF86VidModeSyncRange"],[3,"Xlib"],[3,"XineramaScreenInfo"],[3,"XPanoramiXInfo"],[3,"XInput"],[3,"XDevice"],[3,"XDeviceControl"],[3,"XDeviceInfo"],[3,"XDeviceState"],[3,"XDeviceTimeCoord"],[3,"XExtensionVersion"],[3,"XFeedbackControl"],[3,"XFeedbackState"],[3,"XInputClass"],[3,"XInputClassInfo"],[3,"XInput2"],[3,"Struct_Unnamed1"],[3,"Struct_Unnamed2"],[3,"Struct_Unnamed3"],[3,"Struct_Unnamed4"],[3,"Union_Unnamed5"],[3,"Struct_Unnamed6"],[3,"Struct_Unnamed7"],[3,"Struct_Unnamed8"],[3,"Struct_Unnamed9"],[3,"Struct_Unnamed10"],[3,"Struct_Unnamed11"],[3,"Struct_Unnamed12"],[3,"Struct_Unnamed13"],[3,"Struct_Unnamed14"],[3,"Struct_Unnamed15"],[3,"Struct_Unnamed16"],[3,"Struct_Unnamed17"],[3,"Struct_Unnamed18"],[3,"Struct_Unnamed19"],[3,"Struct_Unnamed20"],[3,"Struct_Unnamed21"],[3,"Struct_Unnamed22"],[3,"Struct_Unnamed23"],[3,"Struct_Unnamed24"],[3,"Struct_Unnamed25"],[3,"Struct_Unnamed26"],[3,"Struct_Unnamed27"],[3,"Struct_Unnamed28"],[3,"Xlib"],[3,"XEvent"],[3,"XAnyEvent"],[3,"XButtonEvent"],[3,"XCirculateEvent"],[3,"XCirculateRequestEvent"],[3,"XClientMessageEvent"],[3,"XColormapEvent"],[3,"XConfigureEvent"],[3,"XConfigureRequestEvent"],[3,"XCreateWindowEvent"],[3,"XCrossingEvent"],[3,"XDestroyWindowEvent"],[3,"XErrorEvent"],[3,"XExposeEvent"],[3,"XFocusChangeEvent"],[3,"XGraphicsExposeEvent"],[3,"XGravityEvent"],[3,"XKeyEvent"],[3,"XKeymapEvent"],[3,"XMapEvent"],[3,"XMappingEvent"],[3,"XMapRequestEvent"],[3,"XMotionEvent"],[3,"XNoExposeEvent"],[3,"XPropertyEvent"],[3,"XReparentEvent"],[3,"XResizeRequestEvent"],[3,"XSelectionClearEvent"],[3,"XSelectionEvent"],[3,"XSelectionRequestEvent"],[3,"XUnmapEvent"],[3,"XVisibilityEvent"],[3,"_XkbCompatMapRec"],[3,"_XkbDesc"],[3,"_XkbIndicatorRec"],[3,"_XkbKeyAliasRec"],[3,"_XkbKeyNameRec"],[3,"_XkbNamesRec"],[3,"Depth"],[3,"Screen"],[3,"ScreenFormat"],[3,"Visual"],[3,"XArc"],[3,"XChar2b"],[3,"XCharStruct"],[3,"XClassHint"],[3,"XColor"],[3,"XComposeStatus"],[3,"XExtCodes"],[3,"XExtData"],[3,"XFontProp"],[3,"XFontSetExtents"],[3,"XFontStruct"],[3,"XGCValues"],[3,"XGenericEventCookie"],[3,"XHostAddress"],[3,"XIconSize"],[3,"XImage"],[3,"XKeyboardControl"],[3,"XKeyboardState"],[3,"XmbTextItem"],[3,"XModifierKeymap"],[3,"XOMCharSetList"],[3,"XPixmapFormatValues"],[3,"XPoint"],[3,"XRectangle"],[3,"XrmOptionDescRec"],[3,"XrmValue"],[3,"XSegment"],[3,"XSetWindowAttributes"],[3,"XSizeHints"],[3,"XStandardColormap"],[3,"XTextItem"],[3,"XTextItem16"],[3,"XTextProperty"],[3,"XTimeCoord"],[3,"XVisualInfo"],[3,"XwcTextItem"],[3,"XWindowAttributes"],[3,"XWindowChanges"],[3,"XWMHints"],[3,"AspectRatio"],[3,"ImageFns"],[3,"ClientMessageData"],[3,"Xmu"],[3,"Xf86vmode"],[3,"XRecordClientInfo"],[3,"XRecordExtRange"],[3,"XRecordInterceptData"],[3,"XRecordRange"],[3,"XRecordRange8"],[3,"XRecordRange16"],[3,"XRecordState"],[3,"Xrender"],[3,"_XAnimCursor"],[3,"_XCircle"],[3,"_XConicalGradient"],[3,"_XFilters"],[3,"_XGlyphElt8"],[3,"_XGlyphElt16"],[3,"_XGlyphElt32"],[3,"_XGlyphInfo"],[3,"_XIndexValue"],[3,"_XLinearGradient"],[3,"_XLineFixed"],[3,"_XPointDouble"],[3,"_XPointFixed"],[3,"_XRadialGradient"],[3,"XRenderColor"],[3,"XRenderDirectFormat"],[3,"XRenderPictFormat"],[3,"_XRenderPictureAttributes"],[3,"_XSpanFix"],[3,"_XTrap"],[3,"_XTrapezoid"],[3,"_XTriangle"],[3,"_XTransform"],[3,"Xt"],[3,"Xf86vmode"]]};
searchIndex['nalgebra'] = {"items":[[0,"","nalgebra","# nalgebra",null,null],[3,"Identity","","Special identity matrix. All its operation are no-ops.",null,null],[3,"DMat","","Matrix with dimensions unknown at compile-time.",null,null],[3,"DMat1","","",null,null],[3,"DMat2","","",null,null],[3,"DMat3","","",null,null],[3,"DMat4","","",null,null],[3,"DMat5","","",null,null],[3,"DMat6","","",null,null],[3,"DVec","","Heap allocated, dynamically sized vector.",null,null],[12,"at","","Components of the vector. Contains as much elements as the vector dimension.",0,null],[3,"DVec1","","Stack-allocated, dynamically sized vector with a maximum size of 1.",null,null],[3,"DVec2","","Stack-allocated, dynamically sized vector with a maximum size of 2.",null,null],[3,"DVec3","","Stack-allocated, dynamically sized vector with a maximum size of 3.",null,null],[3,"DVec4","","Stack-allocated, dynamically sized vector with a maximum size of 4.",null,null],[3,"DVec5","","Stack-allocated, dynamically sized vector with a maximum size of 5.",null,null],[3,"DVec6","","Stack-allocated, dynamically sized vector with a maximum size of 6.",null,null],[3,"Iso2","","Two dimensional isometry.",null,null],[12,"rotation","","The rotation applicable by this isometry.",1,null],[12,"translation","","The translation applicable by this isometry.",1,null],[3,"Iso3","","Three dimensional isometry.",null,null],[12,"rotation","","The rotation applicable by this isometry.",2,null],[12,"translation","","The translation applicable by this isometry.",2,null],[3,"Iso4","","Four dimensional isometry.",null,null],[12,"rotation","","The rotation applicable by this isometry.",3,null],[12,"translation","","The translation applicable by this isometry.",3,null],[3,"Mat1","","Square matrix of dimension 1.",null,null],[12,"m11","","",4,null],[3,"Mat2","","Square matrix of dimension 2.",null,null],[12,"m11","","",5,null],[12,"m21","","",5,null],[12,"m12","","",5,null],[12,"m22","","",5,null],[3,"Mat3","","Square matrix of dimension 3.",null,null],[12,"m11","","",6,null],[12,"m21","","",6,null],[12,"m31","","",6,null],[12,"m12","","",6,null],[12,"m22","","",6,null],[12,"m32","","",6,null],[12,"m13","","",6,null],[12,"m23","","",6,null],[12,"m33","","",6,null],[3,"Mat4","","Square matrix of dimension 4.",null,null],[12,"m11","","",7,null],[12,"m21","","",7,null],[12,"m31","","",7,null],[12,"m41","","",7,null],[12,"m12","","",7,null],[12,"m22","","",7,null],[12,"m32","","",7,null],[12,"m42","","",7,null],[12,"m13","","",7,null],[12,"m23","","",7,null],[12,"m33","","",7,null],[12,"m43","","",7,null],[12,"m14","","",7,null],[12,"m24","","",7,null],[12,"m34","","",7,null],[12,"m44","","",7,null],[3,"Mat5","","Square matrix of dimension 5.",null,null],[12,"m11","","",8,null],[12,"m21","","",8,null],[12,"m31","","",8,null],[12,"m41","","",8,null],[12,"m51","","",8,null],[12,"m12","","",8,null],[12,"m22","","",8,null],[12,"m32","","",8,null],[12,"m42","","",8,null],[12,"m52","","",8,null],[12,"m13","","",8,null],[12,"m23","","",8,null],[12,"m33","","",8,null],[12,"m43","","",8,null],[12,"m53","","",8,null],[12,"m14","","",8,null],[12,"m24","","",8,null],[12,"m34","","",8,null],[12,"m44","","",8,null],[12,"m54","","",8,null],[12,"m15","","",8,null],[12,"m25","","",8,null],[12,"m35","","",8,null],[12,"m45","","",8,null],[12,"m55","","",8,null],[3,"Mat6","","Square matrix of dimension 6.",null,null],[12,"m11","","",9,null],[12,"m21","","",9,null],[12,"m31","","",9,null],[12,"m41","","",9,null],[12,"m51","","",9,null],[12,"m61","","",9,null],[12,"m12","","",9,null],[12,"m22","","",9,null],[12,"m32","","",9,null],[12,"m42","","",9,null],[12,"m52","","",9,null],[12,"m62","","",9,null],[12,"m13","","",9,null],[12,"m23","","",9,null],[12,"m33","","",9,null],[12,"m43","","",9,null],[12,"m53","","",9,null],[12,"m63","","",9,null],[12,"m14","","",9,null],[12,"m24","","",9,null],[12,"m34","","",9,null],[12,"m44","","",9,null],[12,"m54","","",9,null],[12,"m64","","",9,null],[12,"m15","","",9,null],[12,"m25","","",9,null],[12,"m35","","",9,null],[12,"m45","","",9,null],[12,"m55","","",9,null],[12,"m65","","",9,null],[12,"m16","","",9,null],[12,"m26","","",9,null],[12,"m36","","",9,null],[12,"m46","","",9,null],[12,"m56","","",9,null],[12,"m66","","",9,null],[3,"Rot2","","Two dimensional rotation matrix.",null,null],[3,"Rot3","","Three dimensional rotation matrix.",null,null],[3,"Rot4","","Four dimensional rotation matrix.",null,null],[3,"Vec0","","Vector of dimension 0.",null,null],[3,"Vec1","","Vector of dimension 1.",null,null],[12,"x","","First component of the vector.",10,null],[3,"Vec2","","Vector of dimension 2.",null,null],[12,"x","","First component of the vector.",11,null],[12,"y","","Second component of the vector.",11,null],[3,"Vec3","","Vector of dimension 3.",null,null],[12,"x","","First component of the vector.",12,null],[12,"y","","Second component of the vector.",12,null],[12,"z","","Third component of the vector.",12,null],[3,"Vec4","","Vector of dimension 4.",null,null],[12,"x","","First component of the vector.",13,null],[12,"y","","Second component of the vector.",13,null],[12,"z","","Third component of the vector.",13,null],[12,"w","","Fourth component of the vector.",13,null],[3,"Vec5","","Vector of dimension 5.",null,null],[12,"x","","First component of the vector.",14,null],[12,"y","","Second component of the vector.",14,null],[12,"z","","Third component of the vector.",14,null],[12,"w","","Fourth component of the vector.",14,null],[12,"a","","Fifth of the vector.",14,null],[3,"Vec6","","Vector of dimension 6.",null,null],[12,"x","","First component of the vector.",15,null],[12,"y","","Second component of the vector.",15,null],[12,"z","","Third component of the vector.",15,null],[12,"w","","Fourth component of the vector.",15,null],[12,"a","","Fifth of the vector.",15,null],[12,"b","","Sixth component of the vector.",15,null],[3,"Pnt0","","Point of dimension 0.",null,null],[3,"Pnt1","","Point of dimension 1.",null,null],[12,"x","","First component of the point.",16,null],[3,"Pnt2","","Point of dimension 2.",null,null],[12,"x","","First component of the point.",17,null],[12,"y","","Second component of the point.",17,null],[3,"Pnt3","","Point of dimension 3.",null,null],[12,"x","","First component of the point.",18,null],[12,"y","","Second component of the point.",18,null],[12,"z","","Third component of the point.",18,null],[3,"Pnt4","","Point of dimension 4.",null,null],[12,"x","","First component of the point.",19,null],[12,"y","","Second component of the point.",19,null],[12,"z","","Third component of the point.",19,null],[12,"w","","Fourth component of the point.",19,null],[3,"Pnt5","","Point of dimension 5.",null,null],[12,"x","","First component of the point.",20,null],[12,"y","","Second component of the point.",20,null],[12,"z","","Third component of the point.",20,null],[12,"w","","Fourth component of the point.",20,null],[12,"a","","Fifth of the point.",20,null],[3,"Pnt6","","Point of dimension 6.",null,null],[12,"x","","First component of the point.",21,null],[12,"y","","Second component of the point.",21,null],[12,"z","","Third component of the point.",21,null],[12,"w","","Fourth component of the point.",21,null],[12,"a","","Fifth of the point.",21,null],[12,"b","","Sixth component of the point.",21,null],[3,"Persp3","","A 3D perspective projection stored without any matrix.",null,null],[3,"PerspMat3","","A 3D perspective projection stored as a 4D matrix.",null,null],[3,"Ortho3","","A 3D orthographic projection stored without any matrix.",null,null],[3,"OrthoMat3","","A 3D orthographic projection stored as a 4D matrix.",null,null],[3,"Quat","","A quaternion.",null,null],[12,"w","","The scalar component of the quaternion.",22,null],[12,"i","","The first vector component of the quaternion.",22,null],[12,"j","","The second vector component of the quaternion.",22,null],[12,"k","","The third vector component of the quaternion.",22,null],[3,"UnitQuat","","A unit quaternion that can represent a 3D rotation.",null,null],[4,"POrdering","","Result of a partial ordering.",null,null],[13,"PartialLess","","Result of a strict comparison.",23,null],[13,"PartialEqual","","Equality relationship.",23,null],[13,"PartialGreater","","Result of a strict comparison.",23,null],[13,"NotComparable","","Result of a comparison between two objects that are not comparable.",23,null],[5,"qr","","QR decomposition using Householder reflections.",null,null],[5,"householder_matrix","","Get the householder matrix corresponding to a reflexion to the hyperplane\ndefined by `vec`. It can be a reflexion contained in a subspace.",null,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"v"}],"output":{"name":"m"}}],[5,"cholesky","","Cholesky decomposition G of a square symmetric positive definite matrix A, such that A = G * G^T",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"hessenberg","","Hessenberg\nReturns the matrix m in Hessenberg form and the corresponding similarity transformation",null,null],[5,"clamp","","Change the input value to ensure it is on the range `[min, max]`.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"max","","Same as `cmp::max`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"min","","Same as `cmp::min`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"inf","","Returns the infimum of `a` and `b`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"sup","","Returns the supremum of `a` and `b`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"partial_cmp","","Compare `a` and `b` using a partial ordering relation.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"pordering"}}],[5,"partial_lt","","Returns `true` iff `a` and `b` are comparable and `a < b`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"bool"}}],[5,"partial_le","","Returns `true` iff `a` and `b` are comparable and `a <= b`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"bool"}}],[5,"partial_gt","","Returns `true` iff `a` and `b` are comparable and `a > b`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"bool"}}],[5,"partial_ge","","Returns `true` iff `a` and `b` are comparable and `a >= b`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"bool"}}],[5,"partial_min","","Return the minimum of `a` and `b` if they are comparable.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"option"}}],[5,"partial_max","","Return the maximum of `a` and `b` if they are comparable.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"option"}}],[5,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n`min` or `max`.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"option"}}],[5,"identity","","Create a special identity object.",null,{"inputs":[],"output":{"name":"identity"}}],[5,"zero","","Create a zero-valued value.",null,{"inputs":[],"output":{"name":"t"}}],[5,"is_zero","","Tests is a value is iqual to zero.",null,{"inputs":[{"name":"t"}],"output":{"name":"bool"}}],[5,"one","","Create a one-valued value.",null,{"inputs":[],"output":{"name":"t"}}],[5,"orig","","Returns the trivial origin of an affine space.",null,{"inputs":[],"output":{"name":"p"}}],[5,"center","","Returns the center of two points.",null,{"inputs":[{"name":"p"},{"name":"p"}],"output":{"name":"p"}}],[5,"dist","","Returns the distance between two points.",null,{"inputs":[{"name":"p"},{"name":"p"}],"output":{"name":"n"}}],[5,"sqdist","","Returns the squared distance between two points.",null,{"inputs":[{"name":"p"},{"name":"p"}],"output":{"name":"n"}}],[5,"translation","","Gets the translation applicable by `m`.",null,{"inputs":[{"name":"m"}],"output":{"name":"v"}}],[5,"inv_translation","","Gets the inverse translation applicable by `m`.",null,{"inputs":[{"name":"m"}],"output":{"name":"v"}}],[5,"append_translation","","Applies the translation `v` to a copy of `m`.",null,{"inputs":[{"name":"m"},{"name":"v"}],"output":{"name":"m"}}],[5,"translate","","Applies a translation to a point.",null,{"inputs":[{"name":"m"},{"name":"p"}],"output":{"name":"p"}}],[5,"inv_translate","","Applies an inverse translation to a point.",null,{"inputs":[{"name":"m"},{"name":"p"}],"output":{"name":"p"}}],[5,"rotation","","Gets the rotation applicable by `m`.",null,{"inputs":[{"name":"m"}],"output":{"name":"v"}}],[5,"inv_rotation","","Gets the inverse rotation applicable by `m`.",null,{"inputs":[{"name":"m"}],"output":{"name":"v"}}],[5,"append_rotation","","Applies the rotation `v` to a copy of `m`.",null,{"inputs":[{"name":"m"},{"name":"v"}],"output":{"name":"m"}}],[5,"prepend_rotation","","Pre-applies the rotation `v` to a copy of `m`.",null,{"inputs":[{"name":"m"},{"name":"v"}],"output":{"name":"m"}}],[5,"rotate","","Applies a rotation to a vector.",null,{"inputs":[{"name":"m"},{"name":"v"}],"output":{"name":"v"}}],[5,"inv_rotate","","Applies an inverse rotation to a vector.",null,{"inputs":[{"name":"m"},{"name":"v"}],"output":{"name":"v"}}],[5,"append_rotation_wrt_point","","Rotates a copy of `m` by `amount` using `center` as the pivot point.",null,{"inputs":[{"name":"m"},{"name":"av"},{"name":"lv"}],"output":{"name":"m"}}],[5,"append_rotation_wrt_center","","Rotates a copy of `m` by `amount` using `m.translation()` as the pivot point.",null,{"inputs":[{"name":"m"},{"name":"av"}],"output":{"name":"m"}}],[5,"angle_between","","Computes the angle of the rotation needed to transfom `a` to `b`.",null,{"inputs":[{"name":"v"},{"name":"v"}],"output":{"name":"angletype"}}],[5,"rotation_between","","Computes the rotation needed to transform `a` to `b`.",null,{"inputs":[{"name":"v"},{"name":"v"}],"output":{"name":"deltarotationtype"}}],[5,"to_rot_mat","","Builds a rotation matrix from `r`.",null,{"inputs":[{"name":"r"}],"output":{"name":"m"}}],[5,"absolute_rotate","","Applies a rotation using the absolute values of its components.",null,{"inputs":[{"name":"m"},{"name":"v"}],"output":{"name":"v"}}],[5,"transformation","","Gets the transformation applicable by `m`.",null,{"inputs":[{"name":"m"}],"output":{"name":"t"}}],[5,"inv_transformation","","Gets the inverse transformation applicable by `m`.",null,{"inputs":[{"name":"m"}],"output":{"name":"t"}}],[5,"append_transformation","","Gets a transformed copy of `m`.",null,{"inputs":[{"name":"m"},{"name":"t"}],"output":{"name":"m"}}],[5,"transform","","Applies a transformation to a vector.",null,{"inputs":[{"name":"m"},{"name":"v"}],"output":{"name":"v"}}],[5,"inv_transform","","Applies an inverse transformation to a vector.",null,{"inputs":[{"name":"m"},{"name":"v"}],"output":{"name":"v"}}],[5,"dot","","Computes the dot product of two vectors.",null,{"inputs":[{"name":"v"},{"name":"v"}],"output":{"name":"n"}}],[5,"norm","","Computes the L2 norm of a vector.",null,{"inputs":[{"name":"v"}],"output":{"name":"n"}}],[5,"sqnorm","","Computes the squared L2 norm of a vector.",null,{"inputs":[{"name":"v"}],"output":{"name":"n"}}],[5,"normalize","","Gets the normalized version of a vector.",null,{"inputs":[{"name":"v"}],"output":{"name":"v"}}],[5,"det","","Computes the determinant of a square matrix.",null,{"inputs":[{"name":"m"}],"output":{"name":"n"}}],[5,"cross","","Computes the cross product of two vectors.",null,{"inputs":[{"name":"lv"},{"name":"lv"}],"output":{"name":"crossproducttype"}}],[5,"cross_matrix","","Given a vector, computes the matrix which, when multiplied by another vector, computes a cross\nproduct.",null,{"inputs":[{"name":"v"}],"output":{"name":"m"}}],[5,"to_homogeneous","","Converts a matrix or vector to homogeneous coordinates.",null,{"inputs":[{"name":"m"}],"output":{"name":"res"}}],[5,"from_homogeneous","","Converts a matrix or vector from homogeneous coordinates.",null,{"inputs":[{"name":"m"}],"output":{"name":"res"}}],[5,"sample_sphere","","Samples the unit sphere living on the dimension as the samples types.",null,{"inputs":[{"name":"f"}],"output":null}],[5,"approx_eq","","Tests approximate equality.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"bool"}}],[5,"approx_eq_eps","","Tests approximate equality using a custom epsilon.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"n"}],"output":{"name":"bool"}}],[5,"abs","","Computes a component-wise absolute value.",null,{"inputs":[{"name":"m"}],"output":{"name":"res"}}],[5,"inv","","Gets an inverted copy of a matrix.",null,{"inputs":[{"name":"m"}],"output":{"name":"option"}}],[5,"transpose","","Gets a transposed copy of a matrix.",null,{"inputs":[{"name":"m"}],"output":{"name":"m"}}],[5,"outer","","Computes the outer product of two vectors.",null,{"inputs":[{"name":"v"},{"name":"v"}],"output":{"name":"outerproducttype"}}],[5,"cov","","Computes the covariance of a set of observations.",null,{"inputs":[{"name":"m"}],"output":{"name":"res"}}],[5,"mean","","Computes the mean of a set of observations.",null,{"inputs":[{"name":"m"}],"output":{"name":"n"}}],[5,"eigen_qr","","Computes the eigenvalues and eigenvectors of a square matrix usin the QR algorithm.",null,null],[5,"new_identity","","Construct the identity matrix for a given dimension",null,{"inputs":[{"name":"usize"}],"output":{"name":"m"}}],[5,"repeat","","Create an object by repeating a value.",null,{"inputs":[{"name":"n"}],"output":{"name":"t"}}],[5,"canonical_basis","","Computes the canonical basis for a given dimension.",null,{"inputs":[{"name":"f"}],"output":null}],[5,"orthonormal_subspace_basis","","Computes the basis of the orthonormal subspace of a given vector.",null,{"inputs":[{"name":"v"},{"name":"f"}],"output":null}],[5,"canonical_basis_element","","Gets the (0-based) i-th element of the canonical basis of V.",null,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[5,"diag","","Gets the diagonal of a square matrix.",null,{"inputs":[{"name":"m"}],"output":{"name":"v"}}],[5,"dim","","Gets the dimension an object lives in.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"shape","","Gets the indexable range of an object.",null,{"inputs":[{"name":"v"}],"output":{"name":"i"}}],[5,"cast","","Converts an object from one type to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"u"}}],[11,"clone","","",24,{"inputs":[{"name":"dmat"}],"output":{"name":"dmat"}}],[11,"eq","","",24,{"inputs":[{"name":"dmat"},{"name":"dmat"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"dmat"},{"name":"dmat"}],"output":{"name":"bool"}}],[11,"new_uninitialized","","Creates an uninitialized matrix.",24,{"inputs":[{"name":"dmat"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat"}}],[11,"from_elem","","Builds a matrix filled with a given constant.",24,{"inputs":[{"name":"dmat"},{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"name":"dmat"}}],[11,"from_row_vec","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in row-major order.\nNote that `from_col_vec` is much faster than `from_row_vec` since a `DMat` stores its data\nin column-major order.",24,null],[11,"from_col_vec","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in column-major order.\nNote that `from_col_vec` is much faster than `from_row_vec` since a `DMat` stores its data\nin column-major order.",24,null],[11,"from_row_iter","","Builds a matrix filled with the components provided by a source that may be moved into an iterator.\nThe source contains the matrix data in row-major order.\nNote that `from_col_iter` is much faster than `from_row_iter` since a `DMat` stores its data\nin column-major order.",24,{"inputs":[{"name":"dmat"},{"name":"usize"},{"name":"usize"},{"name":"i"}],"output":{"name":"dmat"}}],[11,"from_col_iter","","Builds a matrix filled with the components provided by a source that may be moved into an iterator.\nThe source contains the matrix data in column-major order.\nNote that `from_col_iter` is much faster than `from_row_iter` since a `DMat` stores its data\nin column-major order.",24,{"inputs":[{"name":"dmat"},{"name":"usize"},{"name":"usize"},{"name":"i"}],"output":{"name":"dmat"}}],[11,"from_fn","","Builds a matrix using an initialization function.",24,{"inputs":[{"name":"dmat"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"dmat"}}],[11,"into_vec","","Transforms this matrix into an array. This consumes the matrix and is O(1).\nThe returned vector contains the matrix data in column-major order.",24,{"inputs":[{"name":"dmat"}],"output":{"name":"vec"}}],[11,"new_zeros","","Builds a matrix filled with zeros.",24,{"inputs":[{"name":"dmat"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat"}}],[11,"is_zero","","Tests if all components of the matrix are zeroes.",24,{"inputs":[{"name":"dmat"}],"output":{"name":"bool"}}],[11,"reset","","",24,{"inputs":[{"name":"dmat"}],"output":null}],[11,"new_random","","Builds a matrix filled with random values.",24,{"inputs":[{"name":"dmat"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat"}}],[11,"new_ones","","Builds a matrix filled with a given constant.",24,{"inputs":[{"name":"dmat"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat"}}],[11,"nrows","","The number of row on the matrix.",24,{"inputs":[{"name":"dmat"}],"output":{"name":"usize"}}],[11,"ncols","","The number of columns on the matrix.",24,{"inputs":[{"name":"dmat"}],"output":{"name":"usize"}}],[11,"as_vec","","Gets a reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",24,null],[11,"as_mut_vec","","Gets a mutable reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",24,null],[11,"new_identity","","Builds an identity matrix.",24,{"inputs":[{"name":"dmat"},{"name":"usize"}],"output":{"name":"dmat"}}],[11,"unsafe_set","","Just like `set` without bounds checking.",24,null],[11,"unsafe_at","","Just like `at` without bounds checking.",24,null],[11,"swap","","",24,null],[11,"shape","","",24,null],[11,"index","","",24,null],[11,"index_mut","","",24,null],[11,"mul","","",24,{"inputs":[{"name":"dmat"},{"name":"dmat"}],"output":{"name":"dmat"}}],[11,"mul","","",24,{"inputs":[{"name":"dmat"},{"name":"dmat"}],"output":{"name":"dmat"}}],[11,"mul","","",24,{"inputs":[{"name":"dmat"},{"name":"dvec"}],"output":{"name":"dvec"}}],[11,"mul","","",0,{"inputs":[{"name":"dvec"},{"name":"dmat"}],"output":{"name":"dvec"}}],[11,"inv","","",24,{"inputs":[{"name":"dmat"}],"output":{"name":"option"}}],[11,"inv_mut","","",24,{"inputs":[{"name":"dmat"}],"output":{"name":"bool"}}],[11,"transpose","","",24,{"inputs":[{"name":"dmat"}],"output":{"name":"dmat"}}],[11,"transpose_mut","","",24,{"inputs":[{"name":"dmat"}],"output":null}],[11,"mean","","",24,{"inputs":[{"name":"dmat"}],"output":{"name":"dvec"}}],[11,"cov","","",24,{"inputs":[{"name":"dmat"}],"output":{"name":"dmat"}}],[11,"ncols","","",24,{"inputs":[{"name":"dmat"}],"output":{"name":"usize"}}],[11,"set_col","","",24,{"inputs":[{"name":"dmat"},{"name":"usize"},{"name":"dvec"}],"output":null}],[11,"col","","",24,{"inputs":[{"name":"dmat"},{"name":"usize"}],"output":{"name":"dvec"}}],[11,"col_slice","","",24,{"inputs":[{"name":"dmat"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec"}}],[11,"nrows","","",24,{"inputs":[{"name":"dmat"}],"output":{"name":"usize"}}],[11,"set_row","","",24,{"inputs":[{"name":"dmat"},{"name":"usize"},{"name":"dvec"}],"output":null}],[11,"row","","",24,{"inputs":[{"name":"dmat"},{"name":"usize"}],"output":{"name":"dvec"}}],[11,"row_slice","","",24,{"inputs":[{"name":"dmat"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec"}}],[11,"from_diag","","",24,{"inputs":[{"name":"dmat"},{"name":"dvec"}],"output":{"name":"dmat"}}],[11,"diag","","",24,{"inputs":[{"name":"dmat"}],"output":{"name":"dvec"}}],[11,"set_diag","","",24,{"inputs":[{"name":"dmat"},{"name":"dvec"}],"output":null}],[11,"approx_epsilon","","",24,{"inputs":[{"name":"dmat"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",24,{"inputs":[{"name":"dmat"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",24,{"inputs":[{"name":"dmat"},{"name":"dmat"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",24,{"inputs":[{"name":"dmat"},{"name":"dmat"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"fmt","","",24,{"inputs":[{"name":"dmat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"mul","","",24,{"inputs":[{"name":"dmat"},{"name":"n"}],"output":{"name":"dmat"}}],[11,"div","","",24,{"inputs":[{"name":"dmat"},{"name":"n"}],"output":{"name":"dmat"}}],[11,"add","","",24,{"inputs":[{"name":"dmat"},{"name":"n"}],"output":{"name":"dmat"}}],[11,"add","","",24,{"inputs":[{"name":"dmat"},{"name":"dmat"}],"output":{"name":"dmat"}}],[11,"add","","",24,{"inputs":[{"name":"dmat"},{"name":"dmat"}],"output":{"name":"dmat"}}],[11,"sub","","",24,{"inputs":[{"name":"dmat"},{"name":"n"}],"output":{"name":"dmat"}}],[11,"sub","","",24,{"inputs":[{"name":"dmat"},{"name":"dmat"}],"output":{"name":"dmat"}}],[11,"sub","","",24,{"inputs":[{"name":"dmat"},{"name":"dmat"}],"output":{"name":"dmat"}}],[11,"eq","","",25,{"inputs":[{"name":"dmat1"},{"name":"dmat1"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"dmat1"}],"output":{"name":"dmat1"}}],[11,"new_zeros","","Builds a matrix filled with zeros.",25,{"inputs":[{"name":"dmat1"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat1"}}],[11,"is_zero","","Tests if all components of the matrix are zeroes.",25,{"inputs":[{"name":"dmat1"}],"output":{"name":"bool"}}],[11,"reset","","",25,{"inputs":[{"name":"dmat1"}],"output":null}],[11,"new_random","","Builds a matrix filled with random values.",25,{"inputs":[{"name":"dmat1"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat1"}}],[11,"new_ones","","Builds a matrix filled with a given constant.",25,{"inputs":[{"name":"dmat1"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat1"}}],[11,"nrows","","The number of row on the matrix.",25,{"inputs":[{"name":"dmat1"}],"output":{"name":"usize"}}],[11,"ncols","","The number of columns on the matrix.",25,{"inputs":[{"name":"dmat1"}],"output":{"name":"usize"}}],[11,"as_vec","","Gets a reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",25,null],[11,"as_mut_vec","","Gets a mutable reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",25,null],[11,"new_identity","","Builds an identity matrix.",25,{"inputs":[{"name":"dmat1"},{"name":"usize"}],"output":{"name":"dmat1"}}],[11,"unsafe_set","","Just like `set` without bounds checking.",25,null],[11,"unsafe_at","","Just like `at` without bounds checking.",25,null],[11,"swap","","",25,null],[11,"shape","","",25,null],[11,"index","","",25,null],[11,"index_mut","","",25,null],[11,"mul","","",25,{"inputs":[{"name":"dmat1"},{"name":"dmat1"}],"output":{"name":"dmat1"}}],[11,"mul","","",25,{"inputs":[{"name":"dmat1"},{"name":"dmat1"}],"output":{"name":"dmat1"}}],[11,"mul","","",25,{"inputs":[{"name":"dmat1"},{"name":"dvec1"}],"output":{"name":"dvec1"}}],[11,"mul","","",26,{"inputs":[{"name":"dvec1"},{"name":"dmat1"}],"output":{"name":"dvec1"}}],[11,"inv","","",25,{"inputs":[{"name":"dmat1"}],"output":{"name":"option"}}],[11,"inv_mut","","",25,{"inputs":[{"name":"dmat1"}],"output":{"name":"bool"}}],[11,"transpose","","",25,{"inputs":[{"name":"dmat1"}],"output":{"name":"dmat1"}}],[11,"transpose_mut","","",25,{"inputs":[{"name":"dmat1"}],"output":null}],[11,"mean","","",25,{"inputs":[{"name":"dmat1"}],"output":{"name":"dvec1"}}],[11,"cov","","",25,{"inputs":[{"name":"dmat1"}],"output":{"name":"dmat1"}}],[11,"ncols","","",25,{"inputs":[{"name":"dmat1"}],"output":{"name":"usize"}}],[11,"set_col","","",25,{"inputs":[{"name":"dmat1"},{"name":"usize"},{"name":"dvec1"}],"output":null}],[11,"col","","",25,{"inputs":[{"name":"dmat1"},{"name":"usize"}],"output":{"name":"dvec1"}}],[11,"col_slice","","",25,{"inputs":[{"name":"dmat1"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec1"}}],[11,"nrows","","",25,{"inputs":[{"name":"dmat1"}],"output":{"name":"usize"}}],[11,"set_row","","",25,{"inputs":[{"name":"dmat1"},{"name":"usize"},{"name":"dvec1"}],"output":null}],[11,"row","","",25,{"inputs":[{"name":"dmat1"},{"name":"usize"}],"output":{"name":"dvec1"}}],[11,"row_slice","","",25,{"inputs":[{"name":"dmat1"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec1"}}],[11,"from_diag","","",25,{"inputs":[{"name":"dmat1"},{"name":"dvec1"}],"output":{"name":"dmat1"}}],[11,"diag","","",25,{"inputs":[{"name":"dmat1"}],"output":{"name":"dvec1"}}],[11,"set_diag","","",25,{"inputs":[{"name":"dmat1"},{"name":"dvec1"}],"output":null}],[11,"approx_epsilon","","",25,{"inputs":[{"name":"dmat1"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",25,{"inputs":[{"name":"dmat1"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",25,{"inputs":[{"name":"dmat1"},{"name":"dmat1"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",25,{"inputs":[{"name":"dmat1"},{"name":"dmat1"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"fmt","","",25,{"inputs":[{"name":"dmat1"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"mul","","",25,{"inputs":[{"name":"dmat1"},{"name":"n"}],"output":{"name":"dmat1"}}],[11,"div","","",25,{"inputs":[{"name":"dmat1"},{"name":"n"}],"output":{"name":"dmat1"}}],[11,"add","","",25,{"inputs":[{"name":"dmat1"},{"name":"n"}],"output":{"name":"dmat1"}}],[11,"add","","",25,{"inputs":[{"name":"dmat1"},{"name":"dmat1"}],"output":{"name":"dmat1"}}],[11,"add","","",25,{"inputs":[{"name":"dmat1"},{"name":"dmat1"}],"output":{"name":"dmat1"}}],[11,"sub","","",25,{"inputs":[{"name":"dmat1"},{"name":"n"}],"output":{"name":"dmat1"}}],[11,"sub","","",25,{"inputs":[{"name":"dmat1"},{"name":"dmat1"}],"output":{"name":"dmat1"}}],[11,"sub","","",25,{"inputs":[{"name":"dmat1"},{"name":"dmat1"}],"output":{"name":"dmat1"}}],[11,"from_elem","","Builds a matrix filled with a given constant.",25,{"inputs":[{"name":"dmat1"},{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"name":"dmat1"}}],[11,"from_row_vec","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in row-major order.\nNote that `from_col_vec` is a lot faster than `from_row_vec` since a `$dmat` stores its data\nin column-major order.",25,null],[11,"from_col_vec","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in column-major order.\nNote that `from_col_vec` is a lot faster than `from_row_vec` since a `$dmat` stores its data\nin column-major order.",25,null],[11,"from_fn","","Builds a matrix using an initialization function.",25,{"inputs":[{"name":"dmat1"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"dmat1"}}],[11,"new_uninitialized","","",25,{"inputs":[{"name":"dmat1"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat1"}}],[11,"eq","","",27,{"inputs":[{"name":"dmat2"},{"name":"dmat2"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"dmat2"}],"output":{"name":"dmat2"}}],[11,"new_zeros","","Builds a matrix filled with zeros.",27,{"inputs":[{"name":"dmat2"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat2"}}],[11,"is_zero","","Tests if all components of the matrix are zeroes.",27,{"inputs":[{"name":"dmat2"}],"output":{"name":"bool"}}],[11,"reset","","",27,{"inputs":[{"name":"dmat2"}],"output":null}],[11,"new_random","","Builds a matrix filled with random values.",27,{"inputs":[{"name":"dmat2"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat2"}}],[11,"new_ones","","Builds a matrix filled with a given constant.",27,{"inputs":[{"name":"dmat2"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat2"}}],[11,"nrows","","The number of row on the matrix.",27,{"inputs":[{"name":"dmat2"}],"output":{"name":"usize"}}],[11,"ncols","","The number of columns on the matrix.",27,{"inputs":[{"name":"dmat2"}],"output":{"name":"usize"}}],[11,"as_vec","","Gets a reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",27,null],[11,"as_mut_vec","","Gets a mutable reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",27,null],[11,"new_identity","","Builds an identity matrix.",27,{"inputs":[{"name":"dmat2"},{"name":"usize"}],"output":{"name":"dmat2"}}],[11,"unsafe_set","","Just like `set` without bounds checking.",27,null],[11,"unsafe_at","","Just like `at` without bounds checking.",27,null],[11,"swap","","",27,null],[11,"shape","","",27,null],[11,"index","","",27,null],[11,"index_mut","","",27,null],[11,"mul","","",27,{"inputs":[{"name":"dmat2"},{"name":"dmat2"}],"output":{"name":"dmat2"}}],[11,"mul","","",27,{"inputs":[{"name":"dmat2"},{"name":"dmat2"}],"output":{"name":"dmat2"}}],[11,"mul","","",27,{"inputs":[{"name":"dmat2"},{"name":"dvec2"}],"output":{"name":"dvec2"}}],[11,"mul","","",28,{"inputs":[{"name":"dvec2"},{"name":"dmat2"}],"output":{"name":"dvec2"}}],[11,"inv","","",27,{"inputs":[{"name":"dmat2"}],"output":{"name":"option"}}],[11,"inv_mut","","",27,{"inputs":[{"name":"dmat2"}],"output":{"name":"bool"}}],[11,"transpose","","",27,{"inputs":[{"name":"dmat2"}],"output":{"name":"dmat2"}}],[11,"transpose_mut","","",27,{"inputs":[{"name":"dmat2"}],"output":null}],[11,"mean","","",27,{"inputs":[{"name":"dmat2"}],"output":{"name":"dvec2"}}],[11,"cov","","",27,{"inputs":[{"name":"dmat2"}],"output":{"name":"dmat2"}}],[11,"ncols","","",27,{"inputs":[{"name":"dmat2"}],"output":{"name":"usize"}}],[11,"set_col","","",27,{"inputs":[{"name":"dmat2"},{"name":"usize"},{"name":"dvec2"}],"output":null}],[11,"col","","",27,{"inputs":[{"name":"dmat2"},{"name":"usize"}],"output":{"name":"dvec2"}}],[11,"col_slice","","",27,{"inputs":[{"name":"dmat2"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec2"}}],[11,"nrows","","",27,{"inputs":[{"name":"dmat2"}],"output":{"name":"usize"}}],[11,"set_row","","",27,{"inputs":[{"name":"dmat2"},{"name":"usize"},{"name":"dvec2"}],"output":null}],[11,"row","","",27,{"inputs":[{"name":"dmat2"},{"name":"usize"}],"output":{"name":"dvec2"}}],[11,"row_slice","","",27,{"inputs":[{"name":"dmat2"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec2"}}],[11,"from_diag","","",27,{"inputs":[{"name":"dmat2"},{"name":"dvec2"}],"output":{"name":"dmat2"}}],[11,"diag","","",27,{"inputs":[{"name":"dmat2"}],"output":{"name":"dvec2"}}],[11,"set_diag","","",27,{"inputs":[{"name":"dmat2"},{"name":"dvec2"}],"output":null}],[11,"approx_epsilon","","",27,{"inputs":[{"name":"dmat2"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",27,{"inputs":[{"name":"dmat2"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",27,{"inputs":[{"name":"dmat2"},{"name":"dmat2"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",27,{"inputs":[{"name":"dmat2"},{"name":"dmat2"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"fmt","","",27,{"inputs":[{"name":"dmat2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"mul","","",27,{"inputs":[{"name":"dmat2"},{"name":"n"}],"output":{"name":"dmat2"}}],[11,"div","","",27,{"inputs":[{"name":"dmat2"},{"name":"n"}],"output":{"name":"dmat2"}}],[11,"add","","",27,{"inputs":[{"name":"dmat2"},{"name":"n"}],"output":{"name":"dmat2"}}],[11,"add","","",27,{"inputs":[{"name":"dmat2"},{"name":"dmat2"}],"output":{"name":"dmat2"}}],[11,"add","","",27,{"inputs":[{"name":"dmat2"},{"name":"dmat2"}],"output":{"name":"dmat2"}}],[11,"sub","","",27,{"inputs":[{"name":"dmat2"},{"name":"n"}],"output":{"name":"dmat2"}}],[11,"sub","","",27,{"inputs":[{"name":"dmat2"},{"name":"dmat2"}],"output":{"name":"dmat2"}}],[11,"sub","","",27,{"inputs":[{"name":"dmat2"},{"name":"dmat2"}],"output":{"name":"dmat2"}}],[11,"from_elem","","Builds a matrix filled with a given constant.",27,{"inputs":[{"name":"dmat2"},{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"name":"dmat2"}}],[11,"from_row_vec","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in row-major order.\nNote that `from_col_vec` is a lot faster than `from_row_vec` since a `$dmat` stores its data\nin column-major order.",27,null],[11,"from_col_vec","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in column-major order.\nNote that `from_col_vec` is a lot faster than `from_row_vec` since a `$dmat` stores its data\nin column-major order.",27,null],[11,"from_fn","","Builds a matrix using an initialization function.",27,{"inputs":[{"name":"dmat2"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"dmat2"}}],[11,"new_uninitialized","","",27,{"inputs":[{"name":"dmat2"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat2"}}],[11,"eq","","",29,{"inputs":[{"name":"dmat3"},{"name":"dmat3"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"dmat3"}],"output":{"name":"dmat3"}}],[11,"new_zeros","","Builds a matrix filled with zeros.",29,{"inputs":[{"name":"dmat3"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat3"}}],[11,"is_zero","","Tests if all components of the matrix are zeroes.",29,{"inputs":[{"name":"dmat3"}],"output":{"name":"bool"}}],[11,"reset","","",29,{"inputs":[{"name":"dmat3"}],"output":null}],[11,"new_random","","Builds a matrix filled with random values.",29,{"inputs":[{"name":"dmat3"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat3"}}],[11,"new_ones","","Builds a matrix filled with a given constant.",29,{"inputs":[{"name":"dmat3"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat3"}}],[11,"nrows","","The number of row on the matrix.",29,{"inputs":[{"name":"dmat3"}],"output":{"name":"usize"}}],[11,"ncols","","The number of columns on the matrix.",29,{"inputs":[{"name":"dmat3"}],"output":{"name":"usize"}}],[11,"as_vec","","Gets a reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",29,null],[11,"as_mut_vec","","Gets a mutable reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",29,null],[11,"new_identity","","Builds an identity matrix.",29,{"inputs":[{"name":"dmat3"},{"name":"usize"}],"output":{"name":"dmat3"}}],[11,"unsafe_set","","Just like `set` without bounds checking.",29,null],[11,"unsafe_at","","Just like `at` without bounds checking.",29,null],[11,"swap","","",29,null],[11,"shape","","",29,null],[11,"index","","",29,null],[11,"index_mut","","",29,null],[11,"mul","","",29,{"inputs":[{"name":"dmat3"},{"name":"dmat3"}],"output":{"name":"dmat3"}}],[11,"mul","","",29,{"inputs":[{"name":"dmat3"},{"name":"dmat3"}],"output":{"name":"dmat3"}}],[11,"mul","","",29,{"inputs":[{"name":"dmat3"},{"name":"dvec3"}],"output":{"name":"dvec3"}}],[11,"mul","","",30,{"inputs":[{"name":"dvec3"},{"name":"dmat3"}],"output":{"name":"dvec3"}}],[11,"inv","","",29,{"inputs":[{"name":"dmat3"}],"output":{"name":"option"}}],[11,"inv_mut","","",29,{"inputs":[{"name":"dmat3"}],"output":{"name":"bool"}}],[11,"transpose","","",29,{"inputs":[{"name":"dmat3"}],"output":{"name":"dmat3"}}],[11,"transpose_mut","","",29,{"inputs":[{"name":"dmat3"}],"output":null}],[11,"mean","","",29,{"inputs":[{"name":"dmat3"}],"output":{"name":"dvec3"}}],[11,"cov","","",29,{"inputs":[{"name":"dmat3"}],"output":{"name":"dmat3"}}],[11,"ncols","","",29,{"inputs":[{"name":"dmat3"}],"output":{"name":"usize"}}],[11,"set_col","","",29,{"inputs":[{"name":"dmat3"},{"name":"usize"},{"name":"dvec3"}],"output":null}],[11,"col","","",29,{"inputs":[{"name":"dmat3"},{"name":"usize"}],"output":{"name":"dvec3"}}],[11,"col_slice","","",29,{"inputs":[{"name":"dmat3"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec3"}}],[11,"nrows","","",29,{"inputs":[{"name":"dmat3"}],"output":{"name":"usize"}}],[11,"set_row","","",29,{"inputs":[{"name":"dmat3"},{"name":"usize"},{"name":"dvec3"}],"output":null}],[11,"row","","",29,{"inputs":[{"name":"dmat3"},{"name":"usize"}],"output":{"name":"dvec3"}}],[11,"row_slice","","",29,{"inputs":[{"name":"dmat3"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec3"}}],[11,"from_diag","","",29,{"inputs":[{"name":"dmat3"},{"name":"dvec3"}],"output":{"name":"dmat3"}}],[11,"diag","","",29,{"inputs":[{"name":"dmat3"}],"output":{"name":"dvec3"}}],[11,"set_diag","","",29,{"inputs":[{"name":"dmat3"},{"name":"dvec3"}],"output":null}],[11,"approx_epsilon","","",29,{"inputs":[{"name":"dmat3"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",29,{"inputs":[{"name":"dmat3"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",29,{"inputs":[{"name":"dmat3"},{"name":"dmat3"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",29,{"inputs":[{"name":"dmat3"},{"name":"dmat3"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"fmt","","",29,{"inputs":[{"name":"dmat3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"mul","","",29,{"inputs":[{"name":"dmat3"},{"name":"n"}],"output":{"name":"dmat3"}}],[11,"div","","",29,{"inputs":[{"name":"dmat3"},{"name":"n"}],"output":{"name":"dmat3"}}],[11,"add","","",29,{"inputs":[{"name":"dmat3"},{"name":"n"}],"output":{"name":"dmat3"}}],[11,"add","","",29,{"inputs":[{"name":"dmat3"},{"name":"dmat3"}],"output":{"name":"dmat3"}}],[11,"add","","",29,{"inputs":[{"name":"dmat3"},{"name":"dmat3"}],"output":{"name":"dmat3"}}],[11,"sub","","",29,{"inputs":[{"name":"dmat3"},{"name":"n"}],"output":{"name":"dmat3"}}],[11,"sub","","",29,{"inputs":[{"name":"dmat3"},{"name":"dmat3"}],"output":{"name":"dmat3"}}],[11,"sub","","",29,{"inputs":[{"name":"dmat3"},{"name":"dmat3"}],"output":{"name":"dmat3"}}],[11,"from_elem","","Builds a matrix filled with a given constant.",29,{"inputs":[{"name":"dmat3"},{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"name":"dmat3"}}],[11,"from_row_vec","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in row-major order.\nNote that `from_col_vec` is a lot faster than `from_row_vec` since a `$dmat` stores its data\nin column-major order.",29,null],[11,"from_col_vec","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in column-major order.\nNote that `from_col_vec` is a lot faster than `from_row_vec` since a `$dmat` stores its data\nin column-major order.",29,null],[11,"from_fn","","Builds a matrix using an initialization function.",29,{"inputs":[{"name":"dmat3"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"dmat3"}}],[11,"new_uninitialized","","",29,{"inputs":[{"name":"dmat3"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat3"}}],[11,"eq","","",31,{"inputs":[{"name":"dmat4"},{"name":"dmat4"}],"output":{"name":"bool"}}],[11,"clone","","",31,{"inputs":[{"name":"dmat4"}],"output":{"name":"dmat4"}}],[11,"new_zeros","","Builds a matrix filled with zeros.",31,{"inputs":[{"name":"dmat4"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat4"}}],[11,"is_zero","","Tests if all components of the matrix are zeroes.",31,{"inputs":[{"name":"dmat4"}],"output":{"name":"bool"}}],[11,"reset","","",31,{"inputs":[{"name":"dmat4"}],"output":null}],[11,"new_random","","Builds a matrix filled with random values.",31,{"inputs":[{"name":"dmat4"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat4"}}],[11,"new_ones","","Builds a matrix filled with a given constant.",31,{"inputs":[{"name":"dmat4"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat4"}}],[11,"nrows","","The number of row on the matrix.",31,{"inputs":[{"name":"dmat4"}],"output":{"name":"usize"}}],[11,"ncols","","The number of columns on the matrix.",31,{"inputs":[{"name":"dmat4"}],"output":{"name":"usize"}}],[11,"as_vec","","Gets a reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",31,null],[11,"as_mut_vec","","Gets a mutable reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",31,null],[11,"new_identity","","Builds an identity matrix.",31,{"inputs":[{"name":"dmat4"},{"name":"usize"}],"output":{"name":"dmat4"}}],[11,"unsafe_set","","Just like `set` without bounds checking.",31,null],[11,"unsafe_at","","Just like `at` without bounds checking.",31,null],[11,"swap","","",31,null],[11,"shape","","",31,null],[11,"index","","",31,null],[11,"index_mut","","",31,null],[11,"mul","","",31,{"inputs":[{"name":"dmat4"},{"name":"dmat4"}],"output":{"name":"dmat4"}}],[11,"mul","","",31,{"inputs":[{"name":"dmat4"},{"name":"dmat4"}],"output":{"name":"dmat4"}}],[11,"mul","","",31,{"inputs":[{"name":"dmat4"},{"name":"dvec4"}],"output":{"name":"dvec4"}}],[11,"mul","","",32,{"inputs":[{"name":"dvec4"},{"name":"dmat4"}],"output":{"name":"dvec4"}}],[11,"inv","","",31,{"inputs":[{"name":"dmat4"}],"output":{"name":"option"}}],[11,"inv_mut","","",31,{"inputs":[{"name":"dmat4"}],"output":{"name":"bool"}}],[11,"transpose","","",31,{"inputs":[{"name":"dmat4"}],"output":{"name":"dmat4"}}],[11,"transpose_mut","","",31,{"inputs":[{"name":"dmat4"}],"output":null}],[11,"mean","","",31,{"inputs":[{"name":"dmat4"}],"output":{"name":"dvec4"}}],[11,"cov","","",31,{"inputs":[{"name":"dmat4"}],"output":{"name":"dmat4"}}],[11,"ncols","","",31,{"inputs":[{"name":"dmat4"}],"output":{"name":"usize"}}],[11,"set_col","","",31,{"inputs":[{"name":"dmat4"},{"name":"usize"},{"name":"dvec4"}],"output":null}],[11,"col","","",31,{"inputs":[{"name":"dmat4"},{"name":"usize"}],"output":{"name":"dvec4"}}],[11,"col_slice","","",31,{"inputs":[{"name":"dmat4"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec4"}}],[11,"nrows","","",31,{"inputs":[{"name":"dmat4"}],"output":{"name":"usize"}}],[11,"set_row","","",31,{"inputs":[{"name":"dmat4"},{"name":"usize"},{"name":"dvec4"}],"output":null}],[11,"row","","",31,{"inputs":[{"name":"dmat4"},{"name":"usize"}],"output":{"name":"dvec4"}}],[11,"row_slice","","",31,{"inputs":[{"name":"dmat4"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec4"}}],[11,"from_diag","","",31,{"inputs":[{"name":"dmat4"},{"name":"dvec4"}],"output":{"name":"dmat4"}}],[11,"diag","","",31,{"inputs":[{"name":"dmat4"}],"output":{"name":"dvec4"}}],[11,"set_diag","","",31,{"inputs":[{"name":"dmat4"},{"name":"dvec4"}],"output":null}],[11,"approx_epsilon","","",31,{"inputs":[{"name":"dmat4"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",31,{"inputs":[{"name":"dmat4"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",31,{"inputs":[{"name":"dmat4"},{"name":"dmat4"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",31,{"inputs":[{"name":"dmat4"},{"name":"dmat4"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"fmt","","",31,{"inputs":[{"name":"dmat4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"mul","","",31,{"inputs":[{"name":"dmat4"},{"name":"n"}],"output":{"name":"dmat4"}}],[11,"div","","",31,{"inputs":[{"name":"dmat4"},{"name":"n"}],"output":{"name":"dmat4"}}],[11,"add","","",31,{"inputs":[{"name":"dmat4"},{"name":"n"}],"output":{"name":"dmat4"}}],[11,"add","","",31,{"inputs":[{"name":"dmat4"},{"name":"dmat4"}],"output":{"name":"dmat4"}}],[11,"add","","",31,{"inputs":[{"name":"dmat4"},{"name":"dmat4"}],"output":{"name":"dmat4"}}],[11,"sub","","",31,{"inputs":[{"name":"dmat4"},{"name":"n"}],"output":{"name":"dmat4"}}],[11,"sub","","",31,{"inputs":[{"name":"dmat4"},{"name":"dmat4"}],"output":{"name":"dmat4"}}],[11,"sub","","",31,{"inputs":[{"name":"dmat4"},{"name":"dmat4"}],"output":{"name":"dmat4"}}],[11,"from_elem","","Builds a matrix filled with a given constant.",31,{"inputs":[{"name":"dmat4"},{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"name":"dmat4"}}],[11,"from_row_vec","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in row-major order.\nNote that `from_col_vec` is a lot faster than `from_row_vec` since a `$dmat` stores its data\nin column-major order.",31,null],[11,"from_col_vec","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in column-major order.\nNote that `from_col_vec` is a lot faster than `from_row_vec` since a `$dmat` stores its data\nin column-major order.",31,null],[11,"from_fn","","Builds a matrix using an initialization function.",31,{"inputs":[{"name":"dmat4"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"dmat4"}}],[11,"new_uninitialized","","",31,{"inputs":[{"name":"dmat4"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat4"}}],[11,"eq","","",33,{"inputs":[{"name":"dmat5"},{"name":"dmat5"}],"output":{"name":"bool"}}],[11,"clone","","",33,{"inputs":[{"name":"dmat5"}],"output":{"name":"dmat5"}}],[11,"new_zeros","","Builds a matrix filled with zeros.",33,{"inputs":[{"name":"dmat5"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat5"}}],[11,"is_zero","","Tests if all components of the matrix are zeroes.",33,{"inputs":[{"name":"dmat5"}],"output":{"name":"bool"}}],[11,"reset","","",33,{"inputs":[{"name":"dmat5"}],"output":null}],[11,"new_random","","Builds a matrix filled with random values.",33,{"inputs":[{"name":"dmat5"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat5"}}],[11,"new_ones","","Builds a matrix filled with a given constant.",33,{"inputs":[{"name":"dmat5"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat5"}}],[11,"nrows","","The number of row on the matrix.",33,{"inputs":[{"name":"dmat5"}],"output":{"name":"usize"}}],[11,"ncols","","The number of columns on the matrix.",33,{"inputs":[{"name":"dmat5"}],"output":{"name":"usize"}}],[11,"as_vec","","Gets a reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",33,null],[11,"as_mut_vec","","Gets a mutable reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",33,null],[11,"new_identity","","Builds an identity matrix.",33,{"inputs":[{"name":"dmat5"},{"name":"usize"}],"output":{"name":"dmat5"}}],[11,"unsafe_set","","Just like `set` without bounds checking.",33,null],[11,"unsafe_at","","Just like `at` without bounds checking.",33,null],[11,"swap","","",33,null],[11,"shape","","",33,null],[11,"index","","",33,null],[11,"index_mut","","",33,null],[11,"mul","","",33,{"inputs":[{"name":"dmat5"},{"name":"dmat5"}],"output":{"name":"dmat5"}}],[11,"mul","","",33,{"inputs":[{"name":"dmat5"},{"name":"dmat5"}],"output":{"name":"dmat5"}}],[11,"mul","","",33,{"inputs":[{"name":"dmat5"},{"name":"dvec5"}],"output":{"name":"dvec5"}}],[11,"mul","","",34,{"inputs":[{"name":"dvec5"},{"name":"dmat5"}],"output":{"name":"dvec5"}}],[11,"inv","","",33,{"inputs":[{"name":"dmat5"}],"output":{"name":"option"}}],[11,"inv_mut","","",33,{"inputs":[{"name":"dmat5"}],"output":{"name":"bool"}}],[11,"transpose","","",33,{"inputs":[{"name":"dmat5"}],"output":{"name":"dmat5"}}],[11,"transpose_mut","","",33,{"inputs":[{"name":"dmat5"}],"output":null}],[11,"mean","","",33,{"inputs":[{"name":"dmat5"}],"output":{"name":"dvec5"}}],[11,"cov","","",33,{"inputs":[{"name":"dmat5"}],"output":{"name":"dmat5"}}],[11,"ncols","","",33,{"inputs":[{"name":"dmat5"}],"output":{"name":"usize"}}],[11,"set_col","","",33,{"inputs":[{"name":"dmat5"},{"name":"usize"},{"name":"dvec5"}],"output":null}],[11,"col","","",33,{"inputs":[{"name":"dmat5"},{"name":"usize"}],"output":{"name":"dvec5"}}],[11,"col_slice","","",33,{"inputs":[{"name":"dmat5"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec5"}}],[11,"nrows","","",33,{"inputs":[{"name":"dmat5"}],"output":{"name":"usize"}}],[11,"set_row","","",33,{"inputs":[{"name":"dmat5"},{"name":"usize"},{"name":"dvec5"}],"output":null}],[11,"row","","",33,{"inputs":[{"name":"dmat5"},{"name":"usize"}],"output":{"name":"dvec5"}}],[11,"row_slice","","",33,{"inputs":[{"name":"dmat5"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec5"}}],[11,"from_diag","","",33,{"inputs":[{"name":"dmat5"},{"name":"dvec5"}],"output":{"name":"dmat5"}}],[11,"diag","","",33,{"inputs":[{"name":"dmat5"}],"output":{"name":"dvec5"}}],[11,"set_diag","","",33,{"inputs":[{"name":"dmat5"},{"name":"dvec5"}],"output":null}],[11,"approx_epsilon","","",33,{"inputs":[{"name":"dmat5"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",33,{"inputs":[{"name":"dmat5"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",33,{"inputs":[{"name":"dmat5"},{"name":"dmat5"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",33,{"inputs":[{"name":"dmat5"},{"name":"dmat5"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"fmt","","",33,{"inputs":[{"name":"dmat5"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"mul","","",33,{"inputs":[{"name":"dmat5"},{"name":"n"}],"output":{"name":"dmat5"}}],[11,"div","","",33,{"inputs":[{"name":"dmat5"},{"name":"n"}],"output":{"name":"dmat5"}}],[11,"add","","",33,{"inputs":[{"name":"dmat5"},{"name":"n"}],"output":{"name":"dmat5"}}],[11,"add","","",33,{"inputs":[{"name":"dmat5"},{"name":"dmat5"}],"output":{"name":"dmat5"}}],[11,"add","","",33,{"inputs":[{"name":"dmat5"},{"name":"dmat5"}],"output":{"name":"dmat5"}}],[11,"sub","","",33,{"inputs":[{"name":"dmat5"},{"name":"n"}],"output":{"name":"dmat5"}}],[11,"sub","","",33,{"inputs":[{"name":"dmat5"},{"name":"dmat5"}],"output":{"name":"dmat5"}}],[11,"sub","","",33,{"inputs":[{"name":"dmat5"},{"name":"dmat5"}],"output":{"name":"dmat5"}}],[11,"from_elem","","Builds a matrix filled with a given constant.",33,{"inputs":[{"name":"dmat5"},{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"name":"dmat5"}}],[11,"from_row_vec","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in row-major order.\nNote that `from_col_vec` is a lot faster than `from_row_vec` since a `$dmat` stores its data\nin column-major order.",33,null],[11,"from_col_vec","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in column-major order.\nNote that `from_col_vec` is a lot faster than `from_row_vec` since a `$dmat` stores its data\nin column-major order.",33,null],[11,"from_fn","","Builds a matrix using an initialization function.",33,{"inputs":[{"name":"dmat5"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"dmat5"}}],[11,"new_uninitialized","","",33,{"inputs":[{"name":"dmat5"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat5"}}],[11,"eq","","",35,{"inputs":[{"name":"dmat6"},{"name":"dmat6"}],"output":{"name":"bool"}}],[11,"clone","","",35,{"inputs":[{"name":"dmat6"}],"output":{"name":"dmat6"}}],[11,"new_zeros","","Builds a matrix filled with zeros.",35,{"inputs":[{"name":"dmat6"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat6"}}],[11,"is_zero","","Tests if all components of the matrix are zeroes.",35,{"inputs":[{"name":"dmat6"}],"output":{"name":"bool"}}],[11,"reset","","",35,{"inputs":[{"name":"dmat6"}],"output":null}],[11,"new_random","","Builds a matrix filled with random values.",35,{"inputs":[{"name":"dmat6"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat6"}}],[11,"new_ones","","Builds a matrix filled with a given constant.",35,{"inputs":[{"name":"dmat6"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat6"}}],[11,"nrows","","The number of row on the matrix.",35,{"inputs":[{"name":"dmat6"}],"output":{"name":"usize"}}],[11,"ncols","","The number of columns on the matrix.",35,{"inputs":[{"name":"dmat6"}],"output":{"name":"usize"}}],[11,"as_vec","","Gets a reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",35,null],[11,"as_mut_vec","","Gets a mutable reference to this matrix data.\nThe returned vector contains the matrix data in column-major order.",35,null],[11,"new_identity","","Builds an identity matrix.",35,{"inputs":[{"name":"dmat6"},{"name":"usize"}],"output":{"name":"dmat6"}}],[11,"unsafe_set","","Just like `set` without bounds checking.",35,null],[11,"unsafe_at","","Just like `at` without bounds checking.",35,null],[11,"swap","","",35,null],[11,"shape","","",35,null],[11,"index","","",35,null],[11,"index_mut","","",35,null],[11,"mul","","",35,{"inputs":[{"name":"dmat6"},{"name":"dmat6"}],"output":{"name":"dmat6"}}],[11,"mul","","",35,{"inputs":[{"name":"dmat6"},{"name":"dmat6"}],"output":{"name":"dmat6"}}],[11,"mul","","",35,{"inputs":[{"name":"dmat6"},{"name":"dvec6"}],"output":{"name":"dvec6"}}],[11,"mul","","",36,{"inputs":[{"name":"dvec6"},{"name":"dmat6"}],"output":{"name":"dvec6"}}],[11,"inv","","",35,{"inputs":[{"name":"dmat6"}],"output":{"name":"option"}}],[11,"inv_mut","","",35,{"inputs":[{"name":"dmat6"}],"output":{"name":"bool"}}],[11,"transpose","","",35,{"inputs":[{"name":"dmat6"}],"output":{"name":"dmat6"}}],[11,"transpose_mut","","",35,{"inputs":[{"name":"dmat6"}],"output":null}],[11,"mean","","",35,{"inputs":[{"name":"dmat6"}],"output":{"name":"dvec6"}}],[11,"cov","","",35,{"inputs":[{"name":"dmat6"}],"output":{"name":"dmat6"}}],[11,"ncols","","",35,{"inputs":[{"name":"dmat6"}],"output":{"name":"usize"}}],[11,"set_col","","",35,{"inputs":[{"name":"dmat6"},{"name":"usize"},{"name":"dvec6"}],"output":null}],[11,"col","","",35,{"inputs":[{"name":"dmat6"},{"name":"usize"}],"output":{"name":"dvec6"}}],[11,"col_slice","","",35,{"inputs":[{"name":"dmat6"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec6"}}],[11,"nrows","","",35,{"inputs":[{"name":"dmat6"}],"output":{"name":"usize"}}],[11,"set_row","","",35,{"inputs":[{"name":"dmat6"},{"name":"usize"},{"name":"dvec6"}],"output":null}],[11,"row","","",35,{"inputs":[{"name":"dmat6"},{"name":"usize"}],"output":{"name":"dvec6"}}],[11,"row_slice","","",35,{"inputs":[{"name":"dmat6"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec6"}}],[11,"from_diag","","",35,{"inputs":[{"name":"dmat6"},{"name":"dvec6"}],"output":{"name":"dmat6"}}],[11,"diag","","",35,{"inputs":[{"name":"dmat6"}],"output":{"name":"dvec6"}}],[11,"set_diag","","",35,{"inputs":[{"name":"dmat6"},{"name":"dvec6"}],"output":null}],[11,"approx_epsilon","","",35,{"inputs":[{"name":"dmat6"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",35,{"inputs":[{"name":"dmat6"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",35,{"inputs":[{"name":"dmat6"},{"name":"dmat6"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",35,{"inputs":[{"name":"dmat6"},{"name":"dmat6"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"fmt","","",35,{"inputs":[{"name":"dmat6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"mul","","",35,{"inputs":[{"name":"dmat6"},{"name":"n"}],"output":{"name":"dmat6"}}],[11,"div","","",35,{"inputs":[{"name":"dmat6"},{"name":"n"}],"output":{"name":"dmat6"}}],[11,"add","","",35,{"inputs":[{"name":"dmat6"},{"name":"n"}],"output":{"name":"dmat6"}}],[11,"add","","",35,{"inputs":[{"name":"dmat6"},{"name":"dmat6"}],"output":{"name":"dmat6"}}],[11,"add","","",35,{"inputs":[{"name":"dmat6"},{"name":"dmat6"}],"output":{"name":"dmat6"}}],[11,"sub","","",35,{"inputs":[{"name":"dmat6"},{"name":"n"}],"output":{"name":"dmat6"}}],[11,"sub","","",35,{"inputs":[{"name":"dmat6"},{"name":"dmat6"}],"output":{"name":"dmat6"}}],[11,"sub","","",35,{"inputs":[{"name":"dmat6"},{"name":"dmat6"}],"output":{"name":"dmat6"}}],[11,"from_elem","","Builds a matrix filled with a given constant.",35,{"inputs":[{"name":"dmat6"},{"name":"usize"},{"name":"usize"},{"name":"n"}],"output":{"name":"dmat6"}}],[11,"from_row_vec","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in row-major order.\nNote that `from_col_vec` is a lot faster than `from_row_vec` since a `$dmat` stores its data\nin column-major order.",35,null],[11,"from_col_vec","","Builds a matrix filled with the components provided by a vector.\nThe vector contains the matrix data in column-major order.\nNote that `from_col_vec` is a lot faster than `from_row_vec` since a `$dmat` stores its data\nin column-major order.",35,null],[11,"from_fn","","Builds a matrix using an initialization function.",35,{"inputs":[{"name":"dmat6"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"dmat6"}}],[11,"new_uninitialized","","",35,{"inputs":[{"name":"dmat6"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dmat6"}}],[11,"clone","","",0,{"inputs":[{"name":"dvec"}],"output":{"name":"dvec"}}],[11,"fmt","","",0,{"inputs":[{"name":"dvec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"dvec"},{"name":"dvec"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"dvec"},{"name":"dvec"}],"output":{"name":"bool"}}],[11,"new_uninitialized","","Creates an uninitialized vec.",0,{"inputs":[{"name":"dvec"},{"name":"usize"}],"output":{"name":"dvec"}}],[11,"from_elem","","Builds a vector filled with a constant.",0,{"inputs":[{"name":"dvec"},{"name":"usize"},{"name":"n"}],"output":{"name":"dvec"}}],[11,"from_slice","","Builds a vector filled with the components provided by a vector.",0,null],[11,"from_fn","","Builds a vector filled with the result of a function.",0,{"inputs":[{"name":"dvec"},{"name":"usize"},{"name":"f"}],"output":{"name":"dvec"}}],[11,"len","","",0,{"inputs":[{"name":"dvec"}],"output":{"name":"usize"}}],[11,"from_iter","","",0,{"inputs":[{"name":"dvec"},{"name":"i"}],"output":{"name":"dvec"}}],[11,"new_zeros","","Builds a vector filled with zeros.",0,{"inputs":[{"name":"dvec"},{"name":"usize"}],"output":{"name":"dvec"}}],[11,"is_zero","","Tests if all components of the vector are zeroes.",0,{"inputs":[{"name":"dvec"}],"output":{"name":"bool"}}],[11,"as_ref","","Slices this vector.",0,null],[11,"as_mut","","Mutably slices this vector.",0,null],[11,"shape","","",0,{"inputs":[{"name":"dvec"}],"output":{"name":"usize"}}],[11,"swap","","",0,{"inputs":[{"name":"dvec"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"unsafe_at","","",0,{"inputs":[{"name":"dvec"},{"name":"usize"}],"output":{"name":"n"}}],[11,"unsafe_set","","",0,{"inputs":[{"name":"dvec"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"index","","",0,null],[11,"index_mut","","",0,null],[11,"new_ones","","Builds a vector filled with ones.",0,{"inputs":[{"name":"dvec"},{"name":"usize"}],"output":{"name":"dvec"}}],[11,"new_random","","Builds a vector filled with random values.",0,{"inputs":[{"name":"dvec"},{"name":"usize"}],"output":{"name":"dvec"}}],[11,"iter","","",0,{"inputs":[{"name":"dvec"}],"output":{"name":"iter"}}],[11,"iter_mut","","",0,{"inputs":[{"name":"dvec"}],"output":{"name":"itermut"}}],[11,"axpy","","",0,{"inputs":[{"name":"dvec"},{"name":"n"},{"name":"dvec"}],"output":null}],[11,"canonical_basis_with_dim","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",0,{"inputs":[{"name":"dvec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",0,{"inputs":[{"name":"dvec"}],"output":{"name":"vec"}}],[11,"mul","","",0,{"inputs":[{"name":"dvec"},{"name":"dvec"}],"output":{"name":"dvec"}}],[11,"div","","",0,{"inputs":[{"name":"dvec"},{"name":"dvec"}],"output":{"name":"dvec"}}],[11,"add","","",0,{"inputs":[{"name":"dvec"},{"name":"dvec"}],"output":{"name":"dvec"}}],[11,"sub","","",0,{"inputs":[{"name":"dvec"},{"name":"dvec"}],"output":{"name":"dvec"}}],[11,"neg","","",0,{"inputs":[{"name":"dvec"}],"output":{"name":"dvec"}}],[11,"dot","","",0,{"inputs":[{"name":"dvec"},{"name":"dvec"}],"output":{"name":"n"}}],[11,"sqnorm","","",0,{"inputs":[{"name":"dvec"}],"output":{"name":"n"}}],[11,"normalize","","",0,{"inputs":[{"name":"dvec"}],"output":{"name":"dvec"}}],[11,"normalize_mut","","",0,{"inputs":[{"name":"dvec"}],"output":{"name":"n"}}],[11,"mean","","",0,{"inputs":[{"name":"dvec"}],"output":{"name":"n"}}],[11,"approx_epsilon","","",0,{"inputs":[{"name":"dvec"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",0,{"inputs":[{"name":"dvec"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",0,{"inputs":[{"name":"dvec"},{"name":"dvec"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",0,{"inputs":[{"name":"dvec"},{"name":"dvec"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"mul","","",0,{"inputs":[{"name":"dvec"},{"name":"n"}],"output":{"name":"dvec"}}],[11,"div","","",0,{"inputs":[{"name":"dvec"},{"name":"n"}],"output":{"name":"dvec"}}],[11,"add","","",0,{"inputs":[{"name":"dvec"},{"name":"n"}],"output":{"name":"dvec"}}],[11,"sub","","",0,{"inputs":[{"name":"dvec"},{"name":"n"}],"output":{"name":"dvec"}}],[11,"len","","The number of elements of this vector.",26,{"inputs":[{"name":"dvec1"}],"output":{"name":"usize"}}],[11,"new_uninitialized","","Creates an uninitialized vec of dimension `dim`.",26,{"inputs":[{"name":"dvec1"},{"name":"usize"}],"output":{"name":"dvec1"}}],[11,"eq","","",26,{"inputs":[{"name":"dvec1"},{"name":"dvec1"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"dvec1"}],"output":{"name":"dvec1"}}],[11,"new_zeros","","Builds a vector filled with zeros.",26,{"inputs":[{"name":"dvec1"},{"name":"usize"}],"output":{"name":"dvec1"}}],[11,"is_zero","","Tests if all components of the vector are zeroes.",26,{"inputs":[{"name":"dvec1"}],"output":{"name":"bool"}}],[11,"as_ref","","Slices this vector.",26,null],[11,"as_mut","","Mutably slices this vector.",26,null],[11,"shape","","",26,{"inputs":[{"name":"dvec1"}],"output":{"name":"usize"}}],[11,"swap","","",26,{"inputs":[{"name":"dvec1"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"unsafe_at","","",26,{"inputs":[{"name":"dvec1"},{"name":"usize"}],"output":{"name":"n"}}],[11,"unsafe_set","","",26,{"inputs":[{"name":"dvec1"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"index","","",26,null],[11,"index_mut","","",26,null],[11,"new_ones","","Builds a vector filled with ones.",26,{"inputs":[{"name":"dvec1"},{"name":"usize"}],"output":{"name":"dvec1"}}],[11,"new_random","","Builds a vector filled with random values.",26,{"inputs":[{"name":"dvec1"},{"name":"usize"}],"output":{"name":"dvec1"}}],[11,"iter","","",26,{"inputs":[{"name":"dvec1"}],"output":{"name":"iter"}}],[11,"iter_mut","","",26,{"inputs":[{"name":"dvec1"}],"output":{"name":"itermut"}}],[11,"axpy","","",26,{"inputs":[{"name":"dvec1"},{"name":"n"},{"name":"dvec1"}],"output":null}],[11,"canonical_basis_with_dim","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",26,{"inputs":[{"name":"dvec1"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",26,{"inputs":[{"name":"dvec1"}],"output":{"name":"vec"}}],[11,"mul","","",26,{"inputs":[{"name":"dvec1"},{"name":"dvec1"}],"output":{"name":"dvec1"}}],[11,"div","","",26,{"inputs":[{"name":"dvec1"},{"name":"dvec1"}],"output":{"name":"dvec1"}}],[11,"add","","",26,{"inputs":[{"name":"dvec1"},{"name":"dvec1"}],"output":{"name":"dvec1"}}],[11,"sub","","",26,{"inputs":[{"name":"dvec1"},{"name":"dvec1"}],"output":{"name":"dvec1"}}],[11,"neg","","",26,{"inputs":[{"name":"dvec1"}],"output":{"name":"dvec1"}}],[11,"dot","","",26,{"inputs":[{"name":"dvec1"},{"name":"dvec1"}],"output":{"name":"n"}}],[11,"sqnorm","","",26,{"inputs":[{"name":"dvec1"}],"output":{"name":"n"}}],[11,"normalize","","",26,{"inputs":[{"name":"dvec1"}],"output":{"name":"dvec1"}}],[11,"normalize_mut","","",26,{"inputs":[{"name":"dvec1"}],"output":{"name":"n"}}],[11,"mean","","",26,{"inputs":[{"name":"dvec1"}],"output":{"name":"n"}}],[11,"approx_epsilon","","",26,{"inputs":[{"name":"dvec1"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",26,{"inputs":[{"name":"dvec1"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",26,{"inputs":[{"name":"dvec1"},{"name":"dvec1"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",26,{"inputs":[{"name":"dvec1"},{"name":"dvec1"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"mul","","",26,{"inputs":[{"name":"dvec1"},{"name":"n"}],"output":{"name":"dvec1"}}],[11,"div","","",26,{"inputs":[{"name":"dvec1"},{"name":"n"}],"output":{"name":"dvec1"}}],[11,"add","","",26,{"inputs":[{"name":"dvec1"},{"name":"n"}],"output":{"name":"dvec1"}}],[11,"sub","","",26,{"inputs":[{"name":"dvec1"},{"name":"n"}],"output":{"name":"dvec1"}}],[11,"from_elem","","Builds a vector filled with a constant.",26,{"inputs":[{"name":"dvec1"},{"name":"usize"},{"name":"n"}],"output":{"name":"dvec1"}}],[11,"from_slice","","Builds a vector filled with the components provided by a vector.",26,null],[11,"from_fn","","Builds a vector filled with the result of a function.",26,{"inputs":[{"name":"dvec1"},{"name":"usize"},{"name":"f"}],"output":{"name":"dvec1"}}],[11,"from_iter","","",26,{"inputs":[{"name":"dvec1"},{"name":"i"}],"output":{"name":"dvec1"}}],[11,"len","","The number of elements of this vector.",28,{"inputs":[{"name":"dvec2"}],"output":{"name":"usize"}}],[11,"new_uninitialized","","Creates an uninitialized vec of dimension `dim`.",28,{"inputs":[{"name":"dvec2"},{"name":"usize"}],"output":{"name":"dvec2"}}],[11,"eq","","",28,{"inputs":[{"name":"dvec2"},{"name":"dvec2"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"dvec2"}],"output":{"name":"dvec2"}}],[11,"new_zeros","","Builds a vector filled with zeros.",28,{"inputs":[{"name":"dvec2"},{"name":"usize"}],"output":{"name":"dvec2"}}],[11,"is_zero","","Tests if all components of the vector are zeroes.",28,{"inputs":[{"name":"dvec2"}],"output":{"name":"bool"}}],[11,"as_ref","","Slices this vector.",28,null],[11,"as_mut","","Mutably slices this vector.",28,null],[11,"shape","","",28,{"inputs":[{"name":"dvec2"}],"output":{"name":"usize"}}],[11,"swap","","",28,{"inputs":[{"name":"dvec2"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"unsafe_at","","",28,{"inputs":[{"name":"dvec2"},{"name":"usize"}],"output":{"name":"n"}}],[11,"unsafe_set","","",28,{"inputs":[{"name":"dvec2"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"index","","",28,null],[11,"index_mut","","",28,null],[11,"new_ones","","Builds a vector filled with ones.",28,{"inputs":[{"name":"dvec2"},{"name":"usize"}],"output":{"name":"dvec2"}}],[11,"new_random","","Builds a vector filled with random values.",28,{"inputs":[{"name":"dvec2"},{"name":"usize"}],"output":{"name":"dvec2"}}],[11,"iter","","",28,{"inputs":[{"name":"dvec2"}],"output":{"name":"iter"}}],[11,"iter_mut","","",28,{"inputs":[{"name":"dvec2"}],"output":{"name":"itermut"}}],[11,"axpy","","",28,{"inputs":[{"name":"dvec2"},{"name":"n"},{"name":"dvec2"}],"output":null}],[11,"canonical_basis_with_dim","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",28,{"inputs":[{"name":"dvec2"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",28,{"inputs":[{"name":"dvec2"}],"output":{"name":"vec"}}],[11,"mul","","",28,{"inputs":[{"name":"dvec2"},{"name":"dvec2"}],"output":{"name":"dvec2"}}],[11,"div","","",28,{"inputs":[{"name":"dvec2"},{"name":"dvec2"}],"output":{"name":"dvec2"}}],[11,"add","","",28,{"inputs":[{"name":"dvec2"},{"name":"dvec2"}],"output":{"name":"dvec2"}}],[11,"sub","","",28,{"inputs":[{"name":"dvec2"},{"name":"dvec2"}],"output":{"name":"dvec2"}}],[11,"neg","","",28,{"inputs":[{"name":"dvec2"}],"output":{"name":"dvec2"}}],[11,"dot","","",28,{"inputs":[{"name":"dvec2"},{"name":"dvec2"}],"output":{"name":"n"}}],[11,"sqnorm","","",28,{"inputs":[{"name":"dvec2"}],"output":{"name":"n"}}],[11,"normalize","","",28,{"inputs":[{"name":"dvec2"}],"output":{"name":"dvec2"}}],[11,"normalize_mut","","",28,{"inputs":[{"name":"dvec2"}],"output":{"name":"n"}}],[11,"mean","","",28,{"inputs":[{"name":"dvec2"}],"output":{"name":"n"}}],[11,"approx_epsilon","","",28,{"inputs":[{"name":"dvec2"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",28,{"inputs":[{"name":"dvec2"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",28,{"inputs":[{"name":"dvec2"},{"name":"dvec2"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",28,{"inputs":[{"name":"dvec2"},{"name":"dvec2"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"mul","","",28,{"inputs":[{"name":"dvec2"},{"name":"n"}],"output":{"name":"dvec2"}}],[11,"div","","",28,{"inputs":[{"name":"dvec2"},{"name":"n"}],"output":{"name":"dvec2"}}],[11,"add","","",28,{"inputs":[{"name":"dvec2"},{"name":"n"}],"output":{"name":"dvec2"}}],[11,"sub","","",28,{"inputs":[{"name":"dvec2"},{"name":"n"}],"output":{"name":"dvec2"}}],[11,"from_elem","","Builds a vector filled with a constant.",28,{"inputs":[{"name":"dvec2"},{"name":"usize"},{"name":"n"}],"output":{"name":"dvec2"}}],[11,"from_slice","","Builds a vector filled with the components provided by a vector.",28,null],[11,"from_fn","","Builds a vector filled with the result of a function.",28,{"inputs":[{"name":"dvec2"},{"name":"usize"},{"name":"f"}],"output":{"name":"dvec2"}}],[11,"from_iter","","",28,{"inputs":[{"name":"dvec2"},{"name":"i"}],"output":{"name":"dvec2"}}],[11,"len","","The number of elements of this vector.",30,{"inputs":[{"name":"dvec3"}],"output":{"name":"usize"}}],[11,"new_uninitialized","","Creates an uninitialized vec of dimension `dim`.",30,{"inputs":[{"name":"dvec3"},{"name":"usize"}],"output":{"name":"dvec3"}}],[11,"eq","","",30,{"inputs":[{"name":"dvec3"},{"name":"dvec3"}],"output":{"name":"bool"}}],[11,"clone","","",30,{"inputs":[{"name":"dvec3"}],"output":{"name":"dvec3"}}],[11,"new_zeros","","Builds a vector filled with zeros.",30,{"inputs":[{"name":"dvec3"},{"name":"usize"}],"output":{"name":"dvec3"}}],[11,"is_zero","","Tests if all components of the vector are zeroes.",30,{"inputs":[{"name":"dvec3"}],"output":{"name":"bool"}}],[11,"as_ref","","Slices this vector.",30,null],[11,"as_mut","","Mutably slices this vector.",30,null],[11,"shape","","",30,{"inputs":[{"name":"dvec3"}],"output":{"name":"usize"}}],[11,"swap","","",30,{"inputs":[{"name":"dvec3"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"unsafe_at","","",30,{"inputs":[{"name":"dvec3"},{"name":"usize"}],"output":{"name":"n"}}],[11,"unsafe_set","","",30,{"inputs":[{"name":"dvec3"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"index","","",30,null],[11,"index_mut","","",30,null],[11,"new_ones","","Builds a vector filled with ones.",30,{"inputs":[{"name":"dvec3"},{"name":"usize"}],"output":{"name":"dvec3"}}],[11,"new_random","","Builds a vector filled with random values.",30,{"inputs":[{"name":"dvec3"},{"name":"usize"}],"output":{"name":"dvec3"}}],[11,"iter","","",30,{"inputs":[{"name":"dvec3"}],"output":{"name":"iter"}}],[11,"iter_mut","","",30,{"inputs":[{"name":"dvec3"}],"output":{"name":"itermut"}}],[11,"axpy","","",30,{"inputs":[{"name":"dvec3"},{"name":"n"},{"name":"dvec3"}],"output":null}],[11,"canonical_basis_with_dim","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",30,{"inputs":[{"name":"dvec3"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",30,{"inputs":[{"name":"dvec3"}],"output":{"name":"vec"}}],[11,"mul","","",30,{"inputs":[{"name":"dvec3"},{"name":"dvec3"}],"output":{"name":"dvec3"}}],[11,"div","","",30,{"inputs":[{"name":"dvec3"},{"name":"dvec3"}],"output":{"name":"dvec3"}}],[11,"add","","",30,{"inputs":[{"name":"dvec3"},{"name":"dvec3"}],"output":{"name":"dvec3"}}],[11,"sub","","",30,{"inputs":[{"name":"dvec3"},{"name":"dvec3"}],"output":{"name":"dvec3"}}],[11,"neg","","",30,{"inputs":[{"name":"dvec3"}],"output":{"name":"dvec3"}}],[11,"dot","","",30,{"inputs":[{"name":"dvec3"},{"name":"dvec3"}],"output":{"name":"n"}}],[11,"sqnorm","","",30,{"inputs":[{"name":"dvec3"}],"output":{"name":"n"}}],[11,"normalize","","",30,{"inputs":[{"name":"dvec3"}],"output":{"name":"dvec3"}}],[11,"normalize_mut","","",30,{"inputs":[{"name":"dvec3"}],"output":{"name":"n"}}],[11,"mean","","",30,{"inputs":[{"name":"dvec3"}],"output":{"name":"n"}}],[11,"approx_epsilon","","",30,{"inputs":[{"name":"dvec3"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",30,{"inputs":[{"name":"dvec3"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",30,{"inputs":[{"name":"dvec3"},{"name":"dvec3"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",30,{"inputs":[{"name":"dvec3"},{"name":"dvec3"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"mul","","",30,{"inputs":[{"name":"dvec3"},{"name":"n"}],"output":{"name":"dvec3"}}],[11,"div","","",30,{"inputs":[{"name":"dvec3"},{"name":"n"}],"output":{"name":"dvec3"}}],[11,"add","","",30,{"inputs":[{"name":"dvec3"},{"name":"n"}],"output":{"name":"dvec3"}}],[11,"sub","","",30,{"inputs":[{"name":"dvec3"},{"name":"n"}],"output":{"name":"dvec3"}}],[11,"from_elem","","Builds a vector filled with a constant.",30,{"inputs":[{"name":"dvec3"},{"name":"usize"},{"name":"n"}],"output":{"name":"dvec3"}}],[11,"from_slice","","Builds a vector filled with the components provided by a vector.",30,null],[11,"from_fn","","Builds a vector filled with the result of a function.",30,{"inputs":[{"name":"dvec3"},{"name":"usize"},{"name":"f"}],"output":{"name":"dvec3"}}],[11,"from_iter","","",30,{"inputs":[{"name":"dvec3"},{"name":"i"}],"output":{"name":"dvec3"}}],[11,"len","","The number of elements of this vector.",32,{"inputs":[{"name":"dvec4"}],"output":{"name":"usize"}}],[11,"new_uninitialized","","Creates an uninitialized vec of dimension `dim`.",32,{"inputs":[{"name":"dvec4"},{"name":"usize"}],"output":{"name":"dvec4"}}],[11,"eq","","",32,{"inputs":[{"name":"dvec4"},{"name":"dvec4"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"dvec4"}],"output":{"name":"dvec4"}}],[11,"new_zeros","","Builds a vector filled with zeros.",32,{"inputs":[{"name":"dvec4"},{"name":"usize"}],"output":{"name":"dvec4"}}],[11,"is_zero","","Tests if all components of the vector are zeroes.",32,{"inputs":[{"name":"dvec4"}],"output":{"name":"bool"}}],[11,"as_ref","","Slices this vector.",32,null],[11,"as_mut","","Mutably slices this vector.",32,null],[11,"shape","","",32,{"inputs":[{"name":"dvec4"}],"output":{"name":"usize"}}],[11,"swap","","",32,{"inputs":[{"name":"dvec4"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"unsafe_at","","",32,{"inputs":[{"name":"dvec4"},{"name":"usize"}],"output":{"name":"n"}}],[11,"unsafe_set","","",32,{"inputs":[{"name":"dvec4"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"index","","",32,null],[11,"index_mut","","",32,null],[11,"new_ones","","Builds a vector filled with ones.",32,{"inputs":[{"name":"dvec4"},{"name":"usize"}],"output":{"name":"dvec4"}}],[11,"new_random","","Builds a vector filled with random values.",32,{"inputs":[{"name":"dvec4"},{"name":"usize"}],"output":{"name":"dvec4"}}],[11,"iter","","",32,{"inputs":[{"name":"dvec4"}],"output":{"name":"iter"}}],[11,"iter_mut","","",32,{"inputs":[{"name":"dvec4"}],"output":{"name":"itermut"}}],[11,"axpy","","",32,{"inputs":[{"name":"dvec4"},{"name":"n"},{"name":"dvec4"}],"output":null}],[11,"canonical_basis_with_dim","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",32,{"inputs":[{"name":"dvec4"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",32,{"inputs":[{"name":"dvec4"}],"output":{"name":"vec"}}],[11,"mul","","",32,{"inputs":[{"name":"dvec4"},{"name":"dvec4"}],"output":{"name":"dvec4"}}],[11,"div","","",32,{"inputs":[{"name":"dvec4"},{"name":"dvec4"}],"output":{"name":"dvec4"}}],[11,"add","","",32,{"inputs":[{"name":"dvec4"},{"name":"dvec4"}],"output":{"name":"dvec4"}}],[11,"sub","","",32,{"inputs":[{"name":"dvec4"},{"name":"dvec4"}],"output":{"name":"dvec4"}}],[11,"neg","","",32,{"inputs":[{"name":"dvec4"}],"output":{"name":"dvec4"}}],[11,"dot","","",32,{"inputs":[{"name":"dvec4"},{"name":"dvec4"}],"output":{"name":"n"}}],[11,"sqnorm","","",32,{"inputs":[{"name":"dvec4"}],"output":{"name":"n"}}],[11,"normalize","","",32,{"inputs":[{"name":"dvec4"}],"output":{"name":"dvec4"}}],[11,"normalize_mut","","",32,{"inputs":[{"name":"dvec4"}],"output":{"name":"n"}}],[11,"mean","","",32,{"inputs":[{"name":"dvec4"}],"output":{"name":"n"}}],[11,"approx_epsilon","","",32,{"inputs":[{"name":"dvec4"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",32,{"inputs":[{"name":"dvec4"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",32,{"inputs":[{"name":"dvec4"},{"name":"dvec4"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",32,{"inputs":[{"name":"dvec4"},{"name":"dvec4"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"mul","","",32,{"inputs":[{"name":"dvec4"},{"name":"n"}],"output":{"name":"dvec4"}}],[11,"div","","",32,{"inputs":[{"name":"dvec4"},{"name":"n"}],"output":{"name":"dvec4"}}],[11,"add","","",32,{"inputs":[{"name":"dvec4"},{"name":"n"}],"output":{"name":"dvec4"}}],[11,"sub","","",32,{"inputs":[{"name":"dvec4"},{"name":"n"}],"output":{"name":"dvec4"}}],[11,"from_elem","","Builds a vector filled with a constant.",32,{"inputs":[{"name":"dvec4"},{"name":"usize"},{"name":"n"}],"output":{"name":"dvec4"}}],[11,"from_slice","","Builds a vector filled with the components provided by a vector.",32,null],[11,"from_fn","","Builds a vector filled with the result of a function.",32,{"inputs":[{"name":"dvec4"},{"name":"usize"},{"name":"f"}],"output":{"name":"dvec4"}}],[11,"from_iter","","",32,{"inputs":[{"name":"dvec4"},{"name":"i"}],"output":{"name":"dvec4"}}],[11,"len","","The number of elements of this vector.",34,{"inputs":[{"name":"dvec5"}],"output":{"name":"usize"}}],[11,"new_uninitialized","","Creates an uninitialized vec of dimension `dim`.",34,{"inputs":[{"name":"dvec5"},{"name":"usize"}],"output":{"name":"dvec5"}}],[11,"eq","","",34,{"inputs":[{"name":"dvec5"},{"name":"dvec5"}],"output":{"name":"bool"}}],[11,"clone","","",34,{"inputs":[{"name":"dvec5"}],"output":{"name":"dvec5"}}],[11,"new_zeros","","Builds a vector filled with zeros.",34,{"inputs":[{"name":"dvec5"},{"name":"usize"}],"output":{"name":"dvec5"}}],[11,"is_zero","","Tests if all components of the vector are zeroes.",34,{"inputs":[{"name":"dvec5"}],"output":{"name":"bool"}}],[11,"as_ref","","Slices this vector.",34,null],[11,"as_mut","","Mutably slices this vector.",34,null],[11,"shape","","",34,{"inputs":[{"name":"dvec5"}],"output":{"name":"usize"}}],[11,"swap","","",34,{"inputs":[{"name":"dvec5"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"unsafe_at","","",34,{"inputs":[{"name":"dvec5"},{"name":"usize"}],"output":{"name":"n"}}],[11,"unsafe_set","","",34,{"inputs":[{"name":"dvec5"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"index","","",34,null],[11,"index_mut","","",34,null],[11,"new_ones","","Builds a vector filled with ones.",34,{"inputs":[{"name":"dvec5"},{"name":"usize"}],"output":{"name":"dvec5"}}],[11,"new_random","","Builds a vector filled with random values.",34,{"inputs":[{"name":"dvec5"},{"name":"usize"}],"output":{"name":"dvec5"}}],[11,"iter","","",34,{"inputs":[{"name":"dvec5"}],"output":{"name":"iter"}}],[11,"iter_mut","","",34,{"inputs":[{"name":"dvec5"}],"output":{"name":"itermut"}}],[11,"axpy","","",34,{"inputs":[{"name":"dvec5"},{"name":"n"},{"name":"dvec5"}],"output":null}],[11,"canonical_basis_with_dim","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",34,{"inputs":[{"name":"dvec5"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",34,{"inputs":[{"name":"dvec5"}],"output":{"name":"vec"}}],[11,"mul","","",34,{"inputs":[{"name":"dvec5"},{"name":"dvec5"}],"output":{"name":"dvec5"}}],[11,"div","","",34,{"inputs":[{"name":"dvec5"},{"name":"dvec5"}],"output":{"name":"dvec5"}}],[11,"add","","",34,{"inputs":[{"name":"dvec5"},{"name":"dvec5"}],"output":{"name":"dvec5"}}],[11,"sub","","",34,{"inputs":[{"name":"dvec5"},{"name":"dvec5"}],"output":{"name":"dvec5"}}],[11,"neg","","",34,{"inputs":[{"name":"dvec5"}],"output":{"name":"dvec5"}}],[11,"dot","","",34,{"inputs":[{"name":"dvec5"},{"name":"dvec5"}],"output":{"name":"n"}}],[11,"sqnorm","","",34,{"inputs":[{"name":"dvec5"}],"output":{"name":"n"}}],[11,"normalize","","",34,{"inputs":[{"name":"dvec5"}],"output":{"name":"dvec5"}}],[11,"normalize_mut","","",34,{"inputs":[{"name":"dvec5"}],"output":{"name":"n"}}],[11,"mean","","",34,{"inputs":[{"name":"dvec5"}],"output":{"name":"n"}}],[11,"approx_epsilon","","",34,{"inputs":[{"name":"dvec5"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",34,{"inputs":[{"name":"dvec5"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",34,{"inputs":[{"name":"dvec5"},{"name":"dvec5"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",34,{"inputs":[{"name":"dvec5"},{"name":"dvec5"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"mul","","",34,{"inputs":[{"name":"dvec5"},{"name":"n"}],"output":{"name":"dvec5"}}],[11,"div","","",34,{"inputs":[{"name":"dvec5"},{"name":"n"}],"output":{"name":"dvec5"}}],[11,"add","","",34,{"inputs":[{"name":"dvec5"},{"name":"n"}],"output":{"name":"dvec5"}}],[11,"sub","","",34,{"inputs":[{"name":"dvec5"},{"name":"n"}],"output":{"name":"dvec5"}}],[11,"from_elem","","Builds a vector filled with a constant.",34,{"inputs":[{"name":"dvec5"},{"name":"usize"},{"name":"n"}],"output":{"name":"dvec5"}}],[11,"from_slice","","Builds a vector filled with the components provided by a vector.",34,null],[11,"from_fn","","Builds a vector filled with the result of a function.",34,{"inputs":[{"name":"dvec5"},{"name":"usize"},{"name":"f"}],"output":{"name":"dvec5"}}],[11,"from_iter","","",34,{"inputs":[{"name":"dvec5"},{"name":"i"}],"output":{"name":"dvec5"}}],[11,"len","","The number of elements of this vector.",36,{"inputs":[{"name":"dvec6"}],"output":{"name":"usize"}}],[11,"new_uninitialized","","Creates an uninitialized vec of dimension `dim`.",36,{"inputs":[{"name":"dvec6"},{"name":"usize"}],"output":{"name":"dvec6"}}],[11,"eq","","",36,{"inputs":[{"name":"dvec6"},{"name":"dvec6"}],"output":{"name":"bool"}}],[11,"clone","","",36,{"inputs":[{"name":"dvec6"}],"output":{"name":"dvec6"}}],[11,"new_zeros","","Builds a vector filled with zeros.",36,{"inputs":[{"name":"dvec6"},{"name":"usize"}],"output":{"name":"dvec6"}}],[11,"is_zero","","Tests if all components of the vector are zeroes.",36,{"inputs":[{"name":"dvec6"}],"output":{"name":"bool"}}],[11,"as_ref","","Slices this vector.",36,null],[11,"as_mut","","Mutably slices this vector.",36,null],[11,"shape","","",36,{"inputs":[{"name":"dvec6"}],"output":{"name":"usize"}}],[11,"swap","","",36,{"inputs":[{"name":"dvec6"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"unsafe_at","","",36,{"inputs":[{"name":"dvec6"},{"name":"usize"}],"output":{"name":"n"}}],[11,"unsafe_set","","",36,{"inputs":[{"name":"dvec6"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"index","","",36,null],[11,"index_mut","","",36,null],[11,"new_ones","","Builds a vector filled with ones.",36,{"inputs":[{"name":"dvec6"},{"name":"usize"}],"output":{"name":"dvec6"}}],[11,"new_random","","Builds a vector filled with random values.",36,{"inputs":[{"name":"dvec6"},{"name":"usize"}],"output":{"name":"dvec6"}}],[11,"iter","","",36,{"inputs":[{"name":"dvec6"}],"output":{"name":"iter"}}],[11,"iter_mut","","",36,{"inputs":[{"name":"dvec6"}],"output":{"name":"itermut"}}],[11,"axpy","","",36,{"inputs":[{"name":"dvec6"},{"name":"n"},{"name":"dvec6"}],"output":null}],[11,"canonical_basis_with_dim","","Computes the canonical basis for the given dimension. A canonical basis is a set of\nvectors, mutually orthogonal, with all its component equal to 0.0 except one which is equal\nto 1.0.",36,{"inputs":[{"name":"dvec6"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"orthogonal_subspace_basis","","Computes a basis of the space orthogonal to the vector. If the input vector is of dimension\n`n`, this will return `n - 1` vectors.",36,{"inputs":[{"name":"dvec6"}],"output":{"name":"vec"}}],[11,"mul","","",36,{"inputs":[{"name":"dvec6"},{"name":"dvec6"}],"output":{"name":"dvec6"}}],[11,"div","","",36,{"inputs":[{"name":"dvec6"},{"name":"dvec6"}],"output":{"name":"dvec6"}}],[11,"add","","",36,{"inputs":[{"name":"dvec6"},{"name":"dvec6"}],"output":{"name":"dvec6"}}],[11,"sub","","",36,{"inputs":[{"name":"dvec6"},{"name":"dvec6"}],"output":{"name":"dvec6"}}],[11,"neg","","",36,{"inputs":[{"name":"dvec6"}],"output":{"name":"dvec6"}}],[11,"dot","","",36,{"inputs":[{"name":"dvec6"},{"name":"dvec6"}],"output":{"name":"n"}}],[11,"sqnorm","","",36,{"inputs":[{"name":"dvec6"}],"output":{"name":"n"}}],[11,"normalize","","",36,{"inputs":[{"name":"dvec6"}],"output":{"name":"dvec6"}}],[11,"normalize_mut","","",36,{"inputs":[{"name":"dvec6"}],"output":{"name":"n"}}],[11,"mean","","",36,{"inputs":[{"name":"dvec6"}],"output":{"name":"n"}}],[11,"approx_epsilon","","",36,{"inputs":[{"name":"dvec6"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",36,{"inputs":[{"name":"dvec6"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",36,{"inputs":[{"name":"dvec6"},{"name":"dvec6"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",36,{"inputs":[{"name":"dvec6"},{"name":"dvec6"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"mul","","",36,{"inputs":[{"name":"dvec6"},{"name":"n"}],"output":{"name":"dvec6"}}],[11,"div","","",36,{"inputs":[{"name":"dvec6"},{"name":"n"}],"output":{"name":"dvec6"}}],[11,"add","","",36,{"inputs":[{"name":"dvec6"},{"name":"n"}],"output":{"name":"dvec6"}}],[11,"sub","","",36,{"inputs":[{"name":"dvec6"},{"name":"n"}],"output":{"name":"dvec6"}}],[11,"from_elem","","Builds a vector filled with a constant.",36,{"inputs":[{"name":"dvec6"},{"name":"usize"},{"name":"n"}],"output":{"name":"dvec6"}}],[11,"from_slice","","Builds a vector filled with the components provided by a vector.",36,null],[11,"from_fn","","Builds a vector filled with the result of a function.",36,{"inputs":[{"name":"dvec6"},{"name":"usize"},{"name":"f"}],"output":{"name":"dvec6"}}],[11,"from_iter","","",36,{"inputs":[{"name":"dvec6"},{"name":"i"}],"output":{"name":"dvec6"}}],[11,"fmt","","",37,{"inputs":[{"name":"vec0"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",37,{"inputs":[{"name":"vec0"}],"output":{"name":"vec0"}}],[11,"eq","","",37,{"inputs":[{"name":"vec0"},{"name":"vec0"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"vec0"},{"name":"vec0"}],"output":{"name":"bool"}}],[11,"new","","Creates a new vector.",37,{"inputs":[{"name":"vec0"}],"output":{"name":"vec0"}}],[11,"repeat","","",37,{"inputs":[{"name":"vec0"},{"name":"n"}],"output":{"name":"vec0"}}],[11,"fmt","","",10,{"inputs":[{"name":"vec1"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",10,null],[11,"clone","","",10,{"inputs":[{"name":"vec1"}],"output":{"name":"vec1"}}],[11,"decode","","",10,{"inputs":[{"name":"vec1"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",10,{"inputs":[{"name":"vec1"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"vec1"},{"name":"vec1"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"vec1"},{"name":"vec1"}],"output":{"name":"bool"}}],[11,"new","","Creates a new vector.",10,{"inputs":[{"name":"vec1"},{"name":"n"}],"output":{"name":"vec1"}}],[11,"inf","","",10,{"inputs":[{"name":"vec1"},{"name":"vec1"}],"output":{"name":"vec1"}}],[11,"sup","","",10,{"inputs":[{"name":"vec1"},{"name":"vec1"}],"output":{"name":"vec1"}}],[11,"partial_cmp","","",10,{"inputs":[{"name":"vec1"},{"name":"vec1"}],"output":{"name":"pordering"}}],[11,"partial_lt","","",10,{"inputs":[{"name":"vec1"},{"name":"vec1"}],"output":{"name":"bool"}}],[11,"partial_le","","",10,{"inputs":[{"name":"vec1"},{"name":"vec1"}],"output":{"name":"bool"}}],[11,"partial_gt","","",10,{"inputs":[{"name":"vec1"},{"name":"vec1"}],"output":{"name":"bool"}}],[11,"partial_ge","","",10,{"inputs":[{"name":"vec1"},{"name":"vec1"}],"output":{"name":"bool"}}],[11,"x","","Create a unit vector with its `$compN` component equal to 1.0.",10,{"inputs":[{"name":"vec1"}],"output":{"name":"vec1"}}],[11,"from","","",10,{"inputs":[{"name":"vec1"},{"name":"vec1"}],"output":{"name":"vec1"}}],[11,"as_ref","","",10,null],[11,"as_mut","","",10,null],[11,"index","","",10,null],[11,"index_mut","","",10,null],[11,"shape","","",10,{"inputs":[{"name":"vec1"}],"output":{"name":"usize"}}],[11,"swap","","",10,{"inputs":[{"name":"vec1"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"unsafe_at","","",10,{"inputs":[{"name":"vec1"},{"name":"usize"}],"output":{"name":"n"}}],[11,"unsafe_set","","",10,{"inputs":[{"name":"vec1"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"at_fast","","Unsafe read access to a vector element by index.",10,{"inputs":[{"name":"vec1"},{"name":"usize"}],"output":{"name":"n"}}],[11,"set_fast","","Unsafe write access to a vector element by index.",10,{"inputs":[{"name":"vec1"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"repeat","","Creates a new vector with all its components equal to a given value.",10,{"inputs":[{"name":"vec1"},{"name":"n"}],"output":{"name":"vec1"}}],[11,"dim","","",10,{"inputs":[{"name":"vec1"},{"name":"option"}],"output":{"name":"usize"}}],[11,"len","","",10,{"inputs":[{"name":"vec1"}],"output":{"name":"usize"}}],[11,"add","","",10,{"inputs":[{"name":"vec1"},{"name":"vec1"}],"output":{"name":"vec1"}}],[11,"sub","","",10,{"inputs":[{"name":"vec1"},{"name":"vec1"}],"output":{"name":"vec1"}}],[11,"mul","","",10,{"inputs":[{"name":"vec1"},{"name":"vec1"}],"output":{"name":"vec1"}}],[11,"div","","",10,{"inputs":[{"name":"vec1"},{"name":"vec1"}],"output":{"name":"vec1"}}],[11,"add","","",10,{"inputs":[{"name":"vec1"},{"name":"n"}],"output":{"name":"vec1"}}],[11,"sub","","",10,{"inputs":[{"name":"vec1"},{"name":"n"}],"output":{"name":"vec1"}}],[11,"mul","","",10,{"inputs":[{"name":"vec1"},{"name":"n"}],"output":{"name":"vec1"}}],[11,"div","","",10,{"inputs":[{"name":"vec1"},{"name":"n"}],"output":{"name":"vec1"}}],[11,"neg","","",10,{"inputs":[{"name":"vec1"}],"output":{"name":"vec1"}}],[11,"dot","","",10,{"inputs":[{"name":"vec1"},{"name":"vec1"}],"output":{"name":"n"}}],[11,"translation","","",10,{"inputs":[{"name":"vec1"}],"output":{"name":"vec1"}}],[11,"inv_translation","","",10,{"inputs":[{"name":"vec1"}],"output":{"name":"vec1"}}],[11,"append_translation_mut","","",10,{"inputs":[{"name":"vec1"},{"name":"vec1"}],"output":null}],[11,"append_translation","","",10,{"inputs":[{"name":"vec1"},{"name":"vec1"}],"output":{"name":"vec1"}}],[11,"prepend_translation_mut","","",10,{"inputs":[{"name":"vec1"},{"name":"vec1"}],"output":null}],[11,"prepend_translation","","",10,{"inputs":[{"name":"vec1"},{"name":"vec1"}],"output":{"name":"vec1"}}],[11,"set_translation","","",10,{"inputs":[{"name":"vec1"},{"name":"vec1"}],"output":null}],[11,"sqnorm","","",10,{"inputs":[{"name":"vec1"}],"output":{"name":"n"}}],[11,"normalize","","",10,{"inputs":[{"name":"vec1"}],"output":{"name":"vec1"}}],[11,"normalize_mut","","",10,{"inputs":[{"name":"vec1"}],"output":{"name":"n"}}],[11,"approx_epsilon","","",10,{"inputs":[{"name":"vec1"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",10,{"inputs":[{"name":"vec1"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq","","",10,{"inputs":[{"name":"vec1"},{"name":"vec1"}],"output":{"name":"bool"}}],[11,"approx_eq_eps","","",10,{"inputs":[{"name":"vec1"},{"name":"vec1"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",10,{"inputs":[{"name":"vec1"},{"name":"vec1"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"one","","",10,{"inputs":[{"name":"vec1"}],"output":{"name":"vec1"}}],[11,"zero","","",10,{"inputs":[{"name":"vec1"}],"output":{"name":"vec1"}}],[11,"is_zero","","",10,{"inputs":[{"name":"vec1"}],"output":{"name":"bool"}}],[11,"from_iter","","",10,{"inputs":[{"name":"vec1"},{"name":"i"}],"output":{"name":"vec1"}}],[11,"max_value","","",10,{"inputs":[{"name":"vec1"}],"output":{"name":"vec1"}}],[11,"min_value","","",10,{"inputs":[{"name":"vec1"}],"output":{"name":"vec1"}}],[11,"axpy","","",10,{"inputs":[{"name":"vec1"},{"name":"n"},{"name":"vec1"}],"output":null}],[11,"iter","","",10,{"inputs":[{"name":"vec1"}],"output":{"name":"iter"}}],[11,"iter_mut","","",10,{"inputs":[{"name":"vec1"}],"output":{"name":"itermut"}}],[11,"to_homogeneous","","",10,{"inputs":[{"name":"vec1"}],"output":{"name":"vec2"}}],[11,"from","","",10,{"inputs":[{"name":"vec1"},{"name":"vec2"}],"output":{"name":"vec1"}}],[11,"translate","","",10,{"inputs":[{"name":"vec1"},{"name":"pnt1"}],"output":{"name":"pnt1"}}],[11,"inv_translate","","",10,{"inputs":[{"name":"vec1"},{"name":"pnt1"}],"output":{"name":"pnt1"}}],[11,"rotate","","",10,{"inputs":[{"name":"vec1"},{"name":"o"}],"output":{"name":"o"}}],[11,"inv_rotate","","",10,{"inputs":[{"name":"vec1"},{"name":"o"}],"output":{"name":"o"}}],[11,"rotate","","",16,{"inputs":[{"name":"pnt1"},{"name":"o"}],"output":{"name":"o"}}],[11,"inv_rotate","","",16,{"inputs":[{"name":"pnt1"},{"name":"o"}],"output":{"name":"o"}}],[11,"transform","","",10,{"inputs":[{"name":"vec1"},{"name":"pnt1"}],"output":{"name":"pnt1"}}],[11,"inv_transform","","",10,{"inputs":[{"name":"vec1"},{"name":"pnt1"}],"output":{"name":"pnt1"}}],[11,"to_pnt","","",10,{"inputs":[{"name":"vec1"}],"output":{"name":"pnt1"}}],[11,"as_pnt","","",10,{"inputs":[{"name":"vec1"}],"output":{"name":"pnt1"}}],[11,"abs","","",10,{"inputs":[{"name":"vec1"},{"name":"vec1"}],"output":{"name":"vec1"}}],[11,"rand","","",10,{"inputs":[{"name":"vec1"},{"name":"r"}],"output":{"name":"vec1"}}],[11,"mean","","",10,{"inputs":[{"name":"vec1"}],"output":{"name":"n"}}],[11,"fmt","","",11,{"inputs":[{"name":"vec2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",11,null],[11,"clone","","",11,{"inputs":[{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"decode","","",11,{"inputs":[{"name":"vec2"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",11,{"inputs":[{"name":"vec2"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"vec2"},{"name":"vec2"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"vec2"},{"name":"vec2"}],"output":{"name":"bool"}}],[11,"new","","Creates a new vector.",11,{"inputs":[{"name":"vec2"},{"name":"n"},{"name":"n"}],"output":{"name":"vec2"}}],[11,"inf","","",11,{"inputs":[{"name":"vec2"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"sup","","",11,{"inputs":[{"name":"vec2"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"partial_cmp","","",11,{"inputs":[{"name":"vec2"},{"name":"vec2"}],"output":{"name":"pordering"}}],[11,"partial_lt","","",11,{"inputs":[{"name":"vec2"},{"name":"vec2"}],"output":{"name":"bool"}}],[11,"partial_le","","",11,{"inputs":[{"name":"vec2"},{"name":"vec2"}],"output":{"name":"bool"}}],[11,"partial_gt","","",11,{"inputs":[{"name":"vec2"},{"name":"vec2"}],"output":{"name":"bool"}}],[11,"partial_ge","","",11,{"inputs":[{"name":"vec2"},{"name":"vec2"}],"output":{"name":"bool"}}],[11,"x","","Create a unit vector with its `$compN` component equal to 1.0.",11,{"inputs":[{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"y","","Create a unit vector with its `$compN` component equal to 1.0.",11,{"inputs":[{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"from","","",11,{"inputs":[{"name":"vec2"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"as_ref","","",11,null],[11,"as_mut","","",11,null],[11,"index","","",11,null],[11,"index_mut","","",11,null],[11,"shape","","",11,{"inputs":[{"name":"vec2"}],"output":{"name":"usize"}}],[11,"swap","","",11,{"inputs":[{"name":"vec2"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"unsafe_at","","",11,{"inputs":[{"name":"vec2"},{"name":"usize"}],"output":{"name":"n"}}],[11,"unsafe_set","","",11,{"inputs":[{"name":"vec2"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"at_fast","","Unsafe read access to a vector element by index.",11,{"inputs":[{"name":"vec2"},{"name":"usize"}],"output":{"name":"n"}}],[11,"set_fast","","Unsafe write access to a vector element by index.",11,{"inputs":[{"name":"vec2"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"repeat","","Creates a new vector with all its components equal to a given value.",11,{"inputs":[{"name":"vec2"},{"name":"n"}],"output":{"name":"vec2"}}],[11,"dim","","",11,{"inputs":[{"name":"vec2"},{"name":"option"}],"output":{"name":"usize"}}],[11,"len","","",11,{"inputs":[{"name":"vec2"}],"output":{"name":"usize"}}],[11,"add","","",11,{"inputs":[{"name":"vec2"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"sub","","",11,{"inputs":[{"name":"vec2"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"mul","","",11,{"inputs":[{"name":"vec2"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"div","","",11,{"inputs":[{"name":"vec2"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"add","","",11,{"inputs":[{"name":"vec2"},{"name":"n"}],"output":{"name":"vec2"}}],[11,"sub","","",11,{"inputs":[{"name":"vec2"},{"name":"n"}],"output":{"name":"vec2"}}],[11,"mul","","",11,{"inputs":[{"name":"vec2"},{"name":"n"}],"output":{"name":"vec2"}}],[11,"div","","",11,{"inputs":[{"name":"vec2"},{"name":"n"}],"output":{"name":"vec2"}}],[11,"neg","","",11,{"inputs":[{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"dot","","",11,{"inputs":[{"name":"vec2"},{"name":"vec2"}],"output":{"name":"n"}}],[11,"translation","","",11,{"inputs":[{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"inv_translation","","",11,{"inputs":[{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"append_translation_mut","","",11,{"inputs":[{"name":"vec2"},{"name":"vec2"}],"output":null}],[11,"append_translation","","",11,{"inputs":[{"name":"vec2"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"prepend_translation_mut","","",11,{"inputs":[{"name":"vec2"},{"name":"vec2"}],"output":null}],[11,"prepend_translation","","",11,{"inputs":[{"name":"vec2"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"set_translation","","",11,{"inputs":[{"name":"vec2"},{"name":"vec2"}],"output":null}],[11,"sqnorm","","",11,{"inputs":[{"name":"vec2"}],"output":{"name":"n"}}],[11,"normalize","","",11,{"inputs":[{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"normalize_mut","","",11,{"inputs":[{"name":"vec2"}],"output":{"name":"n"}}],[11,"approx_epsilon","","",11,{"inputs":[{"name":"vec2"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",11,{"inputs":[{"name":"vec2"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq","","",11,{"inputs":[{"name":"vec2"},{"name":"vec2"}],"output":{"name":"bool"}}],[11,"approx_eq_eps","","",11,{"inputs":[{"name":"vec2"},{"name":"vec2"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",11,{"inputs":[{"name":"vec2"},{"name":"vec2"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"one","","",11,{"inputs":[{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"zero","","",11,{"inputs":[{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"is_zero","","",11,{"inputs":[{"name":"vec2"}],"output":{"name":"bool"}}],[11,"from_iter","","",11,{"inputs":[{"name":"vec2"},{"name":"i"}],"output":{"name":"vec2"}}],[11,"max_value","","",11,{"inputs":[{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"min_value","","",11,{"inputs":[{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"axpy","","",11,{"inputs":[{"name":"vec2"},{"name":"n"},{"name":"vec2"}],"output":null}],[11,"iter","","",11,{"inputs":[{"name":"vec2"}],"output":{"name":"iter"}}],[11,"iter_mut","","",11,{"inputs":[{"name":"vec2"}],"output":{"name":"itermut"}}],[11,"to_homogeneous","","",11,{"inputs":[{"name":"vec2"}],"output":{"name":"vec3"}}],[11,"from","","",11,{"inputs":[{"name":"vec2"},{"name":"vec3"}],"output":{"name":"vec2"}}],[11,"translate","","",11,{"inputs":[{"name":"vec2"},{"name":"pnt2"}],"output":{"name":"pnt2"}}],[11,"inv_translate","","",11,{"inputs":[{"name":"vec2"},{"name":"pnt2"}],"output":{"name":"pnt2"}}],[11,"rotate","","",11,{"inputs":[{"name":"vec2"},{"name":"o"}],"output":{"name":"o"}}],[11,"inv_rotate","","",11,{"inputs":[{"name":"vec2"},{"name":"o"}],"output":{"name":"o"}}],[11,"rotate","","",17,{"inputs":[{"name":"pnt2"},{"name":"o"}],"output":{"name":"o"}}],[11,"inv_rotate","","",17,{"inputs":[{"name":"pnt2"},{"name":"o"}],"output":{"name":"o"}}],[11,"transform","","",11,{"inputs":[{"name":"vec2"},{"name":"pnt2"}],"output":{"name":"pnt2"}}],[11,"inv_transform","","",11,{"inputs":[{"name":"vec2"},{"name":"pnt2"}],"output":{"name":"pnt2"}}],[11,"to_pnt","","",11,{"inputs":[{"name":"vec2"}],"output":{"name":"pnt2"}}],[11,"as_pnt","","",11,{"inputs":[{"name":"vec2"}],"output":{"name":"pnt2"}}],[11,"abs","","",11,{"inputs":[{"name":"vec2"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"rand","","",11,{"inputs":[{"name":"vec2"},{"name":"r"}],"output":{"name":"vec2"}}],[11,"mean","","",11,{"inputs":[{"name":"vec2"}],"output":{"name":"n"}}],[11,"fmt","","",12,{"inputs":[{"name":"vec3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",12,null],[11,"clone","","",12,{"inputs":[{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"decode","","",12,{"inputs":[{"name":"vec3"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",12,{"inputs":[{"name":"vec3"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"vec3"},{"name":"vec3"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"vec3"},{"name":"vec3"}],"output":{"name":"bool"}}],[11,"new","","Creates a new vector.",12,{"inputs":[{"name":"vec3"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"vec3"}}],[11,"inf","","",12,{"inputs":[{"name":"vec3"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"sup","","",12,{"inputs":[{"name":"vec3"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"partial_cmp","","",12,{"inputs":[{"name":"vec3"},{"name":"vec3"}],"output":{"name":"pordering"}}],[11,"partial_lt","","",12,{"inputs":[{"name":"vec3"},{"name":"vec3"}],"output":{"name":"bool"}}],[11,"partial_le","","",12,{"inputs":[{"name":"vec3"},{"name":"vec3"}],"output":{"name":"bool"}}],[11,"partial_gt","","",12,{"inputs":[{"name":"vec3"},{"name":"vec3"}],"output":{"name":"bool"}}],[11,"partial_ge","","",12,{"inputs":[{"name":"vec3"},{"name":"vec3"}],"output":{"name":"bool"}}],[11,"x","","Create a unit vector with its `$compN` component equal to 1.0.",12,{"inputs":[{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"y","","Create a unit vector with its `$compN` component equal to 1.0.",12,{"inputs":[{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"z","","Create a unit vector with its `$compN` component equal to 1.0.",12,{"inputs":[{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"from","","",12,{"inputs":[{"name":"vec3"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"as_ref","","",12,null],[11,"as_mut","","",12,null],[11,"index","","",12,null],[11,"index_mut","","",12,null],[11,"shape","","",12,{"inputs":[{"name":"vec3"}],"output":{"name":"usize"}}],[11,"swap","","",12,{"inputs":[{"name":"vec3"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"unsafe_at","","",12,{"inputs":[{"name":"vec3"},{"name":"usize"}],"output":{"name":"n"}}],[11,"unsafe_set","","",12,{"inputs":[{"name":"vec3"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"at_fast","","Unsafe read access to a vector element by index.",12,{"inputs":[{"name":"vec3"},{"name":"usize"}],"output":{"name":"n"}}],[11,"set_fast","","Unsafe write access to a vector element by index.",12,{"inputs":[{"name":"vec3"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"repeat","","Creates a new vector with all its components equal to a given value.",12,{"inputs":[{"name":"vec3"},{"name":"n"}],"output":{"name":"vec3"}}],[11,"dim","","",12,{"inputs":[{"name":"vec3"},{"name":"option"}],"output":{"name":"usize"}}],[11,"len","","",12,{"inputs":[{"name":"vec3"}],"output":{"name":"usize"}}],[11,"add","","",12,{"inputs":[{"name":"vec3"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"sub","","",12,{"inputs":[{"name":"vec3"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"mul","","",12,{"inputs":[{"name":"vec3"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"div","","",12,{"inputs":[{"name":"vec3"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"add","","",12,{"inputs":[{"name":"vec3"},{"name":"n"}],"output":{"name":"vec3"}}],[11,"sub","","",12,{"inputs":[{"name":"vec3"},{"name":"n"}],"output":{"name":"vec3"}}],[11,"mul","","",12,{"inputs":[{"name":"vec3"},{"name":"n"}],"output":{"name":"vec3"}}],[11,"div","","",12,{"inputs":[{"name":"vec3"},{"name":"n"}],"output":{"name":"vec3"}}],[11,"neg","","",12,{"inputs":[{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"dot","","",12,{"inputs":[{"name":"vec3"},{"name":"vec3"}],"output":{"name":"n"}}],[11,"translation","","",12,{"inputs":[{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"inv_translation","","",12,{"inputs":[{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"append_translation_mut","","",12,{"inputs":[{"name":"vec3"},{"name":"vec3"}],"output":null}],[11,"append_translation","","",12,{"inputs":[{"name":"vec3"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"prepend_translation_mut","","",12,{"inputs":[{"name":"vec3"},{"name":"vec3"}],"output":null}],[11,"prepend_translation","","",12,{"inputs":[{"name":"vec3"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"set_translation","","",12,{"inputs":[{"name":"vec3"},{"name":"vec3"}],"output":null}],[11,"sqnorm","","",12,{"inputs":[{"name":"vec3"}],"output":{"name":"n"}}],[11,"normalize","","",12,{"inputs":[{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"normalize_mut","","",12,{"inputs":[{"name":"vec3"}],"output":{"name":"n"}}],[11,"approx_epsilon","","",12,{"inputs":[{"name":"vec3"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",12,{"inputs":[{"name":"vec3"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq","","",12,{"inputs":[{"name":"vec3"},{"name":"vec3"}],"output":{"name":"bool"}}],[11,"approx_eq_eps","","",12,{"inputs":[{"name":"vec3"},{"name":"vec3"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",12,{"inputs":[{"name":"vec3"},{"name":"vec3"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"one","","",12,{"inputs":[{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"zero","","",12,{"inputs":[{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"is_zero","","",12,{"inputs":[{"name":"vec3"}],"output":{"name":"bool"}}],[11,"from_iter","","",12,{"inputs":[{"name":"vec3"},{"name":"i"}],"output":{"name":"vec3"}}],[11,"max_value","","",12,{"inputs":[{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"min_value","","",12,{"inputs":[{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"axpy","","",12,{"inputs":[{"name":"vec3"},{"name":"n"},{"name":"vec3"}],"output":null}],[11,"iter","","",12,{"inputs":[{"name":"vec3"}],"output":{"name":"iter"}}],[11,"iter_mut","","",12,{"inputs":[{"name":"vec3"}],"output":{"name":"itermut"}}],[11,"to_homogeneous","","",12,{"inputs":[{"name":"vec3"}],"output":{"name":"vec4"}}],[11,"from","","",12,{"inputs":[{"name":"vec3"},{"name":"vec4"}],"output":{"name":"vec3"}}],[11,"translate","","",12,{"inputs":[{"name":"vec3"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"inv_translate","","",12,{"inputs":[{"name":"vec3"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"rotate","","",12,{"inputs":[{"name":"vec3"},{"name":"o"}],"output":{"name":"o"}}],[11,"inv_rotate","","",12,{"inputs":[{"name":"vec3"},{"name":"o"}],"output":{"name":"o"}}],[11,"rotate","","",18,{"inputs":[{"name":"pnt3"},{"name":"o"}],"output":{"name":"o"}}],[11,"inv_rotate","","",18,{"inputs":[{"name":"pnt3"},{"name":"o"}],"output":{"name":"o"}}],[11,"transform","","",12,{"inputs":[{"name":"vec3"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"inv_transform","","",12,{"inputs":[{"name":"vec3"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"to_pnt","","",12,{"inputs":[{"name":"vec3"}],"output":{"name":"pnt3"}}],[11,"as_pnt","","",12,{"inputs":[{"name":"vec3"}],"output":{"name":"pnt3"}}],[11,"abs","","",12,{"inputs":[{"name":"vec3"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"rand","","",12,{"inputs":[{"name":"vec3"},{"name":"r"}],"output":{"name":"vec3"}}],[11,"mean","","",12,{"inputs":[{"name":"vec3"}],"output":{"name":"n"}}],[11,"fmt","","",13,{"inputs":[{"name":"vec4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",13,null],[11,"clone","","",13,{"inputs":[{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"decode","","",13,{"inputs":[{"name":"vec4"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",13,{"inputs":[{"name":"vec4"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"}],"output":{"name":"bool"}}],[11,"new","","Creates a new vector.",13,{"inputs":[{"name":"vec4"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"vec4"}}],[11,"inf","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"sup","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"}],"output":{"name":"pordering"}}],[11,"partial_lt","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"}],"output":{"name":"bool"}}],[11,"partial_le","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"}],"output":{"name":"bool"}}],[11,"partial_gt","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"}],"output":{"name":"bool"}}],[11,"partial_ge","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"}],"output":{"name":"bool"}}],[11,"x","","Create a unit vector with its `$compN` component equal to 1.0.",13,{"inputs":[{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"y","","Create a unit vector with its `$compN` component equal to 1.0.",13,{"inputs":[{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"z","","Create a unit vector with its `$compN` component equal to 1.0.",13,{"inputs":[{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"w","","Create a unit vector with its `$compN` component equal to 1.0.",13,{"inputs":[{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"from","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"as_ref","","",13,null],[11,"as_mut","","",13,null],[11,"index","","",13,null],[11,"index_mut","","",13,null],[11,"shape","","",13,{"inputs":[{"name":"vec4"}],"output":{"name":"usize"}}],[11,"swap","","",13,{"inputs":[{"name":"vec4"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"unsafe_at","","",13,{"inputs":[{"name":"vec4"},{"name":"usize"}],"output":{"name":"n"}}],[11,"unsafe_set","","",13,{"inputs":[{"name":"vec4"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"at_fast","","Unsafe read access to a vector element by index.",13,{"inputs":[{"name":"vec4"},{"name":"usize"}],"output":{"name":"n"}}],[11,"set_fast","","Unsafe write access to a vector element by index.",13,{"inputs":[{"name":"vec4"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"repeat","","Creates a new vector with all its components equal to a given value.",13,{"inputs":[{"name":"vec4"},{"name":"n"}],"output":{"name":"vec4"}}],[11,"dim","","",13,{"inputs":[{"name":"vec4"},{"name":"option"}],"output":{"name":"usize"}}],[11,"len","","",13,{"inputs":[{"name":"vec4"}],"output":{"name":"usize"}}],[11,"canonical_basis","","",13,{"inputs":[{"name":"vec4"},{"name":"f"}],"output":null}],[11,"orthonormal_subspace_basis","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"},{"name":"f"}],"output":null}],[11,"canonical_basis_element","","",13,{"inputs":[{"name":"vec4"},{"name":"usize"}],"output":{"name":"option"}}],[11,"add","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"sub","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"mul","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"div","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"add","","",13,{"inputs":[{"name":"vec4"},{"name":"n"}],"output":{"name":"vec4"}}],[11,"sub","","",13,{"inputs":[{"name":"vec4"},{"name":"n"}],"output":{"name":"vec4"}}],[11,"mul","","",13,{"inputs":[{"name":"vec4"},{"name":"n"}],"output":{"name":"vec4"}}],[11,"div","","",13,{"inputs":[{"name":"vec4"},{"name":"n"}],"output":{"name":"vec4"}}],[11,"neg","","",13,{"inputs":[{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"dot","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"}],"output":{"name":"n"}}],[11,"translation","","",13,{"inputs":[{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"inv_translation","","",13,{"inputs":[{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"append_translation_mut","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"}],"output":null}],[11,"append_translation","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"prepend_translation_mut","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"}],"output":null}],[11,"prepend_translation","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"set_translation","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"}],"output":null}],[11,"sqnorm","","",13,{"inputs":[{"name":"vec4"}],"output":{"name":"n"}}],[11,"normalize","","",13,{"inputs":[{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"normalize_mut","","",13,{"inputs":[{"name":"vec4"}],"output":{"name":"n"}}],[11,"approx_epsilon","","",13,{"inputs":[{"name":"vec4"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",13,{"inputs":[{"name":"vec4"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"}],"output":{"name":"bool"}}],[11,"approx_eq_eps","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"one","","",13,{"inputs":[{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"zero","","",13,{"inputs":[{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"is_zero","","",13,{"inputs":[{"name":"vec4"}],"output":{"name":"bool"}}],[11,"from_iter","","",13,{"inputs":[{"name":"vec4"},{"name":"i"}],"output":{"name":"vec4"}}],[11,"max_value","","",13,{"inputs":[{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"min_value","","",13,{"inputs":[{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"axpy","","",13,{"inputs":[{"name":"vec4"},{"name":"n"},{"name":"vec4"}],"output":null}],[11,"iter","","",13,{"inputs":[{"name":"vec4"}],"output":{"name":"iter"}}],[11,"iter_mut","","",13,{"inputs":[{"name":"vec4"}],"output":{"name":"itermut"}}],[11,"to_homogeneous","","",13,{"inputs":[{"name":"vec4"}],"output":{"name":"vec5"}}],[11,"from","","",13,{"inputs":[{"name":"vec4"},{"name":"vec5"}],"output":{"name":"vec4"}}],[11,"translate","","",13,{"inputs":[{"name":"vec4"},{"name":"pnt4"}],"output":{"name":"pnt4"}}],[11,"inv_translate","","",13,{"inputs":[{"name":"vec4"},{"name":"pnt4"}],"output":{"name":"pnt4"}}],[11,"rotate","","",13,{"inputs":[{"name":"vec4"},{"name":"o"}],"output":{"name":"o"}}],[11,"inv_rotate","","",13,{"inputs":[{"name":"vec4"},{"name":"o"}],"output":{"name":"o"}}],[11,"rotate","","",19,{"inputs":[{"name":"pnt4"},{"name":"o"}],"output":{"name":"o"}}],[11,"inv_rotate","","",19,{"inputs":[{"name":"pnt4"},{"name":"o"}],"output":{"name":"o"}}],[11,"transform","","",13,{"inputs":[{"name":"vec4"},{"name":"pnt4"}],"output":{"name":"pnt4"}}],[11,"inv_transform","","",13,{"inputs":[{"name":"vec4"},{"name":"pnt4"}],"output":{"name":"pnt4"}}],[11,"to_pnt","","",13,{"inputs":[{"name":"vec4"}],"output":{"name":"pnt4"}}],[11,"as_pnt","","",13,{"inputs":[{"name":"vec4"}],"output":{"name":"pnt4"}}],[11,"abs","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"rand","","",13,{"inputs":[{"name":"vec4"},{"name":"r"}],"output":{"name":"vec4"}}],[11,"mean","","",13,{"inputs":[{"name":"vec4"}],"output":{"name":"n"}}],[11,"fmt","","",14,{"inputs":[{"name":"vec5"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",14,null],[11,"clone","","",14,{"inputs":[{"name":"vec5"}],"output":{"name":"vec5"}}],[11,"decode","","",14,{"inputs":[{"name":"vec5"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",14,{"inputs":[{"name":"vec5"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"}],"output":{"name":"bool"}}],[11,"new","","Creates a new vector.",14,{"inputs":[{"name":"vec5"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"vec5"}}],[11,"inf","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"}],"output":{"name":"vec5"}}],[11,"sup","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"}],"output":{"name":"vec5"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"}],"output":{"name":"pordering"}}],[11,"partial_lt","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"}],"output":{"name":"bool"}}],[11,"partial_le","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"}],"output":{"name":"bool"}}],[11,"partial_gt","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"}],"output":{"name":"bool"}}],[11,"partial_ge","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"}],"output":{"name":"bool"}}],[11,"x","","Create a unit vector with its `$compN` component equal to 1.0.",14,{"inputs":[{"name":"vec5"}],"output":{"name":"vec5"}}],[11,"y","","Create a unit vector with its `$compN` component equal to 1.0.",14,{"inputs":[{"name":"vec5"}],"output":{"name":"vec5"}}],[11,"z","","Create a unit vector with its `$compN` component equal to 1.0.",14,{"inputs":[{"name":"vec5"}],"output":{"name":"vec5"}}],[11,"w","","Create a unit vector with its `$compN` component equal to 1.0.",14,{"inputs":[{"name":"vec5"}],"output":{"name":"vec5"}}],[11,"a","","Create a unit vector with its `$compN` component equal to 1.0.",14,{"inputs":[{"name":"vec5"}],"output":{"name":"vec5"}}],[11,"from","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"}],"output":{"name":"vec5"}}],[11,"as_ref","","",14,null],[11,"as_mut","","",14,null],[11,"index","","",14,null],[11,"index_mut","","",14,null],[11,"shape","","",14,{"inputs":[{"name":"vec5"}],"output":{"name":"usize"}}],[11,"swap","","",14,{"inputs":[{"name":"vec5"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"unsafe_at","","",14,{"inputs":[{"name":"vec5"},{"name":"usize"}],"output":{"name":"n"}}],[11,"unsafe_set","","",14,{"inputs":[{"name":"vec5"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"at_fast","","Unsafe read access to a vector element by index.",14,{"inputs":[{"name":"vec5"},{"name":"usize"}],"output":{"name":"n"}}],[11,"set_fast","","Unsafe write access to a vector element by index.",14,{"inputs":[{"name":"vec5"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"repeat","","Creates a new vector with all its components equal to a given value.",14,{"inputs":[{"name":"vec5"},{"name":"n"}],"output":{"name":"vec5"}}],[11,"dim","","",14,{"inputs":[{"name":"vec5"},{"name":"option"}],"output":{"name":"usize"}}],[11,"len","","",14,{"inputs":[{"name":"vec5"}],"output":{"name":"usize"}}],[11,"canonical_basis","","",14,{"inputs":[{"name":"vec5"},{"name":"f"}],"output":null}],[11,"orthonormal_subspace_basis","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"},{"name":"f"}],"output":null}],[11,"canonical_basis_element","","",14,{"inputs":[{"name":"vec5"},{"name":"usize"}],"output":{"name":"option"}}],[11,"add","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"}],"output":{"name":"vec5"}}],[11,"sub","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"}],"output":{"name":"vec5"}}],[11,"mul","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"}],"output":{"name":"vec5"}}],[11,"div","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"}],"output":{"name":"vec5"}}],[11,"add","","",14,{"inputs":[{"name":"vec5"},{"name":"n"}],"output":{"name":"vec5"}}],[11,"sub","","",14,{"inputs":[{"name":"vec5"},{"name":"n"}],"output":{"name":"vec5"}}],[11,"mul","","",14,{"inputs":[{"name":"vec5"},{"name":"n"}],"output":{"name":"vec5"}}],[11,"div","","",14,{"inputs":[{"name":"vec5"},{"name":"n"}],"output":{"name":"vec5"}}],[11,"neg","","",14,{"inputs":[{"name":"vec5"}],"output":{"name":"vec5"}}],[11,"dot","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"}],"output":{"name":"n"}}],[11,"translation","","",14,{"inputs":[{"name":"vec5"}],"output":{"name":"vec5"}}],[11,"inv_translation","","",14,{"inputs":[{"name":"vec5"}],"output":{"name":"vec5"}}],[11,"append_translation_mut","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"}],"output":null}],[11,"append_translation","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"}],"output":{"name":"vec5"}}],[11,"prepend_translation_mut","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"}],"output":null}],[11,"prepend_translation","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"}],"output":{"name":"vec5"}}],[11,"set_translation","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"}],"output":null}],[11,"sqnorm","","",14,{"inputs":[{"name":"vec5"}],"output":{"name":"n"}}],[11,"normalize","","",14,{"inputs":[{"name":"vec5"}],"output":{"name":"vec5"}}],[11,"normalize_mut","","",14,{"inputs":[{"name":"vec5"}],"output":{"name":"n"}}],[11,"approx_epsilon","","",14,{"inputs":[{"name":"vec5"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",14,{"inputs":[{"name":"vec5"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"}],"output":{"name":"bool"}}],[11,"approx_eq_eps","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"one","","",14,{"inputs":[{"name":"vec5"}],"output":{"name":"vec5"}}],[11,"zero","","",14,{"inputs":[{"name":"vec5"}],"output":{"name":"vec5"}}],[11,"is_zero","","",14,{"inputs":[{"name":"vec5"}],"output":{"name":"bool"}}],[11,"from_iter","","",14,{"inputs":[{"name":"vec5"},{"name":"i"}],"output":{"name":"vec5"}}],[11,"max_value","","",14,{"inputs":[{"name":"vec5"}],"output":{"name":"vec5"}}],[11,"min_value","","",14,{"inputs":[{"name":"vec5"}],"output":{"name":"vec5"}}],[11,"axpy","","",14,{"inputs":[{"name":"vec5"},{"name":"n"},{"name":"vec5"}],"output":null}],[11,"iter","","",14,{"inputs":[{"name":"vec5"}],"output":{"name":"iter"}}],[11,"iter_mut","","",14,{"inputs":[{"name":"vec5"}],"output":{"name":"itermut"}}],[11,"to_homogeneous","","",14,{"inputs":[{"name":"vec5"}],"output":{"name":"vec6"}}],[11,"from","","",14,{"inputs":[{"name":"vec5"},{"name":"vec6"}],"output":{"name":"vec5"}}],[11,"translate","","",14,{"inputs":[{"name":"vec5"},{"name":"pnt5"}],"output":{"name":"pnt5"}}],[11,"inv_translate","","",14,{"inputs":[{"name":"vec5"},{"name":"pnt5"}],"output":{"name":"pnt5"}}],[11,"rotate","","",14,{"inputs":[{"name":"vec5"},{"name":"o"}],"output":{"name":"o"}}],[11,"inv_rotate","","",14,{"inputs":[{"name":"vec5"},{"name":"o"}],"output":{"name":"o"}}],[11,"rotate","","",20,{"inputs":[{"name":"pnt5"},{"name":"o"}],"output":{"name":"o"}}],[11,"inv_rotate","","",20,{"inputs":[{"name":"pnt5"},{"name":"o"}],"output":{"name":"o"}}],[11,"transform","","",14,{"inputs":[{"name":"vec5"},{"name":"pnt5"}],"output":{"name":"pnt5"}}],[11,"inv_transform","","",14,{"inputs":[{"name":"vec5"},{"name":"pnt5"}],"output":{"name":"pnt5"}}],[11,"to_pnt","","",14,{"inputs":[{"name":"vec5"}],"output":{"name":"pnt5"}}],[11,"as_pnt","","",14,{"inputs":[{"name":"vec5"}],"output":{"name":"pnt5"}}],[11,"abs","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"}],"output":{"name":"vec5"}}],[11,"rand","","",14,{"inputs":[{"name":"vec5"},{"name":"r"}],"output":{"name":"vec5"}}],[11,"mean","","",14,{"inputs":[{"name":"vec5"}],"output":{"name":"n"}}],[11,"fmt","","",15,{"inputs":[{"name":"vec6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",15,null],[11,"clone","","",15,{"inputs":[{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"decode","","",15,{"inputs":[{"name":"vec6"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",15,{"inputs":[{"name":"vec6"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"}],"output":{"name":"bool"}}],[11,"new","","Creates a new vector.",15,{"inputs":[{"name":"vec6"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"vec6"}}],[11,"inf","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"sup","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"partial_cmp","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"}],"output":{"name":"pordering"}}],[11,"partial_lt","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"}],"output":{"name":"bool"}}],[11,"partial_le","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"}],"output":{"name":"bool"}}],[11,"partial_gt","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"}],"output":{"name":"bool"}}],[11,"partial_ge","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"}],"output":{"name":"bool"}}],[11,"x","","Create a unit vector with its `$compN` component equal to 1.0.",15,{"inputs":[{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"y","","Create a unit vector with its `$compN` component equal to 1.0.",15,{"inputs":[{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"z","","Create a unit vector with its `$compN` component equal to 1.0.",15,{"inputs":[{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"w","","Create a unit vector with its `$compN` component equal to 1.0.",15,{"inputs":[{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"a","","Create a unit vector with its `$compN` component equal to 1.0.",15,{"inputs":[{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"b","","Create a unit vector with its `$compN` component equal to 1.0.",15,{"inputs":[{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"from","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"as_ref","","",15,null],[11,"as_mut","","",15,null],[11,"index","","",15,null],[11,"index_mut","","",15,null],[11,"shape","","",15,{"inputs":[{"name":"vec6"}],"output":{"name":"usize"}}],[11,"swap","","",15,{"inputs":[{"name":"vec6"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"unsafe_at","","",15,{"inputs":[{"name":"vec6"},{"name":"usize"}],"output":{"name":"n"}}],[11,"unsafe_set","","",15,{"inputs":[{"name":"vec6"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"at_fast","","Unsafe read access to a vector element by index.",15,{"inputs":[{"name":"vec6"},{"name":"usize"}],"output":{"name":"n"}}],[11,"set_fast","","Unsafe write access to a vector element by index.",15,{"inputs":[{"name":"vec6"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"repeat","","Creates a new vector with all its components equal to a given value.",15,{"inputs":[{"name":"vec6"},{"name":"n"}],"output":{"name":"vec6"}}],[11,"dim","","",15,{"inputs":[{"name":"vec6"},{"name":"option"}],"output":{"name":"usize"}}],[11,"len","","",15,{"inputs":[{"name":"vec6"}],"output":{"name":"usize"}}],[11,"canonical_basis","","",15,{"inputs":[{"name":"vec6"},{"name":"f"}],"output":null}],[11,"orthonormal_subspace_basis","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"},{"name":"f"}],"output":null}],[11,"canonical_basis_element","","",15,{"inputs":[{"name":"vec6"},{"name":"usize"}],"output":{"name":"option"}}],[11,"add","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"sub","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"mul","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"div","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"add","","",15,{"inputs":[{"name":"vec6"},{"name":"n"}],"output":{"name":"vec6"}}],[11,"sub","","",15,{"inputs":[{"name":"vec6"},{"name":"n"}],"output":{"name":"vec6"}}],[11,"mul","","",15,{"inputs":[{"name":"vec6"},{"name":"n"}],"output":{"name":"vec6"}}],[11,"div","","",15,{"inputs":[{"name":"vec6"},{"name":"n"}],"output":{"name":"vec6"}}],[11,"neg","","",15,{"inputs":[{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"dot","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"}],"output":{"name":"n"}}],[11,"translation","","",15,{"inputs":[{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"inv_translation","","",15,{"inputs":[{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"append_translation_mut","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"}],"output":null}],[11,"append_translation","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"prepend_translation_mut","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"}],"output":null}],[11,"prepend_translation","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"set_translation","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"}],"output":null}],[11,"sqnorm","","",15,{"inputs":[{"name":"vec6"}],"output":{"name":"n"}}],[11,"normalize","","",15,{"inputs":[{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"normalize_mut","","",15,{"inputs":[{"name":"vec6"}],"output":{"name":"n"}}],[11,"approx_epsilon","","",15,{"inputs":[{"name":"vec6"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",15,{"inputs":[{"name":"vec6"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"}],"output":{"name":"bool"}}],[11,"approx_eq_eps","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"one","","",15,{"inputs":[{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"zero","","",15,{"inputs":[{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"is_zero","","",15,{"inputs":[{"name":"vec6"}],"output":{"name":"bool"}}],[11,"from_iter","","",15,{"inputs":[{"name":"vec6"},{"name":"i"}],"output":{"name":"vec6"}}],[11,"max_value","","",15,{"inputs":[{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"min_value","","",15,{"inputs":[{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"axpy","","",15,{"inputs":[{"name":"vec6"},{"name":"n"},{"name":"vec6"}],"output":null}],[11,"iter","","",15,{"inputs":[{"name":"vec6"}],"output":{"name":"iter"}}],[11,"iter_mut","","",15,{"inputs":[{"name":"vec6"}],"output":{"name":"itermut"}}],[11,"translate","","",15,{"inputs":[{"name":"vec6"},{"name":"pnt6"}],"output":{"name":"pnt6"}}],[11,"inv_translate","","",15,{"inputs":[{"name":"vec6"},{"name":"pnt6"}],"output":{"name":"pnt6"}}],[11,"rotate","","",15,{"inputs":[{"name":"vec6"},{"name":"o"}],"output":{"name":"o"}}],[11,"inv_rotate","","",15,{"inputs":[{"name":"vec6"},{"name":"o"}],"output":{"name":"o"}}],[11,"rotate","","",21,{"inputs":[{"name":"pnt6"},{"name":"o"}],"output":{"name":"o"}}],[11,"inv_rotate","","",21,{"inputs":[{"name":"pnt6"},{"name":"o"}],"output":{"name":"o"}}],[11,"transform","","",15,{"inputs":[{"name":"vec6"},{"name":"pnt6"}],"output":{"name":"pnt6"}}],[11,"inv_transform","","",15,{"inputs":[{"name":"vec6"},{"name":"pnt6"}],"output":{"name":"pnt6"}}],[11,"to_pnt","","",15,{"inputs":[{"name":"vec6"}],"output":{"name":"pnt6"}}],[11,"as_pnt","","",15,{"inputs":[{"name":"vec6"}],"output":{"name":"pnt6"}}],[11,"abs","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"rand","","",15,{"inputs":[{"name":"vec6"},{"name":"r"}],"output":{"name":"vec6"}}],[11,"mean","","",15,{"inputs":[{"name":"vec6"}],"output":{"name":"n"}}],[11,"fmt","","",38,{"inputs":[{"name":"pnt0"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",38,{"inputs":[{"name":"pnt0"}],"output":{"name":"pnt0"}}],[11,"eq","","",38,{"inputs":[{"name":"pnt0"},{"name":"pnt0"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"pnt0"},{"name":"pnt0"}],"output":{"name":"bool"}}],[11,"new","","Creates a new point.",38,{"inputs":[{"name":"pnt0"}],"output":{"name":"pnt0"}}],[11,"repeat","","",38,{"inputs":[{"name":"pnt0"},{"name":"n"}],"output":{"name":"pnt0"}}],[11,"fmt","","",16,{"inputs":[{"name":"pnt1"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",16,null],[11,"clone","","",16,{"inputs":[{"name":"pnt1"}],"output":{"name":"pnt1"}}],[11,"decode","","",16,{"inputs":[{"name":"pnt1"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",16,{"inputs":[{"name":"pnt1"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"pnt1"},{"name":"pnt1"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"pnt1"},{"name":"pnt1"}],"output":{"name":"bool"}}],[11,"new","","Creates a new vector.",16,{"inputs":[{"name":"pnt1"},{"name":"n"}],"output":{"name":"pnt1"}}],[11,"orig","","",16,{"inputs":[{"name":"pnt1"}],"output":{"name":"pnt1"}}],[11,"is_orig","","",16,{"inputs":[{"name":"pnt1"}],"output":{"name":"bool"}}],[11,"inf","","",16,{"inputs":[{"name":"pnt1"},{"name":"pnt1"}],"output":{"name":"pnt1"}}],[11,"sup","","",16,{"inputs":[{"name":"pnt1"},{"name":"pnt1"}],"output":{"name":"pnt1"}}],[11,"partial_cmp","","",16,{"inputs":[{"name":"pnt1"},{"name":"pnt1"}],"output":{"name":"pordering"}}],[11,"partial_lt","","",16,{"inputs":[{"name":"pnt1"},{"name":"pnt1"}],"output":{"name":"bool"}}],[11,"partial_le","","",16,{"inputs":[{"name":"pnt1"},{"name":"pnt1"}],"output":{"name":"bool"}}],[11,"partial_gt","","",16,{"inputs":[{"name":"pnt1"},{"name":"pnt1"}],"output":{"name":"bool"}}],[11,"partial_ge","","",16,{"inputs":[{"name":"pnt1"},{"name":"pnt1"}],"output":{"name":"bool"}}],[11,"mul","","",16,{"inputs":[{"name":"pnt1"},{"name":"n"}],"output":{"name":"pnt1"}}],[11,"div","","",16,{"inputs":[{"name":"pnt1"},{"name":"n"}],"output":{"name":"pnt1"}}],[11,"add","","",16,{"inputs":[{"name":"pnt1"},{"name":"n"}],"output":{"name":"pnt1"}}],[11,"sub","","",16,{"inputs":[{"name":"pnt1"},{"name":"n"}],"output":{"name":"pnt1"}}],[11,"from","","",16,{"inputs":[{"name":"pnt1"},{"name":"pnt1"}],"output":{"name":"pnt1"}}],[11,"as_ref","","",16,null],[11,"as_mut","","",16,null],[11,"index","","",16,null],[11,"index_mut","","",16,null],[11,"shape","","",16,{"inputs":[{"name":"pnt1"}],"output":{"name":"usize"}}],[11,"swap","","",16,{"inputs":[{"name":"pnt1"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"unsafe_at","","",16,{"inputs":[{"name":"pnt1"},{"name":"usize"}],"output":{"name":"n"}}],[11,"unsafe_set","","",16,{"inputs":[{"name":"pnt1"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"at_fast","","Unsafe read access to a vector element by index.",16,{"inputs":[{"name":"pnt1"},{"name":"usize"}],"output":{"name":"n"}}],[11,"set_fast","","Unsafe write access to a vector element by index.",16,{"inputs":[{"name":"pnt1"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"repeat","","Creates a new vector with all its components equal to a given value.",16,{"inputs":[{"name":"pnt1"},{"name":"n"}],"output":{"name":"pnt1"}}],[11,"dim","","",16,{"inputs":[{"name":"pnt1"},{"name":"option"}],"output":{"name":"usize"}}],[11,"len","","",16,{"inputs":[{"name":"pnt1"}],"output":{"name":"usize"}}],[11,"to_vec","","Converts this point to its associated vector.",16,{"inputs":[{"name":"pnt1"}],"output":{"name":"vec1"}}],[11,"as_vec","","Converts a reference to this point to a reference to its associated vector.",16,{"inputs":[{"name":"pnt1"}],"output":{"name":"vec1"}}],[11,"to_vec","","",16,{"inputs":[{"name":"pnt1"}],"output":{"name":"vec1"}}],[11,"as_vec","","",16,{"inputs":[{"name":"pnt1"}],"output":{"name":"vec1"}}],[11,"set_coords","","",16,{"inputs":[{"name":"pnt1"},{"name":"vec1"}],"output":null}],[11,"sub","","",16,{"inputs":[{"name":"pnt1"},{"name":"pnt1"}],"output":{"name":"vec1"}}],[11,"neg","","",16,{"inputs":[{"name":"pnt1"}],"output":{"name":"pnt1"}}],[11,"add","","",16,{"inputs":[{"name":"pnt1"},{"name":"vec1"}],"output":{"name":"pnt1"}}],[11,"sub","","",16,{"inputs":[{"name":"pnt1"},{"name":"vec1"}],"output":{"name":"pnt1"}}],[11,"approx_epsilon","","",16,{"inputs":[{"name":"pnt1"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",16,{"inputs":[{"name":"pnt1"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq","","",16,{"inputs":[{"name":"pnt1"},{"name":"pnt1"}],"output":{"name":"bool"}}],[11,"approx_eq_eps","","",16,{"inputs":[{"name":"pnt1"},{"name":"pnt1"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",16,{"inputs":[{"name":"pnt1"},{"name":"pnt1"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"from_iter","","",16,{"inputs":[{"name":"pnt1"},{"name":"i"}],"output":{"name":"pnt1"}}],[11,"max_value","","",16,{"inputs":[{"name":"pnt1"}],"output":{"name":"pnt1"}}],[11,"min_value","","",16,{"inputs":[{"name":"pnt1"}],"output":{"name":"pnt1"}}],[11,"axpy","","",16,{"inputs":[{"name":"pnt1"},{"name":"n"},{"name":"pnt1"}],"output":null}],[11,"iter","","",16,{"inputs":[{"name":"pnt1"}],"output":{"name":"iter"}}],[11,"iter_mut","","",16,{"inputs":[{"name":"pnt1"}],"output":{"name":"itermut"}}],[11,"to_homogeneous","","",16,{"inputs":[{"name":"pnt1"}],"output":{"name":"pnt2"}}],[11,"from","","",16,{"inputs":[{"name":"pnt1"},{"name":"pnt2"}],"output":{"name":"pnt1"}}],[11,"rand","","",16,{"inputs":[{"name":"pnt1"},{"name":"r"}],"output":{"name":"pnt1"}}],[11,"fmt","","",17,{"inputs":[{"name":"pnt2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",17,null],[11,"clone","","",17,{"inputs":[{"name":"pnt2"}],"output":{"name":"pnt2"}}],[11,"decode","","",17,{"inputs":[{"name":"pnt2"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",17,{"inputs":[{"name":"pnt2"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",17,{"inputs":[{"name":"pnt2"},{"name":"pnt2"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"pnt2"},{"name":"pnt2"}],"output":{"name":"bool"}}],[11,"new","","Creates a new vector.",17,{"inputs":[{"name":"pnt2"},{"name":"n"},{"name":"n"}],"output":{"name":"pnt2"}}],[11,"orig","","",17,{"inputs":[{"name":"pnt2"}],"output":{"name":"pnt2"}}],[11,"is_orig","","",17,{"inputs":[{"name":"pnt2"}],"output":{"name":"bool"}}],[11,"inf","","",17,{"inputs":[{"name":"pnt2"},{"name":"pnt2"}],"output":{"name":"pnt2"}}],[11,"sup","","",17,{"inputs":[{"name":"pnt2"},{"name":"pnt2"}],"output":{"name":"pnt2"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"pnt2"},{"name":"pnt2"}],"output":{"name":"pordering"}}],[11,"partial_lt","","",17,{"inputs":[{"name":"pnt2"},{"name":"pnt2"}],"output":{"name":"bool"}}],[11,"partial_le","","",17,{"inputs":[{"name":"pnt2"},{"name":"pnt2"}],"output":{"name":"bool"}}],[11,"partial_gt","","",17,{"inputs":[{"name":"pnt2"},{"name":"pnt2"}],"output":{"name":"bool"}}],[11,"partial_ge","","",17,{"inputs":[{"name":"pnt2"},{"name":"pnt2"}],"output":{"name":"bool"}}],[11,"mul","","",17,{"inputs":[{"name":"pnt2"},{"name":"n"}],"output":{"name":"pnt2"}}],[11,"div","","",17,{"inputs":[{"name":"pnt2"},{"name":"n"}],"output":{"name":"pnt2"}}],[11,"add","","",17,{"inputs":[{"name":"pnt2"},{"name":"n"}],"output":{"name":"pnt2"}}],[11,"sub","","",17,{"inputs":[{"name":"pnt2"},{"name":"n"}],"output":{"name":"pnt2"}}],[11,"from","","",17,{"inputs":[{"name":"pnt2"},{"name":"pnt2"}],"output":{"name":"pnt2"}}],[11,"as_ref","","",17,null],[11,"as_mut","","",17,null],[11,"index","","",17,null],[11,"index_mut","","",17,null],[11,"shape","","",17,{"inputs":[{"name":"pnt2"}],"output":{"name":"usize"}}],[11,"swap","","",17,{"inputs":[{"name":"pnt2"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"unsafe_at","","",17,{"inputs":[{"name":"pnt2"},{"name":"usize"}],"output":{"name":"n"}}],[11,"unsafe_set","","",17,{"inputs":[{"name":"pnt2"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"at_fast","","Unsafe read access to a vector element by index.",17,{"inputs":[{"name":"pnt2"},{"name":"usize"}],"output":{"name":"n"}}],[11,"set_fast","","Unsafe write access to a vector element by index.",17,{"inputs":[{"name":"pnt2"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"repeat","","Creates a new vector with all its components equal to a given value.",17,{"inputs":[{"name":"pnt2"},{"name":"n"}],"output":{"name":"pnt2"}}],[11,"dim","","",17,{"inputs":[{"name":"pnt2"},{"name":"option"}],"output":{"name":"usize"}}],[11,"len","","",17,{"inputs":[{"name":"pnt2"}],"output":{"name":"usize"}}],[11,"to_vec","","Converts this point to its associated vector.",17,{"inputs":[{"name":"pnt2"}],"output":{"name":"vec2"}}],[11,"as_vec","","Converts a reference to this point to a reference to its associated vector.",17,{"inputs":[{"name":"pnt2"}],"output":{"name":"vec2"}}],[11,"to_vec","","",17,{"inputs":[{"name":"pnt2"}],"output":{"name":"vec2"}}],[11,"as_vec","","",17,{"inputs":[{"name":"pnt2"}],"output":{"name":"vec2"}}],[11,"set_coords","","",17,{"inputs":[{"name":"pnt2"},{"name":"vec2"}],"output":null}],[11,"sub","","",17,{"inputs":[{"name":"pnt2"},{"name":"pnt2"}],"output":{"name":"vec2"}}],[11,"neg","","",17,{"inputs":[{"name":"pnt2"}],"output":{"name":"pnt2"}}],[11,"add","","",17,{"inputs":[{"name":"pnt2"},{"name":"vec2"}],"output":{"name":"pnt2"}}],[11,"sub","","",17,{"inputs":[{"name":"pnt2"},{"name":"vec2"}],"output":{"name":"pnt2"}}],[11,"approx_epsilon","","",17,{"inputs":[{"name":"pnt2"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",17,{"inputs":[{"name":"pnt2"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq","","",17,{"inputs":[{"name":"pnt2"},{"name":"pnt2"}],"output":{"name":"bool"}}],[11,"approx_eq_eps","","",17,{"inputs":[{"name":"pnt2"},{"name":"pnt2"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",17,{"inputs":[{"name":"pnt2"},{"name":"pnt2"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"from_iter","","",17,{"inputs":[{"name":"pnt2"},{"name":"i"}],"output":{"name":"pnt2"}}],[11,"max_value","","",17,{"inputs":[{"name":"pnt2"}],"output":{"name":"pnt2"}}],[11,"min_value","","",17,{"inputs":[{"name":"pnt2"}],"output":{"name":"pnt2"}}],[11,"axpy","","",17,{"inputs":[{"name":"pnt2"},{"name":"n"},{"name":"pnt2"}],"output":null}],[11,"iter","","",17,{"inputs":[{"name":"pnt2"}],"output":{"name":"iter"}}],[11,"iter_mut","","",17,{"inputs":[{"name":"pnt2"}],"output":{"name":"itermut"}}],[11,"to_homogeneous","","",17,{"inputs":[{"name":"pnt2"}],"output":{"name":"pnt3"}}],[11,"from","","",17,{"inputs":[{"name":"pnt2"},{"name":"pnt3"}],"output":{"name":"pnt2"}}],[11,"rand","","",17,{"inputs":[{"name":"pnt2"},{"name":"r"}],"output":{"name":"pnt2"}}],[11,"fmt","","",18,{"inputs":[{"name":"pnt3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",18,null],[11,"clone","","",18,{"inputs":[{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"decode","","",18,{"inputs":[{"name":"pnt3"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",18,{"inputs":[{"name":"pnt3"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"pnt3"},{"name":"pnt3"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"pnt3"},{"name":"pnt3"}],"output":{"name":"bool"}}],[11,"new","","Creates a new vector.",18,{"inputs":[{"name":"pnt3"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"pnt3"}}],[11,"orig","","",18,{"inputs":[{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"is_orig","","",18,{"inputs":[{"name":"pnt3"}],"output":{"name":"bool"}}],[11,"inf","","",18,{"inputs":[{"name":"pnt3"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"sup","","",18,{"inputs":[{"name":"pnt3"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"partial_cmp","","",18,{"inputs":[{"name":"pnt3"},{"name":"pnt3"}],"output":{"name":"pordering"}}],[11,"partial_lt","","",18,{"inputs":[{"name":"pnt3"},{"name":"pnt3"}],"output":{"name":"bool"}}],[11,"partial_le","","",18,{"inputs":[{"name":"pnt3"},{"name":"pnt3"}],"output":{"name":"bool"}}],[11,"partial_gt","","",18,{"inputs":[{"name":"pnt3"},{"name":"pnt3"}],"output":{"name":"bool"}}],[11,"partial_ge","","",18,{"inputs":[{"name":"pnt3"},{"name":"pnt3"}],"output":{"name":"bool"}}],[11,"mul","","",18,{"inputs":[{"name":"pnt3"},{"name":"n"}],"output":{"name":"pnt3"}}],[11,"div","","",18,{"inputs":[{"name":"pnt3"},{"name":"n"}],"output":{"name":"pnt3"}}],[11,"add","","",18,{"inputs":[{"name":"pnt3"},{"name":"n"}],"output":{"name":"pnt3"}}],[11,"sub","","",18,{"inputs":[{"name":"pnt3"},{"name":"n"}],"output":{"name":"pnt3"}}],[11,"from","","",18,{"inputs":[{"name":"pnt3"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"as_ref","","",18,null],[11,"as_mut","","",18,null],[11,"index","","",18,null],[11,"index_mut","","",18,null],[11,"shape","","",18,{"inputs":[{"name":"pnt3"}],"output":{"name":"usize"}}],[11,"swap","","",18,{"inputs":[{"name":"pnt3"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"unsafe_at","","",18,{"inputs":[{"name":"pnt3"},{"name":"usize"}],"output":{"name":"n"}}],[11,"unsafe_set","","",18,{"inputs":[{"name":"pnt3"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"at_fast","","Unsafe read access to a vector element by index.",18,{"inputs":[{"name":"pnt3"},{"name":"usize"}],"output":{"name":"n"}}],[11,"set_fast","","Unsafe write access to a vector element by index.",18,{"inputs":[{"name":"pnt3"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"repeat","","Creates a new vector with all its components equal to a given value.",18,{"inputs":[{"name":"pnt3"},{"name":"n"}],"output":{"name":"pnt3"}}],[11,"dim","","",18,{"inputs":[{"name":"pnt3"},{"name":"option"}],"output":{"name":"usize"}}],[11,"len","","",18,{"inputs":[{"name":"pnt3"}],"output":{"name":"usize"}}],[11,"to_vec","","Converts this point to its associated vector.",18,{"inputs":[{"name":"pnt3"}],"output":{"name":"vec3"}}],[11,"as_vec","","Converts a reference to this point to a reference to its associated vector.",18,{"inputs":[{"name":"pnt3"}],"output":{"name":"vec3"}}],[11,"to_vec","","",18,{"inputs":[{"name":"pnt3"}],"output":{"name":"vec3"}}],[11,"as_vec","","",18,{"inputs":[{"name":"pnt3"}],"output":{"name":"vec3"}}],[11,"set_coords","","",18,{"inputs":[{"name":"pnt3"},{"name":"vec3"}],"output":null}],[11,"sub","","",18,{"inputs":[{"name":"pnt3"},{"name":"pnt3"}],"output":{"name":"vec3"}}],[11,"neg","","",18,{"inputs":[{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"add","","",18,{"inputs":[{"name":"pnt3"},{"name":"vec3"}],"output":{"name":"pnt3"}}],[11,"sub","","",18,{"inputs":[{"name":"pnt3"},{"name":"vec3"}],"output":{"name":"pnt3"}}],[11,"approx_epsilon","","",18,{"inputs":[{"name":"pnt3"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",18,{"inputs":[{"name":"pnt3"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq","","",18,{"inputs":[{"name":"pnt3"},{"name":"pnt3"}],"output":{"name":"bool"}}],[11,"approx_eq_eps","","",18,{"inputs":[{"name":"pnt3"},{"name":"pnt3"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",18,{"inputs":[{"name":"pnt3"},{"name":"pnt3"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"from_iter","","",18,{"inputs":[{"name":"pnt3"},{"name":"i"}],"output":{"name":"pnt3"}}],[11,"max_value","","",18,{"inputs":[{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"min_value","","",18,{"inputs":[{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"axpy","","",18,{"inputs":[{"name":"pnt3"},{"name":"n"},{"name":"pnt3"}],"output":null}],[11,"iter","","",18,{"inputs":[{"name":"pnt3"}],"output":{"name":"iter"}}],[11,"iter_mut","","",18,{"inputs":[{"name":"pnt3"}],"output":{"name":"itermut"}}],[11,"to_homogeneous","","",18,{"inputs":[{"name":"pnt3"}],"output":{"name":"pnt4"}}],[11,"from","","",18,{"inputs":[{"name":"pnt3"},{"name":"pnt4"}],"output":{"name":"pnt3"}}],[11,"rand","","",18,{"inputs":[{"name":"pnt3"},{"name":"r"}],"output":{"name":"pnt3"}}],[11,"fmt","","",19,{"inputs":[{"name":"pnt4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",19,null],[11,"clone","","",19,{"inputs":[{"name":"pnt4"}],"output":{"name":"pnt4"}}],[11,"decode","","",19,{"inputs":[{"name":"pnt4"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",19,{"inputs":[{"name":"pnt4"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"pnt4"},{"name":"pnt4"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"pnt4"},{"name":"pnt4"}],"output":{"name":"bool"}}],[11,"new","","Creates a new vector.",19,{"inputs":[{"name":"pnt4"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"pnt4"}}],[11,"orig","","",19,{"inputs":[{"name":"pnt4"}],"output":{"name":"pnt4"}}],[11,"is_orig","","",19,{"inputs":[{"name":"pnt4"}],"output":{"name":"bool"}}],[11,"inf","","",19,{"inputs":[{"name":"pnt4"},{"name":"pnt4"}],"output":{"name":"pnt4"}}],[11,"sup","","",19,{"inputs":[{"name":"pnt4"},{"name":"pnt4"}],"output":{"name":"pnt4"}}],[11,"partial_cmp","","",19,{"inputs":[{"name":"pnt4"},{"name":"pnt4"}],"output":{"name":"pordering"}}],[11,"partial_lt","","",19,{"inputs":[{"name":"pnt4"},{"name":"pnt4"}],"output":{"name":"bool"}}],[11,"partial_le","","",19,{"inputs":[{"name":"pnt4"},{"name":"pnt4"}],"output":{"name":"bool"}}],[11,"partial_gt","","",19,{"inputs":[{"name":"pnt4"},{"name":"pnt4"}],"output":{"name":"bool"}}],[11,"partial_ge","","",19,{"inputs":[{"name":"pnt4"},{"name":"pnt4"}],"output":{"name":"bool"}}],[11,"mul","","",19,{"inputs":[{"name":"pnt4"},{"name":"n"}],"output":{"name":"pnt4"}}],[11,"div","","",19,{"inputs":[{"name":"pnt4"},{"name":"n"}],"output":{"name":"pnt4"}}],[11,"add","","",19,{"inputs":[{"name":"pnt4"},{"name":"n"}],"output":{"name":"pnt4"}}],[11,"sub","","",19,{"inputs":[{"name":"pnt4"},{"name":"n"}],"output":{"name":"pnt4"}}],[11,"from","","",19,{"inputs":[{"name":"pnt4"},{"name":"pnt4"}],"output":{"name":"pnt4"}}],[11,"as_ref","","",19,null],[11,"as_mut","","",19,null],[11,"index","","",19,null],[11,"index_mut","","",19,null],[11,"shape","","",19,{"inputs":[{"name":"pnt4"}],"output":{"name":"usize"}}],[11,"swap","","",19,{"inputs":[{"name":"pnt4"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"unsafe_at","","",19,{"inputs":[{"name":"pnt4"},{"name":"usize"}],"output":{"name":"n"}}],[11,"unsafe_set","","",19,{"inputs":[{"name":"pnt4"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"at_fast","","Unsafe read access to a vector element by index.",19,{"inputs":[{"name":"pnt4"},{"name":"usize"}],"output":{"name":"n"}}],[11,"set_fast","","Unsafe write access to a vector element by index.",19,{"inputs":[{"name":"pnt4"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"repeat","","Creates a new vector with all its components equal to a given value.",19,{"inputs":[{"name":"pnt4"},{"name":"n"}],"output":{"name":"pnt4"}}],[11,"dim","","",19,{"inputs":[{"name":"pnt4"},{"name":"option"}],"output":{"name":"usize"}}],[11,"len","","",19,{"inputs":[{"name":"pnt4"}],"output":{"name":"usize"}}],[11,"to_vec","","Converts this point to its associated vector.",19,{"inputs":[{"name":"pnt4"}],"output":{"name":"vec4"}}],[11,"as_vec","","Converts a reference to this point to a reference to its associated vector.",19,{"inputs":[{"name":"pnt4"}],"output":{"name":"vec4"}}],[11,"to_vec","","",19,{"inputs":[{"name":"pnt4"}],"output":{"name":"vec4"}}],[11,"as_vec","","",19,{"inputs":[{"name":"pnt4"}],"output":{"name":"vec4"}}],[11,"set_coords","","",19,{"inputs":[{"name":"pnt4"},{"name":"vec4"}],"output":null}],[11,"sub","","",19,{"inputs":[{"name":"pnt4"},{"name":"pnt4"}],"output":{"name":"vec4"}}],[11,"neg","","",19,{"inputs":[{"name":"pnt4"}],"output":{"name":"pnt4"}}],[11,"add","","",19,{"inputs":[{"name":"pnt4"},{"name":"vec4"}],"output":{"name":"pnt4"}}],[11,"sub","","",19,{"inputs":[{"name":"pnt4"},{"name":"vec4"}],"output":{"name":"pnt4"}}],[11,"approx_epsilon","","",19,{"inputs":[{"name":"pnt4"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",19,{"inputs":[{"name":"pnt4"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq","","",19,{"inputs":[{"name":"pnt4"},{"name":"pnt4"}],"output":{"name":"bool"}}],[11,"approx_eq_eps","","",19,{"inputs":[{"name":"pnt4"},{"name":"pnt4"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",19,{"inputs":[{"name":"pnt4"},{"name":"pnt4"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"from_iter","","",19,{"inputs":[{"name":"pnt4"},{"name":"i"}],"output":{"name":"pnt4"}}],[11,"max_value","","",19,{"inputs":[{"name":"pnt4"}],"output":{"name":"pnt4"}}],[11,"min_value","","",19,{"inputs":[{"name":"pnt4"}],"output":{"name":"pnt4"}}],[11,"axpy","","",19,{"inputs":[{"name":"pnt4"},{"name":"n"},{"name":"pnt4"}],"output":null}],[11,"iter","","",19,{"inputs":[{"name":"pnt4"}],"output":{"name":"iter"}}],[11,"iter_mut","","",19,{"inputs":[{"name":"pnt4"}],"output":{"name":"itermut"}}],[11,"to_homogeneous","","",19,{"inputs":[{"name":"pnt4"}],"output":{"name":"pnt5"}}],[11,"from","","",19,{"inputs":[{"name":"pnt4"},{"name":"pnt5"}],"output":{"name":"pnt4"}}],[11,"rand","","",19,{"inputs":[{"name":"pnt4"},{"name":"r"}],"output":{"name":"pnt4"}}],[11,"fmt","","",20,{"inputs":[{"name":"pnt5"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",20,null],[11,"clone","","",20,{"inputs":[{"name":"pnt5"}],"output":{"name":"pnt5"}}],[11,"decode","","",20,{"inputs":[{"name":"pnt5"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",20,{"inputs":[{"name":"pnt5"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",20,{"inputs":[{"name":"pnt5"},{"name":"pnt5"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"pnt5"},{"name":"pnt5"}],"output":{"name":"bool"}}],[11,"new","","Creates a new vector.",20,{"inputs":[{"name":"pnt5"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"pnt5"}}],[11,"orig","","",20,{"inputs":[{"name":"pnt5"}],"output":{"name":"pnt5"}}],[11,"is_orig","","",20,{"inputs":[{"name":"pnt5"}],"output":{"name":"bool"}}],[11,"inf","","",20,{"inputs":[{"name":"pnt5"},{"name":"pnt5"}],"output":{"name":"pnt5"}}],[11,"sup","","",20,{"inputs":[{"name":"pnt5"},{"name":"pnt5"}],"output":{"name":"pnt5"}}],[11,"partial_cmp","","",20,{"inputs":[{"name":"pnt5"},{"name":"pnt5"}],"output":{"name":"pordering"}}],[11,"partial_lt","","",20,{"inputs":[{"name":"pnt5"},{"name":"pnt5"}],"output":{"name":"bool"}}],[11,"partial_le","","",20,{"inputs":[{"name":"pnt5"},{"name":"pnt5"}],"output":{"name":"bool"}}],[11,"partial_gt","","",20,{"inputs":[{"name":"pnt5"},{"name":"pnt5"}],"output":{"name":"bool"}}],[11,"partial_ge","","",20,{"inputs":[{"name":"pnt5"},{"name":"pnt5"}],"output":{"name":"bool"}}],[11,"mul","","",20,{"inputs":[{"name":"pnt5"},{"name":"n"}],"output":{"name":"pnt5"}}],[11,"div","","",20,{"inputs":[{"name":"pnt5"},{"name":"n"}],"output":{"name":"pnt5"}}],[11,"add","","",20,{"inputs":[{"name":"pnt5"},{"name":"n"}],"output":{"name":"pnt5"}}],[11,"sub","","",20,{"inputs":[{"name":"pnt5"},{"name":"n"}],"output":{"name":"pnt5"}}],[11,"from","","",20,{"inputs":[{"name":"pnt5"},{"name":"pnt5"}],"output":{"name":"pnt5"}}],[11,"as_ref","","",20,null],[11,"as_mut","","",20,null],[11,"index","","",20,null],[11,"index_mut","","",20,null],[11,"shape","","",20,{"inputs":[{"name":"pnt5"}],"output":{"name":"usize"}}],[11,"swap","","",20,{"inputs":[{"name":"pnt5"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"unsafe_at","","",20,{"inputs":[{"name":"pnt5"},{"name":"usize"}],"output":{"name":"n"}}],[11,"unsafe_set","","",20,{"inputs":[{"name":"pnt5"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"at_fast","","Unsafe read access to a vector element by index.",20,{"inputs":[{"name":"pnt5"},{"name":"usize"}],"output":{"name":"n"}}],[11,"set_fast","","Unsafe write access to a vector element by index.",20,{"inputs":[{"name":"pnt5"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"repeat","","Creates a new vector with all its components equal to a given value.",20,{"inputs":[{"name":"pnt5"},{"name":"n"}],"output":{"name":"pnt5"}}],[11,"dim","","",20,{"inputs":[{"name":"pnt5"},{"name":"option"}],"output":{"name":"usize"}}],[11,"len","","",20,{"inputs":[{"name":"pnt5"}],"output":{"name":"usize"}}],[11,"to_vec","","Converts this point to its associated vector.",20,{"inputs":[{"name":"pnt5"}],"output":{"name":"vec5"}}],[11,"as_vec","","Converts a reference to this point to a reference to its associated vector.",20,{"inputs":[{"name":"pnt5"}],"output":{"name":"vec5"}}],[11,"to_vec","","",20,{"inputs":[{"name":"pnt5"}],"output":{"name":"vec5"}}],[11,"as_vec","","",20,{"inputs":[{"name":"pnt5"}],"output":{"name":"vec5"}}],[11,"set_coords","","",20,{"inputs":[{"name":"pnt5"},{"name":"vec5"}],"output":null}],[11,"sub","","",20,{"inputs":[{"name":"pnt5"},{"name":"pnt5"}],"output":{"name":"vec5"}}],[11,"neg","","",20,{"inputs":[{"name":"pnt5"}],"output":{"name":"pnt5"}}],[11,"add","","",20,{"inputs":[{"name":"pnt5"},{"name":"vec5"}],"output":{"name":"pnt5"}}],[11,"sub","","",20,{"inputs":[{"name":"pnt5"},{"name":"vec5"}],"output":{"name":"pnt5"}}],[11,"approx_epsilon","","",20,{"inputs":[{"name":"pnt5"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",20,{"inputs":[{"name":"pnt5"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq","","",20,{"inputs":[{"name":"pnt5"},{"name":"pnt5"}],"output":{"name":"bool"}}],[11,"approx_eq_eps","","",20,{"inputs":[{"name":"pnt5"},{"name":"pnt5"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",20,{"inputs":[{"name":"pnt5"},{"name":"pnt5"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"from_iter","","",20,{"inputs":[{"name":"pnt5"},{"name":"i"}],"output":{"name":"pnt5"}}],[11,"max_value","","",20,{"inputs":[{"name":"pnt5"}],"output":{"name":"pnt5"}}],[11,"min_value","","",20,{"inputs":[{"name":"pnt5"}],"output":{"name":"pnt5"}}],[11,"axpy","","",20,{"inputs":[{"name":"pnt5"},{"name":"n"},{"name":"pnt5"}],"output":null}],[11,"iter","","",20,{"inputs":[{"name":"pnt5"}],"output":{"name":"iter"}}],[11,"iter_mut","","",20,{"inputs":[{"name":"pnt5"}],"output":{"name":"itermut"}}],[11,"to_homogeneous","","",20,{"inputs":[{"name":"pnt5"}],"output":{"name":"pnt6"}}],[11,"from","","",20,{"inputs":[{"name":"pnt5"},{"name":"pnt6"}],"output":{"name":"pnt5"}}],[11,"rand","","",20,{"inputs":[{"name":"pnt5"},{"name":"r"}],"output":{"name":"pnt5"}}],[11,"fmt","","",21,{"inputs":[{"name":"pnt6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",21,null],[11,"clone","","",21,{"inputs":[{"name":"pnt6"}],"output":{"name":"pnt6"}}],[11,"decode","","",21,{"inputs":[{"name":"pnt6"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",21,{"inputs":[{"name":"pnt6"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"pnt6"},{"name":"pnt6"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"pnt6"},{"name":"pnt6"}],"output":{"name":"bool"}}],[11,"new","","Creates a new vector.",21,{"inputs":[{"name":"pnt6"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"pnt6"}}],[11,"orig","","",21,{"inputs":[{"name":"pnt6"}],"output":{"name":"pnt6"}}],[11,"is_orig","","",21,{"inputs":[{"name":"pnt6"}],"output":{"name":"bool"}}],[11,"inf","","",21,{"inputs":[{"name":"pnt6"},{"name":"pnt6"}],"output":{"name":"pnt6"}}],[11,"sup","","",21,{"inputs":[{"name":"pnt6"},{"name":"pnt6"}],"output":{"name":"pnt6"}}],[11,"partial_cmp","","",21,{"inputs":[{"name":"pnt6"},{"name":"pnt6"}],"output":{"name":"pordering"}}],[11,"partial_lt","","",21,{"inputs":[{"name":"pnt6"},{"name":"pnt6"}],"output":{"name":"bool"}}],[11,"partial_le","","",21,{"inputs":[{"name":"pnt6"},{"name":"pnt6"}],"output":{"name":"bool"}}],[11,"partial_gt","","",21,{"inputs":[{"name":"pnt6"},{"name":"pnt6"}],"output":{"name":"bool"}}],[11,"partial_ge","","",21,{"inputs":[{"name":"pnt6"},{"name":"pnt6"}],"output":{"name":"bool"}}],[11,"mul","","",21,{"inputs":[{"name":"pnt6"},{"name":"n"}],"output":{"name":"pnt6"}}],[11,"div","","",21,{"inputs":[{"name":"pnt6"},{"name":"n"}],"output":{"name":"pnt6"}}],[11,"add","","",21,{"inputs":[{"name":"pnt6"},{"name":"n"}],"output":{"name":"pnt6"}}],[11,"sub","","",21,{"inputs":[{"name":"pnt6"},{"name":"n"}],"output":{"name":"pnt6"}}],[11,"from","","",21,{"inputs":[{"name":"pnt6"},{"name":"pnt6"}],"output":{"name":"pnt6"}}],[11,"as_ref","","",21,null],[11,"as_mut","","",21,null],[11,"index","","",21,null],[11,"index_mut","","",21,null],[11,"shape","","",21,{"inputs":[{"name":"pnt6"}],"output":{"name":"usize"}}],[11,"swap","","",21,{"inputs":[{"name":"pnt6"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"unsafe_at","","",21,{"inputs":[{"name":"pnt6"},{"name":"usize"}],"output":{"name":"n"}}],[11,"unsafe_set","","",21,{"inputs":[{"name":"pnt6"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"at_fast","","Unsafe read access to a vector element by index.",21,{"inputs":[{"name":"pnt6"},{"name":"usize"}],"output":{"name":"n"}}],[11,"set_fast","","Unsafe write access to a vector element by index.",21,{"inputs":[{"name":"pnt6"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"repeat","","Creates a new vector with all its components equal to a given value.",21,{"inputs":[{"name":"pnt6"},{"name":"n"}],"output":{"name":"pnt6"}}],[11,"dim","","",21,{"inputs":[{"name":"pnt6"},{"name":"option"}],"output":{"name":"usize"}}],[11,"len","","",21,{"inputs":[{"name":"pnt6"}],"output":{"name":"usize"}}],[11,"to_vec","","Converts this point to its associated vector.",21,{"inputs":[{"name":"pnt6"}],"output":{"name":"vec6"}}],[11,"as_vec","","Converts a reference to this point to a reference to its associated vector.",21,{"inputs":[{"name":"pnt6"}],"output":{"name":"vec6"}}],[11,"to_vec","","",21,{"inputs":[{"name":"pnt6"}],"output":{"name":"vec6"}}],[11,"as_vec","","",21,{"inputs":[{"name":"pnt6"}],"output":{"name":"vec6"}}],[11,"set_coords","","",21,{"inputs":[{"name":"pnt6"},{"name":"vec6"}],"output":null}],[11,"sub","","",21,{"inputs":[{"name":"pnt6"},{"name":"pnt6"}],"output":{"name":"vec6"}}],[11,"neg","","",21,{"inputs":[{"name":"pnt6"}],"output":{"name":"pnt6"}}],[11,"add","","",21,{"inputs":[{"name":"pnt6"},{"name":"vec6"}],"output":{"name":"pnt6"}}],[11,"sub","","",21,{"inputs":[{"name":"pnt6"},{"name":"vec6"}],"output":{"name":"pnt6"}}],[11,"approx_epsilon","","",21,{"inputs":[{"name":"pnt6"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",21,{"inputs":[{"name":"pnt6"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq","","",21,{"inputs":[{"name":"pnt6"},{"name":"pnt6"}],"output":{"name":"bool"}}],[11,"approx_eq_eps","","",21,{"inputs":[{"name":"pnt6"},{"name":"pnt6"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",21,{"inputs":[{"name":"pnt6"},{"name":"pnt6"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"from_iter","","",21,{"inputs":[{"name":"pnt6"},{"name":"i"}],"output":{"name":"pnt6"}}],[11,"max_value","","",21,{"inputs":[{"name":"pnt6"}],"output":{"name":"pnt6"}}],[11,"min_value","","",21,{"inputs":[{"name":"pnt6"}],"output":{"name":"pnt6"}}],[11,"axpy","","",21,{"inputs":[{"name":"pnt6"},{"name":"n"},{"name":"pnt6"}],"output":null}],[11,"iter","","",21,{"inputs":[{"name":"pnt6"}],"output":{"name":"iter"}}],[11,"iter_mut","","",21,{"inputs":[{"name":"pnt6"}],"output":{"name":"itermut"}}],[11,"rand","","",21,{"inputs":[{"name":"pnt6"},{"name":"r"}],"output":{"name":"pnt6"}}],[11,"fmt","","",22,{"inputs":[{"name":"quat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",22,null],[11,"clone","","",22,{"inputs":[{"name":"quat"}],"output":{"name":"quat"}}],[11,"decode","","",22,{"inputs":[{"name":"quat"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",22,{"inputs":[{"name":"quat"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"quat"},{"name":"quat"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"quat"},{"name":"quat"}],"output":{"name":"bool"}}],[11,"new","","Creates a new quaternion from its components.",22,{"inputs":[{"name":"quat"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"quat"}}],[11,"vector","","The vector part `(i, j, k)` of this quaternion.",22,{"inputs":[{"name":"quat"}],"output":{"name":"vec3"}}],[11,"scalar","","The scalar part `w` of this quaternion.",22,{"inputs":[{"name":"quat"}],"output":{"name":"n"}}],[11,"conjugate","","Compute the conjugate of this quaternion.",22,{"inputs":[{"name":"quat"}],"output":{"name":"quat"}}],[11,"conjugate_mut","","Replaces this quaternion by its conjugate.",22,{"inputs":[{"name":"quat"}],"output":null}],[11,"inv","","",22,{"inputs":[{"name":"quat"}],"output":{"name":"option"}}],[11,"inv_mut","","",22,{"inputs":[{"name":"quat"}],"output":{"name":"bool"}}],[11,"sqnorm","","",22,{"inputs":[{"name":"quat"}],"output":{"name":"n"}}],[11,"normalize","","",22,{"inputs":[{"name":"quat"}],"output":{"name":"quat"}}],[11,"normalize_mut","","",22,{"inputs":[{"name":"quat"}],"output":{"name":"n"}}],[11,"mul","","",22,{"inputs":[{"name":"quat"},{"name":"quat"}],"output":{"name":"quat"}}],[11,"div","","",22,{"inputs":[{"name":"quat"},{"name":"quat"}],"output":{"name":"quat"}}],[11,"rand","","",22,{"inputs":[{"name":"quat"},{"name":"r"}],"output":{"name":"quat"}}],[11,"fmt","","",39,{"inputs":[{"name":"unitquat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",39,null],[11,"clone","","",39,{"inputs":[{"name":"unitquat"}],"output":{"name":"unitquat"}}],[11,"decode","","",39,{"inputs":[{"name":"unitquat"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",39,{"inputs":[{"name":"unitquat"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",39,{"inputs":[{"name":"unitquat"},{"name":"unitquat"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"unitquat"},{"name":"unitquat"}],"output":{"name":"bool"}}],[11,"new","","Creates a new unit quaternion from the axis-angle representation of a rotation.",39,{"inputs":[{"name":"unitquat"},{"name":"vec3"}],"output":{"name":"unitquat"}}],[11,"new_with_quat","","Creates a new unit quaternion from a quaternion.",39,{"inputs":[{"name":"unitquat"},{"name":"quat"}],"output":{"name":"unitquat"}}],[11,"new_with_euler_angles","","Creates a new unit quaternion from Euler angles.",39,{"inputs":[{"name":"unitquat"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"unitquat"}}],[11,"to_rot","","Builds a rotation matrix from this quaternion.",39,{"inputs":[{"name":"unitquat"}],"output":{"name":"rot3"}}],[11,"new_with_unit_quat","","Creates a new unit quaternion from a quaternion.",39,{"inputs":[{"name":"unitquat"},{"name":"quat"}],"output":{"name":"unitquat"}}],[11,"quat","","The `Quat` representation of this unit quaternion.",39,{"inputs":[{"name":"unitquat"}],"output":{"name":"quat"}}],[11,"one","","",39,{"inputs":[{"name":"unitquat"}],"output":{"name":"unitquat"}}],[11,"inv","","",39,{"inputs":[{"name":"unitquat"}],"output":{"name":"option"}}],[11,"inv_mut","","",39,{"inputs":[{"name":"unitquat"}],"output":{"name":"bool"}}],[11,"rand","","",39,{"inputs":[{"name":"unitquat"},{"name":"r"}],"output":{"name":"unitquat"}}],[11,"approx_epsilon","","",39,{"inputs":[{"name":"unitquat"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",39,{"inputs":[{"name":"unitquat"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",39,{"inputs":[{"name":"unitquat"},{"name":"unitquat"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",39,{"inputs":[{"name":"unitquat"},{"name":"unitquat"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"div","","",39,{"inputs":[{"name":"unitquat"},{"name":"unitquat"}],"output":{"name":"unitquat"}}],[11,"mul","","",39,{"inputs":[{"name":"unitquat"},{"name":"unitquat"}],"output":{"name":"unitquat"}}],[11,"mul","","",39,{"inputs":[{"name":"unitquat"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"mul","","",39,{"inputs":[{"name":"unitquat"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"mul","","",12,{"inputs":[{"name":"vec3"},{"name":"unitquat"}],"output":{"name":"vec3"}}],[11,"mul","","",18,{"inputs":[{"name":"pnt3"},{"name":"unitquat"}],"output":{"name":"pnt3"}}],[11,"rotation","","",39,{"inputs":[{"name":"unitquat"}],"output":{"name":"vec3"}}],[11,"inv_rotation","","",39,{"inputs":[{"name":"unitquat"}],"output":{"name":"vec3"}}],[11,"append_rotation_mut","","",39,{"inputs":[{"name":"unitquat"},{"name":"vec3"}],"output":null}],[11,"append_rotation","","",39,{"inputs":[{"name":"unitquat"},{"name":"vec3"}],"output":{"name":"unitquat"}}],[11,"prepend_rotation_mut","","",39,{"inputs":[{"name":"unitquat"},{"name":"vec3"}],"output":null}],[11,"prepend_rotation","","",39,{"inputs":[{"name":"unitquat"},{"name":"vec3"}],"output":{"name":"unitquat"}}],[11,"set_rotation","","",39,{"inputs":[{"name":"unitquat"},{"name":"vec3"}],"output":null}],[11,"to_rot_mat","","",39,{"inputs":[{"name":"unitquat"}],"output":{"name":"rot3"}}],[11,"rotate","","",39,{"inputs":[{"name":"unitquat"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"inv_rotate","","",39,{"inputs":[{"name":"unitquat"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"rotate","","",39,{"inputs":[{"name":"unitquat"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"inv_rotate","","",39,{"inputs":[{"name":"unitquat"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"angle_to","","",39,{"inputs":[{"name":"unitquat"},{"name":"self"}],"output":{"name":"n"}}],[11,"rotation_to","","",39,{"inputs":[{"name":"unitquat"},{"name":"self"}],"output":{"name":"unitquat"}}],[11,"transform","","",39,{"inputs":[{"name":"unitquat"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"inv_transform","","",39,{"inputs":[{"name":"unitquat"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"transform","","",39,{"inputs":[{"name":"unitquat"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"inv_transform","","",39,{"inputs":[{"name":"unitquat"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"inf","","",22,{"inputs":[{"name":"quat"},{"name":"quat"}],"output":{"name":"quat"}}],[11,"sup","","",22,{"inputs":[{"name":"quat"},{"name":"quat"}],"output":{"name":"quat"}}],[11,"partial_cmp","","",22,{"inputs":[{"name":"quat"},{"name":"quat"}],"output":{"name":"pordering"}}],[11,"partial_lt","","",22,{"inputs":[{"name":"quat"},{"name":"quat"}],"output":{"name":"bool"}}],[11,"partial_le","","",22,{"inputs":[{"name":"quat"},{"name":"quat"}],"output":{"name":"bool"}}],[11,"partial_gt","","",22,{"inputs":[{"name":"quat"},{"name":"quat"}],"output":{"name":"bool"}}],[11,"partial_ge","","",22,{"inputs":[{"name":"quat"},{"name":"quat"}],"output":{"name":"bool"}}],[11,"w","","Create a unit vector with its `$compN` component equal to 1.0.",22,{"inputs":[{"name":"quat"}],"output":{"name":"quat"}}],[11,"i","","Create a unit vector with its `$compN` component equal to 1.0.",22,{"inputs":[{"name":"quat"}],"output":{"name":"quat"}}],[11,"j","","Create a unit vector with its `$compN` component equal to 1.0.",22,{"inputs":[{"name":"quat"}],"output":{"name":"quat"}}],[11,"k","","Create a unit vector with its `$compN` component equal to 1.0.",22,{"inputs":[{"name":"quat"}],"output":{"name":"quat"}}],[11,"from","","",22,{"inputs":[{"name":"quat"},{"name":"quat"}],"output":{"name":"quat"}}],[11,"as_ref","","",22,null],[11,"as_mut","","",22,null],[11,"index","","",22,null],[11,"index_mut","","",22,null],[11,"shape","","",22,{"inputs":[{"name":"quat"}],"output":{"name":"usize"}}],[11,"swap","","",22,{"inputs":[{"name":"quat"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"unsafe_at","","",22,{"inputs":[{"name":"quat"},{"name":"usize"}],"output":{"name":"n"}}],[11,"unsafe_set","","",22,{"inputs":[{"name":"quat"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"at_fast","","Unsafe read access to a vector element by index.",22,{"inputs":[{"name":"quat"},{"name":"usize"}],"output":{"name":"n"}}],[11,"set_fast","","Unsafe write access to a vector element by index.",22,{"inputs":[{"name":"quat"},{"name":"usize"},{"name":"n"}],"output":null}],[11,"repeat","","Creates a new vector with all its components equal to a given value.",22,{"inputs":[{"name":"quat"},{"name":"n"}],"output":{"name":"quat"}}],[11,"dim","","",22,{"inputs":[{"name":"quat"},{"name":"option"}],"output":{"name":"usize"}}],[11,"len","","",22,{"inputs":[{"name":"quat"}],"output":{"name":"usize"}}],[11,"add","","",22,{"inputs":[{"name":"quat"},{"name":"quat"}],"output":{"name":"quat"}}],[11,"sub","","",22,{"inputs":[{"name":"quat"},{"name":"quat"}],"output":{"name":"quat"}}],[11,"add","","",22,{"inputs":[{"name":"quat"},{"name":"n"}],"output":{"name":"quat"}}],[11,"sub","","",22,{"inputs":[{"name":"quat"},{"name":"n"}],"output":{"name":"quat"}}],[11,"mul","","",22,{"inputs":[{"name":"quat"},{"name":"n"}],"output":{"name":"quat"}}],[11,"div","","",22,{"inputs":[{"name":"quat"},{"name":"n"}],"output":{"name":"quat"}}],[11,"neg","","",22,{"inputs":[{"name":"quat"}],"output":{"name":"quat"}}],[11,"one","","",22,{"inputs":[{"name":"quat"}],"output":{"name":"quat"}}],[11,"zero","","",22,{"inputs":[{"name":"quat"}],"output":{"name":"quat"}}],[11,"is_zero","","",22,{"inputs":[{"name":"quat"}],"output":{"name":"bool"}}],[11,"approx_epsilon","","",22,{"inputs":[{"name":"quat"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",22,{"inputs":[{"name":"quat"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq","","",22,{"inputs":[{"name":"quat"},{"name":"quat"}],"output":{"name":"bool"}}],[11,"approx_eq_eps","","",22,{"inputs":[{"name":"quat"},{"name":"quat"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",22,{"inputs":[{"name":"quat"},{"name":"quat"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"from_iter","","",22,{"inputs":[{"name":"quat"},{"name":"i"}],"output":{"name":"quat"}}],[11,"max_value","","",22,{"inputs":[{"name":"quat"}],"output":{"name":"quat"}}],[11,"min_value","","",22,{"inputs":[{"name":"quat"}],"output":{"name":"quat"}}],[11,"axpy","","",22,{"inputs":[{"name":"quat"},{"name":"n"},{"name":"quat"}],"output":null}],[11,"iter","","",22,{"inputs":[{"name":"quat"}],"output":{"name":"iter"}}],[11,"iter_mut","","",22,{"inputs":[{"name":"quat"}],"output":{"name":"itermut"}}],[11,"dim","","",39,{"inputs":[{"name":"unitquat"},{"name":"option"}],"output":{"name":"usize"}}],[11,"fmt","","",40,{"inputs":[{"name":"identity"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",40,{"inputs":[{"name":"identity"}],"output":{"name":"identity"}}],[11,"decode","","",40,{"inputs":[{"name":"identity"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",40,{"inputs":[{"name":"identity"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",40,{"inputs":[{"name":"identity"},{"name":"identity"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"identity"},{"name":"identity"}],"output":{"name":"bool"}}],[11,"new","","Creates a new identity matrix.",40,{"inputs":[{"name":"identity"}],"output":{"name":"identity"}}],[11,"fmt","","",4,{"inputs":[{"name":"mat1"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",4,null],[11,"clone","","",4,{"inputs":[{"name":"mat1"}],"output":{"name":"mat1"}}],[11,"decode","","",4,{"inputs":[{"name":"mat1"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",4,{"inputs":[{"name":"mat1"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"mat1"},{"name":"mat1"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"mat1"},{"name":"mat1"}],"output":{"name":"bool"}}],[11,"new_identity","","",4,{"inputs":[{"name":"mat1"},{"name":"usize"}],"output":{"name":"mat1"}}],[11,"new","","",4,{"inputs":[{"name":"mat1"},{"name":"n"}],"output":{"name":"mat1"}}],[11,"repeat","","",4,{"inputs":[{"name":"mat1"},{"name":"n"}],"output":{"name":"mat1"}}],[11,"as_ref","","",4,null],[11,"as_mut","","",4,null],[11,"from","","",4,{"inputs":[{"name":"mat1"},{"name":"mat1"}],"output":{"name":"mat1"}}],[11,"add","","",4,{"inputs":[{"name":"mat1"},{"name":"mat1"}],"output":{"name":"mat1"}}],[11,"sub","","",4,{"inputs":[{"name":"mat1"},{"name":"mat1"}],"output":{"name":"mat1"}}],[11,"add","","",4,{"inputs":[{"name":"mat1"},{"name":"n"}],"output":{"name":"mat1"}}],[11,"sub","","",4,{"inputs":[{"name":"mat1"},{"name":"n"}],"output":{"name":"mat1"}}],[11,"mul","","",4,{"inputs":[{"name":"mat1"},{"name":"n"}],"output":{"name":"mat1"}}],[11,"div","","",4,{"inputs":[{"name":"mat1"},{"name":"n"}],"output":{"name":"mat1"}}],[11,"abs","","",4,{"inputs":[{"name":"mat1"},{"name":"mat1"}],"output":{"name":"mat1"}}],[11,"zero","","",4,{"inputs":[{"name":"mat1"}],"output":{"name":"mat1"}}],[11,"is_zero","","",4,{"inputs":[{"name":"mat1"}],"output":{"name":"bool"}}],[11,"one","","",4,{"inputs":[{"name":"mat1"}],"output":{"name":"mat1"}}],[11,"iter","","",4,{"inputs":[{"name":"mat1"}],"output":{"name":"iter"}}],[11,"iter_mut","","",4,{"inputs":[{"name":"mat1"}],"output":{"name":"itermut"}}],[11,"at_fast","","",4,null],[11,"set_fast","","",4,null],[11,"dim","","",4,{"inputs":[{"name":"mat1"},{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",4,null],[11,"swap","","",4,null],[11,"unsafe_at","","",4,null],[11,"unsafe_set","","",4,null],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"mul","","",4,{"inputs":[{"name":"mat1"},{"name":"mat1"}],"output":{"name":"mat1"}}],[11,"mul","","",4,{"inputs":[{"name":"mat1"},{"name":"vec1"}],"output":{"name":"vec1"}}],[11,"mul","","",10,{"inputs":[{"name":"vec1"},{"name":"mat1"}],"output":{"name":"vec1"}}],[11,"mul","","",4,{"inputs":[{"name":"mat1"},{"name":"pnt1"}],"output":{"name":"pnt1"}}],[11,"mul","","",16,{"inputs":[{"name":"pnt1"},{"name":"mat1"}],"output":{"name":"pnt1"}}],[11,"transpose","","",4,{"inputs":[{"name":"mat1"}],"output":{"name":"mat1"}}],[11,"transpose_mut","","",4,{"inputs":[{"name":"mat1"}],"output":null}],[11,"approx_epsilon","","",4,{"inputs":[{"name":"mat1"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",4,{"inputs":[{"name":"mat1"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",4,{"inputs":[{"name":"mat1"},{"name":"mat1"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",4,{"inputs":[{"name":"mat1"},{"name":"mat1"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"nrows","","",4,{"inputs":[{"name":"mat1"}],"output":{"name":"usize"}}],[11,"set_row","","",4,{"inputs":[{"name":"mat1"},{"name":"usize"},{"name":"vec1"}],"output":null}],[11,"row","","",4,{"inputs":[{"name":"mat1"},{"name":"usize"}],"output":{"name":"vec1"}}],[11,"ncols","","",4,{"inputs":[{"name":"mat1"}],"output":{"name":"usize"}}],[11,"set_col","","",4,{"inputs":[{"name":"mat1"},{"name":"usize"},{"name":"vec1"}],"output":null}],[11,"col","","",4,{"inputs":[{"name":"mat1"},{"name":"usize"}],"output":{"name":"vec1"}}],[11,"col_slice","","",4,{"inputs":[{"name":"mat1"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec1"}}],[11,"row_slice","","",4,{"inputs":[{"name":"mat1"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec1"}}],[11,"from_diag","","",4,{"inputs":[{"name":"mat1"},{"name":"vec1"}],"output":{"name":"mat1"}}],[11,"diag","","",4,{"inputs":[{"name":"mat1"}],"output":{"name":"vec1"}}],[11,"set_diag","","",4,{"inputs":[{"name":"mat1"},{"name":"vec1"}],"output":null}],[11,"to_homogeneous","","",4,{"inputs":[{"name":"mat1"}],"output":{"name":"mat2"}}],[11,"from","","",4,{"inputs":[{"name":"mat1"},{"name":"mat2"}],"output":{"name":"mat1"}}],[11,"outer","","",10,{"inputs":[{"name":"vec1"},{"name":"vec1"}],"output":{"name":"mat1"}}],[11,"eigen_qr","","",4,null],[11,"rand","","",4,{"inputs":[{"name":"mat1"},{"name":"r"}],"output":{"name":"mat1"}}],[11,"mean","","",4,{"inputs":[{"name":"mat1"}],"output":{"name":"vec1"}}],[11,"fmt","","",5,{"inputs":[{"name":"mat2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",5,null],[11,"clone","","",5,{"inputs":[{"name":"mat2"}],"output":{"name":"mat2"}}],[11,"decode","","",5,{"inputs":[{"name":"mat2"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",5,{"inputs":[{"name":"mat2"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"mat2"},{"name":"mat2"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"mat2"},{"name":"mat2"}],"output":{"name":"bool"}}],[11,"new_identity","","",5,{"inputs":[{"name":"mat2"},{"name":"usize"}],"output":{"name":"mat2"}}],[11,"new","","",5,{"inputs":[{"name":"mat2"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"mat2"}}],[11,"repeat","","",5,{"inputs":[{"name":"mat2"},{"name":"n"}],"output":{"name":"mat2"}}],[11,"as_ref","","",5,null],[11,"as_mut","","",5,null],[11,"from","","",5,{"inputs":[{"name":"mat2"},{"name":"mat2"}],"output":{"name":"mat2"}}],[11,"add","","",5,{"inputs":[{"name":"mat2"},{"name":"mat2"}],"output":{"name":"mat2"}}],[11,"sub","","",5,{"inputs":[{"name":"mat2"},{"name":"mat2"}],"output":{"name":"mat2"}}],[11,"add","","",5,{"inputs":[{"name":"mat2"},{"name":"n"}],"output":{"name":"mat2"}}],[11,"sub","","",5,{"inputs":[{"name":"mat2"},{"name":"n"}],"output":{"name":"mat2"}}],[11,"mul","","",5,{"inputs":[{"name":"mat2"},{"name":"n"}],"output":{"name":"mat2"}}],[11,"div","","",5,{"inputs":[{"name":"mat2"},{"name":"n"}],"output":{"name":"mat2"}}],[11,"abs","","",5,{"inputs":[{"name":"mat2"},{"name":"mat2"}],"output":{"name":"mat2"}}],[11,"zero","","",5,{"inputs":[{"name":"mat2"}],"output":{"name":"mat2"}}],[11,"is_zero","","",5,{"inputs":[{"name":"mat2"}],"output":{"name":"bool"}}],[11,"one","","",5,{"inputs":[{"name":"mat2"}],"output":{"name":"mat2"}}],[11,"iter","","",5,{"inputs":[{"name":"mat2"}],"output":{"name":"iter"}}],[11,"iter_mut","","",5,{"inputs":[{"name":"mat2"}],"output":{"name":"itermut"}}],[11,"dim","","",5,{"inputs":[{"name":"mat2"},{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",5,null],[11,"swap","","",5,null],[11,"unsafe_at","","",5,null],[11,"unsafe_set","","",5,null],[11,"index","","",5,null],[11,"index_mut","","",5,null],[11,"at_fast","","",5,null],[11,"set_fast","","",5,null],[11,"transpose","","",5,{"inputs":[{"name":"mat2"}],"output":{"name":"mat2"}}],[11,"transpose_mut","","",5,{"inputs":[{"name":"mat2"}],"output":null}],[11,"approx_epsilon","","",5,{"inputs":[{"name":"mat2"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",5,{"inputs":[{"name":"mat2"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",5,{"inputs":[{"name":"mat2"},{"name":"mat2"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",5,{"inputs":[{"name":"mat2"},{"name":"mat2"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"nrows","","",5,{"inputs":[{"name":"mat2"}],"output":{"name":"usize"}}],[11,"set_row","","",5,{"inputs":[{"name":"mat2"},{"name":"usize"},{"name":"vec2"}],"output":null}],[11,"row","","",5,{"inputs":[{"name":"mat2"},{"name":"usize"}],"output":{"name":"vec2"}}],[11,"ncols","","",5,{"inputs":[{"name":"mat2"}],"output":{"name":"usize"}}],[11,"set_col","","",5,{"inputs":[{"name":"mat2"},{"name":"usize"},{"name":"vec2"}],"output":null}],[11,"col","","",5,{"inputs":[{"name":"mat2"},{"name":"usize"}],"output":{"name":"vec2"}}],[11,"col_slice","","",5,{"inputs":[{"name":"mat2"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec2"}}],[11,"row_slice","","",5,{"inputs":[{"name":"mat2"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec2"}}],[11,"from_diag","","",5,{"inputs":[{"name":"mat2"},{"name":"vec2"}],"output":{"name":"mat2"}}],[11,"diag","","",5,{"inputs":[{"name":"mat2"}],"output":{"name":"vec2"}}],[11,"set_diag","","",5,{"inputs":[{"name":"mat2"},{"name":"vec2"}],"output":null}],[11,"to_homogeneous","","",5,{"inputs":[{"name":"mat2"}],"output":{"name":"mat3"}}],[11,"from","","",5,{"inputs":[{"name":"mat2"},{"name":"mat3"}],"output":{"name":"mat2"}}],[11,"outer","","",11,{"inputs":[{"name":"vec2"},{"name":"vec2"}],"output":{"name":"mat2"}}],[11,"eigen_qr","","",5,null],[11,"rand","","",5,{"inputs":[{"name":"mat2"},{"name":"r"}],"output":{"name":"mat2"}}],[11,"mean","","",5,{"inputs":[{"name":"mat2"}],"output":{"name":"vec2"}}],[11,"fmt","","",6,{"inputs":[{"name":"mat3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",6,null],[11,"clone","","",6,{"inputs":[{"name":"mat3"}],"output":{"name":"mat3"}}],[11,"decode","","",6,{"inputs":[{"name":"mat3"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",6,{"inputs":[{"name":"mat3"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"mat3"},{"name":"mat3"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"mat3"},{"name":"mat3"}],"output":{"name":"bool"}}],[11,"new_identity","","",6,{"inputs":[{"name":"mat3"},{"name":"usize"}],"output":{"name":"mat3"}}],[11,"new","","",6,{"inputs":[{"name":"mat3"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"mat3"}}],[11,"repeat","","",6,{"inputs":[{"name":"mat3"},{"name":"n"}],"output":{"name":"mat3"}}],[11,"as_ref","","",6,null],[11,"as_mut","","",6,null],[11,"from","","",6,{"inputs":[{"name":"mat3"},{"name":"mat3"}],"output":{"name":"mat3"}}],[11,"add","","",6,{"inputs":[{"name":"mat3"},{"name":"mat3"}],"output":{"name":"mat3"}}],[11,"sub","","",6,{"inputs":[{"name":"mat3"},{"name":"mat3"}],"output":{"name":"mat3"}}],[11,"add","","",6,{"inputs":[{"name":"mat3"},{"name":"n"}],"output":{"name":"mat3"}}],[11,"sub","","",6,{"inputs":[{"name":"mat3"},{"name":"n"}],"output":{"name":"mat3"}}],[11,"mul","","",6,{"inputs":[{"name":"mat3"},{"name":"n"}],"output":{"name":"mat3"}}],[11,"div","","",6,{"inputs":[{"name":"mat3"},{"name":"n"}],"output":{"name":"mat3"}}],[11,"abs","","",6,{"inputs":[{"name":"mat3"},{"name":"mat3"}],"output":{"name":"mat3"}}],[11,"zero","","",6,{"inputs":[{"name":"mat3"}],"output":{"name":"mat3"}}],[11,"is_zero","","",6,{"inputs":[{"name":"mat3"}],"output":{"name":"bool"}}],[11,"one","","",6,{"inputs":[{"name":"mat3"}],"output":{"name":"mat3"}}],[11,"iter","","",6,{"inputs":[{"name":"mat3"}],"output":{"name":"iter"}}],[11,"iter_mut","","",6,{"inputs":[{"name":"mat3"}],"output":{"name":"itermut"}}],[11,"dim","","",6,{"inputs":[{"name":"mat3"},{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",6,null],[11,"swap","","",6,null],[11,"unsafe_at","","",6,null],[11,"unsafe_set","","",6,null],[11,"index","","",6,null],[11,"index_mut","","",6,null],[11,"at_fast","","",6,null],[11,"set_fast","","",6,null],[11,"transpose","","",6,{"inputs":[{"name":"mat3"}],"output":{"name":"mat3"}}],[11,"transpose_mut","","",6,{"inputs":[{"name":"mat3"}],"output":null}],[11,"approx_epsilon","","",6,{"inputs":[{"name":"mat3"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",6,{"inputs":[{"name":"mat3"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",6,{"inputs":[{"name":"mat3"},{"name":"mat3"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",6,{"inputs":[{"name":"mat3"},{"name":"mat3"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"col_slice","","",6,{"inputs":[{"name":"mat3"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec3"}}],[11,"row_slice","","",6,{"inputs":[{"name":"mat3"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec3"}}],[11,"from_diag","","",6,{"inputs":[{"name":"mat3"},{"name":"vec3"}],"output":{"name":"mat3"}}],[11,"diag","","",6,{"inputs":[{"name":"mat3"}],"output":{"name":"vec3"}}],[11,"set_diag","","",6,{"inputs":[{"name":"mat3"},{"name":"vec3"}],"output":null}],[11,"to_homogeneous","","",6,{"inputs":[{"name":"mat3"}],"output":{"name":"mat4"}}],[11,"from","","",6,{"inputs":[{"name":"mat3"},{"name":"mat4"}],"output":{"name":"mat3"}}],[11,"outer","","",12,{"inputs":[{"name":"vec3"},{"name":"vec3"}],"output":{"name":"mat3"}}],[11,"eigen_qr","","",6,null],[11,"rand","","",6,{"inputs":[{"name":"mat3"},{"name":"r"}],"output":{"name":"mat3"}}],[11,"mean","","",6,{"inputs":[{"name":"mat3"}],"output":{"name":"vec3"}}],[11,"fmt","","",7,{"inputs":[{"name":"mat4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",7,null],[11,"clone","","",7,{"inputs":[{"name":"mat4"}],"output":{"name":"mat4"}}],[11,"decode","","",7,{"inputs":[{"name":"mat4"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",7,{"inputs":[{"name":"mat4"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"mat4"},{"name":"mat4"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"mat4"},{"name":"mat4"}],"output":{"name":"bool"}}],[11,"new_identity","","",7,{"inputs":[{"name":"mat4"},{"name":"usize"}],"output":{"name":"mat4"}}],[11,"new","","",7,{"inputs":[{"name":"mat4"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"mat4"}}],[11,"repeat","","",7,{"inputs":[{"name":"mat4"},{"name":"n"}],"output":{"name":"mat4"}}],[11,"as_ref","","",7,null],[11,"as_mut","","",7,null],[11,"from","","",7,{"inputs":[{"name":"mat4"},{"name":"mat4"}],"output":{"name":"mat4"}}],[11,"add","","",7,{"inputs":[{"name":"mat4"},{"name":"mat4"}],"output":{"name":"mat4"}}],[11,"sub","","",7,{"inputs":[{"name":"mat4"},{"name":"mat4"}],"output":{"name":"mat4"}}],[11,"add","","",7,{"inputs":[{"name":"mat4"},{"name":"n"}],"output":{"name":"mat4"}}],[11,"sub","","",7,{"inputs":[{"name":"mat4"},{"name":"n"}],"output":{"name":"mat4"}}],[11,"mul","","",7,{"inputs":[{"name":"mat4"},{"name":"n"}],"output":{"name":"mat4"}}],[11,"div","","",7,{"inputs":[{"name":"mat4"},{"name":"n"}],"output":{"name":"mat4"}}],[11,"abs","","",7,{"inputs":[{"name":"mat4"},{"name":"mat4"}],"output":{"name":"mat4"}}],[11,"zero","","",7,{"inputs":[{"name":"mat4"}],"output":{"name":"mat4"}}],[11,"is_zero","","",7,{"inputs":[{"name":"mat4"}],"output":{"name":"bool"}}],[11,"one","","",7,{"inputs":[{"name":"mat4"}],"output":{"name":"mat4"}}],[11,"iter","","",7,{"inputs":[{"name":"mat4"}],"output":{"name":"iter"}}],[11,"iter_mut","","",7,{"inputs":[{"name":"mat4"}],"output":{"name":"itermut"}}],[11,"dim","","",7,{"inputs":[{"name":"mat4"},{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",7,null],[11,"swap","","",7,null],[11,"unsafe_at","","",7,null],[11,"unsafe_set","","",7,null],[11,"index","","",7,null],[11,"index_mut","","",7,null],[11,"at_fast","","",7,null],[11,"set_fast","","",7,null],[11,"mul","","",7,{"inputs":[{"name":"mat4"},{"name":"mat4"}],"output":{"name":"mat4"}}],[11,"mul","","",7,{"inputs":[{"name":"mat4"},{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"mul","","",13,{"inputs":[{"name":"vec4"},{"name":"mat4"}],"output":{"name":"vec4"}}],[11,"mul","","",7,{"inputs":[{"name":"mat4"},{"name":"pnt4"}],"output":{"name":"pnt4"}}],[11,"mul","","",19,{"inputs":[{"name":"pnt4"},{"name":"mat4"}],"output":{"name":"pnt4"}}],[11,"inv","","",7,{"inputs":[{"name":"mat4"}],"output":{"name":"option"}}],[11,"inv_mut","","",7,{"inputs":[{"name":"mat4"}],"output":{"name":"bool"}}],[11,"transpose","","",7,{"inputs":[{"name":"mat4"}],"output":{"name":"mat4"}}],[11,"transpose_mut","","",7,{"inputs":[{"name":"mat4"}],"output":null}],[11,"approx_epsilon","","",7,{"inputs":[{"name":"mat4"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",7,{"inputs":[{"name":"mat4"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",7,{"inputs":[{"name":"mat4"},{"name":"mat4"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",7,{"inputs":[{"name":"mat4"},{"name":"mat4"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"nrows","","",7,{"inputs":[{"name":"mat4"}],"output":{"name":"usize"}}],[11,"set_row","","",7,{"inputs":[{"name":"mat4"},{"name":"usize"},{"name":"vec4"}],"output":null}],[11,"row","","",7,{"inputs":[{"name":"mat4"},{"name":"usize"}],"output":{"name":"vec4"}}],[11,"ncols","","",7,{"inputs":[{"name":"mat4"}],"output":{"name":"usize"}}],[11,"set_col","","",7,{"inputs":[{"name":"mat4"},{"name":"usize"},{"name":"vec4"}],"output":null}],[11,"col","","",7,{"inputs":[{"name":"mat4"},{"name":"usize"}],"output":{"name":"vec4"}}],[11,"col_slice","","",7,{"inputs":[{"name":"mat4"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec4"}}],[11,"row_slice","","",7,{"inputs":[{"name":"mat4"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec4"}}],[11,"from_diag","","",7,{"inputs":[{"name":"mat4"},{"name":"vec4"}],"output":{"name":"mat4"}}],[11,"diag","","",7,{"inputs":[{"name":"mat4"}],"output":{"name":"vec4"}}],[11,"set_diag","","",7,{"inputs":[{"name":"mat4"},{"name":"vec4"}],"output":null}],[11,"to_homogeneous","","",7,{"inputs":[{"name":"mat4"}],"output":{"name":"mat5"}}],[11,"from","","",7,{"inputs":[{"name":"mat4"},{"name":"mat5"}],"output":{"name":"mat4"}}],[11,"outer","","",13,{"inputs":[{"name":"vec4"},{"name":"vec4"}],"output":{"name":"mat4"}}],[11,"eigen_qr","","",7,null],[11,"rand","","",7,{"inputs":[{"name":"mat4"},{"name":"r"}],"output":{"name":"mat4"}}],[11,"mean","","",7,{"inputs":[{"name":"mat4"}],"output":{"name":"vec4"}}],[11,"fmt","","",8,{"inputs":[{"name":"mat5"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",8,null],[11,"clone","","",8,{"inputs":[{"name":"mat5"}],"output":{"name":"mat5"}}],[11,"decode","","",8,{"inputs":[{"name":"mat5"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",8,{"inputs":[{"name":"mat5"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"mat5"},{"name":"mat5"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"mat5"},{"name":"mat5"}],"output":{"name":"bool"}}],[11,"new_identity","","",8,{"inputs":[{"name":"mat5"},{"name":"usize"}],"output":{"name":"mat5"}}],[11,"new","","",8,{"inputs":[{"name":"mat5"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"mat5"}}],[11,"repeat","","",8,{"inputs":[{"name":"mat5"},{"name":"n"}],"output":{"name":"mat5"}}],[11,"as_ref","","",8,null],[11,"as_mut","","",8,null],[11,"from","","",8,{"inputs":[{"name":"mat5"},{"name":"mat5"}],"output":{"name":"mat5"}}],[11,"abs","","",8,{"inputs":[{"name":"mat5"},{"name":"mat5"}],"output":{"name":"mat5"}}],[11,"zero","","",8,{"inputs":[{"name":"mat5"}],"output":{"name":"mat5"}}],[11,"is_zero","","",8,{"inputs":[{"name":"mat5"}],"output":{"name":"bool"}}],[11,"one","","",8,{"inputs":[{"name":"mat5"}],"output":{"name":"mat5"}}],[11,"add","","",8,{"inputs":[{"name":"mat5"},{"name":"mat5"}],"output":{"name":"mat5"}}],[11,"sub","","",8,{"inputs":[{"name":"mat5"},{"name":"mat5"}],"output":{"name":"mat5"}}],[11,"add","","",8,{"inputs":[{"name":"mat5"},{"name":"n"}],"output":{"name":"mat5"}}],[11,"sub","","",8,{"inputs":[{"name":"mat5"},{"name":"n"}],"output":{"name":"mat5"}}],[11,"mul","","",8,{"inputs":[{"name":"mat5"},{"name":"n"}],"output":{"name":"mat5"}}],[11,"div","","",8,{"inputs":[{"name":"mat5"},{"name":"n"}],"output":{"name":"mat5"}}],[11,"iter","","",8,{"inputs":[{"name":"mat5"}],"output":{"name":"iter"}}],[11,"iter_mut","","",8,{"inputs":[{"name":"mat5"}],"output":{"name":"itermut"}}],[11,"dim","","",8,{"inputs":[{"name":"mat5"},{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",8,null],[11,"swap","","",8,null],[11,"unsafe_at","","",8,null],[11,"unsafe_set","","",8,null],[11,"index","","",8,null],[11,"index_mut","","",8,null],[11,"at_fast","","",8,null],[11,"set_fast","","",8,null],[11,"mul","","",8,{"inputs":[{"name":"mat5"},{"name":"mat5"}],"output":{"name":"mat5"}}],[11,"mul","","",8,{"inputs":[{"name":"mat5"},{"name":"vec5"}],"output":{"name":"vec5"}}],[11,"mul","","",14,{"inputs":[{"name":"vec5"},{"name":"mat5"}],"output":{"name":"vec5"}}],[11,"mul","","",8,{"inputs":[{"name":"mat5"},{"name":"pnt5"}],"output":{"name":"pnt5"}}],[11,"mul","","",20,{"inputs":[{"name":"pnt5"},{"name":"mat5"}],"output":{"name":"pnt5"}}],[11,"inv","","",8,{"inputs":[{"name":"mat5"}],"output":{"name":"option"}}],[11,"inv_mut","","",8,{"inputs":[{"name":"mat5"}],"output":{"name":"bool"}}],[11,"transpose","","",8,{"inputs":[{"name":"mat5"}],"output":{"name":"mat5"}}],[11,"transpose_mut","","",8,{"inputs":[{"name":"mat5"}],"output":null}],[11,"approx_epsilon","","",8,{"inputs":[{"name":"mat5"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",8,{"inputs":[{"name":"mat5"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",8,{"inputs":[{"name":"mat5"},{"name":"mat5"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",8,{"inputs":[{"name":"mat5"},{"name":"mat5"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"nrows","","",8,{"inputs":[{"name":"mat5"}],"output":{"name":"usize"}}],[11,"set_row","","",8,{"inputs":[{"name":"mat5"},{"name":"usize"},{"name":"vec5"}],"output":null}],[11,"row","","",8,{"inputs":[{"name":"mat5"},{"name":"usize"}],"output":{"name":"vec5"}}],[11,"ncols","","",8,{"inputs":[{"name":"mat5"}],"output":{"name":"usize"}}],[11,"set_col","","",8,{"inputs":[{"name":"mat5"},{"name":"usize"},{"name":"vec5"}],"output":null}],[11,"col","","",8,{"inputs":[{"name":"mat5"},{"name":"usize"}],"output":{"name":"vec5"}}],[11,"col_slice","","",8,{"inputs":[{"name":"mat5"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec5"}}],[11,"row_slice","","",8,{"inputs":[{"name":"mat5"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec5"}}],[11,"from_diag","","",8,{"inputs":[{"name":"mat5"},{"name":"vec5"}],"output":{"name":"mat5"}}],[11,"diag","","",8,{"inputs":[{"name":"mat5"}],"output":{"name":"vec5"}}],[11,"set_diag","","",8,{"inputs":[{"name":"mat5"},{"name":"vec5"}],"output":null}],[11,"to_homogeneous","","",8,{"inputs":[{"name":"mat5"}],"output":{"name":"mat6"}}],[11,"from","","",8,{"inputs":[{"name":"mat5"},{"name":"mat6"}],"output":{"name":"mat5"}}],[11,"outer","","",14,{"inputs":[{"name":"vec5"},{"name":"vec5"}],"output":{"name":"mat5"}}],[11,"eigen_qr","","",8,null],[11,"rand","","",8,{"inputs":[{"name":"mat5"},{"name":"r"}],"output":{"name":"mat5"}}],[11,"mean","","",8,{"inputs":[{"name":"mat5"}],"output":{"name":"vec5"}}],[11,"fmt","","",9,{"inputs":[{"name":"mat6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",9,null],[11,"clone","","",9,{"inputs":[{"name":"mat6"}],"output":{"name":"mat6"}}],[11,"decode","","",9,{"inputs":[{"name":"mat6"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",9,{"inputs":[{"name":"mat6"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"mat6"},{"name":"mat6"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"mat6"},{"name":"mat6"}],"output":{"name":"bool"}}],[11,"new_identity","","",9,{"inputs":[{"name":"mat6"},{"name":"usize"}],"output":{"name":"mat6"}}],[11,"new","","",9,{"inputs":[{"name":"mat6"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"mat6"}}],[11,"repeat","","",9,{"inputs":[{"name":"mat6"},{"name":"n"}],"output":{"name":"mat6"}}],[11,"as_ref","","",9,null],[11,"as_mut","","",9,null],[11,"from","","",9,{"inputs":[{"name":"mat6"},{"name":"mat6"}],"output":{"name":"mat6"}}],[11,"add","","",9,{"inputs":[{"name":"mat6"},{"name":"mat6"}],"output":{"name":"mat6"}}],[11,"sub","","",9,{"inputs":[{"name":"mat6"},{"name":"mat6"}],"output":{"name":"mat6"}}],[11,"add","","",9,{"inputs":[{"name":"mat6"},{"name":"n"}],"output":{"name":"mat6"}}],[11,"sub","","",9,{"inputs":[{"name":"mat6"},{"name":"n"}],"output":{"name":"mat6"}}],[11,"mul","","",9,{"inputs":[{"name":"mat6"},{"name":"n"}],"output":{"name":"mat6"}}],[11,"div","","",9,{"inputs":[{"name":"mat6"},{"name":"n"}],"output":{"name":"mat6"}}],[11,"abs","","",9,{"inputs":[{"name":"mat6"},{"name":"mat6"}],"output":{"name":"mat6"}}],[11,"zero","","",9,{"inputs":[{"name":"mat6"}],"output":{"name":"mat6"}}],[11,"is_zero","","",9,{"inputs":[{"name":"mat6"}],"output":{"name":"bool"}}],[11,"one","","",9,{"inputs":[{"name":"mat6"}],"output":{"name":"mat6"}}],[11,"iter","","",9,{"inputs":[{"name":"mat6"}],"output":{"name":"iter"}}],[11,"iter_mut","","",9,{"inputs":[{"name":"mat6"}],"output":{"name":"itermut"}}],[11,"dim","","",9,{"inputs":[{"name":"mat6"},{"name":"option"}],"output":{"name":"usize"}}],[11,"shape","","",9,null],[11,"swap","","",9,null],[11,"unsafe_at","","",9,null],[11,"unsafe_set","","",9,null],[11,"index","","",9,null],[11,"index_mut","","",9,null],[11,"at_fast","","",9,null],[11,"set_fast","","",9,null],[11,"mul","","",9,{"inputs":[{"name":"mat6"},{"name":"mat6"}],"output":{"name":"mat6"}}],[11,"mul","","",9,{"inputs":[{"name":"mat6"},{"name":"vec6"}],"output":{"name":"vec6"}}],[11,"mul","","",15,{"inputs":[{"name":"vec6"},{"name":"mat6"}],"output":{"name":"vec6"}}],[11,"mul","","",9,{"inputs":[{"name":"mat6"},{"name":"pnt6"}],"output":{"name":"pnt6"}}],[11,"mul","","",21,{"inputs":[{"name":"pnt6"},{"name":"mat6"}],"output":{"name":"pnt6"}}],[11,"inv","","",9,{"inputs":[{"name":"mat6"}],"output":{"name":"option"}}],[11,"inv_mut","","",9,{"inputs":[{"name":"mat6"}],"output":{"name":"bool"}}],[11,"transpose","","",9,{"inputs":[{"name":"mat6"}],"output":{"name":"mat6"}}],[11,"transpose_mut","","",9,{"inputs":[{"name":"mat6"}],"output":null}],[11,"approx_epsilon","","",9,{"inputs":[{"name":"mat6"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",9,{"inputs":[{"name":"mat6"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",9,{"inputs":[{"name":"mat6"},{"name":"mat6"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",9,{"inputs":[{"name":"mat6"},{"name":"mat6"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"nrows","","",9,{"inputs":[{"name":"mat6"}],"output":{"name":"usize"}}],[11,"set_row","","",9,{"inputs":[{"name":"mat6"},{"name":"usize"},{"name":"vec6"}],"output":null}],[11,"row","","",9,{"inputs":[{"name":"mat6"},{"name":"usize"}],"output":{"name":"vec6"}}],[11,"ncols","","",9,{"inputs":[{"name":"mat6"}],"output":{"name":"usize"}}],[11,"set_col","","",9,{"inputs":[{"name":"mat6"},{"name":"usize"},{"name":"vec6"}],"output":null}],[11,"col","","",9,{"inputs":[{"name":"mat6"},{"name":"usize"}],"output":{"name":"vec6"}}],[11,"col_slice","","",9,{"inputs":[{"name":"mat6"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec6"}}],[11,"row_slice","","",9,{"inputs":[{"name":"mat6"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"dvec6"}}],[11,"from_diag","","",9,{"inputs":[{"name":"mat6"},{"name":"vec6"}],"output":{"name":"mat6"}}],[11,"diag","","",9,{"inputs":[{"name":"mat6"}],"output":{"name":"vec6"}}],[11,"set_diag","","",9,{"inputs":[{"name":"mat6"},{"name":"vec6"}],"output":null}],[11,"outer","","",15,{"inputs":[{"name":"vec6"},{"name":"vec6"}],"output":{"name":"mat6"}}],[11,"eigen_qr","","",9,null],[11,"rand","","",9,{"inputs":[{"name":"mat6"},{"name":"r"}],"output":{"name":"mat6"}}],[11,"mean","","",9,{"inputs":[{"name":"mat6"}],"output":{"name":"vec6"}}],[11,"hash","","",41,null],[11,"fmt","","",41,{"inputs":[{"name":"rot2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",41,{"inputs":[{"name":"rot2"}],"output":{"name":"rot2"}}],[11,"decode","","",41,{"inputs":[{"name":"rot2"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",41,{"inputs":[{"name":"rot2"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",41,{"inputs":[{"name":"rot2"},{"name":"rot2"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"rot2"},{"name":"rot2"}],"output":{"name":"bool"}}],[11,"new","","Builds a 2 dimensional rotation matrix from an angle in radian.",41,{"inputs":[{"name":"rot2"},{"name":"vec1"}],"output":{"name":"rot2"}}],[11,"rotation","","",41,{"inputs":[{"name":"rot2"}],"output":{"name":"vec1"}}],[11,"inv_rotation","","",41,{"inputs":[{"name":"rot2"}],"output":{"name":"vec1"}}],[11,"append_rotation_mut","","",41,{"inputs":[{"name":"rot2"},{"name":"vec1"}],"output":null}],[11,"append_rotation","","",41,{"inputs":[{"name":"rot2"},{"name":"vec1"}],"output":{"name":"rot2"}}],[11,"prepend_rotation_mut","","",41,{"inputs":[{"name":"rot2"},{"name":"vec1"}],"output":null}],[11,"prepend_rotation","","",41,{"inputs":[{"name":"rot2"},{"name":"vec1"}],"output":{"name":"rot2"}}],[11,"set_rotation","","",41,{"inputs":[{"name":"rot2"},{"name":"vec1"}],"output":null}],[11,"angle_to","","",41,{"inputs":[{"name":"rot2"},{"name":"self"}],"output":{"name":"n"}}],[11,"rotation_to","","",41,{"inputs":[{"name":"rot2"},{"name":"self"}],"output":{"name":"rot2"}}],[11,"rand","","",41,{"inputs":[{"name":"rot2"},{"name":"r"}],"output":{"name":"rot2"}}],[11,"absolute_rotate","","",41,{"inputs":[{"name":"rot2"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"hash","","",42,null],[11,"fmt","","",42,{"inputs":[{"name":"rot3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",42,{"inputs":[{"name":"rot3"}],"output":{"name":"rot3"}}],[11,"decode","","",42,{"inputs":[{"name":"rot3"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",42,{"inputs":[{"name":"rot3"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",42,{"inputs":[{"name":"rot3"},{"name":"rot3"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"rot3"},{"name":"rot3"}],"output":{"name":"bool"}}],[11,"new","","Builds a 3 dimensional rotation matrix from an axis and an angle.",42,{"inputs":[{"name":"rot3"},{"name":"vec3"}],"output":{"name":"rot3"}}],[11,"new_with_mat","","Builds a rotation matrix from an orthogonal matrix.",42,{"inputs":[{"name":"rot3"},{"name":"mat3"}],"output":{"name":"rot3"}}],[11,"new_with_euler_angles","","Creates a new rotation from Euler angles.",42,{"inputs":[{"name":"rot3"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"rot3"}}],[11,"look_at","","Create a new matrix and orient it such that its local `x` axis points to a given point.\nNote that the usually known `look_at` function does the same thing but with the `z` axis.\nSee `look_at_z` for that.",42,{"inputs":[{"name":"rot3"},{"name":"vec3"},{"name":"vec3"}],"output":{"name":"rot3"}}],[11,"look_at_z","","Create a new matrix and orient it such that its local `z` axis points to a given point.",42,{"inputs":[{"name":"rot3"},{"name":"vec3"},{"name":"vec3"}],"output":{"name":"rot3"}}],[11,"rotation","","",42,{"inputs":[{"name":"rot3"}],"output":{"name":"vec3"}}],[11,"inv_rotation","","",42,{"inputs":[{"name":"rot3"}],"output":{"name":"vec3"}}],[11,"append_rotation_mut","","",42,{"inputs":[{"name":"rot3"},{"name":"vec3"}],"output":null}],[11,"append_rotation","","",42,{"inputs":[{"name":"rot3"},{"name":"vec3"}],"output":{"name":"rot3"}}],[11,"prepend_rotation_mut","","",42,{"inputs":[{"name":"rot3"},{"name":"vec3"}],"output":null}],[11,"prepend_rotation","","",42,{"inputs":[{"name":"rot3"},{"name":"vec3"}],"output":{"name":"rot3"}}],[11,"set_rotation","","",42,{"inputs":[{"name":"rot3"},{"name":"vec3"}],"output":null}],[11,"angle_to","","",42,{"inputs":[{"name":"rot3"},{"name":"self"}],"output":{"name":"n"}}],[11,"rotation_to","","",42,{"inputs":[{"name":"rot3"},{"name":"self"}],"output":{"name":"rot3"}}],[11,"rand","","",42,{"inputs":[{"name":"rot3"},{"name":"r"}],"output":{"name":"rot3"}}],[11,"absolute_rotate","","",42,{"inputs":[{"name":"rot3"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"hash","","",43,null],[11,"fmt","","",43,{"inputs":[{"name":"rot4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",43,{"inputs":[{"name":"rot4"}],"output":{"name":"rot4"}}],[11,"decode","","",43,{"inputs":[{"name":"rot4"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",43,{"inputs":[{"name":"rot4"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",43,{"inputs":[{"name":"rot4"},{"name":"rot4"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"rot4"},{"name":"rot4"}],"output":{"name":"bool"}}],[11,"absolute_rotate","","",43,{"inputs":[{"name":"rot4"},{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"rotation","","",43,{"inputs":[{"name":"rot4"}],"output":{"name":"vec4"}}],[11,"inv_rotation","","",43,{"inputs":[{"name":"rot4"}],"output":{"name":"vec4"}}],[11,"append_rotation_mut","","",43,{"inputs":[{"name":"rot4"},{"name":"vec4"}],"output":null}],[11,"append_rotation","","",43,{"inputs":[{"name":"rot4"},{"name":"vec4"}],"output":{"name":"rot4"}}],[11,"prepend_rotation_mut","","",43,{"inputs":[{"name":"rot4"},{"name":"vec4"}],"output":null}],[11,"prepend_rotation","","",43,{"inputs":[{"name":"rot4"},{"name":"vec4"}],"output":{"name":"rot4"}}],[11,"set_rotation","","",43,{"inputs":[{"name":"rot4"},{"name":"vec4"}],"output":null}],[11,"submat","","",41,{"inputs":[{"name":"rot2"}],"output":{"name":"mat2"}}],[11,"rotate","","",41,{"inputs":[{"name":"rot2"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"inv_rotate","","",41,{"inputs":[{"name":"rot2"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"rotate","","",41,{"inputs":[{"name":"rot2"},{"name":"pnt2"}],"output":{"name":"pnt2"}}],[11,"inv_rotate","","",41,{"inputs":[{"name":"rot2"},{"name":"pnt2"}],"output":{"name":"pnt2"}}],[11,"transform","","",41,{"inputs":[{"name":"rot2"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"inv_transform","","",41,{"inputs":[{"name":"rot2"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"transform","","",41,{"inputs":[{"name":"rot2"},{"name":"pnt2"}],"output":{"name":"pnt2"}}],[11,"inv_transform","","",41,{"inputs":[{"name":"rot2"},{"name":"pnt2"}],"output":{"name":"pnt2"}}],[11,"dim","","",41,{"inputs":[{"name":"rot2"},{"name":"option"}],"output":{"name":"usize"}}],[11,"mul","","",41,{"inputs":[{"name":"rot2"},{"name":"rot2"}],"output":{"name":"rot2"}}],[11,"mul","","",41,{"inputs":[{"name":"rot2"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"mul","","",11,{"inputs":[{"name":"vec2"},{"name":"rot2"}],"output":{"name":"vec2"}}],[11,"mul","","",41,{"inputs":[{"name":"rot2"},{"name":"pnt2"}],"output":{"name":"pnt2"}}],[11,"mul","","",17,{"inputs":[{"name":"pnt2"},{"name":"rot2"}],"output":{"name":"pnt2"}}],[11,"one","","",41,{"inputs":[{"name":"rot2"}],"output":{"name":"rot2"}}],[11,"new_identity","","",41,{"inputs":[{"name":"rot2"},{"name":"usize"}],"output":{"name":"rot2"}}],[11,"to_rot_mat","","",41,{"inputs":[{"name":"rot2"}],"output":{"name":"rot2"}}],[11,"ncols","","",41,{"inputs":[{"name":"rot2"}],"output":{"name":"usize"}}],[11,"col","","",41,{"inputs":[{"name":"rot2"},{"name":"usize"}],"output":{"name":"vec2"}}],[11,"set_col","","",41,{"inputs":[{"name":"rot2"},{"name":"usize"},{"name":"vec2"}],"output":null}],[11,"nrows","","",41,{"inputs":[{"name":"rot2"}],"output":{"name":"usize"}}],[11,"row","","",41,{"inputs":[{"name":"rot2"},{"name":"usize"}],"output":{"name":"vec2"}}],[11,"set_row","","",41,{"inputs":[{"name":"rot2"},{"name":"usize"},{"name":"vec2"}],"output":null}],[11,"index","","",41,null],[11,"abs","","",41,{"inputs":[{"name":"rot2"},{"name":"rot2"}],"output":{"name":"mat2"}}],[11,"to_homogeneous","","",41,{"inputs":[{"name":"rot2"}],"output":{"name":"mat3"}}],[11,"inv_mut","","",41,{"inputs":[{"name":"rot2"}],"output":{"name":"bool"}}],[11,"inv","","",41,{"inputs":[{"name":"rot2"}],"output":{"name":"option"}}],[11,"transpose","","",41,{"inputs":[{"name":"rot2"}],"output":{"name":"rot2"}}],[11,"transpose_mut","","",41,{"inputs":[{"name":"rot2"}],"output":null}],[11,"approx_epsilon","","",41,{"inputs":[{"name":"rot2"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",41,{"inputs":[{"name":"rot2"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq","","",41,{"inputs":[{"name":"rot2"},{"name":"rot2"}],"output":{"name":"bool"}}],[11,"approx_eq_eps","","",41,{"inputs":[{"name":"rot2"},{"name":"rot2"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",41,{"inputs":[{"name":"rot2"},{"name":"rot2"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"from_diag","","",41,{"inputs":[{"name":"rot2"},{"name":"vec2"}],"output":{"name":"rot2"}}],[11,"diag","","",41,{"inputs":[{"name":"rot2"}],"output":{"name":"vec2"}}],[11,"submat","","",42,{"inputs":[{"name":"rot3"}],"output":{"name":"mat3"}}],[11,"rotate","","",42,{"inputs":[{"name":"rot3"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"inv_rotate","","",42,{"inputs":[{"name":"rot3"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"rotate","","",42,{"inputs":[{"name":"rot3"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"inv_rotate","","",42,{"inputs":[{"name":"rot3"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"transform","","",42,{"inputs":[{"name":"rot3"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"inv_transform","","",42,{"inputs":[{"name":"rot3"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"transform","","",42,{"inputs":[{"name":"rot3"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"inv_transform","","",42,{"inputs":[{"name":"rot3"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"dim","","",42,{"inputs":[{"name":"rot3"},{"name":"option"}],"output":{"name":"usize"}}],[11,"mul","","",42,{"inputs":[{"name":"rot3"},{"name":"rot3"}],"output":{"name":"rot3"}}],[11,"mul","","",42,{"inputs":[{"name":"rot3"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"mul","","",12,{"inputs":[{"name":"vec3"},{"name":"rot3"}],"output":{"name":"vec3"}}],[11,"mul","","",42,{"inputs":[{"name":"rot3"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"mul","","",18,{"inputs":[{"name":"pnt3"},{"name":"rot3"}],"output":{"name":"pnt3"}}],[11,"one","","",42,{"inputs":[{"name":"rot3"}],"output":{"name":"rot3"}}],[11,"new_identity","","",42,{"inputs":[{"name":"rot3"},{"name":"usize"}],"output":{"name":"rot3"}}],[11,"to_rot_mat","","",42,{"inputs":[{"name":"rot3"}],"output":{"name":"rot3"}}],[11,"ncols","","",42,{"inputs":[{"name":"rot3"}],"output":{"name":"usize"}}],[11,"col","","",42,{"inputs":[{"name":"rot3"},{"name":"usize"}],"output":{"name":"vec3"}}],[11,"set_col","","",42,{"inputs":[{"name":"rot3"},{"name":"usize"},{"name":"vec3"}],"output":null}],[11,"nrows","","",42,{"inputs":[{"name":"rot3"}],"output":{"name":"usize"}}],[11,"row","","",42,{"inputs":[{"name":"rot3"},{"name":"usize"}],"output":{"name":"vec3"}}],[11,"set_row","","",42,{"inputs":[{"name":"rot3"},{"name":"usize"},{"name":"vec3"}],"output":null}],[11,"index","","",42,null],[11,"abs","","",42,{"inputs":[{"name":"rot3"},{"name":"rot3"}],"output":{"name":"mat3"}}],[11,"to_homogeneous","","",42,{"inputs":[{"name":"rot3"}],"output":{"name":"mat4"}}],[11,"inv_mut","","",42,{"inputs":[{"name":"rot3"}],"output":{"name":"bool"}}],[11,"inv","","",42,{"inputs":[{"name":"rot3"}],"output":{"name":"option"}}],[11,"transpose","","",42,{"inputs":[{"name":"rot3"}],"output":{"name":"rot3"}}],[11,"transpose_mut","","",42,{"inputs":[{"name":"rot3"}],"output":null}],[11,"approx_epsilon","","",42,{"inputs":[{"name":"rot3"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",42,{"inputs":[{"name":"rot3"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq","","",42,{"inputs":[{"name":"rot3"},{"name":"rot3"}],"output":{"name":"bool"}}],[11,"approx_eq_eps","","",42,{"inputs":[{"name":"rot3"},{"name":"rot3"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",42,{"inputs":[{"name":"rot3"},{"name":"rot3"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"from_diag","","",42,{"inputs":[{"name":"rot3"},{"name":"vec3"}],"output":{"name":"rot3"}}],[11,"diag","","",42,{"inputs":[{"name":"rot3"}],"output":{"name":"vec3"}}],[11,"submat","","",43,{"inputs":[{"name":"rot4"}],"output":{"name":"mat4"}}],[11,"rotate","","",43,{"inputs":[{"name":"rot4"},{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"inv_rotate","","",43,{"inputs":[{"name":"rot4"},{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"rotate","","",43,{"inputs":[{"name":"rot4"},{"name":"pnt4"}],"output":{"name":"pnt4"}}],[11,"inv_rotate","","",43,{"inputs":[{"name":"rot4"},{"name":"pnt4"}],"output":{"name":"pnt4"}}],[11,"transform","","",43,{"inputs":[{"name":"rot4"},{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"inv_transform","","",43,{"inputs":[{"name":"rot4"},{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"transform","","",43,{"inputs":[{"name":"rot4"},{"name":"pnt4"}],"output":{"name":"pnt4"}}],[11,"inv_transform","","",43,{"inputs":[{"name":"rot4"},{"name":"pnt4"}],"output":{"name":"pnt4"}}],[11,"dim","","",43,{"inputs":[{"name":"rot4"},{"name":"option"}],"output":{"name":"usize"}}],[11,"mul","","",43,{"inputs":[{"name":"rot4"},{"name":"rot4"}],"output":{"name":"rot4"}}],[11,"mul","","",43,{"inputs":[{"name":"rot4"},{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"mul","","",13,{"inputs":[{"name":"vec4"},{"name":"rot4"}],"output":{"name":"vec4"}}],[11,"mul","","",43,{"inputs":[{"name":"rot4"},{"name":"pnt4"}],"output":{"name":"pnt4"}}],[11,"mul","","",19,{"inputs":[{"name":"pnt4"},{"name":"rot4"}],"output":{"name":"pnt4"}}],[11,"one","","",43,{"inputs":[{"name":"rot4"}],"output":{"name":"rot4"}}],[11,"new_identity","","",43,{"inputs":[{"name":"rot4"},{"name":"usize"}],"output":{"name":"rot4"}}],[11,"to_rot_mat","","",43,{"inputs":[{"name":"rot4"}],"output":{"name":"rot4"}}],[11,"ncols","","",43,{"inputs":[{"name":"rot4"}],"output":{"name":"usize"}}],[11,"col","","",43,{"inputs":[{"name":"rot4"},{"name":"usize"}],"output":{"name":"vec4"}}],[11,"set_col","","",43,{"inputs":[{"name":"rot4"},{"name":"usize"},{"name":"vec4"}],"output":null}],[11,"nrows","","",43,{"inputs":[{"name":"rot4"}],"output":{"name":"usize"}}],[11,"row","","",43,{"inputs":[{"name":"rot4"},{"name":"usize"}],"output":{"name":"vec4"}}],[11,"set_row","","",43,{"inputs":[{"name":"rot4"},{"name":"usize"},{"name":"vec4"}],"output":null}],[11,"index","","",43,null],[11,"abs","","",43,{"inputs":[{"name":"rot4"},{"name":"rot4"}],"output":{"name":"mat4"}}],[11,"to_homogeneous","","",43,{"inputs":[{"name":"rot4"}],"output":{"name":"mat5"}}],[11,"inv_mut","","",43,{"inputs":[{"name":"rot4"}],"output":{"name":"bool"}}],[11,"inv","","",43,{"inputs":[{"name":"rot4"}],"output":{"name":"option"}}],[11,"transpose","","",43,{"inputs":[{"name":"rot4"}],"output":{"name":"rot4"}}],[11,"transpose_mut","","",43,{"inputs":[{"name":"rot4"}],"output":null}],[11,"approx_epsilon","","",43,{"inputs":[{"name":"rot4"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",43,{"inputs":[{"name":"rot4"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq","","",43,{"inputs":[{"name":"rot4"},{"name":"rot4"}],"output":{"name":"bool"}}],[11,"approx_eq_eps","","",43,{"inputs":[{"name":"rot4"},{"name":"rot4"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",43,{"inputs":[{"name":"rot4"},{"name":"rot4"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"from_diag","","",43,{"inputs":[{"name":"rot4"},{"name":"vec4"}],"output":{"name":"rot4"}}],[11,"diag","","",43,{"inputs":[{"name":"rot4"}],"output":{"name":"vec4"}}],[11,"fmt","","",1,{"inputs":[{"name":"iso2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"iso2"}],"output":{"name":"iso2"}}],[11,"decode","","",1,{"inputs":[{"name":"iso2"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",1,{"inputs":[{"name":"iso2"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"iso2"},{"name":"iso2"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"iso2"},{"name":"iso2"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"iso3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"iso3"}],"output":{"name":"iso3"}}],[11,"decode","","",2,{"inputs":[{"name":"iso3"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",2,{"inputs":[{"name":"iso3"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"iso3"},{"name":"iso3"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"iso3"},{"name":"iso3"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"iso4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"iso4"}],"output":{"name":"iso4"}}],[11,"decode","","",3,{"inputs":[{"name":"iso4"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",3,{"inputs":[{"name":"iso4"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"iso4"},{"name":"iso4"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"iso4"},{"name":"iso4"}],"output":{"name":"bool"}}],[11,"look_at","","Reorient and translate this transformation such that its local `x` axis points to a given\ndirection.  Note that the usually known `look_at` function does the same thing but with the\n`z` axis. See `look_at_z` for that.",2,{"inputs":[{"name":"iso3"},{"name":"pnt3"},{"name":"pnt3"},{"name":"vec3"}],"output":{"name":"iso3"}}],[11,"look_at_z","","Reorient and translate this transformation such that its local `z` axis points to a given\ndirection.",2,{"inputs":[{"name":"iso3"},{"name":"pnt3"},{"name":"pnt3"},{"name":"vec3"}],"output":{"name":"iso3"}}],[11,"new_with_rotmat","","Creates a new isometry from a rotation matrix and a vector.",3,{"inputs":[{"name":"iso4"},{"name":"vec4"},{"name":"rot4"}],"output":{"name":"iso4"}}],[11,"new","","Creates a new isometry from a rotation matrix and a vector.",1,{"inputs":[{"name":"iso2"},{"name":"vec2"},{"name":"vec1"}],"output":{"name":"iso2"}}],[11,"new_with_rotmat","","Creates a new isometry from a rotation matrix and a vector.",1,{"inputs":[{"name":"iso2"},{"name":"vec2"},{"name":"rot2"}],"output":{"name":"iso2"}}],[11,"to_rot_mat","","",1,{"inputs":[{"name":"iso2"}],"output":{"name":"rot2"}}],[11,"rotation","","",1,{"inputs":[{"name":"iso2"}],"output":{"name":"vec1"}}],[11,"inv_rotation","","",1,{"inputs":[{"name":"iso2"}],"output":{"name":"vec1"}}],[11,"append_rotation_mut","","",1,{"inputs":[{"name":"iso2"},{"name":"vec1"}],"output":null}],[11,"append_rotation","","",1,{"inputs":[{"name":"iso2"},{"name":"vec1"}],"output":{"name":"iso2"}}],[11,"prepend_rotation_mut","","",1,{"inputs":[{"name":"iso2"},{"name":"vec1"}],"output":null}],[11,"prepend_rotation","","",1,{"inputs":[{"name":"iso2"},{"name":"vec1"}],"output":{"name":"iso2"}}],[11,"set_rotation","","",1,{"inputs":[{"name":"iso2"},{"name":"vec1"}],"output":null}],[11,"dim","","",1,{"inputs":[{"name":"iso2"},{"name":"option"}],"output":{"name":"usize"}}],[11,"one","","",1,{"inputs":[{"name":"iso2"}],"output":{"name":"iso2"}}],[11,"absolute_rotate","","",1,{"inputs":[{"name":"iso2"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"rand","","",1,{"inputs":[{"name":"iso2"},{"name":"r"}],"output":{"name":"iso2"}}],[11,"approx_epsilon","","",1,{"inputs":[{"name":"iso2"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",1,{"inputs":[{"name":"iso2"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",1,{"inputs":[{"name":"iso2"},{"name":"iso2"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",1,{"inputs":[{"name":"iso2"},{"name":"iso2"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"to_homogeneous","","",1,{"inputs":[{"name":"iso2"}],"output":{"name":"mat3"}}],[11,"inv_mut","","",1,{"inputs":[{"name":"iso2"}],"output":{"name":"bool"}}],[11,"inv","","",1,{"inputs":[{"name":"iso2"}],"output":{"name":"option"}}],[11,"transform","","",1,{"inputs":[{"name":"iso2"},{"name":"pnt2"}],"output":{"name":"pnt2"}}],[11,"inv_transform","","",1,{"inputs":[{"name":"iso2"},{"name":"pnt2"}],"output":{"name":"pnt2"}}],[11,"transformation","","",1,{"inputs":[{"name":"iso2"}],"output":{"name":"iso2"}}],[11,"inv_transformation","","",1,{"inputs":[{"name":"iso2"}],"output":{"name":"iso2"}}],[11,"append_transformation_mut","","",1,{"inputs":[{"name":"iso2"},{"name":"iso2"}],"output":null}],[11,"append_transformation","","",1,{"inputs":[{"name":"iso2"},{"name":"iso2"}],"output":{"name":"iso2"}}],[11,"prepend_transformation_mut","","",1,{"inputs":[{"name":"iso2"},{"name":"iso2"}],"output":null}],[11,"prepend_transformation","","",1,{"inputs":[{"name":"iso2"},{"name":"iso2"}],"output":{"name":"iso2"}}],[11,"set_transformation","","",1,{"inputs":[{"name":"iso2"},{"name":"iso2"}],"output":null}],[11,"rotate","","",1,{"inputs":[{"name":"iso2"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"inv_rotate","","",1,{"inputs":[{"name":"iso2"},{"name":"vec2"}],"output":{"name":"vec2"}}],[11,"translation","","",1,{"inputs":[{"name":"iso2"}],"output":{"name":"vec2"}}],[11,"inv_translation","","",1,{"inputs":[{"name":"iso2"}],"output":{"name":"vec2"}}],[11,"append_translation_mut","","",1,{"inputs":[{"name":"iso2"},{"name":"vec2"}],"output":null}],[11,"append_translation","","",1,{"inputs":[{"name":"iso2"},{"name":"vec2"}],"output":{"name":"iso2"}}],[11,"prepend_translation_mut","","",1,{"inputs":[{"name":"iso2"},{"name":"vec2"}],"output":null}],[11,"prepend_translation","","",1,{"inputs":[{"name":"iso2"},{"name":"vec2"}],"output":{"name":"iso2"}}],[11,"set_translation","","",1,{"inputs":[{"name":"iso2"},{"name":"vec2"}],"output":null}],[11,"translate","","",1,{"inputs":[{"name":"iso2"},{"name":"pnt2"}],"output":{"name":"pnt2"}}],[11,"inv_translate","","",1,{"inputs":[{"name":"iso2"},{"name":"pnt2"}],"output":{"name":"pnt2"}}],[11,"mul","","",1,{"inputs":[{"name":"iso2"},{"name":"iso2"}],"output":{"name":"iso2"}}],[11,"mul","","",1,{"inputs":[{"name":"iso2"},{"name":"pnt2"}],"output":{"name":"pnt2"}}],[11,"mul","","",17,{"inputs":[{"name":"pnt2"},{"name":"iso2"}],"output":{"name":"pnt2"}}],[11,"new","","Creates a new isometry from a rotation matrix and a vector.",2,{"inputs":[{"name":"iso3"},{"name":"vec3"},{"name":"vec3"}],"output":{"name":"iso3"}}],[11,"new_with_rotmat","","Creates a new isometry from a rotation matrix and a vector.",2,{"inputs":[{"name":"iso3"},{"name":"vec3"},{"name":"rot3"}],"output":{"name":"iso3"}}],[11,"to_rot_mat","","",2,{"inputs":[{"name":"iso3"}],"output":{"name":"rot3"}}],[11,"rotation","","",2,{"inputs":[{"name":"iso3"}],"output":{"name":"vec3"}}],[11,"inv_rotation","","",2,{"inputs":[{"name":"iso3"}],"output":{"name":"vec3"}}],[11,"append_rotation_mut","","",2,{"inputs":[{"name":"iso3"},{"name":"vec3"}],"output":null}],[11,"append_rotation","","",2,{"inputs":[{"name":"iso3"},{"name":"vec3"}],"output":{"name":"iso3"}}],[11,"prepend_rotation_mut","","",2,{"inputs":[{"name":"iso3"},{"name":"vec3"}],"output":null}],[11,"prepend_rotation","","",2,{"inputs":[{"name":"iso3"},{"name":"vec3"}],"output":{"name":"iso3"}}],[11,"set_rotation","","",2,{"inputs":[{"name":"iso3"},{"name":"vec3"}],"output":null}],[11,"dim","","",2,{"inputs":[{"name":"iso3"},{"name":"option"}],"output":{"name":"usize"}}],[11,"one","","",2,{"inputs":[{"name":"iso3"}],"output":{"name":"iso3"}}],[11,"absolute_rotate","","",2,{"inputs":[{"name":"iso3"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"rand","","",2,{"inputs":[{"name":"iso3"},{"name":"r"}],"output":{"name":"iso3"}}],[11,"approx_epsilon","","",2,{"inputs":[{"name":"iso3"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",2,{"inputs":[{"name":"iso3"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",2,{"inputs":[{"name":"iso3"},{"name":"iso3"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",2,{"inputs":[{"name":"iso3"},{"name":"iso3"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"to_homogeneous","","",2,{"inputs":[{"name":"iso3"}],"output":{"name":"mat4"}}],[11,"inv_mut","","",2,{"inputs":[{"name":"iso3"}],"output":{"name":"bool"}}],[11,"inv","","",2,{"inputs":[{"name":"iso3"}],"output":{"name":"option"}}],[11,"transform","","",2,{"inputs":[{"name":"iso3"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"inv_transform","","",2,{"inputs":[{"name":"iso3"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"transformation","","",2,{"inputs":[{"name":"iso3"}],"output":{"name":"iso3"}}],[11,"inv_transformation","","",2,{"inputs":[{"name":"iso3"}],"output":{"name":"iso3"}}],[11,"append_transformation_mut","","",2,{"inputs":[{"name":"iso3"},{"name":"iso3"}],"output":null}],[11,"append_transformation","","",2,{"inputs":[{"name":"iso3"},{"name":"iso3"}],"output":{"name":"iso3"}}],[11,"prepend_transformation_mut","","",2,{"inputs":[{"name":"iso3"},{"name":"iso3"}],"output":null}],[11,"prepend_transformation","","",2,{"inputs":[{"name":"iso3"},{"name":"iso3"}],"output":{"name":"iso3"}}],[11,"set_transformation","","",2,{"inputs":[{"name":"iso3"},{"name":"iso3"}],"output":null}],[11,"rotate","","",2,{"inputs":[{"name":"iso3"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"inv_rotate","","",2,{"inputs":[{"name":"iso3"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"translation","","",2,{"inputs":[{"name":"iso3"}],"output":{"name":"vec3"}}],[11,"inv_translation","","",2,{"inputs":[{"name":"iso3"}],"output":{"name":"vec3"}}],[11,"append_translation_mut","","",2,{"inputs":[{"name":"iso3"},{"name":"vec3"}],"output":null}],[11,"append_translation","","",2,{"inputs":[{"name":"iso3"},{"name":"vec3"}],"output":{"name":"iso3"}}],[11,"prepend_translation_mut","","",2,{"inputs":[{"name":"iso3"},{"name":"vec3"}],"output":null}],[11,"prepend_translation","","",2,{"inputs":[{"name":"iso3"},{"name":"vec3"}],"output":{"name":"iso3"}}],[11,"set_translation","","",2,{"inputs":[{"name":"iso3"},{"name":"vec3"}],"output":null}],[11,"translate","","",2,{"inputs":[{"name":"iso3"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"inv_translate","","",2,{"inputs":[{"name":"iso3"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"mul","","",2,{"inputs":[{"name":"iso3"},{"name":"iso3"}],"output":{"name":"iso3"}}],[11,"mul","","",2,{"inputs":[{"name":"iso3"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"mul","","",18,{"inputs":[{"name":"pnt3"},{"name":"iso3"}],"output":{"name":"pnt3"}}],[11,"dim","","",3,{"inputs":[{"name":"iso4"},{"name":"option"}],"output":{"name":"usize"}}],[11,"one","","",3,{"inputs":[{"name":"iso4"}],"output":{"name":"iso4"}}],[11,"absolute_rotate","","",3,{"inputs":[{"name":"iso4"},{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"approx_epsilon","","",3,{"inputs":[{"name":"iso4"},{"name":"option"}],"output":{"name":"n"}}],[11,"approx_ulps","","",3,{"inputs":[{"name":"iso4"},{"name":"option"}],"output":{"name":"u32"}}],[11,"approx_eq_eps","","",3,{"inputs":[{"name":"iso4"},{"name":"iso4"},{"name":"n"}],"output":{"name":"bool"}}],[11,"approx_eq_ulps","","",3,{"inputs":[{"name":"iso4"},{"name":"iso4"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"to_homogeneous","","",3,{"inputs":[{"name":"iso4"}],"output":{"name":"mat5"}}],[11,"inv_mut","","",3,{"inputs":[{"name":"iso4"}],"output":{"name":"bool"}}],[11,"inv","","",3,{"inputs":[{"name":"iso4"}],"output":{"name":"option"}}],[11,"transform","","",3,{"inputs":[{"name":"iso4"},{"name":"pnt4"}],"output":{"name":"pnt4"}}],[11,"inv_transform","","",3,{"inputs":[{"name":"iso4"},{"name":"pnt4"}],"output":{"name":"pnt4"}}],[11,"transformation","","",3,{"inputs":[{"name":"iso4"}],"output":{"name":"iso4"}}],[11,"inv_transformation","","",3,{"inputs":[{"name":"iso4"}],"output":{"name":"iso4"}}],[11,"append_transformation_mut","","",3,{"inputs":[{"name":"iso4"},{"name":"iso4"}],"output":null}],[11,"append_transformation","","",3,{"inputs":[{"name":"iso4"},{"name":"iso4"}],"output":{"name":"iso4"}}],[11,"prepend_transformation_mut","","",3,{"inputs":[{"name":"iso4"},{"name":"iso4"}],"output":null}],[11,"prepend_transformation","","",3,{"inputs":[{"name":"iso4"},{"name":"iso4"}],"output":{"name":"iso4"}}],[11,"set_transformation","","",3,{"inputs":[{"name":"iso4"},{"name":"iso4"}],"output":null}],[11,"rotate","","",3,{"inputs":[{"name":"iso4"},{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"inv_rotate","","",3,{"inputs":[{"name":"iso4"},{"name":"vec4"}],"output":{"name":"vec4"}}],[11,"translation","","",3,{"inputs":[{"name":"iso4"}],"output":{"name":"vec4"}}],[11,"inv_translation","","",3,{"inputs":[{"name":"iso4"}],"output":{"name":"vec4"}}],[11,"append_translation_mut","","",3,{"inputs":[{"name":"iso4"},{"name":"vec4"}],"output":null}],[11,"append_translation","","",3,{"inputs":[{"name":"iso4"},{"name":"vec4"}],"output":{"name":"iso4"}}],[11,"prepend_translation_mut","","",3,{"inputs":[{"name":"iso4"},{"name":"vec4"}],"output":null}],[11,"prepend_translation","","",3,{"inputs":[{"name":"iso4"},{"name":"vec4"}],"output":{"name":"iso4"}}],[11,"set_translation","","",3,{"inputs":[{"name":"iso4"},{"name":"vec4"}],"output":null}],[11,"translate","","",3,{"inputs":[{"name":"iso4"},{"name":"pnt4"}],"output":{"name":"pnt4"}}],[11,"inv_translate","","",3,{"inputs":[{"name":"iso4"},{"name":"pnt4"}],"output":{"name":"pnt4"}}],[11,"mul","","",3,{"inputs":[{"name":"iso4"},{"name":"iso4"}],"output":{"name":"iso4"}}],[11,"mul","","",3,{"inputs":[{"name":"iso4"},{"name":"pnt4"}],"output":{"name":"pnt4"}}],[11,"mul","","",19,{"inputs":[{"name":"pnt4"},{"name":"iso4"}],"output":{"name":"pnt4"}}],[11,"fmt","","",44,{"inputs":[{"name":"persp3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",44,{"inputs":[{"name":"persp3"}],"output":{"name":"persp3"}}],[11,"decode","","",44,{"inputs":[{"name":"persp3"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",44,{"inputs":[{"name":"persp3"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",44,{"inputs":[{"name":"persp3"},{"name":"persp3"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"persp3"},{"name":"persp3"}],"output":{"name":"bool"}}],[11,"fmt","","",45,{"inputs":[{"name":"perspmat3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",45,{"inputs":[{"name":"perspmat3"}],"output":{"name":"perspmat3"}}],[11,"decode","","",45,{"inputs":[{"name":"perspmat3"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",45,{"inputs":[{"name":"perspmat3"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",45,{"inputs":[{"name":"perspmat3"},{"name":"perspmat3"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"perspmat3"},{"name":"perspmat3"}],"output":{"name":"bool"}}],[11,"new","","Creates a new 3D perspective projection.",44,{"inputs":[{"name":"persp3"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"persp3"}}],[11,"to_mat","","Builds a 4D projection matrix (using homogeneous coordinates) for this projection.",44,{"inputs":[{"name":"persp3"}],"output":{"name":"mat4"}}],[11,"to_persp_mat","","Build a `PerspMat3` representing this projection.",44,{"inputs":[{"name":"persp3"}],"output":{"name":"perspmat3"}}],[11,"aspect","","Gets the `width / height` aspect ratio.",44,{"inputs":[{"name":"persp3"}],"output":{"name":"n"}}],[11,"fov","","Gets the field of view of the view frustrum.",44,{"inputs":[{"name":"persp3"}],"output":{"name":"n"}}],[11,"znear","","Gets the near plane offset of the view frustrum.",44,{"inputs":[{"name":"persp3"}],"output":{"name":"n"}}],[11,"zfar","","Gets the far plane offset of the view frustrum.",44,{"inputs":[{"name":"persp3"}],"output":{"name":"n"}}],[11,"set_aspect","","Sets the `width / height` aspect ratio of the view frustrum.",44,{"inputs":[{"name":"persp3"},{"name":"n"}],"output":null}],[11,"set_fov","","Sets the field of view of the view frustrum.",44,{"inputs":[{"name":"persp3"},{"name":"n"}],"output":null}],[11,"set_znear","","Sets the near plane offset of the view frustrum.",44,{"inputs":[{"name":"persp3"},{"name":"n"}],"output":null}],[11,"set_zfar","","Sets the far plane offset of the view frustrum.",44,{"inputs":[{"name":"persp3"},{"name":"n"}],"output":null}],[11,"project_pnt","","Projects a point.",44,{"inputs":[{"name":"persp3"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"project_vec","","Projects a vector.",44,{"inputs":[{"name":"persp3"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"new","","Creates a new persepctive matrix from the aspect ratio, field of view, and near/far planes.",45,{"inputs":[{"name":"perspmat3"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"perspmat3"}}],[11,"new_with_mat","","Creates a new perspective projection matrix from a 4D matrix.",45,{"inputs":[{"name":"perspmat3"},{"name":"mat4"}],"output":{"name":"perspmat3"}}],[11,"as_mat","","Returns a reference to the 4D matrix (using homogeneous coordinates) of this projection.",45,{"inputs":[{"name":"perspmat3"}],"output":{"name":"mat4"}}],[11,"aspect","","Gets the `width / height` aspect ratio of the view frustrum.",45,{"inputs":[{"name":"perspmat3"}],"output":{"name":"n"}}],[11,"fov","","Gets the field of view of the view frustrum.",45,{"inputs":[{"name":"perspmat3"}],"output":{"name":"n"}}],[11,"znear","","Gets the near plane offset of the view frustrum.",45,{"inputs":[{"name":"perspmat3"}],"output":{"name":"n"}}],[11,"zfar","","Gets the far plane offset of the view frustrum.",45,{"inputs":[{"name":"perspmat3"}],"output":{"name":"n"}}],[11,"set_aspect","","Updates this projection matrix with a new `width / height` aspect ratio of the view\nfrustrum.",45,{"inputs":[{"name":"perspmat3"},{"name":"n"}],"output":null}],[11,"set_fov","","Updates this projection with a new field of view of the view frustrum.",45,{"inputs":[{"name":"perspmat3"},{"name":"n"}],"output":null}],[11,"set_znear","","Updates this projection matrix with a new near plane offset of the view frustrum.",45,{"inputs":[{"name":"perspmat3"},{"name":"n"}],"output":null}],[11,"set_zfar","","Updates this projection matrix with a new far plane offset of the view frustrum.",45,{"inputs":[{"name":"perspmat3"},{"name":"n"}],"output":null}],[11,"set_znear_and_zfar","","Updates this projection matrix with new near and far plane offsets of the view frustrum.",45,{"inputs":[{"name":"perspmat3"},{"name":"n"},{"name":"n"}],"output":null}],[11,"project_pnt","","Projects a point.",45,{"inputs":[{"name":"perspmat3"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"project_vec","","Projects a vector.",45,{"inputs":[{"name":"perspmat3"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"to_mat","","Returns the 4D matrix (using homogeneous coordinates) of this projection.",45,{"inputs":[{"name":"perspmat3"}],"output":{"name":"mat4"}}],[11,"fmt","","",46,{"inputs":[{"name":"ortho3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",46,{"inputs":[{"name":"ortho3"}],"output":{"name":"ortho3"}}],[11,"decode","","",46,{"inputs":[{"name":"ortho3"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",46,{"inputs":[{"name":"ortho3"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",46,{"inputs":[{"name":"ortho3"},{"name":"ortho3"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"ortho3"},{"name":"ortho3"}],"output":{"name":"bool"}}],[11,"fmt","","",47,{"inputs":[{"name":"orthomat3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",47,{"inputs":[{"name":"orthomat3"}],"output":{"name":"orthomat3"}}],[11,"decode","","",47,{"inputs":[{"name":"orthomat3"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",47,{"inputs":[{"name":"orthomat3"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",47,{"inputs":[{"name":"orthomat3"},{"name":"orthomat3"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"orthomat3"},{"name":"orthomat3"}],"output":{"name":"bool"}}],[11,"new","","Creates a new 3D orthographic projection.",46,{"inputs":[{"name":"ortho3"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"ortho3"}}],[11,"to_mat","","Builds a 4D projection matrix (using homogeneous coordinates) for this projection.",46,{"inputs":[{"name":"ortho3"}],"output":{"name":"mat4"}}],[11,"to_persp_mat","","Build a `OrthoMat3` representing this projection.",46,{"inputs":[{"name":"ortho3"}],"output":{"name":"orthomat3"}}],[11,"width","","The width of the view cuboid.",46,{"inputs":[{"name":"ortho3"}],"output":{"name":"n"}}],[11,"height","","The height of the view cuboid.",46,{"inputs":[{"name":"ortho3"}],"output":{"name":"n"}}],[11,"znear","","The near plane offset of the view cuboid.",46,{"inputs":[{"name":"ortho3"}],"output":{"name":"n"}}],[11,"zfar","","The far plane offset of the view cuboid.",46,{"inputs":[{"name":"ortho3"}],"output":{"name":"n"}}],[11,"set_width","","Sets the width of the view cuboid.",46,{"inputs":[{"name":"ortho3"},{"name":"n"}],"output":null}],[11,"set_height","","Sets the height of the view cuboid.",46,{"inputs":[{"name":"ortho3"},{"name":"n"}],"output":null}],[11,"set_znear","","Sets the near plane offset of the view cuboid.",46,{"inputs":[{"name":"ortho3"},{"name":"n"}],"output":null}],[11,"set_zfar","","Sets the far plane offset of the view cuboid.",46,{"inputs":[{"name":"ortho3"},{"name":"n"}],"output":null}],[11,"project_pnt","","Projects a point.",46,{"inputs":[{"name":"ortho3"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"project_vec","","Projects a vector.",46,{"inputs":[{"name":"ortho3"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"new","","Creates a new orthographic projection matrix from the width, heihgt, znear and zfar planes of the view cuboid.",47,{"inputs":[{"name":"orthomat3"},{"name":"n"},{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"orthomat3"}}],[11,"new_with_mat","","Creates a new orthographic matrix from a 4D matrix.",47,{"inputs":[{"name":"orthomat3"},{"name":"mat4"}],"output":{"name":"orthomat3"}}],[11,"as_mat","","Returns a reference to the 4D matrix (using homogeneous coordinates) of this projection.",47,{"inputs":[{"name":"orthomat3"}],"output":{"name":"mat4"}}],[11,"width","","The width of the view cuboid.",47,{"inputs":[{"name":"orthomat3"}],"output":{"name":"n"}}],[11,"height","","The height of the view cuboid.",47,{"inputs":[{"name":"orthomat3"}],"output":{"name":"n"}}],[11,"znear","","The near plane offset of the view cuboid.",47,{"inputs":[{"name":"orthomat3"}],"output":{"name":"n"}}],[11,"zfar","","The far plane offset of the view cuboid.",47,{"inputs":[{"name":"orthomat3"}],"output":{"name":"n"}}],[11,"set_width","","Sets the width of the view cuboid.",47,{"inputs":[{"name":"orthomat3"},{"name":"n"}],"output":null}],[11,"set_height","","Sets the height of the view cuboid.",47,{"inputs":[{"name":"orthomat3"},{"name":"n"}],"output":null}],[11,"set_znear","","Sets the near plane offset of the view cuboid.",47,{"inputs":[{"name":"orthomat3"},{"name":"n"}],"output":null}],[11,"set_zfar","","Sets the far plane offset of the view cuboid.",47,{"inputs":[{"name":"orthomat3"},{"name":"n"}],"output":null}],[11,"set_znear_and_zfar","","Sets the near and far plane offsets of the view cuboid.",47,{"inputs":[{"name":"orthomat3"},{"name":"n"},{"name":"n"}],"output":null}],[11,"project_pnt","","Projects a point.",47,{"inputs":[{"name":"orthomat3"},{"name":"pnt3"}],"output":{"name":"pnt3"}}],[11,"project_vec","","Projects a vector.",47,{"inputs":[{"name":"orthomat3"},{"name":"vec3"}],"output":{"name":"vec3"}}],[11,"to_mat","","Returns the 4D matrix (using homogeneous coordinates) of this projection.",47,{"inputs":[{"name":"orthomat3"}],"output":{"name":"mat4"}}],[11,"fmt","","",23,{"inputs":[{"name":"pordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"pordering"}],"output":{"name":"pordering"}}],[11,"decode","","",23,{"inputs":[{"name":"pordering"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",23,{"inputs":[{"name":"pordering"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"pordering"},{"name":"pordering"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"pordering"},{"name":"pordering"}],"output":{"name":"bool"}}],[11,"is_eq","","Returns `true` if `self` is equal to `Equal`.",23,{"inputs":[{"name":"pordering"}],"output":{"name":"bool"}}],[11,"is_lt","","Returns `true` if `self` is equal to `Less`.",23,{"inputs":[{"name":"pordering"}],"output":{"name":"bool"}}],[11,"is_le","","Returns `true` if `self` is equal to `Less` or `Equal`.",23,{"inputs":[{"name":"pordering"}],"output":{"name":"bool"}}],[11,"is_gt","","Returns `true` if `self` is equal to `Greater`.",23,{"inputs":[{"name":"pordering"}],"output":{"name":"bool"}}],[11,"is_ge","","Returns `true` if `self` is equal to `Greater` or `Equal`.",23,{"inputs":[{"name":"pordering"}],"output":{"name":"bool"}}],[11,"is_not_comparable","","Returns `true` if `self` is equal to `NotComparable`.",23,{"inputs":[{"name":"pordering"}],"output":{"name":"bool"}}],[11,"from_ordering","","Creates a `POrdering` from an `Ordering`.",23,{"inputs":[{"name":"pordering"},{"name":"ordering"}],"output":{"name":"pordering"}}],[11,"to_ordering","","Converts this `POrdering` to an `Ordering`.",23,{"inputs":[{"name":"pordering"}],"output":{"name":"option"}}],[8,"Absolute","","Trait of objects having an absolute value.\nThis is useful if the object does not have the same type as its absolute value.",null,null],[10,"abs","","Computes some absolute value of this object.\nTypically, this will make all component of a matrix or vector positive.",48,{"inputs":[{"name":"absolute"},{"name":"self"}],"output":{"name":"a"}}],[8,"AbsoluteRotate","","Composition of a rotation and an absolute value.",null,null],[10,"absolute_rotate","","This is the same as:",49,{"inputs":[{"name":"absoluterotate"},{"name":"v"}],"output":{"name":"v"}}],[8,"ApproxEq","","Trait for testing approximate equality",null,null],[10,"approx_epsilon","","Default epsilon for approximation.",50,{"inputs":[{"name":"approxeq"},{"name":"option"}],"output":{"name":"eps"}}],[10,"approx_eq_eps","","Tests approximate equality using a custom epsilon.",50,{"inputs":[{"name":"approxeq"},{"name":"self"},{"name":"eps"}],"output":{"name":"bool"}}],[10,"approx_ulps","","Default ULPs for approximation.",50,{"inputs":[{"name":"approxeq"},{"name":"option"}],"output":{"name":"u32"}}],[10,"approx_eq_ulps","","Tests approximate equality using units in the last place (ULPs)",50,{"inputs":[{"name":"approxeq"},{"name":"self"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"approx_eq","","Tests approximate equality.",50,{"inputs":[{"name":"approxeq"},{"name":"self"}],"output":{"name":"bool"}}],[8,"Axpy","","Trait of objects implementing the `y = ax + y` operation.",null,null],[10,"axpy","","Adds $$a * x$$ to `self`.",51,{"inputs":[{"name":"axpy"},{"name":"n"},{"name":"self"}],"output":null}],[8,"Basis","","Traits of objects which can form a basis (typically vectors).",null,null],[10,"canonical_basis","","Iterates through the canonical basis of the space in which this object lives.",52,{"inputs":[{"name":"basis"},{"name":"f"}],"output":null}],[10,"orthonormal_subspace_basis","","Iterates through a basis of the subspace orthogonal to `self`.",52,{"inputs":[{"name":"basis"},{"name":"self"},{"name":"f"}],"output":null}],[10,"canonical_basis_element","","Gets the ith element of the canonical basis.",52,{"inputs":[{"name":"basis"},{"name":"usize"}],"output":{"name":"option"}}],[8,"BaseFloat","","Basic floating-point number numeric trait.",null,null],[10,"pi","","Archimedes' constant.",53,{"inputs":[{"name":"basefloat"}],"output":{"name":"self"}}],[10,"two_pi","","2.0 * pi.",53,{"inputs":[{"name":"basefloat"}],"output":{"name":"self"}}],[10,"frac_pi_2","","pi / 2.0.",53,{"inputs":[{"name":"basefloat"}],"output":{"name":"self"}}],[10,"frac_pi_3","","pi / 3.0.",53,{"inputs":[{"name":"basefloat"}],"output":{"name":"self"}}],[10,"frac_pi_4","","pi / 4.0.",53,{"inputs":[{"name":"basefloat"}],"output":{"name":"self"}}],[10,"frac_pi_6","","pi / 6.0.",53,{"inputs":[{"name":"basefloat"}],"output":{"name":"self"}}],[10,"frac_pi_8","","pi / 8.0.",53,{"inputs":[{"name":"basefloat"}],"output":{"name":"self"}}],[10,"frac_1_pi","","1.0 / pi.",53,{"inputs":[{"name":"basefloat"}],"output":{"name":"self"}}],[10,"frac_2_pi","","2.0 / pi.",53,{"inputs":[{"name":"basefloat"}],"output":{"name":"self"}}],[10,"frac_2_sqrt_pi","","2.0 / sqrt(pi).",53,{"inputs":[{"name":"basefloat"}],"output":{"name":"self"}}],[10,"e","","Euler's number.",53,{"inputs":[{"name":"basefloat"}],"output":{"name":"self"}}],[10,"log2_e","","log2(e).",53,{"inputs":[{"name":"basefloat"}],"output":{"name":"self"}}],[10,"log10_e","","log10(e).",53,{"inputs":[{"name":"basefloat"}],"output":{"name":"self"}}],[10,"ln_2","","ln(2.0).",53,{"inputs":[{"name":"basefloat"}],"output":{"name":"self"}}],[10,"ln_10","","ln(10.0).",53,{"inputs":[{"name":"basefloat"}],"output":{"name":"self"}}],[8,"BaseNum","","Basic integral numeric trait.",null,null],[8,"Bounded","","Types that have maximum and minimum value.",null,null],[10,"min_value","","The minimum value.",54,{"inputs":[{"name":"bounded"}],"output":{"name":"self"}}],[10,"max_value","","The maximum value.",54,{"inputs":[{"name":"bounded"}],"output":{"name":"self"}}],[8,"Cast","","Traits of objects which can be created from an object of type `T`.",null,null],[10,"from","","Converts an element of type `T` to an element of type `Self`.",55,{"inputs":[{"name":"cast"},{"name":"t"}],"output":{"name":"self"}}],[8,"Col","","Trait to access columns of a matrix or vector.",null,null],[10,"ncols","","The number of column of this matrix or vector.",56,{"inputs":[{"name":"col"}],"output":{"name":"usize"}}],[10,"col","","Reads the `i`-th column of `self`.",56,{"inputs":[{"name":"col"},{"name":"usize"}],"output":{"name":"c"}}],[10,"set_col","","Writes the `i`-th column of `self`.",56,{"inputs":[{"name":"col"},{"name":"usize"},{"name":"c"}],"output":null}],[8,"ColSlice","","Trait to access part of a column of a matrix",null,null],[10,"col_slice","","Returns a view to a slice of a column of a matrix.",57,{"inputs":[{"name":"colslice"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"c"}}],[8,"RowSlice","","Trait to access part of a row of a matrix",null,null],[10,"row_slice","","Returns a view to a slice of a row of a matrix.",58,{"inputs":[{"name":"rowslice"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"r"}}],[8,"Cov","","Trait for computing the covariance of a set of data.",null,null],[10,"cov","","Computes the covariance of the obsevations stored by `m`:",59,{"inputs":[{"name":"cov"}],"output":{"name":"m"}}],[11,"cov_to","","Computes the covariance of the obsevations stored by `m`:",59,{"inputs":[{"name":"cov"},{"name":"m"}],"output":null}],[8,"Cross","","Trait of elements having a cross product.",null,null],[16,"CrossProductType","","The cross product output.",60,null],[10,"cross","","Computes the cross product between two elements (usually vectors).",60,{"inputs":[{"name":"cross"},{"name":"self"}],"output":{"name":"crossproducttype"}}],[8,"CrossMatrix","","Trait of elements having a cross product operation which can be expressed as a matrix.",null,null],[10,"cross_matrix","","The matrix associated to any cross product with this vector. I.e. `v.cross(anything)` =\n`v.cross_matrix().rmul(anything)`.",61,{"inputs":[{"name":"crossmatrix"}],"output":{"name":"m"}}],[8,"Det","","Trait of objects having a determinant. Typically used by square matrices.",null,null],[10,"det","","Returns the determinant of `m`.",62,{"inputs":[{"name":"det"}],"output":{"name":"n"}}],[8,"Diag","","Trait to get the diagonal of square matrices.",null,null],[10,"from_diag","","Creates a new matrix with the given diagonal.",63,{"inputs":[{"name":"diag"},{"name":"v"}],"output":{"name":"self"}}],[10,"diag","","The diagonal of this matrix.",63,{"inputs":[{"name":"diag"}],"output":{"name":"v"}}],[8,"Dim","","Trait of objects having a spacial dimension known at compile time.",null,null],[10,"dim","","The dimension of the object.",64,{"inputs":[{"name":"dim"},{"name":"option"}],"output":{"name":"usize"}}],[8,"Dot","","Traits of objects having a dot product.",null,null],[10,"dot","","Computes the dot (inner) product of two vectors.",65,{"inputs":[{"name":"dot"},{"name":"self"}],"output":{"name":"n"}}],[8,"EigenQR","","Trait for computing the eigenvector and eigenvalues of a square matrix usin the QR algorithm.",null,null],[10,"eigen_qr","","Computes the eigenvectors and eigenvalues of this matrix.",66,null],[8,"Eye","","Trait for constructing the identity matrix",null,null],[10,"new_identity","","Return the identity matrix of specified dimension",67,{"inputs":[{"name":"eye"},{"name":"usize"}],"output":{"name":"self"}}],[8,"FloatPnt","","Trait of points with components implementing the `BaseFloat` trait.",null,null],[11,"sqdist","","Computes the square distance between two points.",68,{"inputs":[{"name":"floatpnt"},{"name":"self"}],"output":{"name":"n"}}],[11,"dist","","Computes the distance between two points.",68,{"inputs":[{"name":"floatpnt"},{"name":"self"}],"output":{"name":"n"}}],[8,"FloatVec","","Trait of vector with components implementing the `BaseFloat` trait.",null,null],[8,"FromHomogeneous","","Traits of objects which can be build from an homogeneous coordinate form.",null,null],[10,"from","","Builds an object from its homogeneous coordinate form.",69,{"inputs":[{"name":"fromhomogeneous"},{"name":"u"}],"output":{"name":"self"}}],[8,"Indexable","","This is a workaround of current Rust limitations.",null,null],[10,"swap","","Swaps the `i`-th element of `self` with its `j`-th element.",70,{"inputs":[{"name":"indexable"},{"name":"i"},{"name":"i"}],"output":null}],[10,"unsafe_at","","Reads the `i`-th element of `self`.",70,{"inputs":[{"name":"indexable"},{"name":"i"}],"output":{"name":"n"}}],[10,"unsafe_set","","Writes to the `i`-th element of `self`.",70,{"inputs":[{"name":"indexable"},{"name":"i"},{"name":"n"}],"output":null}],[8,"Inv","","Trait of objects having an inverse. Typically used to implement matrix inverse.",null,null],[10,"inv","","Returns the inverse of `m`.",71,{"inputs":[{"name":"inv"}],"output":{"name":"option"}}],[10,"inv_mut","","In-place version of `inverse`.",71,{"inputs":[{"name":"inv"}],"output":{"name":"bool"}}],[8,"Iterable","","This is a workaround of current Rust limitations.",null,null],[10,"iter","","Gets a vector-like read-only iterator.",72,{"inputs":[{"name":"iterable"}],"output":{"name":"iter"}}],[8,"IterableMut","","This is a workaround of current Rust limitations.",null,null],[10,"iter_mut","","Gets a vector-like read-write iterator.",73,{"inputs":[{"name":"iterablemut"}],"output":{"name":"itermut"}}],[8,"Mat","","Trait of matrices.",null,null],[8,"Mean","","Trait for computing the mean of a set of data.",null,null],[10,"mean","","Computes the mean of the observations stored by `v`.",74,{"inputs":[{"name":"mean"}],"output":{"name":"n"}}],[8,"Norm","","Traits of objects having an euclidian norm.",null,null],[11,"norm","","Computes the norm of `self`.",75,{"inputs":[{"name":"norm"}],"output":{"name":"n"}}],[10,"sqnorm","","Computes the squared norm of `self`.",75,{"inputs":[{"name":"norm"}],"output":{"name":"n"}}],[10,"normalize","","Gets the normalized version of a copy of `v`.",75,{"inputs":[{"name":"norm"}],"output":{"name":"self"}}],[10,"normalize_mut","","Normalizes `self`.",75,{"inputs":[{"name":"norm"}],"output":{"name":"n"}}],[8,"NumPnt","","Trait grouping most common operations on points.",null,null],[8,"NumVec","","Trait grouping most common operations on vectors.",null,null],[8,"Orig","","The zero element of a vector space, seen as an element of its embeding affine space.",null,null],[10,"orig","","The trivial origin.",76,{"inputs":[{"name":"orig"}],"output":{"name":"self"}}],[10,"is_orig","","Returns true if this points is exactly the trivial origin.",76,{"inputs":[{"name":"orig"}],"output":{"name":"bool"}}],[8,"Outer","","Traits of objects having an outer product.",null,null],[16,"OuterProductType","","Result type of the outer product.",77,null],[10,"outer","","Computes the outer product: `a * b`",77,{"inputs":[{"name":"outer"},{"name":"self"}],"output":{"name":"outerproducttype"}}],[8,"POrd","","Pointwise ordering operations.",null,null],[10,"inf","","Returns the infimum of this value and another",78,{"inputs":[{"name":"pord"},{"name":"self"}],"output":{"name":"self"}}],[10,"sup","","Returns the supremum of this value and another",78,{"inputs":[{"name":"pord"},{"name":"self"}],"output":{"name":"self"}}],[10,"partial_cmp","","Compare `self` and `other` using a partial ordering relation.",78,{"inputs":[{"name":"pord"},{"name":"self"}],"output":{"name":"pordering"}}],[11,"partial_le","","Returns `true` iff `self` and `other` are comparable and `self <= other`.",78,{"inputs":[{"name":"pord"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_lt","","Returns `true` iff `self` and `other` are comparable and `self < other`.",78,{"inputs":[{"name":"pord"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_ge","","Returns `true` iff `self` and `other` are comparable and `self >= other`.",78,{"inputs":[{"name":"pord"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_gt","","Returns `true` iff `self` and `other` are comparable and `self > other`.",78,{"inputs":[{"name":"pord"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_min","","Return the minimum of `self` and `other` if they are comparable.",78,{"inputs":[{"name":"pord"},{"name":"self"}],"output":{"name":"option"}}],[11,"partial_max","","Return the maximum of `self` and `other` if they are comparable.",78,{"inputs":[{"name":"pord"},{"name":"self"}],"output":{"name":"option"}}],[11,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n`min` or `max`.",78,{"inputs":[{"name":"pord"},{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"PntAsVec","","Trait that relates a point of an affine space to a vector of the associated vector space.",null,null],[10,"to_vec","","Converts this point to its associated vector.",79,{"inputs":[{"name":"pntasvec"}],"output":{"name":"v"}}],[10,"as_vec","","Converts a reference to this point to a reference to its associated vector.",79,{"inputs":[{"name":"pntasvec"}],"output":{"name":"v"}}],[10,"set_coords","","Sets the coordinates of this point to match those of a given vector.",79,{"inputs":[{"name":"pntasvec"},{"name":"v"}],"output":null}],[8,"Repeat","","Trait for constructiong an object repeating a value.",null,null],[10,"repeat","","Returns a value with filled by `val`.",80,{"inputs":[{"name":"repeat"},{"name":"n"}],"output":{"name":"self"}}],[8,"Rotate","","Trait of objects able to rotate other objects.",null,null],[10,"rotate","","Applies a rotation to `v`.",81,{"inputs":[{"name":"rotate"},{"name":"v"}],"output":{"name":"v"}}],[10,"inv_rotate","","Applies an inverse rotation to `v`.",81,{"inputs":[{"name":"rotate"},{"name":"v"}],"output":{"name":"v"}}],[8,"Rotation","","Trait of object which can represent a rotation, and to which new rotations can be appended. A\nrotation is assumed to be an isometry without translation and without reflexion.",null,null],[10,"rotation","","Gets the rotation associated with `self`.",82,{"inputs":[{"name":"rotation"}],"output":{"name":"v"}}],[10,"inv_rotation","","Gets the inverse rotation associated with `self`.",82,{"inputs":[{"name":"rotation"}],"output":{"name":"v"}}],[10,"append_rotation_mut","","Appends a rotation to this object.",82,{"inputs":[{"name":"rotation"},{"name":"v"}],"output":null}],[10,"append_rotation","","Appends the rotation `amount` to a copy of `t`.",82,{"inputs":[{"name":"rotation"},{"name":"v"}],"output":{"name":"self"}}],[10,"prepend_rotation_mut","","Prepends a rotation to this object.",82,{"inputs":[{"name":"rotation"},{"name":"v"}],"output":null}],[10,"prepend_rotation","","Prepends the rotation `amount` to a copy of `t`.",82,{"inputs":[{"name":"rotation"},{"name":"v"}],"output":{"name":"self"}}],[10,"set_rotation","","Sets the rotation of `self`.",82,{"inputs":[{"name":"rotation"},{"name":"v"}],"output":null}],[8,"RotationMatrix","","Trait of transformation having a rotation extractable as a rotation matrix. This can typically\nbe implemented by quaternions to convert them to a rotation matrix.",null,null],[16,"Output","","The output rotation matrix type.",83,null],[10,"to_rot_mat","","Gets the rotation matrix represented by `self`.",83,{"inputs":[{"name":"rotationmatrix"}],"output":{"name":"output"}}],[8,"RotationWithTranslation","","Various composition of rotation and translation.",null,null],[11,"append_rotation_wrt_point","","Applies a rotation centered on a specific point.",84,{"inputs":[{"name":"rotationwithtranslation"},{"name":"av"},{"name":"lv"}],"output":{"name":"self"}}],[11,"append_rotation_wrt_point_mut","","Rotates `self` using a specific center of rotation.",84,{"inputs":[{"name":"rotationwithtranslation"},{"name":"av"},{"name":"lv"}],"output":null}],[11,"append_rotation_wrt_center","","Applies a rotation centered on the translation of `m`.",84,{"inputs":[{"name":"rotationwithtranslation"},{"name":"av"}],"output":{"name":"self"}}],[11,"append_rotation_wrt_center_mut","","Applies a rotation centered on the translation of `m`.",84,{"inputs":[{"name":"rotationwithtranslation"},{"name":"av"}],"output":null}],[8,"RotationTo","","Trait of object that can be rotated to be superimposed with another one of the same nature.",null,null],[16,"AngleType","","Type of the angle between two elements.",85,null],[16,"DeltaRotationType","","Type of the rotation between two elements.",85,null],[10,"angle_to","","Computes an angle nedded to transform the first element to the second one using a\nrotation.",85,{"inputs":[{"name":"rotationto"},{"name":"self"}],"output":{"name":"angletype"}}],[10,"rotation_to","","Computes the smallest rotation needed to transform the first element to the second one.",85,{"inputs":[{"name":"rotationto"},{"name":"self"}],"output":{"name":"deltarotationtype"}}],[8,"Row","","Trait to access rows of a matrix or a vector.",null,null],[10,"nrows","","The number of column of `self`.",86,{"inputs":[{"name":"row"}],"output":{"name":"usize"}}],[10,"row","","Reads the `i`-th row of `self`.",86,{"inputs":[{"name":"row"},{"name":"usize"}],"output":{"name":"r"}}],[10,"set_row","","Writes the `i`-th row of `self`.",86,{"inputs":[{"name":"row"},{"name":"usize"},{"name":"r"}],"output":null}],[8,"Shape","","The shape of an indexable object.",null,null],[10,"shape","","Returns the shape of an indexable object.",87,{"inputs":[{"name":"shape"}],"output":{"name":"i"}}],[8,"SquareMat","","Trait implemented by square matrices.",null,null],[8,"ToHomogeneous","","Traits of objects which can be put in homogeneous coordinates form.",null,null],[10,"to_homogeneous","","Gets the homogeneous coordinates form of this object.",88,{"inputs":[{"name":"tohomogeneous"}],"output":{"name":"u"}}],[8,"Transform","","Trait of objects able to transform other objects.",null,null],[10,"transform","","Applies a transformation to `v`.",89,{"inputs":[{"name":"transform"},{"name":"v"}],"output":{"name":"v"}}],[10,"inv_transform","","Applies an inverse transformation to `v`.",89,{"inputs":[{"name":"transform"},{"name":"v"}],"output":{"name":"v"}}],[8,"Transformation","","Trait of object which represent a transformation, and to which new transformations can\nbe appended.",null,null],[10,"transformation","","Gets the transformation of `self`.",90,{"inputs":[{"name":"transformation"}],"output":{"name":"m"}}],[10,"inv_transformation","","Gets the inverse transformation of `self`.",90,{"inputs":[{"name":"transformation"}],"output":{"name":"m"}}],[10,"append_transformation_mut","","Appends a transformation to this object.",90,{"inputs":[{"name":"transformation"},{"name":"m"}],"output":null}],[10,"append_transformation","","Appends the transformation `amount` to a copy of `t`.",90,{"inputs":[{"name":"transformation"},{"name":"m"}],"output":{"name":"self"}}],[10,"prepend_transformation_mut","","Prepends a transformation to this object.",90,{"inputs":[{"name":"transformation"},{"name":"m"}],"output":null}],[10,"prepend_transformation","","Prepends the transformation `amount` to a copy of `t`.",90,{"inputs":[{"name":"transformation"},{"name":"m"}],"output":{"name":"self"}}],[10,"set_transformation","","Sets the transformation of `self`.",90,{"inputs":[{"name":"transformation"},{"name":"m"}],"output":null}],[8,"Translate","","Trait of objects able to translate other objects. This is typically\nimplemented by vectors to translate points.",null,null],[10,"translate","","Apply a translation to an object.",91,{"inputs":[{"name":"translate"},{"name":"v"}],"output":{"name":"v"}}],[10,"inv_translate","","Apply an inverse translation to an object.",91,{"inputs":[{"name":"translate"},{"name":"v"}],"output":{"name":"v"}}],[8,"Translation","","Trait of object which represent a translation, and to wich new translation\ncan be appended.",null,null],[10,"translation","","Gets the translation associated with this object.",92,{"inputs":[{"name":"translation"}],"output":{"name":"v"}}],[10,"inv_translation","","Gets the inverse translation associated with this object.",92,{"inputs":[{"name":"translation"}],"output":{"name":"v"}}],[10,"append_translation_mut","","Appends a translation to this object.",92,{"inputs":[{"name":"translation"},{"name":"v"}],"output":null}],[10,"append_translation","","Appends the translation `amount` to a copy of `t`.",92,{"inputs":[{"name":"translation"},{"name":"v"}],"output":{"name":"self"}}],[10,"prepend_translation_mut","","Prepends a translation to this object.",92,{"inputs":[{"name":"translation"},{"name":"v"}],"output":null}],[10,"prepend_translation","","Prepends the translation `amount` to a copy of `t`.",92,{"inputs":[{"name":"translation"},{"name":"v"}],"output":{"name":"self"}}],[10,"set_translation","","Sets the translation.",92,{"inputs":[{"name":"translation"},{"name":"v"}],"output":null}],[8,"Transpose","","Trait of objects which can be transposed.",null,null],[10,"transpose","","Computes the transpose of a matrix.",93,{"inputs":[{"name":"transpose"}],"output":{"name":"self"}}],[10,"transpose_mut","","In-place version of `transposed`.",93,{"inputs":[{"name":"transpose"}],"output":null}],[8,"UniformSphereSample","","Trait of vectors able to sample a unit sphere.",null,null],[10,"sample","","Iterate through the samples.",94,{"inputs":[{"name":"uniformspheresample"},{"name":"f"}],"output":null}],[14,"assert_approx_eq_eps!","","Asserts approximate equality within a given tolerance of two values with the\n`ApproxEq` trait.",null,null],[14,"assert_approx_eq_ulps!","","Asserts approximate equality within a given tolerance of two values with the\n`ApproxEq` trait, with tolerance specified in ULPs.",null,null],[14,"assert_approx_eq!","","Asserts approximate equality of two values with the `ApproxEq` trait.",null,null],[11,"append_rotation_wrt_point","","Applies a rotation centered on a specific point.",84,{"inputs":[{"name":"rotationwithtranslation"},{"name":"av"},{"name":"lv"}],"output":{"name":"self"}}],[11,"append_rotation_wrt_point_mut","","Rotates `self` using a specific center of rotation.",84,{"inputs":[{"name":"rotationwithtranslation"},{"name":"av"},{"name":"lv"}],"output":null}],[11,"append_rotation_wrt_center","","Applies a rotation centered on the translation of `m`.",84,{"inputs":[{"name":"rotationwithtranslation"},{"name":"av"}],"output":{"name":"self"}}],[11,"append_rotation_wrt_center_mut","","Applies a rotation centered on the translation of `m`.",84,{"inputs":[{"name":"rotationwithtranslation"},{"name":"av"}],"output":null}],[11,"norm","","Computes the norm of `self`.",75,{"inputs":[{"name":"norm"}],"output":{"name":"n"}}],[11,"sqdist","","Computes the square distance between two points.",68,{"inputs":[{"name":"floatpnt"},{"name":"self"}],"output":{"name":"n"}}],[11,"dist","","Computes the distance between two points.",68,{"inputs":[{"name":"floatpnt"},{"name":"self"}],"output":{"name":"n"}}],[11,"partial_le","","Returns `true` iff `self` and `other` are comparable and `self <= other`.",78,{"inputs":[{"name":"pord"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_lt","","Returns `true` iff `self` and `other` are comparable and `self < other`.",78,{"inputs":[{"name":"pord"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_ge","","Returns `true` iff `self` and `other` are comparable and `self >= other`.",78,{"inputs":[{"name":"pord"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_gt","","Returns `true` iff `self` and `other` are comparable and `self > other`.",78,{"inputs":[{"name":"pord"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_min","","Return the minimum of `self` and `other` if they are comparable.",78,{"inputs":[{"name":"pord"},{"name":"self"}],"output":{"name":"option"}}],[11,"partial_max","","Return the maximum of `self` and `other` if they are comparable.",78,{"inputs":[{"name":"pord"},{"name":"self"}],"output":{"name":"option"}}],[11,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n`min` or `max`.",78,{"inputs":[{"name":"pord"},{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[11,"approx_eq","","Tests approximate equality.",50,{"inputs":[{"name":"approxeq"},{"name":"self"}],"output":{"name":"bool"}}],[11,"cov_to","","Computes the covariance of the obsevations stored by `m`:",59,{"inputs":[{"name":"cov"},{"name":"m"}],"output":null}],[11,"norm","","Computes the norm of `self`.",75,{"inputs":[{"name":"norm"}],"output":{"name":"n"}}],[11,"append_rotation_wrt_point","","Applies a rotation centered on a specific point.",84,{"inputs":[{"name":"rotationwithtranslation"},{"name":"av"},{"name":"lv"}],"output":{"name":"self"}}],[11,"append_rotation_wrt_point_mut","","Rotates `self` using a specific center of rotation.",84,{"inputs":[{"name":"rotationwithtranslation"},{"name":"av"},{"name":"lv"}],"output":null}],[11,"append_rotation_wrt_center","","Applies a rotation centered on the translation of `m`.",84,{"inputs":[{"name":"rotationwithtranslation"},{"name":"av"}],"output":{"name":"self"}}],[11,"append_rotation_wrt_center_mut","","Applies a rotation centered on the translation of `m`.",84,{"inputs":[{"name":"rotationwithtranslation"},{"name":"av"}],"output":null}],[11,"sqdist","","Computes the square distance between two points.",68,{"inputs":[{"name":"floatpnt"},{"name":"self"}],"output":{"name":"n"}}],[11,"dist","","Computes the distance between two points.",68,{"inputs":[{"name":"floatpnt"},{"name":"self"}],"output":{"name":"n"}}],[11,"approx_eq","","Tests approximate equality.",50,{"inputs":[{"name":"approxeq"},{"name":"self"}],"output":{"name":"bool"}}],[11,"cov_to","","Computes the covariance of the obsevations stored by `m`:",59,{"inputs":[{"name":"cov"},{"name":"m"}],"output":null}],[11,"partial_le","","Returns `true` iff `self` and `other` are comparable and `self <= other`.",78,{"inputs":[{"name":"pord"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_lt","","Returns `true` iff `self` and `other` are comparable and `self < other`.",78,{"inputs":[{"name":"pord"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_ge","","Returns `true` iff `self` and `other` are comparable and `self >= other`.",78,{"inputs":[{"name":"pord"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_gt","","Returns `true` iff `self` and `other` are comparable and `self > other`.",78,{"inputs":[{"name":"pord"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_min","","Return the minimum of `self` and `other` if they are comparable.",78,{"inputs":[{"name":"pord"},{"name":"self"}],"output":{"name":"option"}}],[11,"partial_max","","Return the maximum of `self` and `other` if they are comparable.",78,{"inputs":[{"name":"pord"},{"name":"self"}],"output":{"name":"option"}}],[11,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n`min` or `max`.",78,{"inputs":[{"name":"pord"},{"name":"self"},{"name":"self"}],"output":{"name":"option"}}]],"paths":[[3,"DVec"],[3,"Iso2"],[3,"Iso3"],[3,"Iso4"],[3,"Mat1"],[3,"Mat2"],[3,"Mat3"],[3,"Mat4"],[3,"Mat5"],[3,"Mat6"],[3,"Vec1"],[3,"Vec2"],[3,"Vec3"],[3,"Vec4"],[3,"Vec5"],[3,"Vec6"],[3,"Pnt1"],[3,"Pnt2"],[3,"Pnt3"],[3,"Pnt4"],[3,"Pnt5"],[3,"Pnt6"],[3,"Quat"],[4,"POrdering"],[3,"DMat"],[3,"DMat1"],[3,"DVec1"],[3,"DMat2"],[3,"DVec2"],[3,"DMat3"],[3,"DVec3"],[3,"DMat4"],[3,"DVec4"],[3,"DMat5"],[3,"DVec5"],[3,"DMat6"],[3,"DVec6"],[3,"Vec0"],[3,"Pnt0"],[3,"UnitQuat"],[3,"Identity"],[3,"Rot2"],[3,"Rot3"],[3,"Rot4"],[3,"Persp3"],[3,"PerspMat3"],[3,"Ortho3"],[3,"OrthoMat3"],[8,"Absolute"],[8,"AbsoluteRotate"],[8,"ApproxEq"],[8,"Axpy"],[8,"Basis"],[8,"BaseFloat"],[8,"Bounded"],[8,"Cast"],[8,"Col"],[8,"ColSlice"],[8,"RowSlice"],[8,"Cov"],[8,"Cross"],[8,"CrossMatrix"],[8,"Det"],[8,"Diag"],[8,"Dim"],[8,"Dot"],[8,"EigenQR"],[8,"Eye"],[8,"FloatPnt"],[8,"FromHomogeneous"],[8,"Indexable"],[8,"Inv"],[8,"Iterable"],[8,"IterableMut"],[8,"Mean"],[8,"Norm"],[8,"Orig"],[8,"Outer"],[8,"POrd"],[8,"PntAsVec"],[8,"Repeat"],[8,"Rotate"],[8,"Rotation"],[8,"RotationMatrix"],[8,"RotationWithTranslation"],[8,"RotationTo"],[8,"Row"],[8,"Shape"],[8,"ToHomogeneous"],[8,"Transform"],[8,"Transformation"],[8,"Translate"],[8,"Translation"],[8,"Transpose"],[8,"UniformSphereSample"]]};
searchIndex['num'] = {"items":[[0,"","num","A collection of numeric types and traits for Rust.",null,null],[5,"zero","","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"abs","","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"pow","","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[0,"bigint","","A Big integer (signed version: `BigInt`, unsigned version: `BigUint`).",null,null],[3,"BigUint","num::bigint","A big unsigned integer type.",null,null],[3,"BigInt","","A big signed integer type.",null,null],[4,"Sign","","A Sign is a `BigInt`'s composing element.",null,null],[13,"Minus","","",0,null],[13,"NoSign","","",0,null],[13,"Plus","","",0,null],[4,"ParseBigIntError","","",null,null],[13,"ParseInt","","",1,null],[13,"Other","","",1,null],[0,"big_digit","","",null,null],[5,"from_doublebigdigit","num::bigint::big_digit","Split one `DoubleBigDigit` into two `BigDigit`s.",null,null],[5,"to_doublebigdigit","","Join two `BigDigit`s into one `DoubleBigDigit`",null,{"inputs":[{"name":"bigdigit"},{"name":"bigdigit"}],"output":{"name":"doublebigdigit"}}],[17,"BITS","","",null,null],[17,"BASE","","",null,null],[6,"BigDigit","num::bigint","A `BigDigit` is a `BigUint`'s composing element.",null,null],[6,"DoubleBigDigit","","A `DoubleBigDigit` is the internal type used to do the computations.  Its\nsize is the double of the size of `BigDigit`.",null,null],[17,"ZERO_BIG_DIGIT","","",null,null],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",null,null],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",2,{"inputs":[{"name":"tobiguint"}],"output":{"name":"option"}}],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`.",null,null],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",3,{"inputs":[{"name":"tobigint"}],"output":{"name":"option"}}],[8,"RandBigInt","","",null,null],[10,"gen_biguint","","Generate a random `BigUint` of the given bit size.",4,{"inputs":[{"name":"randbigint"},{"name":"usize"}],"output":{"name":"biguint"}}],[10,"gen_bigint","","Generate a random BigInt of the given bit size.",4,{"inputs":[{"name":"randbigint"},{"name":"usize"}],"output":{"name":"bigint"}}],[10,"gen_biguint_below","","Generate a random `BigUint` less than the given bound. Fails\nwhen the bound is zero.",4,{"inputs":[{"name":"randbigint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[10,"gen_biguint_range","","Generate a random `BigUint` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",4,{"inputs":[{"name":"randbigint"},{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[10,"gen_bigint_range","","Generate a random `BigInt` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",4,{"inputs":[{"name":"randbigint"},{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"hash","","",5,null],[11,"fmt","","",5,{"inputs":[{"name":"biguint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"decode","","",5,{"inputs":[{"name":"biguint"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",5,{"inputs":[{"name":"biguint"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"cmp","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"ordering"}}],[11,"default","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"fmt","","",5,{"inputs":[{"name":"biguint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",5,{"inputs":[{"name":"biguint"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a `BigUint`.",5,{"inputs":[{"name":"biguint"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"bitand","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitand","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitxor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitxor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"shl","","",5,{"inputs":[{"name":"biguint"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"shr","","",5,{"inputs":[{"name":"biguint"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"zero","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"is_zero","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"bool"}}],[11,"one","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"add","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"add","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"sub","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"sub","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mul","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mul","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"rem","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"rem","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"neg","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"checked_add","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"checked_sub","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"checked_mul","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"checked_div","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"div_rem","","",5,null],[11,"div_floor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mod_floor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div_mod_floor","","",5,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"divides","","Deprecated, use `is_multiple_of` instead.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_even","","Returns `true` if the number is divisible by `2`.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"bool"}}],[11,"to_i64","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"to_u64","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"to_f32","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"to_f64","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"from_i64","","",5,{"inputs":[{"name":"biguint"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",5,{"inputs":[{"name":"biguint"},{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f64","","",5,{"inputs":[{"name":"biguint"},{"name":"f64"}],"output":{"name":"option"}}],[11,"from","","",5,{"inputs":[{"name":"biguint"},{"name":"u64"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"biguint"},{"name":"u8"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"biguint"},{"name":"u16"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"biguint"},{"name":"u32"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"biguint"},{"name":"usize"}],"output":{"name":"self"}}],[11,"to_biguint","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_biguint","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"new","","Creates and initializes a `BigUint`.",5,{"inputs":[{"name":"biguint"},{"name":"vec"}],"output":{"name":"biguint"}}],[11,"from_slice","","Creates and initializes a `BigUint`.",5,null],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",5,null],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",5,null],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in little-endian byte order.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"vec"}}],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in big-endian byte order.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"vec"}}],[11,"to_str_radix","","Returns the integer formatted as a string in the given radix.\n`radix` must be in the range `[2, 36]`.",5,{"inputs":[{"name":"biguint"},{"name":"u32"}],"output":{"name":"string"}}],[11,"parse_bytes","","Creates and initializes a `BigUint`.",5,null],[11,"bits","","Determines the fewest bits necessary to express the `BigUint`.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"usize"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"cmp","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"decode","","",0,{"inputs":[{"name":"sign"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",0,{"inputs":[{"name":"sign"},{"name":"__s"}],"output":{"name":"result"}}],[11,"neg","","Negate Sign value.",0,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"mul","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"sign"}}],[11,"hash","","",6,null],[11,"fmt","","",6,{"inputs":[{"name":"bigint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"decode","","",6,{"inputs":[{"name":"bigint"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",6,{"inputs":[{"name":"bigint"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"cmp","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"ordering"}}],[11,"default","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"fmt","","",6,{"inputs":[{"name":"bigint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",6,{"inputs":[{"name":"bigint"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a BigInt.",6,{"inputs":[{"name":"bigint"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"shl","","",6,{"inputs":[{"name":"bigint"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"shr","","",6,{"inputs":[{"name":"bigint"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"zero","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"is_zero","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"one","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"abs","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"abs_sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"signum","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"is_positive","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_negative","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"rem","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"rem","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"neg","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"checked_add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"div_rem","","",6,null],[11,"div_floor","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mod_floor","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div_mod_floor","","",6,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"divides","","Deprecated, use `is_multiple_of` instead.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_even","","Returns `true` if the number is divisible by `2`.",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"to_i64","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_u64","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_f32","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_f64","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"from_i64","","",6,{"inputs":[{"name":"bigint"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",6,{"inputs":[{"name":"bigint"},{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f64","","",6,{"inputs":[{"name":"bigint"},{"name":"f64"}],"output":{"name":"option"}}],[11,"from","","",6,{"inputs":[{"name":"bigint"},{"name":"i64"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"bigint"},{"name":"i8"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"bigint"},{"name":"i16"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"bigint"},{"name":"i32"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"bigint"},{"name":"isize"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"bigint"},{"name":"u64"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"bigint"},{"name":"u8"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"bigint"},{"name":"u16"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"bigint"},{"name":"u32"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"bigint"},{"name":"usize"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"bigint"},{"name":"biguint"}],"output":{"name":"self"}}],[11,"to_bigint","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_bigint","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"new","","Creates and initializes a BigInt.",6,{"inputs":[{"name":"bigint"},{"name":"sign"},{"name":"vec"}],"output":{"name":"bigint"}}],[11,"from_biguint","","Creates and initializes a `BigInt`.",6,{"inputs":[{"name":"bigint"},{"name":"sign"},{"name":"biguint"}],"output":{"name":"bigint"}}],[11,"from_slice","","Creates and initializes a `BigInt`.",6,null],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",6,null],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",6,null],[11,"to_bytes_le","","Returns the sign and the byte representation of the `BigInt` in little-endian byte order.",6,null],[11,"to_bytes_be","","Returns the sign and the byte representation of the `BigInt` in big-endian byte order.",6,null],[11,"to_str_radix","","Returns the integer formatted as a string in the given radix.\n`radix` must be in the range `[2, 36]`.",6,{"inputs":[{"name":"bigint"},{"name":"u32"}],"output":{"name":"string"}}],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",6,{"inputs":[{"name":"bigint"}],"output":{"name":"sign"}}],[11,"parse_bytes","","Creates and initializes a `BigInt`.",6,null],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it's not negative.",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"eq","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"parsebiginterror"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"parsebiginterror"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"parsebiginterror"}],"output":{"name":"str"}}],[11,"from","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"parseinterror"}],"output":{"name":"parsebiginterror"}}],[0,"complex","num","Complex numbers.",null,null],[3,"Complex","num::complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",7,null],[12,"im","","Imaginary portion of the complex number",7,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"fmt","","",7,{"inputs":[{"name":"complex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",7,null],[11,"clone","","",7,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"eq","","",7,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"bool"}}],[11,"decode","","",7,{"inputs":[{"name":"complex"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",7,{"inputs":[{"name":"complex"},{"name":"__s"}],"output":{"name":"result"}}],[11,"new","","Create a new Complex",7,{"inputs":[{"name":"complex"},{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"i","","Returns imaginary unit",7,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn't necessarily\nhave a sqrt function), i.e. `re^2 + im^2`.",7,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"scale","","Multiplies `self` by the scalar `t`.",7,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"unscale","","Divides `self` by the scalar `t`.",7,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",7,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"inv","","Returns `1/self`",7,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"norm","","Calculate |self|",7,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"arg","","Calculate the principal Arg of self.",7,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r * exp(i\n* theta)`",7,null],[11,"from_polar","","Convert a polar representation into a complex number.",7,{"inputs":[{"name":"complex"},{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural logarithm.",7,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"ln","","Computes the principal value of natural logarithm of `self`.",7,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"sqrt","","Computes the principal value of the square root of `self`.",7,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"sin","","Computes the sine of `self`.",7,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"cos","","Computes the cosine of `self`.",7,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"tan","","Computes the tangent of `self`.",7,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"asin","","Computes the principal value of the inverse sine of `self`.",7,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"acos","","Computes the principal value of the inverse cosine of `self`.",7,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"atan","","Computes the principal value of the inverse tangent of `self`.",7,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"sinh","","Computes the hyperbolic sine of `self`.",7,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"cosh","","Computes the hyperbolic cosine of `self`.",7,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"tanh","","Computes the hyperbolic tangent of `self`.",7,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of `self`.",7,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine of `self`.",7,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent of `self`.",7,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"is_nan","","Checks if the given complex number is NaN",7,{"inputs":[{"name":"complex"}],"output":{"name":"bool"}}],[11,"is_infinite","","Checks if the given complex number is infinite",7,{"inputs":[{"name":"complex"}],"output":{"name":"bool"}}],[11,"is_finite","","Checks if the given complex number is finite",7,{"inputs":[{"name":"complex"}],"output":{"name":"bool"}}],[11,"is_normal","","Checks if the given complex number is normal",7,{"inputs":[{"name":"complex"}],"output":{"name":"bool"}}],[11,"from","","",7,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"from","","",7,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",7,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"add","","",7,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"sub","","",7,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"sub","","",7,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"mul","","",7,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"mul","","",7,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"div","","",7,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"div","","",7,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"neg","","",7,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"add","","",7,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"sub","","",7,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"mul","","",7,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"div","","",7,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",7,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"sub","","",7,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"mul","","",7,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"div","","",7,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"zero","","",7,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"is_zero","","",7,{"inputs":[{"name":"complex"}],"output":{"name":"bool"}}],[11,"one","","",7,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"fmt","","",7,{"inputs":[{"name":"complex"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"integer","num","Integer trait and functions.",null,null],[5,"div_rem","num::integer","Simultaneous integer division and modulus",null,null],[5,"div_floor","","Floored integer division",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"mod_floor","","Floored integer modulus",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,null],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The\nresult is always positive.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",8,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"mod_floor","","Floored integer modulo, satisfying:",8,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"gcd","","Greatest Common Divisor (GCD).",8,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"lcm","","Lowest Common Multiple (LCM).",8,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"divides","","Deprecated, use `is_multiple_of` instead.",8,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",8,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_even","","Returns `true` if the number is even.",8,{"inputs":[{"name":"integer"}],"output":{"name":"bool"}}],[10,"is_odd","","Returns `true` if the number is odd.",8,{"inputs":[{"name":"integer"}],"output":{"name":"bool"}}],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",8,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",8,null],[0,"iter","num","External iterators for generic mathematics",null,null],[3,"Range","num::iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[11,"clone","","",9,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"next","","",9,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",9,null],[11,"next_back","","",9,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"clone","","",10,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",10,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",10,null],[11,"next_back","","",10,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"clone","","",11,{"inputs":[{"name":"rangestep"}],"output":{"name":"rangestep"}}],[11,"next","","",11,{"inputs":[{"name":"rangestep"}],"output":{"name":"option"}}],[11,"clone","","",12,{"inputs":[{"name":"rangestepinclusive"}],"output":{"name":"rangestepinclusive"}}],[11,"next","","",12,{"inputs":[{"name":"rangestepinclusive"}],"output":{"name":"option"}}],[0,"traits","num","Numeric traits for generic mathematics",null,null],[3,"ParseFloatError","num::traits","",null,null],[12,"kind","","",13,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",14,null],[13,"Invalid","","",14,null],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"Num","","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","Parse error for `from_str_radix`",15,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",15,{"inputs":[{"name":"num"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",16,{"inputs":[{"name":"zero"}],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",16,{"inputs":[{"name":"zero"}],"output":{"name":"bool"}}],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",17,{"inputs":[{"name":"one"}],"output":{"name":"self"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",18,{"inputs":[{"name":"signed"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",18,{"inputs":[{"name":"signed"},{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns the sign of the number.",18,{"inputs":[{"name":"signed"}],"output":{"name":"self"}}],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",18,{"inputs":[{"name":"signed"}],"output":{"name":"bool"}}],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",18,{"inputs":[{"name":"signed"}],"output":{"name":"bool"}}],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",19,{"inputs":[{"name":"bounded"}],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",19,{"inputs":[{"name":"bounded"}],"output":{"name":"self"}}],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",20,{"inputs":[{"name":"saturating"},{"name":"self"}],"output":{"name":"self"}}],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",20,{"inputs":[{"name":"saturating"},{"name":"self"}],"output":{"name":"self"}}],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",21,{"inputs":[{"name":"checkedadd"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",22,{"inputs":[{"name":"checkedsub"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",23,{"inputs":[{"name":"checkedmul"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",24,{"inputs":[{"name":"checkeddiv"},{"name":"self"}],"output":{"name":"option"}}],[8,"PrimInt","","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",25,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",25,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",25,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",25,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",25,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",25,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[10,"swap_bytes","","Reverses the byte order of the integer.",25,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"from_be","","Convert an integer from big endian to the target's endianness.",25,{"inputs":[{"name":"primint"},{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target's endianness.",25,{"inputs":[{"name":"primint"},{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target's endianness.",25,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"to_le","","Convert `self` to little endian from the target's endianness.",25,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",25,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",26,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",26,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",26,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",26,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",26,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",26,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",26,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",26,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",26,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",26,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",26,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",26,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",27,{"inputs":[{"name":"fromprimitive"},{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",27,{"inputs":[{"name":"fromprimitive"},{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",27,{"inputs":[{"name":"fromprimitive"},{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",27,{"inputs":[{"name":"fromprimitive"},{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",27,{"inputs":[{"name":"fromprimitive"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",27,{"inputs":[{"name":"fromprimitive"},{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",27,{"inputs":[{"name":"fromprimitive"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",27,{"inputs":[{"name":"fromprimitive"},{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",27,{"inputs":[{"name":"fromprimitive"},{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",27,{"inputs":[{"name":"fromprimitive"},{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",27,{"inputs":[{"name":"fromprimitive"},{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",27,{"inputs":[{"name":"fromprimitive"},{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",28,{"inputs":[{"name":"numcast"},{"name":"t"}],"output":{"name":"option"}}],[8,"Float","","",null,null],[10,"nan","","Returns the `NaN` value.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",29,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",29,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",29,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",29,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",29,{"inputs":[{"name":"float"}],"output":{"name":"fpcategory"}}],[10,"floor","","Returns the largest integer less than or equal to a number.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"trunc","","Return the integer part of a number.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"fract","","Returns the fractional part of a number.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"signum","","Returns a number that represents the sign of `self`.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",29,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",29,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",29,{"inputs":[{"name":"float"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"powi","","Raise a number to an integer power.",29,{"inputs":[{"name":"float"},{"name":"i32"}],"output":{"name":"self"}}],[10,"powf","","Raise a number to a floating point power.",29,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sqrt","","Take the square root of a number.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"exp","","Returns `e^(self)`, (the exponential function).",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"exp2","","Returns `2^(self)`.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ln","","Returns the natural logarithm of the number.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",29,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"log2","","Returns the base 2 logarithm of the number.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"log10","","Returns the base 10 logarithm of the number.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"max","","Returns the maximum of the two numbers.",29,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"min","","Returns the minimum of the two numbers.",29,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",29,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"cbrt","","Take the cubic root of a number.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",29,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin","","Computes the sine of a number (in radians).",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"cos","","Computes the cosine of a number (in radians).",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"tan","","Computes the tangent of a number (in radians).",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",29,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",29,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"sinh","","Hyperbolic sine function.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"cosh","","Hyperbolic cosine function.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"tanh","","Hyperbolic tangent function.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"asinh","","Inverse hyperbolic sine function.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"acosh","","Inverse hyperbolic cosine function.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atanh","","Inverse hyperbolic tangent function.",29,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",29,null],[0,"rational","num","Rational numbers",null,null],[3,"Ratio","num::rational","Represents the ratio between 2 numbers.",null,null],[3,"ParseRatioError","","",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"Rational32","","",null,null],[6,"Rational64","","",null,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[11,"fmt","","",30,{"inputs":[{"name":"ratio"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",30,null],[11,"clone","","",30,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"decode","","",30,{"inputs":[{"name":"ratio"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",30,{"inputs":[{"name":"ratio"},{"name":"__s"}],"output":{"name":"result"}}],[11,"from_integer","","Creates a ratio representing the integer `t`.",30,{"inputs":[{"name":"ratio"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"new_raw","","Creates a ratio without checking for `denom == 0` or reducing.",30,{"inputs":[{"name":"ratio"},{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"new","","Create a new Ratio. Fails if `denom == 0`.",30,{"inputs":[{"name":"ratio"},{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"to_integer","","Converts to an integer.",30,{"inputs":[{"name":"ratio"}],"output":{"name":"t"}}],[11,"numer","","Gets an immutable reference to the numerator.",30,{"inputs":[{"name":"ratio"}],"output":{"name":"t"}}],[11,"denom","","Gets an immutable reference to the denominator.",30,{"inputs":[{"name":"ratio"}],"output":{"name":"t"}}],[11,"is_integer","","Returns true if the rational number is an integer (denominator is 1).",30,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"reduced","","Returns a `reduce`d copy of self.",30,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"recip","","Returns the reciprocal.",30,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"floor","","Rounds towards minus infinity.",30,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"ceil","","Rounds towards plus infinity.",30,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away from zero.",30,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"trunc","","Rounds towards zero.",30,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"fract","","Returns the fractional part of a number.",30,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"pow","","Raises the ratio to the power of an exponent",30,{"inputs":[{"name":"ratio"},{"name":"i32"}],"output":{"name":"ratio"}}],[11,"from_float","","Converts a float into a rational number.",30,{"inputs":[{"name":"ratio"},{"name":"t"}],"output":{"name":"option"}}],[11,"eq","","",30,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"lt","","",30,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"gt","","",30,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"le","","",30,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"ge","","",30,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",30,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"option"}}],[11,"cmp","","",30,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ordering"}}],[11,"mul","","",30,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"mul","","",30,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"div","","",30,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"div","","",30,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"add","","",30,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"add","","",30,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"sub","","",30,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"sub","","",30,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"rem","","",30,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"rem","","",30,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"neg","","",30,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"zero","","",30,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"is_zero","","",30,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"one","","",30,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",30,{"inputs":[{"name":"ratio"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"abs","","",30,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"abs_sub","","",30,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"signum","","",30,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"is_positive","","",30,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"is_negative","","",30,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",30,{"inputs":[{"name":"ratio"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","Parses `numer/denom` or just `numer`.",30,{"inputs":[{"name":"ratio"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",31,{"inputs":[{"name":"parseratioerror"},{"name":"parseratioerror"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"parseratioerror"},{"name":"parseratioerror"}],"output":{"name":"bool"}}],[11,"fmt","","",31,{"inputs":[{"name":"parseratioerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"parseratioerror"}],"output":{"name":"parseratioerror"}}],[11,"fmt","","",31,{"inputs":[{"name":"parseratioerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",31,{"inputs":[{"name":"parseratioerror"}],"output":{"name":"str"}}]],"paths":[[4,"Sign"],[4,"ParseBigIntError"],[8,"ToBigUint"],[8,"ToBigInt"],[8,"RandBigInt"],[3,"BigUint"],[3,"BigInt"],[3,"Complex"],[8,"Integer"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"Float"],[3,"Ratio"],[3,"ParseRatioError"]]};
searchIndex['rustc_serialize'] = {"items":[[0,"","rustc_serialize","Support code for encoding and decoding types.",null,null],[11,"encode","collections::string","",0,{"inputs":[{"name":"string"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",0,{"inputs":[{"name":"string"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::boxed","",1,{"inputs":[{"name":"box"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"box"},{"name":"d"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"box"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::rc","",2,{"inputs":[{"name":"rc"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",2,{"inputs":[{"name":"rc"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::borrow","",3,{"inputs":[{"name":"cow"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",3,{"inputs":[{"name":"cow"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec","",4,{"inputs":[{"name":"vec"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",4,{"inputs":[{"name":"vec"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::option","",5,{"inputs":[{"name":"option"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",5,{"inputs":[{"name":"option"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::marker","",6,{"inputs":[{"name":"phantomdata"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",6,{"inputs":[{"name":"phantomdata"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::path","",7,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"result"}}],[11,"encode","","",8,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",8,{"inputs":[{"name":"pathbuf"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::cell","",9,{"inputs":[{"name":"cell"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",9,{"inputs":[{"name":"cell"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","","",10,{"inputs":[{"name":"refcell"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",10,{"inputs":[{"name":"refcell"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::arc","",11,{"inputs":[{"name":"arc"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",11,{"inputs":[{"name":"arc"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::linked_list","",12,{"inputs":[{"name":"linkedlist"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",12,{"inputs":[{"name":"linkedlist"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec_deque","",13,{"inputs":[{"name":"vecdeque"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",13,{"inputs":[{"name":"vecdeque"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::map","",14,{"inputs":[{"name":"btreemap"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",14,{"inputs":[{"name":"btreemap"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::set","",15,{"inputs":[{"name":"btreeset"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",15,{"inputs":[{"name":"btreeset"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::map","",16,{"inputs":[{"name":"hashmap"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",16,{"inputs":[{"name":"hashmap"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::set","",17,{"inputs":[{"name":"hashset"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",17,{"inputs":[{"name":"hashset"},{"name":"d"}],"output":{"name":"result"}}],[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",18,null],[12,"newline","","Newline to use",18,null],[12,"pad","","True to pad output with `=` characters",18,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",18,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",19,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",19,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",20,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",20,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",21,null],[13,"InvalidBase64Length","","The input had an invalid length",21,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",22,{"inputs":[{"name":"tobase64"},{"name":"config"}],"output":{"name":"string"}}],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",23,{"inputs":[{"name":"frombase64"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"characterset"}],"output":{"name":"characterset"}}],[11,"clone","","",20,{"inputs":[{"name":"newline"}],"output":{"name":"newline"}}],[11,"clone","","",18,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"clone","","",21,{"inputs":[{"name":"frombase64error"}],"output":{"name":"frombase64error"}}],[11,"fmt","","",21,{"inputs":[{"name":"frombase64error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",21,{"inputs":[{"name":"frombase64error"}],"output":{"name":"str"}}],[11,"fmt","","",21,{"inputs":[{"name":"frombase64error"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",24,null],[13,"InvalidHexLength","","The input had an invalid length",24,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",25,{"inputs":[{"name":"tohex"}],"output":{"name":"string"}}],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",26,{"inputs":[{"name":"fromhex"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"fromhexerror"}],"output":{"name":"fromhexerror"}}],[11,"fmt","","",24,{"inputs":[{"name":"fromhexerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",24,{"inputs":[{"name":"fromhexerror"}],"output":{"name":"str"}}],[11,"fmt","","",24,{"inputs":[{"name":"fromhexerror"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",27,null],[13,"U64","","",27,null],[13,"F64","","",27,null],[13,"String","","",27,null],[13,"Boolean","","",27,null],[13,"Array","","",27,null],[13,"Object","","",27,null],[13,"Null","","",27,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",28,null],[13,"InvalidNumber","","",28,null],[13,"EOFWhileParsingObject","","",28,null],[13,"EOFWhileParsingArray","","",28,null],[13,"EOFWhileParsingValue","","",28,null],[13,"EOFWhileParsingString","","",28,null],[13,"KeyMustBeAString","","",28,null],[13,"ExpectedColon","","",28,null],[13,"TrailingCharacters","","",28,null],[13,"TrailingComma","","",28,null],[13,"InvalidEscape","","",28,null],[13,"InvalidUnicodeCodePoint","","",28,null],[13,"LoneLeadingSurrogateInHexEscape","","",28,null],[13,"UnexpectedEndOfHexEscape","","",28,null],[13,"UnrecognizedHex","","",28,null],[13,"NotFourDigit","","",28,null],[13,"ControlCharacterInString","","",28,null],[13,"NotUtf8","","",28,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",29,null],[13,"IoError","","",29,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",30,null],[13,"ExpectedError","","",30,null],[13,"MissingFieldError","","",30,null],[13,"UnknownVariantError","","",30,null],[13,"ApplicationError","","",30,null],[13,"EOF","","",30,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",31,null],[13,"BadHashmapKey","","",31,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",32,null],[13,"ObjectEnd","","",32,null],[13,"ArrayStart","","",32,null],[13,"ArrayEnd","","",32,null],[13,"BooleanValue","","",32,null],[13,"I64Value","","",32,null],[13,"U64Value","","",32,null],[13,"F64Value","","",32,null],[13,"StringValue","","",32,null],[13,"NullValue","","",32,null],[13,"Error","","",32,null],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(\"foo\"), Key(\"bar\"), Index(3) and Key(\"x\") are the\nStackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",33,null],[13,"Key","","",33,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",34,{"inputs":[{"name":"tojson"}],"output":{"name":"json"}}],[11,"fmt","","",27,{"inputs":[{"name":"json"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"option"}}],[11,"lt","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"le","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"gt","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ge","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"eq","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"json"}],"output":{"name":"json"}}],[11,"eq","","",28,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"errorcode"}],"output":{"name":"errorcode"}}],[11,"fmt","","",29,{"inputs":[{"name":"parsererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"parsererror"},{"name":"parsererror"}],"output":{"name":"bool"}}],[11,"fmt","","",30,{"inputs":[{"name":"decodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"decodererror"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"decodererror"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"fmt","","",31,{"inputs":[{"name":"encodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"encodererror"}],"output":{"name":"self"}}],[11,"fmt","","",28,{"inputs":[{"name":"errorcode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",30,{"inputs":[{"name":"decodererror"}],"output":{"name":"str"}}],[11,"cause","","",30,{"inputs":[{"name":"decodererror"}],"output":{"name":"option"}}],[11,"fmt","","",30,{"inputs":[{"name":"decodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",30,{"inputs":[{"name":"decodererror"},{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",29,{"inputs":[{"name":"parsererror"}],"output":{"name":"str"}}],[11,"fmt","","",29,{"inputs":[{"name":"parsererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",29,{"inputs":[{"name":"parsererror"},{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",31,{"inputs":[{"name":"encodererror"}],"output":{"name":"str"}}],[11,"fmt","","",31,{"inputs":[{"name":"encodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",31,{"inputs":[{"name":"encodererror"},{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",35,{"inputs":[{"name":"encoder"},{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",35,{"inputs":[{"name":"encoder"},{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",35,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"result"}}],[11,"emit_nil","","",35,{"inputs":[{"name":"encoder"}],"output":{"name":"encoderesult"}}],[11,"emit_usize","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"}],"output":{"name":"encoderesult"}}],[11,"emit_u64","","",35,{"inputs":[{"name":"encoder"},{"name":"u64"}],"output":{"name":"encoderesult"}}],[11,"emit_u32","","",35,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"encoderesult"}}],[11,"emit_u16","","",35,{"inputs":[{"name":"encoder"},{"name":"u16"}],"output":{"name":"encoderesult"}}],[11,"emit_u8","","",35,{"inputs":[{"name":"encoder"},{"name":"u8"}],"output":{"name":"encoderesult"}}],[11,"emit_isize","","",35,{"inputs":[{"name":"encoder"},{"name":"isize"}],"output":{"name":"encoderesult"}}],[11,"emit_i64","","",35,{"inputs":[{"name":"encoder"},{"name":"i64"}],"output":{"name":"encoderesult"}}],[11,"emit_i32","","",35,{"inputs":[{"name":"encoder"},{"name":"i32"}],"output":{"name":"encoderesult"}}],[11,"emit_i16","","",35,{"inputs":[{"name":"encoder"},{"name":"i16"}],"output":{"name":"encoderesult"}}],[11,"emit_i8","","",35,{"inputs":[{"name":"encoder"},{"name":"i8"}],"output":{"name":"encoderesult"}}],[11,"emit_bool","","",35,{"inputs":[{"name":"encoder"},{"name":"bool"}],"output":{"name":"encoderesult"}}],[11,"emit_f64","","",35,{"inputs":[{"name":"encoder"},{"name":"f64"}],"output":{"name":"encoderesult"}}],[11,"emit_f32","","",35,{"inputs":[{"name":"encoder"},{"name":"f32"}],"output":{"name":"encoderesult"}}],[11,"emit_char","","",35,{"inputs":[{"name":"encoder"},{"name":"char"}],"output":{"name":"encoderesult"}}],[11,"emit_str","","",35,{"inputs":[{"name":"encoder"},{"name":"str"}],"output":{"name":"encoderesult"}}],[11,"emit_enum","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant_field","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct_field","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option","","",35,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option_none","","",35,{"inputs":[{"name":"encoder"}],"output":{"name":"encoderesult"}}],[11,"emit_option_some","","",35,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq_elt","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_key","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_val","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"encode","","",27,{"inputs":[{"name":"json"},{"name":"s"}],"output":{"name":"result"}}],[11,"from_reader","","Decodes a json value from an `&mut io::Read`",27,{"inputs":[{"name":"json"},{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",27,{"inputs":[{"name":"json"}],"output":{"name":"prettyjson"}}],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"option"}}],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",27,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"option"}}],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_object_mut","","If the Json value is an Object, returns the associated mutable BTreeMap.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_array_mut","","If the Json value is an Array, returns the associated mutable vector.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"index","","",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"json"}}],[11,"index","","",27,{"inputs":[{"name":"json"},{"name":"usize"}],"output":{"name":"json"}}],[11,"fmt","","",32,{"inputs":[{"name":"jsonevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"jsonevent"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"jsonevent"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"fmt","","",33,{"inputs":[{"name":"stackelement"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"stackelement"}],"output":{"name":"stackelement"}}],[11,"eq","","",33,{"inputs":[{"name":"stackelement"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"stackelement"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"new","","",36,{"inputs":[{"name":"stack"}],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",36,{"inputs":[{"name":"stack"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the stack is empty.",36,{"inputs":[{"name":"stack"}],"output":{"name":"bool"}}],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",36,{"inputs":[{"name":"stack"},{"name":"usize"}],"output":{"name":"stackelement"}}],[11,"is_equal_to","","Compares this stack with an array of StackElements.",36,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",36,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",36,null],[11,"top","","Returns the top-most element (if any).",36,{"inputs":[{"name":"stack"}],"output":{"name":"option"}}],[11,"next","","",37,{"inputs":[{"name":"parser"}],"output":{"name":"option"}}],[11,"new","","Creates the JSON parser.",37,{"inputs":[{"name":"parser"},{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",37,{"inputs":[{"name":"parser"}],"output":{"name":"stack"}}],[11,"new","","Create a JSON Builder.",38,{"inputs":[{"name":"builder"},{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",38,{"inputs":[{"name":"builder"}],"output":{"name":"result"}}],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",39,{"inputs":[{"name":"decoder"},{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_usize","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u8","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u16","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_isize","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i8","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i16","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_f32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_f64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_bool","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_char","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_str","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_enum","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_variant","","",39,null],[11,"read_enum_variant_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_struct_variant","","",39,null],[11,"read_enum_struct_variant_field","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct_field","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_option","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq_elt","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_key","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_val","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"error","","",39,{"inputs":[{"name":"decoder"},{"name":"str"}],"output":{"name":"decodererror"}}],[11,"to_json","","",27,{"inputs":[{"name":"json"}],"output":{"name":"json"}}],[11,"to_json","collections::string","",0,{"inputs":[{"name":"string"}],"output":{"name":"json"}}],[11,"to_json","collections::vec","",4,{"inputs":[{"name":"vec"}],"output":{"name":"json"}}],[11,"to_json","collections::btree::map","",14,{"inputs":[{"name":"btreemap"}],"output":{"name":"json"}}],[11,"to_json","std::collections::hash::map","",16,{"inputs":[{"name":"hashmap"}],"output":{"name":"json"}}],[11,"to_json","core::option","",5,{"inputs":[{"name":"option"}],"output":{"name":"json"}}],[11,"fmt","rustc_serialize::json","Encodes a json value into a string",27,{"inputs":[{"name":"json"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",40,{"inputs":[{"name":"prettyjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",41,{"inputs":[{"name":"asjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"indent","","Set the indentation level for the emitted JSON",42,{"inputs":[{"name":"asprettyjson"},{"name":"u32"}],"output":{"name":"asprettyjson"}}],[11,"fmt","","Encodes a json value into a string",42,{"inputs":[{"name":"asprettyjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"result"}}],[8,"Decoder","rustc_serialize","",null,null],[16,"Error","","",43,null],[10,"read_nil","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_usize","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u16","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u8","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_isize","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i16","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i8","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_bool","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_f64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_f32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_char","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_str","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_enum","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_variant","","",43,null],[10,"read_enum_variant_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_struct_variant","","",43,null],[10,"read_enum_struct_variant_field","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct_field","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_option","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq_elt","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_key","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_val","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"error","","",43,{"inputs":[{"name":"decoder"},{"name":"str"}],"output":{"name":"error"}}],[8,"Encoder","","",null,null],[16,"Error","","",44,null],[10,"emit_nil","","",44,{"inputs":[{"name":"encoder"}],"output":{"name":"result"}}],[10,"emit_usize","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"}],"output":{"name":"result"}}],[10,"emit_u64","","",44,{"inputs":[{"name":"encoder"},{"name":"u64"}],"output":{"name":"result"}}],[10,"emit_u32","","",44,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"result"}}],[10,"emit_u16","","",44,{"inputs":[{"name":"encoder"},{"name":"u16"}],"output":{"name":"result"}}],[10,"emit_u8","","",44,{"inputs":[{"name":"encoder"},{"name":"u8"}],"output":{"name":"result"}}],[10,"emit_isize","","",44,{"inputs":[{"name":"encoder"},{"name":"isize"}],"output":{"name":"result"}}],[10,"emit_i64","","",44,{"inputs":[{"name":"encoder"},{"name":"i64"}],"output":{"name":"result"}}],[10,"emit_i32","","",44,{"inputs":[{"name":"encoder"},{"name":"i32"}],"output":{"name":"result"}}],[10,"emit_i16","","",44,{"inputs":[{"name":"encoder"},{"name":"i16"}],"output":{"name":"result"}}],[10,"emit_i8","","",44,{"inputs":[{"name":"encoder"},{"name":"i8"}],"output":{"name":"result"}}],[10,"emit_bool","","",44,{"inputs":[{"name":"encoder"},{"name":"bool"}],"output":{"name":"result"}}],[10,"emit_f64","","",44,{"inputs":[{"name":"encoder"},{"name":"f64"}],"output":{"name":"result"}}],[10,"emit_f32","","",44,{"inputs":[{"name":"encoder"},{"name":"f32"}],"output":{"name":"result"}}],[10,"emit_char","","",44,{"inputs":[{"name":"encoder"},{"name":"char"}],"output":{"name":"result"}}],[10,"emit_str","","",44,{"inputs":[{"name":"encoder"},{"name":"str"}],"output":{"name":"result"}}],[10,"emit_enum","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant_field","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct_field","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option","","",44,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option_none","","",44,{"inputs":[{"name":"encoder"}],"output":{"name":"result"}}],[10,"emit_option_some","","",44,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq_elt","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_key","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_val","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[8,"Decodable","","",null,null],[10,"decode","","",45,{"inputs":[{"name":"decodable"},{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","",null,null],[10,"encode","","",46,{"inputs":[{"name":"encodable"},{"name":"s"}],"output":{"name":"result"}}],[8,"DecoderHelpers","","",null,null],[10,"read_to_vec","","",47,{"inputs":[{"name":"decoderhelpers"},{"name":"f"}],"output":{"name":"result"}}],[8,"EncoderHelpers","","",null,null],[10,"emit_from_vec","","",48,null]],"paths":[[3,"String"],[3,"Box"],[3,"Rc"],[4,"Cow"],[3,"Vec"],[4,"Option"],[3,"PhantomData"],[3,"Path"],[3,"PathBuf"],[3,"Cell"],[3,"RefCell"],[3,"Arc"],[3,"LinkedList"],[3,"VecDeque"],[3,"BTreeMap"],[3,"BTreeSet"],[3,"HashMap"],[3,"HashSet"],[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex['wayland_kbd'] = {"items":[[0,"","wayland_kbd","Keyboard mapping utility for `wayland-client` using libxkbcommon.",null,null],[3,"MappedKeyboard","","A wayland keyboard mapped to its keymap",null,null],[3,"KeyEvent","","",null,null],[12,"keycode","","The raw keycode associated with this event. Only use it if\nyou know what you're doing.",0,null],[12,"serial","","",0,null],[12,"time","","",0,null],[12,"keystate","","",0,null],[4,"MappedKeyboardEvent","","",null,null],[13,"KeyEvent","","",1,null],[13,"Other","","",1,null],[4,"MappedKeyboardError","","",null,null],[13,"XKBNotFound","","",2,null],[13,"NoKeyboardOnSeat","","",2,null],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",3,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",3,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",3,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",3,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",3,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",3,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",3,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",3,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",3,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",3,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",3,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",3,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",3,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",3,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",3,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",3,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",3,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",3,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",3,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",3,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",3,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",3,null],[11,"cloned","","Maps an `Option<&T>` to an `Option<T>` by cloning the contents of the\noption.",3,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",3,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","core::num","",4,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"fmt","","",4,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",4,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",4,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",4,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",4,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",4,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",4,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",4,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",4,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",4,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",4,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",4,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",4,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",4,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",4,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",4,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",4,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",4,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",4,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",4,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",4,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",4,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",4,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",4,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",4,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",4,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",4,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",4,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",4,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",4,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",4,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",4,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"eq","core::num::flt2dec::decoder","",5,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"decoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"decoded"}],"output":{"name":"decoded"}}],[11,"eq","","",6,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"fulldecoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"fulldecoded"}],"output":{"name":"fulldecoded"}}],[11,"fmt","core::num::flt2dec","",7,{"inputs":[{"name":"part"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"part"}],"output":{"name":"part"}}],[11,"len","","Returns the exact byte length of given part.",7,{"inputs":[{"name":"part"}],"output":{"name":"usize"}}],[11,"write","","Writes a part into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",7,null],[11,"clone","","",8,{"inputs":[{"name":"formatted"}],"output":{"name":"formatted"}}],[11,"len","","Returns the exact byte length of combined formatted result.",8,{"inputs":[{"name":"formatted"}],"output":{"name":"usize"}}],[11,"write","","Writes all formatted parts into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",8,null],[11,"fmt","","",9,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","core::num::dec2flt::rawfp","",10,{"inputs":[{"name":"unpacked"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"unpacked"}],"output":{"name":"unpacked"}}],[11,"new","","",10,{"inputs":[{"name":"unpacked"},{"name":"u64"},{"name":"i16"}],"output":{"name":"unpacked"}}],[11,"fmt","core::num::dec2flt::parse","",11,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"fmt","","",12,{"inputs":[{"name":"decimal"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",12,null],[11,"eq","","",13,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"fmt","","",13,{"inputs":[{"name":"parseresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::dec2flt","",14,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",14,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"floaterrorkind"}],"output":{"name":"floaterrorkind"}}],[11,"fmt","","",15,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",14,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::bignum","Makes a bignum from one digit.",16,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"from_u64","","Makes a bignum from `u64` value.",16,{"inputs":[{"name":"big32x40"},{"name":"u64"}],"output":{"name":"big32x40"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",16,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",16,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",16,{"inputs":[{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",16,{"inputs":[{"name":"big32x40"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",16,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"add_small","","",16,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",16,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",16,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",16,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",16,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",16,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",16,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",16,null],[11,"eq","","",16,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",16,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"option"}}],[11,"cmp","","",16,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"ordering"}}],[11,"clone","","",16,{"inputs":[{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"fmt","","",16,{"inputs":[{"name":"big32x40"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::bignum::tests","Makes a bignum from one digit.",17,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"from_u64","","Makes a bignum from `u64` value.",17,{"inputs":[{"name":"big8x3"},{"name":"u64"}],"output":{"name":"big8x3"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",17,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",17,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",17,{"inputs":[{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",17,{"inputs":[{"name":"big8x3"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",17,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"add_small","","",17,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",17,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",17,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",17,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",17,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",17,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",17,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",17,null],[11,"eq","","",17,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"option"}}],[11,"cmp","","",17,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"ordering"}}],[11,"clone","","",17,{"inputs":[{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"fmt","","",17,{"inputs":[{"name":"big8x3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::num::diy_float","",18,{"inputs":[{"name":"fp"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"mul","","Returns a correctly rounded product of itself and `other`.",18,{"inputs":[{"name":"fp"},{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize","","Normalizes itself so that the resulting mantissa is at least `2^63`.",18,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize_to","","Normalizes itself to have the shared exponent.\nIt can only decrease the exponent (and thus increase the mantissa).",18,{"inputs":[{"name":"fp"},{"name":"i16"}],"output":{"name":"fp"}}],[11,"fmt","core::num","",19,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",20,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",20,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",21,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",21,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",20,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",22,null],[11,"fmt","","",22,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",22,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",22,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",22,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",22,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",22,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",22,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",22,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually \"non-zero\".",22,{"inputs":[{"name":"nonzero"},{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",22,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",23,null],[11,"get","","Dereferences the content.",23,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",23,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",23,null],[11,"fmt","","",23,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",24,null],[11,"clone","","",24,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",24,null],[11,"fmt","","",24,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::marker","",25,null],[11,"eq","","",25,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",25,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",25,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",25,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",26,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",26,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",27,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",27,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",28,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",29,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",30,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",30,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",30,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",30,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",30,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","wayland_kbd","",31,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",31,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",31,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",31,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",31,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",31,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",31,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",31,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",32,null],[11,"fmt","","",32,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",32,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",33,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",34,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",35,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",36,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",37,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",33,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",33,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",33,null],[11,"swap","","Stores a value into the bool, returning the old value.",33,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",33,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",33,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",33,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",33,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",33,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",34,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",34,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",34,null],[11,"swap","","Stores a value into the isize, returning the old value.",34,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",34,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",34,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",34,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",34,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",34,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",34,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",35,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",35,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",35,null],[11,"swap","","Stores a value into the usize, returning the old value.",35,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",35,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",35,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",35,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",35,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",35,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",35,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",36,null],[11,"load","","Loads a value from the pointer.",36,null],[11,"store","","Stores a value into the pointer.",36,null],[11,"swap","","Stores a value into the pointer, returning the old value.",36,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",36,null],[11,"fmt","","",35,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",34,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",33,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",36,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",38,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",38,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",38,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",38,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",38,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",38,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",38,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",39,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",39,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",39,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",40,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",40,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",40,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",40,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",40,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",40,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",40,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",40,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",40,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",41,null],[11,"clone","","",41,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",42,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",42,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",42,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",42,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",43,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",43,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",44,null],[11,"deref","","",43,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",43,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",45,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",45,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",45,null],[11,"clone","core::char","",46,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",47,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",46,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"size_hint","","",46,null],[11,"clone","","",48,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",49,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",48,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",48,null],[11,"clone","core::iter","",50,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",50,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",50,null],[11,"next_back","","",50,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",51,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",51,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",51,null],[11,"next_back","","",51,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",52,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",52,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",52,null],[11,"clone","","",53,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"clone","","",54,{"inputs":[{"name":"chainstate"}],"output":{"name":"chainstate"}}],[11,"next","","",53,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",53,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",53,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",53,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",53,null],[11,"next_back","","",53,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",55,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",55,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",55,null],[11,"next_back","","",55,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",56,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",56,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",56,null],[11,"next_back","","",56,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",57,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",57,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",57,null],[11,"next_back","","",57,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",58,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",58,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",58,null],[11,"next_back","","",58,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",59,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",59,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"nth","","",59,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",59,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",59,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",60,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",60,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",60,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",60,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",60,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",60,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",60,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",60,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",61,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",61,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"clone","","",62,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",62,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",62,null],[11,"clone","","",63,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",63,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",63,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",63,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",63,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"clone","","",64,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",64,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",64,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"clone","","",65,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",65,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",65,null],[11,"clone","","",66,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",66,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",66,null],[11,"next_back","","",66,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",67,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",67,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",67,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",67,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",67,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",67,null],[11,"next_back","","",67,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",68,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",68,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",68,null],[11,"next_back","","",68,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",69,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",28,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",27,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",69,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",69,null],[11,"clone","","",70,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",70,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",70,null],[11,"next_back","","",70,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",69,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",69,null],[11,"next","core::ops","",27,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",27,null],[11,"next_back","","",27,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",28,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",71,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",71,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",71,null],[11,"next_back","","",71,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",72,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",72,null],[11,"next_back","","",72,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",72,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",72,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",72,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",73,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",73,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",73,null],[11,"next_back","","",73,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",73,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::option","",3,null],[11,"fmt","","",3,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",3,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",3,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"default","","",3,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",3,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",74,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",74,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",74,null],[11,"next_back","","",74,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",75,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",75,null],[11,"next_back","","",75,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",75,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",76,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",76,null],[11,"next_back","","",76,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",77,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",77,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",77,null],[11,"next_back","","",77,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",3,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",78,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",79,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",80,null],[11,"fmt","","",80,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",80,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",80,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",80,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",80,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",80,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",80,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",80,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",80,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",80,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",80,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",80,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",80,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",80,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",80,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",80,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",80,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",80,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",80,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",80,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",80,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",80,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",80,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",80,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",80,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",80,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",80,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",80,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",80,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",80,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",80,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",81,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",81,null],[11,"next_back","","",81,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",81,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",82,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",82,null],[11,"next_back","","",82,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",83,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",83,null],[11,"next_back","","",83,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",80,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::simd","",84,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",84,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",85,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",85,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",86,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",86,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",87,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",87,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",88,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",88,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",89,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",89,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",90,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",90,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",91,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",91,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",92,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",92,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",93,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",93,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"add","","",88,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"add","","",89,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"add","","",90,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"add","","",91,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"add","","",84,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"add","","",85,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"add","","",86,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"add","","",87,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"add","","",92,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"add","","",93,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"sub","","",88,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"sub","","",89,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"sub","","",90,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"sub","","",91,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"sub","","",84,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"sub","","",85,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"sub","","",86,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"sub","","",87,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"sub","","",92,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"sub","","",93,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"mul","","",88,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"mul","","",89,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"mul","","",90,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"mul","","",91,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"mul","","",84,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"mul","","",85,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"mul","","",86,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"mul","","",87,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"mul","","",92,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"mul","","",93,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"div","","",92,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"div","","",93,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"shl","","",88,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shl","","",89,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shl","","",90,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shl","","",91,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shl","","",84,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shl","","",85,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shl","","",86,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shl","","",87,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"shr","","",88,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shr","","",89,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shr","","",90,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shr","","",91,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shr","","",84,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shr","","",85,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shr","","",86,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shr","","",87,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitand","","",88,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitand","","",89,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitand","","",90,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitand","","",91,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitand","","",84,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitand","","",85,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitand","","",86,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitand","","",87,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitor","","",88,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitor","","",89,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitor","","",90,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitor","","",91,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitor","","",84,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitor","","",85,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitor","","",86,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitor","","",87,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitxor","","",88,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitxor","","",89,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitxor","","",90,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitxor","","",91,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitxor","","",84,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitxor","","",85,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitxor","","",86,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitxor","","",87,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",94,null],[11,"next","","",94,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",94,null],[11,"count","","",94,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",94,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",94,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",94,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",94,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",95,null],[11,"next","","",95,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",95,null],[11,"count","","",95,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",95,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",95,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",95,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",96,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",96,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",96,null],[11,"next_back","","",96,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",96,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",97,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",97,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",97,null],[11,"next_back","","",97,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",98,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",98,null],[11,"next","","",99,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",99,null],[11,"next","","",100,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",100,null],[11,"next","","",101,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",101,null],[11,"next","","",102,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",102,null],[11,"clone","","",103,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",103,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",103,null],[11,"count","","",103,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"nth","","",103,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",103,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"next_back","","",103,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"clone","","",104,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",104,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",104,null],[11,"count","","",104,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"nth","","",104,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",104,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next_back","","",104,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next","","",105,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",105,null],[11,"count","","",105,{"inputs":[{"name":"chunksmut"}],"output":{"name":"usize"}}],[11,"nth","","",105,{"inputs":[{"name":"chunksmut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",105,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"next_back","","",105,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"fmt","core::str::pattern","",106,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",106,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",106,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",106,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",107,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",108,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",107,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",107,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",107,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",109,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",109,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",109,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",109,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",109,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",109,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",109,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",109,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",110,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",110,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",110,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",110,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",110,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",110,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",110,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",110,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",111,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",111,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",111,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",111,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",111,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",111,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",111,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",111,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",112,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",112,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",113,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",113,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",114,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",114,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",112,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",112,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",112,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",112,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",112,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",115,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",115,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",116,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",116,null],[11,"matching","","",116,null],[11,"use_early_reject","","",117,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",117,null],[11,"matching","","",117,null],[11,"eq","core::str","",118,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",118,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",118,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",118,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",118,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",119,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",119,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",119,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",119,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",119,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",119,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",120,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",120,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",120,null],[11,"next_back","","",120,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",120,{"inputs":[{"name":"chars"}],"output":{"name":"str"}}],[11,"clone","","",121,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",121,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",121,null],[11,"next_back","","",121,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",121,{"inputs":[{"name":"charindices"}],"output":{"name":"str"}}],[11,"clone","","",122,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"next","","",122,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",122,null],[11,"count","","",122,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"last","","",122,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"nth","","",122,{"inputs":[{"name":"bytes"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next_back","","",122,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",122,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",123,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",124,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",124,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",125,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",125,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",124,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",125,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",126,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",126,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",127,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",127,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",126,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",127,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",128,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",129,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",129,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",130,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",130,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",131,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",132,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",132,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",133,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",133,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",132,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",133,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",134,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",135,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",135,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",136,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",136,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",135,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",136,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",137,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",137,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",137,null],[11,"next_back","","",137,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",138,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",139,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",139,null],[11,"call_mut","","",139,null],[11,"call_once","","",139,null],[11,"next","","",138,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",138,null],[11,"next_back","","",138,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",140,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",141,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",141,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",141,null],[11,"finish","","",141,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",141,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",141,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"eq","core::fmt::num","",142,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",142,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",143,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",143,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",143,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",144,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",144,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",144,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",145,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",145,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",145,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",146,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",146,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",147,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",147,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",147,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",148,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",148,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",149,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",150,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Finishes output and returns any error encountered.",150,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",151,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Finishes output and returns any error encountered.",151,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"formatter","","Returns the wrapped `Formatter`.",151,{"inputs":[{"name":"debugtuple"}],"output":{"name":"formatter"}}],[11,"finish","","",152,null],[11,"entry","","Adds a new entry to the set output.",153,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"entries","","Adds the contents of an iterator of entries to the set output.",153,{"inputs":[{"name":"debugset"},{"name":"i"}],"output":{"name":"debugset"}}],[11,"finish","","Finishes output and returns any error encountered.",153,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the list output.",154,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"entries","","Adds the contents of an iterator of entries to the list output.",154,{"inputs":[{"name":"debuglist"},{"name":"i"}],"output":{"name":"debuglist"}}],[11,"finish","","Finishes output and returns any error encountered.",154,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",155,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"entries","","Adds the contents of an iterator of entries to the map output.",155,{"inputs":[{"name":"debugmap"},{"name":"i"}],"output":{"name":"debugmap"}}],[11,"finish","","Finishes output and returns any error encountered.",155,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"clone","core::fmt::rt::v1","",156,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",157,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",158,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",158,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",158,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",159,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",160,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","core::fmt","",161,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",161,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",162,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",163,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",164,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",164,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",164,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",165,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",165,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",165,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",165,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",165,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as 'fill' whenever there is alignment",165,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",165,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",165,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",165,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"sign_plus","","Determines if the `+` flag was specified.",165,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_minus","","Determines if the `-` flag was specified.",165,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"alternate","","Determines if the `#` flag was specified.",165,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",165,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",165,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",165,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",165,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",165,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",165,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"write_str","","",165,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",165,{"inputs":[{"name":"formatter"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","",165,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",25,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",38,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",42,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",43,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_utf8","wayland_kbd","Tries to retrieve the key event as an UTF8 sequence",0,{"inputs":[{"name":"keyevent"}],"output":{"name":"option"}}],[11,"as_symbol","","Tries to match this key event as a key symbol according to current keyboard state.",0,{"inputs":[{"name":"keyevent"}],"output":{"name":"option"}}],[11,"new","","Creates a mapped keyboard by extracting the keyboard from a seat.",166,{"inputs":[{"name":"mappedkeyboard"},{"name":"wlseat"}],"output":{"name":"result"}}],[11,"next","","",166,{"inputs":[{"name":"mappedkeyboard"}],"output":{"name":"option"}}],[0,"keysyms","","",null,null],[17,"XKB_KEY_VoidSymbol","wayland_kbd::keysyms","",null,null],[17,"XKB_KEY_BackSpace","","",null,null],[17,"XKB_KEY_Tab","","",null,null],[17,"XKB_KEY_Linefeed","","",null,null],[17,"XKB_KEY_Clear","","",null,null],[17,"XKB_KEY_Return","","",null,null],[17,"XKB_KEY_Pause","","",null,null],[17,"XKB_KEY_Scroll_Lock","","",null,null],[17,"XKB_KEY_Sys_Req","","",null,null],[17,"XKB_KEY_Escape","","",null,null],[17,"XKB_KEY_Delete","","",null,null],[17,"XKB_KEY_Multi_key","","",null,null],[17,"XKB_KEY_Codeinput","","",null,null],[17,"XKB_KEY_SingleCandidate","","",null,null],[17,"XKB_KEY_MultipleCandidate","","",null,null],[17,"XKB_KEY_PreviousCandidate","","",null,null],[17,"XKB_KEY_Kanji","","",null,null],[17,"XKB_KEY_Muhenkan","","",null,null],[17,"XKB_KEY_Henkan_Mode","","",null,null],[17,"XKB_KEY_Henkan","","",null,null],[17,"XKB_KEY_Romaji","","",null,null],[17,"XKB_KEY_Hiragana","","",null,null],[17,"XKB_KEY_Katakana","","",null,null],[17,"XKB_KEY_Hiragana_Katakana","","",null,null],[17,"XKB_KEY_Zenkaku","","",null,null],[17,"XKB_KEY_Hankaku","","",null,null],[17,"XKB_KEY_Zenkaku_Hankaku","","",null,null],[17,"XKB_KEY_Touroku","","",null,null],[17,"XKB_KEY_Massyo","","",null,null],[17,"XKB_KEY_Kana_Lock","","",null,null],[17,"XKB_KEY_Kana_Shift","","",null,null],[17,"XKB_KEY_Eisu_Shift","","",null,null],[17,"XKB_KEY_Eisu_toggle","","",null,null],[17,"XKB_KEY_Kanji_Bangou","","",null,null],[17,"XKB_KEY_Zen_Koho","","",null,null],[17,"XKB_KEY_Mae_Koho","","",null,null],[17,"XKB_KEY_Home","","",null,null],[17,"XKB_KEY_Left","","",null,null],[17,"XKB_KEY_Up","","",null,null],[17,"XKB_KEY_Right","","",null,null],[17,"XKB_KEY_Down","","",null,null],[17,"XKB_KEY_Prior","","",null,null],[17,"XKB_KEY_Page_Up","","",null,null],[17,"XKB_KEY_Next","","",null,null],[17,"XKB_KEY_Page_Down","","",null,null],[17,"XKB_KEY_End","","",null,null],[17,"XKB_KEY_Begin","","",null,null],[17,"XKB_KEY_Select","","",null,null],[17,"XKB_KEY_Print","","",null,null],[17,"XKB_KEY_Execute","","",null,null],[17,"XKB_KEY_Insert","","",null,null],[17,"XKB_KEY_Undo","","",null,null],[17,"XKB_KEY_Redo","","",null,null],[17,"XKB_KEY_Menu","","",null,null],[17,"XKB_KEY_Find","","",null,null],[17,"XKB_KEY_Cancel","","",null,null],[17,"XKB_KEY_Help","","",null,null],[17,"XKB_KEY_Break","","",null,null],[17,"XKB_KEY_Mode_switch","","",null,null],[17,"XKB_KEY_script_switch","","",null,null],[17,"XKB_KEY_Num_Lock","","",null,null],[17,"XKB_KEY_KP_Space","","",null,null],[17,"XKB_KEY_KP_Tab","","",null,null],[17,"XKB_KEY_KP_Enter","","",null,null],[17,"XKB_KEY_KP_F1","","",null,null],[17,"XKB_KEY_KP_F2","","",null,null],[17,"XKB_KEY_KP_F3","","",null,null],[17,"XKB_KEY_KP_F4","","",null,null],[17,"XKB_KEY_KP_Home","","",null,null],[17,"XKB_KEY_KP_Left","","",null,null],[17,"XKB_KEY_KP_Up","","",null,null],[17,"XKB_KEY_KP_Right","","",null,null],[17,"XKB_KEY_KP_Down","","",null,null],[17,"XKB_KEY_KP_Prior","","",null,null],[17,"XKB_KEY_KP_Page_Up","","",null,null],[17,"XKB_KEY_KP_Next","","",null,null],[17,"XKB_KEY_KP_Page_Down","","",null,null],[17,"XKB_KEY_KP_End","","",null,null],[17,"XKB_KEY_KP_Begin","","",null,null],[17,"XKB_KEY_KP_Insert","","",null,null],[17,"XKB_KEY_KP_Delete","","",null,null],[17,"XKB_KEY_KP_Equal","","",null,null],[17,"XKB_KEY_KP_Multiply","","",null,null],[17,"XKB_KEY_KP_Add","","",null,null],[17,"XKB_KEY_KP_Separator","","",null,null],[17,"XKB_KEY_KP_Subtract","","",null,null],[17,"XKB_KEY_KP_Decimal","","",null,null],[17,"XKB_KEY_KP_Divide","","",null,null],[17,"XKB_KEY_KP_0","","",null,null],[17,"XKB_KEY_KP_1","","",null,null],[17,"XKB_KEY_KP_2","","",null,null],[17,"XKB_KEY_KP_3","","",null,null],[17,"XKB_KEY_KP_4","","",null,null],[17,"XKB_KEY_KP_5","","",null,null],[17,"XKB_KEY_KP_6","","",null,null],[17,"XKB_KEY_KP_7","","",null,null],[17,"XKB_KEY_KP_8","","",null,null],[17,"XKB_KEY_KP_9","","",null,null],[17,"XKB_KEY_F1","","",null,null],[17,"XKB_KEY_F2","","",null,null],[17,"XKB_KEY_F3","","",null,null],[17,"XKB_KEY_F4","","",null,null],[17,"XKB_KEY_F5","","",null,null],[17,"XKB_KEY_F6","","",null,null],[17,"XKB_KEY_F7","","",null,null],[17,"XKB_KEY_F8","","",null,null],[17,"XKB_KEY_F9","","",null,null],[17,"XKB_KEY_F10","","",null,null],[17,"XKB_KEY_F11","","",null,null],[17,"XKB_KEY_L1","","",null,null],[17,"XKB_KEY_F12","","",null,null],[17,"XKB_KEY_L2","","",null,null],[17,"XKB_KEY_F13","","",null,null],[17,"XKB_KEY_L3","","",null,null],[17,"XKB_KEY_F14","","",null,null],[17,"XKB_KEY_L4","","",null,null],[17,"XKB_KEY_F15","","",null,null],[17,"XKB_KEY_L5","","",null,null],[17,"XKB_KEY_F16","","",null,null],[17,"XKB_KEY_L6","","",null,null],[17,"XKB_KEY_F17","","",null,null],[17,"XKB_KEY_L7","","",null,null],[17,"XKB_KEY_F18","","",null,null],[17,"XKB_KEY_L8","","",null,null],[17,"XKB_KEY_F19","","",null,null],[17,"XKB_KEY_L9","","",null,null],[17,"XKB_KEY_F20","","",null,null],[17,"XKB_KEY_L10","","",null,null],[17,"XKB_KEY_F21","","",null,null],[17,"XKB_KEY_R1","","",null,null],[17,"XKB_KEY_F22","","",null,null],[17,"XKB_KEY_R2","","",null,null],[17,"XKB_KEY_F23","","",null,null],[17,"XKB_KEY_R3","","",null,null],[17,"XKB_KEY_F24","","",null,null],[17,"XKB_KEY_R4","","",null,null],[17,"XKB_KEY_F25","","",null,null],[17,"XKB_KEY_R5","","",null,null],[17,"XKB_KEY_F26","","",null,null],[17,"XKB_KEY_R6","","",null,null],[17,"XKB_KEY_F27","","",null,null],[17,"XKB_KEY_R7","","",null,null],[17,"XKB_KEY_F28","","",null,null],[17,"XKB_KEY_R8","","",null,null],[17,"XKB_KEY_F29","","",null,null],[17,"XKB_KEY_R9","","",null,null],[17,"XKB_KEY_F30","","",null,null],[17,"XKB_KEY_R10","","",null,null],[17,"XKB_KEY_F31","","",null,null],[17,"XKB_KEY_R11","","",null,null],[17,"XKB_KEY_F32","","",null,null],[17,"XKB_KEY_R12","","",null,null],[17,"XKB_KEY_F33","","",null,null],[17,"XKB_KEY_R13","","",null,null],[17,"XKB_KEY_F34","","",null,null],[17,"XKB_KEY_R14","","",null,null],[17,"XKB_KEY_F35","","",null,null],[17,"XKB_KEY_R15","","",null,null],[17,"XKB_KEY_Shift_L","","",null,null],[17,"XKB_KEY_Shift_R","","",null,null],[17,"XKB_KEY_Control_L","","",null,null],[17,"XKB_KEY_Control_R","","",null,null],[17,"XKB_KEY_Caps_Lock","","",null,null],[17,"XKB_KEY_Shift_Lock","","",null,null],[17,"XKB_KEY_Meta_L","","",null,null],[17,"XKB_KEY_Meta_R","","",null,null],[17,"XKB_KEY_Alt_L","","",null,null],[17,"XKB_KEY_Alt_R","","",null,null],[17,"XKB_KEY_Super_L","","",null,null],[17,"XKB_KEY_Super_R","","",null,null],[17,"XKB_KEY_Hyper_L","","",null,null],[17,"XKB_KEY_Hyper_R","","",null,null],[17,"XKB_KEY_ISO_Lock","","",null,null],[17,"XKB_KEY_ISO_Level2_Latch","","",null,null],[17,"XKB_KEY_ISO_Level3_Shift","","",null,null],[17,"XKB_KEY_ISO_Level3_Latch","","",null,null],[17,"XKB_KEY_ISO_Level3_Lock","","",null,null],[17,"XKB_KEY_ISO_Level5_Shift","","",null,null],[17,"XKB_KEY_ISO_Level5_Latch","","",null,null],[17,"XKB_KEY_ISO_Level5_Lock","","",null,null],[17,"XKB_KEY_ISO_Group_Shift","","",null,null],[17,"XKB_KEY_ISO_Group_Latch","","",null,null],[17,"XKB_KEY_ISO_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_Next_Group","","",null,null],[17,"XKB_KEY_ISO_Next_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_Prev_Group","","",null,null],[17,"XKB_KEY_ISO_Prev_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_First_Group","","",null,null],[17,"XKB_KEY_ISO_First_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_Last_Group","","",null,null],[17,"XKB_KEY_ISO_Last_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_Left_Tab","","",null,null],[17,"XKB_KEY_ISO_Move_Line_Up","","",null,null],[17,"XKB_KEY_ISO_Move_Line_Down","","",null,null],[17,"XKB_KEY_ISO_Partial_Line_Up","","",null,null],[17,"XKB_KEY_ISO_Partial_Line_Down","","",null,null],[17,"XKB_KEY_ISO_Partial_Space_Left","","",null,null],[17,"XKB_KEY_ISO_Partial_Space_Right","","",null,null],[17,"XKB_KEY_ISO_Set_Margin_Left","","",null,null],[17,"XKB_KEY_ISO_Set_Margin_Right","","",null,null],[17,"XKB_KEY_ISO_Release_Margin_Left","","",null,null],[17,"XKB_KEY_ISO_Release_Margin_Right","","",null,null],[17,"XKB_KEY_ISO_Release_Both_Margins","","",null,null],[17,"XKB_KEY_ISO_Fast_Cursor_Left","","",null,null],[17,"XKB_KEY_ISO_Fast_Cursor_Right","","",null,null],[17,"XKB_KEY_ISO_Fast_Cursor_Up","","",null,null],[17,"XKB_KEY_ISO_Fast_Cursor_Down","","",null,null],[17,"XKB_KEY_ISO_Continuous_Underline","","",null,null],[17,"XKB_KEY_ISO_Discontinuous_Underline","","",null,null],[17,"XKB_KEY_ISO_Emphasize","","",null,null],[17,"XKB_KEY_ISO_Center_Object","","",null,null],[17,"XKB_KEY_ISO_Enter","","",null,null],[17,"XKB_KEY_dead_grave","","",null,null],[17,"XKB_KEY_dead_acute","","",null,null],[17,"XKB_KEY_dead_circumflex","","",null,null],[17,"XKB_KEY_dead_tilde","","",null,null],[17,"XKB_KEY_dead_perispomeni","","",null,null],[17,"XKB_KEY_dead_macron","","",null,null],[17,"XKB_KEY_dead_breve","","",null,null],[17,"XKB_KEY_dead_abovedot","","",null,null],[17,"XKB_KEY_dead_diaeresis","","",null,null],[17,"XKB_KEY_dead_abovering","","",null,null],[17,"XKB_KEY_dead_doubleacute","","",null,null],[17,"XKB_KEY_dead_caron","","",null,null],[17,"XKB_KEY_dead_cedilla","","",null,null],[17,"XKB_KEY_dead_ogonek","","",null,null],[17,"XKB_KEY_dead_iota","","",null,null],[17,"XKB_KEY_dead_voiced_sound","","",null,null],[17,"XKB_KEY_dead_semivoiced_sound","","",null,null],[17,"XKB_KEY_dead_belowdot","","",null,null],[17,"XKB_KEY_dead_hook","","",null,null],[17,"XKB_KEY_dead_horn","","",null,null],[17,"XKB_KEY_dead_stroke","","",null,null],[17,"XKB_KEY_dead_abovecomma","","",null,null],[17,"XKB_KEY_dead_psili","","",null,null],[17,"XKB_KEY_dead_abovereversedcomma","","",null,null],[17,"XKB_KEY_dead_dasia","","",null,null],[17,"XKB_KEY_dead_doublegrave","","",null,null],[17,"XKB_KEY_dead_belowring","","",null,null],[17,"XKB_KEY_dead_belowmacron","","",null,null],[17,"XKB_KEY_dead_belowcircumflex","","",null,null],[17,"XKB_KEY_dead_belowtilde","","",null,null],[17,"XKB_KEY_dead_belowbreve","","",null,null],[17,"XKB_KEY_dead_belowdiaeresis","","",null,null],[17,"XKB_KEY_dead_invertedbreve","","",null,null],[17,"XKB_KEY_dead_belowcomma","","",null,null],[17,"XKB_KEY_dead_currency","","",null,null],[17,"XKB_KEY_dead_lowline","","",null,null],[17,"XKB_KEY_dead_aboveverticalline","","",null,null],[17,"XKB_KEY_dead_belowverticalline","","",null,null],[17,"XKB_KEY_dead_longsolidusoverlay","","",null,null],[17,"XKB_KEY_dead_a","","",null,null],[17,"XKB_KEY_dead_A","","",null,null],[17,"XKB_KEY_dead_e","","",null,null],[17,"XKB_KEY_dead_E","","",null,null],[17,"XKB_KEY_dead_i","","",null,null],[17,"XKB_KEY_dead_I","","",null,null],[17,"XKB_KEY_dead_o","","",null,null],[17,"XKB_KEY_dead_O","","",null,null],[17,"XKB_KEY_dead_u","","",null,null],[17,"XKB_KEY_dead_U","","",null,null],[17,"XKB_KEY_dead_small_schwa","","",null,null],[17,"XKB_KEY_dead_capital_schwa","","",null,null],[17,"XKB_KEY_dead_greek","","",null,null],[17,"XKB_KEY_First_Virtual_Screen","","",null,null],[17,"XKB_KEY_Prev_Virtual_Screen","","",null,null],[17,"XKB_KEY_Next_Virtual_Screen","","",null,null],[17,"XKB_KEY_Last_Virtual_Screen","","",null,null],[17,"XKB_KEY_Terminate_Server","","",null,null],[17,"XKB_KEY_AccessX_Enable","","",null,null],[17,"XKB_KEY_AccessX_Feedback_Enable","","",null,null],[17,"XKB_KEY_RepeatKeys_Enable","","",null,null],[17,"XKB_KEY_SlowKeys_Enable","","",null,null],[17,"XKB_KEY_BounceKeys_Enable","","",null,null],[17,"XKB_KEY_StickyKeys_Enable","","",null,null],[17,"XKB_KEY_MouseKeys_Enable","","",null,null],[17,"XKB_KEY_MouseKeys_Accel_Enable","","",null,null],[17,"XKB_KEY_Overlay1_Enable","","",null,null],[17,"XKB_KEY_Overlay2_Enable","","",null,null],[17,"XKB_KEY_AudibleBell_Enable","","",null,null],[17,"XKB_KEY_Pointer_Left","","",null,null],[17,"XKB_KEY_Pointer_Right","","",null,null],[17,"XKB_KEY_Pointer_Up","","",null,null],[17,"XKB_KEY_Pointer_Down","","",null,null],[17,"XKB_KEY_Pointer_UpLeft","","",null,null],[17,"XKB_KEY_Pointer_UpRight","","",null,null],[17,"XKB_KEY_Pointer_DownLeft","","",null,null],[17,"XKB_KEY_Pointer_DownRight","","",null,null],[17,"XKB_KEY_Pointer_Button_Dflt","","",null,null],[17,"XKB_KEY_Pointer_Button1","","",null,null],[17,"XKB_KEY_Pointer_Button2","","",null,null],[17,"XKB_KEY_Pointer_Button3","","",null,null],[17,"XKB_KEY_Pointer_Button4","","",null,null],[17,"XKB_KEY_Pointer_Button5","","",null,null],[17,"XKB_KEY_Pointer_DblClick_Dflt","","",null,null],[17,"XKB_KEY_Pointer_DblClick1","","",null,null],[17,"XKB_KEY_Pointer_DblClick2","","",null,null],[17,"XKB_KEY_Pointer_DblClick3","","",null,null],[17,"XKB_KEY_Pointer_DblClick4","","",null,null],[17,"XKB_KEY_Pointer_DblClick5","","",null,null],[17,"XKB_KEY_Pointer_Drag_Dflt","","",null,null],[17,"XKB_KEY_Pointer_Drag1","","",null,null],[17,"XKB_KEY_Pointer_Drag2","","",null,null],[17,"XKB_KEY_Pointer_Drag3","","",null,null],[17,"XKB_KEY_Pointer_Drag4","","",null,null],[17,"XKB_KEY_Pointer_Drag5","","",null,null],[17,"XKB_KEY_Pointer_EnableKeys","","",null,null],[17,"XKB_KEY_Pointer_Accelerate","","",null,null],[17,"XKB_KEY_Pointer_DfltBtnNext","","",null,null],[17,"XKB_KEY_Pointer_DfltBtnPrev","","",null,null],[17,"XKB_KEY_ch","","",null,null],[17,"XKB_KEY_Ch","","",null,null],[17,"XKB_KEY_CH","","",null,null],[17,"XKB_KEY_c_h","","",null,null],[17,"XKB_KEY_C_h","","",null,null],[17,"XKB_KEY_C_H","","",null,null],[17,"XKB_KEY_3270_Duplicate","","",null,null],[17,"XKB_KEY_3270_FieldMark","","",null,null],[17,"XKB_KEY_3270_Right2","","",null,null],[17,"XKB_KEY_3270_Left2","","",null,null],[17,"XKB_KEY_3270_BackTab","","",null,null],[17,"XKB_KEY_3270_EraseEOF","","",null,null],[17,"XKB_KEY_3270_EraseInput","","",null,null],[17,"XKB_KEY_3270_Reset","","",null,null],[17,"XKB_KEY_3270_Quit","","",null,null],[17,"XKB_KEY_3270_PA1","","",null,null],[17,"XKB_KEY_3270_PA2","","",null,null],[17,"XKB_KEY_3270_PA3","","",null,null],[17,"XKB_KEY_3270_Test","","",null,null],[17,"XKB_KEY_3270_Attn","","",null,null],[17,"XKB_KEY_3270_CursorBlink","","",null,null],[17,"XKB_KEY_3270_AltCursor","","",null,null],[17,"XKB_KEY_3270_KeyClick","","",null,null],[17,"XKB_KEY_3270_Jump","","",null,null],[17,"XKB_KEY_3270_Ident","","",null,null],[17,"XKB_KEY_3270_Rule","","",null,null],[17,"XKB_KEY_3270_Copy","","",null,null],[17,"XKB_KEY_3270_Play","","",null,null],[17,"XKB_KEY_3270_Setup","","",null,null],[17,"XKB_KEY_3270_Record","","",null,null],[17,"XKB_KEY_3270_ChangeScreen","","",null,null],[17,"XKB_KEY_3270_DeleteWord","","",null,null],[17,"XKB_KEY_3270_ExSelect","","",null,null],[17,"XKB_KEY_3270_CursorSelect","","",null,null],[17,"XKB_KEY_3270_PrintScreen","","",null,null],[17,"XKB_KEY_3270_Enter","","",null,null],[17,"XKB_KEY_space","","",null,null],[17,"XKB_KEY_exclam","","",null,null],[17,"XKB_KEY_quotedbl","","",null,null],[17,"XKB_KEY_numbersign","","",null,null],[17,"XKB_KEY_dollar","","",null,null],[17,"XKB_KEY_percent","","",null,null],[17,"XKB_KEY_ampersand","","",null,null],[17,"XKB_KEY_apostrophe","","",null,null],[17,"XKB_KEY_quoteright","","",null,null],[17,"XKB_KEY_parenleft","","",null,null],[17,"XKB_KEY_parenright","","",null,null],[17,"XKB_KEY_asterisk","","",null,null],[17,"XKB_KEY_plus","","",null,null],[17,"XKB_KEY_comma","","",null,null],[17,"XKB_KEY_minus","","",null,null],[17,"XKB_KEY_period","","",null,null],[17,"XKB_KEY_slash","","",null,null],[17,"XKB_KEY_0","","",null,null],[17,"XKB_KEY_1","","",null,null],[17,"XKB_KEY_2","","",null,null],[17,"XKB_KEY_3","","",null,null],[17,"XKB_KEY_4","","",null,null],[17,"XKB_KEY_5","","",null,null],[17,"XKB_KEY_6","","",null,null],[17,"XKB_KEY_7","","",null,null],[17,"XKB_KEY_8","","",null,null],[17,"XKB_KEY_9","","",null,null],[17,"XKB_KEY_colon","","",null,null],[17,"XKB_KEY_semicolon","","",null,null],[17,"XKB_KEY_less","","",null,null],[17,"XKB_KEY_equal","","",null,null],[17,"XKB_KEY_greater","","",null,null],[17,"XKB_KEY_question","","",null,null],[17,"XKB_KEY_at","","",null,null],[17,"XKB_KEY_A","","",null,null],[17,"XKB_KEY_B","","",null,null],[17,"XKB_KEY_C","","",null,null],[17,"XKB_KEY_D","","",null,null],[17,"XKB_KEY_E","","",null,null],[17,"XKB_KEY_F","","",null,null],[17,"XKB_KEY_G","","",null,null],[17,"XKB_KEY_H","","",null,null],[17,"XKB_KEY_I","","",null,null],[17,"XKB_KEY_J","","",null,null],[17,"XKB_KEY_K","","",null,null],[17,"XKB_KEY_L","","",null,null],[17,"XKB_KEY_M","","",null,null],[17,"XKB_KEY_N","","",null,null],[17,"XKB_KEY_O","","",null,null],[17,"XKB_KEY_P","","",null,null],[17,"XKB_KEY_Q","","",null,null],[17,"XKB_KEY_R","","",null,null],[17,"XKB_KEY_S","","",null,null],[17,"XKB_KEY_T","","",null,null],[17,"XKB_KEY_U","","",null,null],[17,"XKB_KEY_V","","",null,null],[17,"XKB_KEY_W","","",null,null],[17,"XKB_KEY_X","","",null,null],[17,"XKB_KEY_Y","","",null,null],[17,"XKB_KEY_Z","","",null,null],[17,"XKB_KEY_bracketleft","","",null,null],[17,"XKB_KEY_backslash","","",null,null],[17,"XKB_KEY_bracketright","","",null,null],[17,"XKB_KEY_asciicircum","","",null,null],[17,"XKB_KEY_underscore","","",null,null],[17,"XKB_KEY_grave","","",null,null],[17,"XKB_KEY_quoteleft","","",null,null],[17,"XKB_KEY_a","","",null,null],[17,"XKB_KEY_b","","",null,null],[17,"XKB_KEY_c","","",null,null],[17,"XKB_KEY_d","","",null,null],[17,"XKB_KEY_e","","",null,null],[17,"XKB_KEY_f","","",null,null],[17,"XKB_KEY_g","","",null,null],[17,"XKB_KEY_h","","",null,null],[17,"XKB_KEY_i","","",null,null],[17,"XKB_KEY_j","","",null,null],[17,"XKB_KEY_k","","",null,null],[17,"XKB_KEY_l","","",null,null],[17,"XKB_KEY_m","","",null,null],[17,"XKB_KEY_n","","",null,null],[17,"XKB_KEY_o","","",null,null],[17,"XKB_KEY_p","","",null,null],[17,"XKB_KEY_q","","",null,null],[17,"XKB_KEY_r","","",null,null],[17,"XKB_KEY_s","","",null,null],[17,"XKB_KEY_t","","",null,null],[17,"XKB_KEY_u","","",null,null],[17,"XKB_KEY_v","","",null,null],[17,"XKB_KEY_w","","",null,null],[17,"XKB_KEY_x","","",null,null],[17,"XKB_KEY_y","","",null,null],[17,"XKB_KEY_z","","",null,null],[17,"XKB_KEY_braceleft","","",null,null],[17,"XKB_KEY_bar","","",null,null],[17,"XKB_KEY_braceright","","",null,null],[17,"XKB_KEY_asciitilde","","",null,null],[17,"XKB_KEY_nobreakspace","","",null,null],[17,"XKB_KEY_exclamdown","","",null,null],[17,"XKB_KEY_cent","","",null,null],[17,"XKB_KEY_sterling","","",null,null],[17,"XKB_KEY_currency","","",null,null],[17,"XKB_KEY_yen","","",null,null],[17,"XKB_KEY_brokenbar","","",null,null],[17,"XKB_KEY_section","","",null,null],[17,"XKB_KEY_diaeresis","","",null,null],[17,"XKB_KEY_copyright","","",null,null],[17,"XKB_KEY_ordfeminine","","",null,null],[17,"XKB_KEY_guillemotleft","","",null,null],[17,"XKB_KEY_notsign","","",null,null],[17,"XKB_KEY_hyphen","","",null,null],[17,"XKB_KEY_registered","","",null,null],[17,"XKB_KEY_macron","","",null,null],[17,"XKB_KEY_degree","","",null,null],[17,"XKB_KEY_plusminus","","",null,null],[17,"XKB_KEY_twosuperior","","",null,null],[17,"XKB_KEY_threesuperior","","",null,null],[17,"XKB_KEY_acute","","",null,null],[17,"XKB_KEY_mu","","",null,null],[17,"XKB_KEY_paragraph","","",null,null],[17,"XKB_KEY_periodcentered","","",null,null],[17,"XKB_KEY_cedilla","","",null,null],[17,"XKB_KEY_onesuperior","","",null,null],[17,"XKB_KEY_masculine","","",null,null],[17,"XKB_KEY_guillemotright","","",null,null],[17,"XKB_KEY_onequarter","","",null,null],[17,"XKB_KEY_onehalf","","",null,null],[17,"XKB_KEY_threequarters","","",null,null],[17,"XKB_KEY_questiondown","","",null,null],[17,"XKB_KEY_Agrave","","",null,null],[17,"XKB_KEY_Aacute","","",null,null],[17,"XKB_KEY_Acircumflex","","",null,null],[17,"XKB_KEY_Atilde","","",null,null],[17,"XKB_KEY_Adiaeresis","","",null,null],[17,"XKB_KEY_Aring","","",null,null],[17,"XKB_KEY_AE","","",null,null],[17,"XKB_KEY_Ccedilla","","",null,null],[17,"XKB_KEY_Egrave","","",null,null],[17,"XKB_KEY_Eacute","","",null,null],[17,"XKB_KEY_Ecircumflex","","",null,null],[17,"XKB_KEY_Ediaeresis","","",null,null],[17,"XKB_KEY_Igrave","","",null,null],[17,"XKB_KEY_Iacute","","",null,null],[17,"XKB_KEY_Icircumflex","","",null,null],[17,"XKB_KEY_Idiaeresis","","",null,null],[17,"XKB_KEY_ETH","","",null,null],[17,"XKB_KEY_Eth","","",null,null],[17,"XKB_KEY_Ntilde","","",null,null],[17,"XKB_KEY_Ograve","","",null,null],[17,"XKB_KEY_Oacute","","",null,null],[17,"XKB_KEY_Ocircumflex","","",null,null],[17,"XKB_KEY_Otilde","","",null,null],[17,"XKB_KEY_Odiaeresis","","",null,null],[17,"XKB_KEY_multiply","","",null,null],[17,"XKB_KEY_Oslash","","",null,null],[17,"XKB_KEY_Ooblique","","",null,null],[17,"XKB_KEY_Ugrave","","",null,null],[17,"XKB_KEY_Uacute","","",null,null],[17,"XKB_KEY_Ucircumflex","","",null,null],[17,"XKB_KEY_Udiaeresis","","",null,null],[17,"XKB_KEY_Yacute","","",null,null],[17,"XKB_KEY_THORN","","",null,null],[17,"XKB_KEY_Thorn","","",null,null],[17,"XKB_KEY_ssharp","","",null,null],[17,"XKB_KEY_agrave","","",null,null],[17,"XKB_KEY_aacute","","",null,null],[17,"XKB_KEY_acircumflex","","",null,null],[17,"XKB_KEY_atilde","","",null,null],[17,"XKB_KEY_adiaeresis","","",null,null],[17,"XKB_KEY_aring","","",null,null],[17,"XKB_KEY_ae","","",null,null],[17,"XKB_KEY_ccedilla","","",null,null],[17,"XKB_KEY_egrave","","",null,null],[17,"XKB_KEY_eacute","","",null,null],[17,"XKB_KEY_ecircumflex","","",null,null],[17,"XKB_KEY_ediaeresis","","",null,null],[17,"XKB_KEY_igrave","","",null,null],[17,"XKB_KEY_iacute","","",null,null],[17,"XKB_KEY_icircumflex","","",null,null],[17,"XKB_KEY_idiaeresis","","",null,null],[17,"XKB_KEY_eth","","",null,null],[17,"XKB_KEY_ntilde","","",null,null],[17,"XKB_KEY_ograve","","",null,null],[17,"XKB_KEY_oacute","","",null,null],[17,"XKB_KEY_ocircumflex","","",null,null],[17,"XKB_KEY_otilde","","",null,null],[17,"XKB_KEY_odiaeresis","","",null,null],[17,"XKB_KEY_division","","",null,null],[17,"XKB_KEY_oslash","","",null,null],[17,"XKB_KEY_ooblique","","",null,null],[17,"XKB_KEY_ugrave","","",null,null],[17,"XKB_KEY_uacute","","",null,null],[17,"XKB_KEY_ucircumflex","","",null,null],[17,"XKB_KEY_udiaeresis","","",null,null],[17,"XKB_KEY_yacute","","",null,null],[17,"XKB_KEY_thorn","","",null,null],[17,"XKB_KEY_ydiaeresis","","",null,null],[17,"XKB_KEY_Aogonek","","",null,null],[17,"XKB_KEY_breve","","",null,null],[17,"XKB_KEY_Lstroke","","",null,null],[17,"XKB_KEY_Lcaron","","",null,null],[17,"XKB_KEY_Sacute","","",null,null],[17,"XKB_KEY_Scaron","","",null,null],[17,"XKB_KEY_Scedilla","","",null,null],[17,"XKB_KEY_Tcaron","","",null,null],[17,"XKB_KEY_Zacute","","",null,null],[17,"XKB_KEY_Zcaron","","",null,null],[17,"XKB_KEY_Zabovedot","","",null,null],[17,"XKB_KEY_aogonek","","",null,null],[17,"XKB_KEY_ogonek","","",null,null],[17,"XKB_KEY_lstroke","","",null,null],[17,"XKB_KEY_lcaron","","",null,null],[17,"XKB_KEY_sacute","","",null,null],[17,"XKB_KEY_caron","","",null,null],[17,"XKB_KEY_scaron","","",null,null],[17,"XKB_KEY_scedilla","","",null,null],[17,"XKB_KEY_tcaron","","",null,null],[17,"XKB_KEY_zacute","","",null,null],[17,"XKB_KEY_doubleacute","","",null,null],[17,"XKB_KEY_zcaron","","",null,null],[17,"XKB_KEY_zabovedot","","",null,null],[17,"XKB_KEY_Racute","","",null,null],[17,"XKB_KEY_Abreve","","",null,null],[17,"XKB_KEY_Lacute","","",null,null],[17,"XKB_KEY_Cacute","","",null,null],[17,"XKB_KEY_Ccaron","","",null,null],[17,"XKB_KEY_Eogonek","","",null,null],[17,"XKB_KEY_Ecaron","","",null,null],[17,"XKB_KEY_Dcaron","","",null,null],[17,"XKB_KEY_Dstroke","","",null,null],[17,"XKB_KEY_Nacute","","",null,null],[17,"XKB_KEY_Ncaron","","",null,null],[17,"XKB_KEY_Odoubleacute","","",null,null],[17,"XKB_KEY_Rcaron","","",null,null],[17,"XKB_KEY_Uring","","",null,null],[17,"XKB_KEY_Udoubleacute","","",null,null],[17,"XKB_KEY_Tcedilla","","",null,null],[17,"XKB_KEY_racute","","",null,null],[17,"XKB_KEY_abreve","","",null,null],[17,"XKB_KEY_lacute","","",null,null],[17,"XKB_KEY_cacute","","",null,null],[17,"XKB_KEY_ccaron","","",null,null],[17,"XKB_KEY_eogonek","","",null,null],[17,"XKB_KEY_ecaron","","",null,null],[17,"XKB_KEY_dcaron","","",null,null],[17,"XKB_KEY_dstroke","","",null,null],[17,"XKB_KEY_nacute","","",null,null],[17,"XKB_KEY_ncaron","","",null,null],[17,"XKB_KEY_odoubleacute","","",null,null],[17,"XKB_KEY_rcaron","","",null,null],[17,"XKB_KEY_uring","","",null,null],[17,"XKB_KEY_udoubleacute","","",null,null],[17,"XKB_KEY_tcedilla","","",null,null],[17,"XKB_KEY_abovedot","","",null,null],[17,"XKB_KEY_Hstroke","","",null,null],[17,"XKB_KEY_Hcircumflex","","",null,null],[17,"XKB_KEY_Iabovedot","","",null,null],[17,"XKB_KEY_Gbreve","","",null,null],[17,"XKB_KEY_Jcircumflex","","",null,null],[17,"XKB_KEY_hstroke","","",null,null],[17,"XKB_KEY_hcircumflex","","",null,null],[17,"XKB_KEY_idotless","","",null,null],[17,"XKB_KEY_gbreve","","",null,null],[17,"XKB_KEY_jcircumflex","","",null,null],[17,"XKB_KEY_Cabovedot","","",null,null],[17,"XKB_KEY_Ccircumflex","","",null,null],[17,"XKB_KEY_Gabovedot","","",null,null],[17,"XKB_KEY_Gcircumflex","","",null,null],[17,"XKB_KEY_Ubreve","","",null,null],[17,"XKB_KEY_Scircumflex","","",null,null],[17,"XKB_KEY_cabovedot","","",null,null],[17,"XKB_KEY_ccircumflex","","",null,null],[17,"XKB_KEY_gabovedot","","",null,null],[17,"XKB_KEY_gcircumflex","","",null,null],[17,"XKB_KEY_ubreve","","",null,null],[17,"XKB_KEY_scircumflex","","",null,null],[17,"XKB_KEY_kra","","",null,null],[17,"XKB_KEY_kappa","","",null,null],[17,"XKB_KEY_Rcedilla","","",null,null],[17,"XKB_KEY_Itilde","","",null,null],[17,"XKB_KEY_Lcedilla","","",null,null],[17,"XKB_KEY_Emacron","","",null,null],[17,"XKB_KEY_Gcedilla","","",null,null],[17,"XKB_KEY_Tslash","","",null,null],[17,"XKB_KEY_rcedilla","","",null,null],[17,"XKB_KEY_itilde","","",null,null],[17,"XKB_KEY_lcedilla","","",null,null],[17,"XKB_KEY_emacron","","",null,null],[17,"XKB_KEY_gcedilla","","",null,null],[17,"XKB_KEY_tslash","","",null,null],[17,"XKB_KEY_ENG","","",null,null],[17,"XKB_KEY_eng","","",null,null],[17,"XKB_KEY_Amacron","","",null,null],[17,"XKB_KEY_Iogonek","","",null,null],[17,"XKB_KEY_Eabovedot","","",null,null],[17,"XKB_KEY_Imacron","","",null,null],[17,"XKB_KEY_Ncedilla","","",null,null],[17,"XKB_KEY_Omacron","","",null,null],[17,"XKB_KEY_Kcedilla","","",null,null],[17,"XKB_KEY_Uogonek","","",null,null],[17,"XKB_KEY_Utilde","","",null,null],[17,"XKB_KEY_Umacron","","",null,null],[17,"XKB_KEY_amacron","","",null,null],[17,"XKB_KEY_iogonek","","",null,null],[17,"XKB_KEY_eabovedot","","",null,null],[17,"XKB_KEY_imacron","","",null,null],[17,"XKB_KEY_ncedilla","","",null,null],[17,"XKB_KEY_omacron","","",null,null],[17,"XKB_KEY_kcedilla","","",null,null],[17,"XKB_KEY_uogonek","","",null,null],[17,"XKB_KEY_utilde","","",null,null],[17,"XKB_KEY_umacron","","",null,null],[17,"XKB_KEY_Wcircumflex","","",null,null],[17,"XKB_KEY_wcircumflex","","",null,null],[17,"XKB_KEY_Ycircumflex","","",null,null],[17,"XKB_KEY_ycircumflex","","",null,null],[17,"XKB_KEY_Babovedot","","",null,null],[17,"XKB_KEY_babovedot","","",null,null],[17,"XKB_KEY_Dabovedot","","",null,null],[17,"XKB_KEY_dabovedot","","",null,null],[17,"XKB_KEY_Fabovedot","","",null,null],[17,"XKB_KEY_fabovedot","","",null,null],[17,"XKB_KEY_Mabovedot","","",null,null],[17,"XKB_KEY_mabovedot","","",null,null],[17,"XKB_KEY_Pabovedot","","",null,null],[17,"XKB_KEY_pabovedot","","",null,null],[17,"XKB_KEY_Sabovedot","","",null,null],[17,"XKB_KEY_sabovedot","","",null,null],[17,"XKB_KEY_Tabovedot","","",null,null],[17,"XKB_KEY_tabovedot","","",null,null],[17,"XKB_KEY_Wgrave","","",null,null],[17,"XKB_KEY_wgrave","","",null,null],[17,"XKB_KEY_Wacute","","",null,null],[17,"XKB_KEY_wacute","","",null,null],[17,"XKB_KEY_Wdiaeresis","","",null,null],[17,"XKB_KEY_wdiaeresis","","",null,null],[17,"XKB_KEY_Ygrave","","",null,null],[17,"XKB_KEY_ygrave","","",null,null],[17,"XKB_KEY_OE","","",null,null],[17,"XKB_KEY_oe","","",null,null],[17,"XKB_KEY_Ydiaeresis","","",null,null],[17,"XKB_KEY_overline","","",null,null],[17,"XKB_KEY_kana_fullstop","","",null,null],[17,"XKB_KEY_kana_openingbracket","","",null,null],[17,"XKB_KEY_kana_closingbracket","","",null,null],[17,"XKB_KEY_kana_comma","","",null,null],[17,"XKB_KEY_kana_conjunctive","","",null,null],[17,"XKB_KEY_kana_middledot","","",null,null],[17,"XKB_KEY_kana_WO","","",null,null],[17,"XKB_KEY_kana_a","","",null,null],[17,"XKB_KEY_kana_i","","",null,null],[17,"XKB_KEY_kana_u","","",null,null],[17,"XKB_KEY_kana_e","","",null,null],[17,"XKB_KEY_kana_o","","",null,null],[17,"XKB_KEY_kana_ya","","",null,null],[17,"XKB_KEY_kana_yu","","",null,null],[17,"XKB_KEY_kana_yo","","",null,null],[17,"XKB_KEY_kana_tsu","","",null,null],[17,"XKB_KEY_kana_tu","","",null,null],[17,"XKB_KEY_prolongedsound","","",null,null],[17,"XKB_KEY_kana_A","","",null,null],[17,"XKB_KEY_kana_I","","",null,null],[17,"XKB_KEY_kana_U","","",null,null],[17,"XKB_KEY_kana_E","","",null,null],[17,"XKB_KEY_kana_O","","",null,null],[17,"XKB_KEY_kana_KA","","",null,null],[17,"XKB_KEY_kana_KI","","",null,null],[17,"XKB_KEY_kana_KU","","",null,null],[17,"XKB_KEY_kana_KE","","",null,null],[17,"XKB_KEY_kana_KO","","",null,null],[17,"XKB_KEY_kana_SA","","",null,null],[17,"XKB_KEY_kana_SHI","","",null,null],[17,"XKB_KEY_kana_SU","","",null,null],[17,"XKB_KEY_kana_SE","","",null,null],[17,"XKB_KEY_kana_SO","","",null,null],[17,"XKB_KEY_kana_TA","","",null,null],[17,"XKB_KEY_kana_CHI","","",null,null],[17,"XKB_KEY_kana_TI","","",null,null],[17,"XKB_KEY_kana_TSU","","",null,null],[17,"XKB_KEY_kana_TU","","",null,null],[17,"XKB_KEY_kana_TE","","",null,null],[17,"XKB_KEY_kana_TO","","",null,null],[17,"XKB_KEY_kana_NA","","",null,null],[17,"XKB_KEY_kana_NI","","",null,null],[17,"XKB_KEY_kana_NU","","",null,null],[17,"XKB_KEY_kana_NE","","",null,null],[17,"XKB_KEY_kana_NO","","",null,null],[17,"XKB_KEY_kana_HA","","",null,null],[17,"XKB_KEY_kana_HI","","",null,null],[17,"XKB_KEY_kana_FU","","",null,null],[17,"XKB_KEY_kana_HU","","",null,null],[17,"XKB_KEY_kana_HE","","",null,null],[17,"XKB_KEY_kana_HO","","",null,null],[17,"XKB_KEY_kana_MA","","",null,null],[17,"XKB_KEY_kana_MI","","",null,null],[17,"XKB_KEY_kana_MU","","",null,null],[17,"XKB_KEY_kana_ME","","",null,null],[17,"XKB_KEY_kana_MO","","",null,null],[17,"XKB_KEY_kana_YA","","",null,null],[17,"XKB_KEY_kana_YU","","",null,null],[17,"XKB_KEY_kana_YO","","",null,null],[17,"XKB_KEY_kana_RA","","",null,null],[17,"XKB_KEY_kana_RI","","",null,null],[17,"XKB_KEY_kana_RU","","",null,null],[17,"XKB_KEY_kana_RE","","",null,null],[17,"XKB_KEY_kana_RO","","",null,null],[17,"XKB_KEY_kana_WA","","",null,null],[17,"XKB_KEY_kana_N","","",null,null],[17,"XKB_KEY_voicedsound","","",null,null],[17,"XKB_KEY_semivoicedsound","","",null,null],[17,"XKB_KEY_kana_switch","","",null,null],[17,"XKB_KEY_Farsi_0","","",null,null],[17,"XKB_KEY_Farsi_1","","",null,null],[17,"XKB_KEY_Farsi_2","","",null,null],[17,"XKB_KEY_Farsi_3","","",null,null],[17,"XKB_KEY_Farsi_4","","",null,null],[17,"XKB_KEY_Farsi_5","","",null,null],[17,"XKB_KEY_Farsi_6","","",null,null],[17,"XKB_KEY_Farsi_7","","",null,null],[17,"XKB_KEY_Farsi_8","","",null,null],[17,"XKB_KEY_Farsi_9","","",null,null],[17,"XKB_KEY_Arabic_percent","","",null,null],[17,"XKB_KEY_Arabic_superscript_alef","","",null,null],[17,"XKB_KEY_Arabic_tteh","","",null,null],[17,"XKB_KEY_Arabic_peh","","",null,null],[17,"XKB_KEY_Arabic_tcheh","","",null,null],[17,"XKB_KEY_Arabic_ddal","","",null,null],[17,"XKB_KEY_Arabic_rreh","","",null,null],[17,"XKB_KEY_Arabic_comma","","",null,null],[17,"XKB_KEY_Arabic_fullstop","","",null,null],[17,"XKB_KEY_Arabic_0","","",null,null],[17,"XKB_KEY_Arabic_1","","",null,null],[17,"XKB_KEY_Arabic_2","","",null,null],[17,"XKB_KEY_Arabic_3","","",null,null],[17,"XKB_KEY_Arabic_4","","",null,null],[17,"XKB_KEY_Arabic_5","","",null,null],[17,"XKB_KEY_Arabic_6","","",null,null],[17,"XKB_KEY_Arabic_7","","",null,null],[17,"XKB_KEY_Arabic_8","","",null,null],[17,"XKB_KEY_Arabic_9","","",null,null],[17,"XKB_KEY_Arabic_semicolon","","",null,null],[17,"XKB_KEY_Arabic_question_mark","","",null,null],[17,"XKB_KEY_Arabic_hamza","","",null,null],[17,"XKB_KEY_Arabic_maddaonalef","","",null,null],[17,"XKB_KEY_Arabic_hamzaonalef","","",null,null],[17,"XKB_KEY_Arabic_hamzaonwaw","","",null,null],[17,"XKB_KEY_Arabic_hamzaunderalef","","",null,null],[17,"XKB_KEY_Arabic_hamzaonyeh","","",null,null],[17,"XKB_KEY_Arabic_alef","","",null,null],[17,"XKB_KEY_Arabic_beh","","",null,null],[17,"XKB_KEY_Arabic_tehmarbuta","","",null,null],[17,"XKB_KEY_Arabic_teh","","",null,null],[17,"XKB_KEY_Arabic_theh","","",null,null],[17,"XKB_KEY_Arabic_jeem","","",null,null],[17,"XKB_KEY_Arabic_hah","","",null,null],[17,"XKB_KEY_Arabic_khah","","",null,null],[17,"XKB_KEY_Arabic_dal","","",null,null],[17,"XKB_KEY_Arabic_thal","","",null,null],[17,"XKB_KEY_Arabic_ra","","",null,null],[17,"XKB_KEY_Arabic_zain","","",null,null],[17,"XKB_KEY_Arabic_seen","","",null,null],[17,"XKB_KEY_Arabic_sheen","","",null,null],[17,"XKB_KEY_Arabic_sad","","",null,null],[17,"XKB_KEY_Arabic_dad","","",null,null],[17,"XKB_KEY_Arabic_tah","","",null,null],[17,"XKB_KEY_Arabic_zah","","",null,null],[17,"XKB_KEY_Arabic_ain","","",null,null],[17,"XKB_KEY_Arabic_ghain","","",null,null],[17,"XKB_KEY_Arabic_tatweel","","",null,null],[17,"XKB_KEY_Arabic_feh","","",null,null],[17,"XKB_KEY_Arabic_qaf","","",null,null],[17,"XKB_KEY_Arabic_kaf","","",null,null],[17,"XKB_KEY_Arabic_lam","","",null,null],[17,"XKB_KEY_Arabic_meem","","",null,null],[17,"XKB_KEY_Arabic_noon","","",null,null],[17,"XKB_KEY_Arabic_ha","","",null,null],[17,"XKB_KEY_Arabic_heh","","",null,null],[17,"XKB_KEY_Arabic_waw","","",null,null],[17,"XKB_KEY_Arabic_alefmaksura","","",null,null],[17,"XKB_KEY_Arabic_yeh","","",null,null],[17,"XKB_KEY_Arabic_fathatan","","",null,null],[17,"XKB_KEY_Arabic_dammatan","","",null,null],[17,"XKB_KEY_Arabic_kasratan","","",null,null],[17,"XKB_KEY_Arabic_fatha","","",null,null],[17,"XKB_KEY_Arabic_damma","","",null,null],[17,"XKB_KEY_Arabic_kasra","","",null,null],[17,"XKB_KEY_Arabic_shadda","","",null,null],[17,"XKB_KEY_Arabic_sukun","","",null,null],[17,"XKB_KEY_Arabic_madda_above","","",null,null],[17,"XKB_KEY_Arabic_hamza_above","","",null,null],[17,"XKB_KEY_Arabic_hamza_below","","",null,null],[17,"XKB_KEY_Arabic_jeh","","",null,null],[17,"XKB_KEY_Arabic_veh","","",null,null],[17,"XKB_KEY_Arabic_keheh","","",null,null],[17,"XKB_KEY_Arabic_gaf","","",null,null],[17,"XKB_KEY_Arabic_noon_ghunna","","",null,null],[17,"XKB_KEY_Arabic_heh_doachashmee","","",null,null],[17,"XKB_KEY_Farsi_yeh","","",null,null],[17,"XKB_KEY_Arabic_farsi_yeh","","",null,null],[17,"XKB_KEY_Arabic_yeh_baree","","",null,null],[17,"XKB_KEY_Arabic_heh_goal","","",null,null],[17,"XKB_KEY_Arabic_switch","","",null,null],[17,"XKB_KEY_Cyrillic_GHE_bar","","",null,null],[17,"XKB_KEY_Cyrillic_ghe_bar","","",null,null],[17,"XKB_KEY_Cyrillic_ZHE_descender","","",null,null],[17,"XKB_KEY_Cyrillic_zhe_descender","","",null,null],[17,"XKB_KEY_Cyrillic_KA_descender","","",null,null],[17,"XKB_KEY_Cyrillic_ka_descender","","",null,null],[17,"XKB_KEY_Cyrillic_KA_vertstroke","","",null,null],[17,"XKB_KEY_Cyrillic_ka_vertstroke","","",null,null],[17,"XKB_KEY_Cyrillic_EN_descender","","",null,null],[17,"XKB_KEY_Cyrillic_en_descender","","",null,null],[17,"XKB_KEY_Cyrillic_U_straight","","",null,null],[17,"XKB_KEY_Cyrillic_u_straight","","",null,null],[17,"XKB_KEY_Cyrillic_U_straight_bar","","",null,null],[17,"XKB_KEY_Cyrillic_u_straight_bar","","",null,null],[17,"XKB_KEY_Cyrillic_HA_descender","","",null,null],[17,"XKB_KEY_Cyrillic_ha_descender","","",null,null],[17,"XKB_KEY_Cyrillic_CHE_descender","","",null,null],[17,"XKB_KEY_Cyrillic_che_descender","","",null,null],[17,"XKB_KEY_Cyrillic_CHE_vertstroke","","",null,null],[17,"XKB_KEY_Cyrillic_che_vertstroke","","",null,null],[17,"XKB_KEY_Cyrillic_SHHA","","",null,null],[17,"XKB_KEY_Cyrillic_shha","","",null,null],[17,"XKB_KEY_Cyrillic_SCHWA","","",null,null],[17,"XKB_KEY_Cyrillic_schwa","","",null,null],[17,"XKB_KEY_Cyrillic_I_macron","","",null,null],[17,"XKB_KEY_Cyrillic_i_macron","","",null,null],[17,"XKB_KEY_Cyrillic_O_bar","","",null,null],[17,"XKB_KEY_Cyrillic_o_bar","","",null,null],[17,"XKB_KEY_Cyrillic_U_macron","","",null,null],[17,"XKB_KEY_Cyrillic_u_macron","","",null,null],[17,"XKB_KEY_Serbian_dje","","",null,null],[17,"XKB_KEY_Macedonia_gje","","",null,null],[17,"XKB_KEY_Cyrillic_io","","",null,null],[17,"XKB_KEY_Ukrainian_ie","","",null,null],[17,"XKB_KEY_Ukranian_je","","",null,null],[17,"XKB_KEY_Macedonia_dse","","",null,null],[17,"XKB_KEY_Ukrainian_i","","",null,null],[17,"XKB_KEY_Ukranian_i","","",null,null],[17,"XKB_KEY_Ukrainian_yi","","",null,null],[17,"XKB_KEY_Ukranian_yi","","",null,null],[17,"XKB_KEY_Cyrillic_je","","",null,null],[17,"XKB_KEY_Serbian_je","","",null,null],[17,"XKB_KEY_Cyrillic_lje","","",null,null],[17,"XKB_KEY_Serbian_lje","","",null,null],[17,"XKB_KEY_Cyrillic_nje","","",null,null],[17,"XKB_KEY_Serbian_nje","","",null,null],[17,"XKB_KEY_Serbian_tshe","","",null,null],[17,"XKB_KEY_Macedonia_kje","","",null,null],[17,"XKB_KEY_Ukrainian_ghe_with_upturn","","",null,null],[17,"XKB_KEY_Byelorussian_shortu","","",null,null],[17,"XKB_KEY_Cyrillic_dzhe","","",null,null],[17,"XKB_KEY_Serbian_dze","","",null,null],[17,"XKB_KEY_numerosign","","",null,null],[17,"XKB_KEY_Serbian_DJE","","",null,null],[17,"XKB_KEY_Macedonia_GJE","","",null,null],[17,"XKB_KEY_Cyrillic_IO","","",null,null],[17,"XKB_KEY_Ukrainian_IE","","",null,null],[17,"XKB_KEY_Ukranian_JE","","",null,null],[17,"XKB_KEY_Macedonia_DSE","","",null,null],[17,"XKB_KEY_Ukrainian_I","","",null,null],[17,"XKB_KEY_Ukranian_I","","",null,null],[17,"XKB_KEY_Ukrainian_YI","","",null,null],[17,"XKB_KEY_Ukranian_YI","","",null,null],[17,"XKB_KEY_Cyrillic_JE","","",null,null],[17,"XKB_KEY_Serbian_JE","","",null,null],[17,"XKB_KEY_Cyrillic_LJE","","",null,null],[17,"XKB_KEY_Serbian_LJE","","",null,null],[17,"XKB_KEY_Cyrillic_NJE","","",null,null],[17,"XKB_KEY_Serbian_NJE","","",null,null],[17,"XKB_KEY_Serbian_TSHE","","",null,null],[17,"XKB_KEY_Macedonia_KJE","","",null,null],[17,"XKB_KEY_Ukrainian_GHE_WITH_UPTURN","","",null,null],[17,"XKB_KEY_Byelorussian_SHORTU","","",null,null],[17,"XKB_KEY_Cyrillic_DZHE","","",null,null],[17,"XKB_KEY_Serbian_DZE","","",null,null],[17,"XKB_KEY_Cyrillic_yu","","",null,null],[17,"XKB_KEY_Cyrillic_a","","",null,null],[17,"XKB_KEY_Cyrillic_be","","",null,null],[17,"XKB_KEY_Cyrillic_tse","","",null,null],[17,"XKB_KEY_Cyrillic_de","","",null,null],[17,"XKB_KEY_Cyrillic_ie","","",null,null],[17,"XKB_KEY_Cyrillic_ef","","",null,null],[17,"XKB_KEY_Cyrillic_ghe","","",null,null],[17,"XKB_KEY_Cyrillic_ha","","",null,null],[17,"XKB_KEY_Cyrillic_i","","",null,null],[17,"XKB_KEY_Cyrillic_shorti","","",null,null],[17,"XKB_KEY_Cyrillic_ka","","",null,null],[17,"XKB_KEY_Cyrillic_el","","",null,null],[17,"XKB_KEY_Cyrillic_em","","",null,null],[17,"XKB_KEY_Cyrillic_en","","",null,null],[17,"XKB_KEY_Cyrillic_o","","",null,null],[17,"XKB_KEY_Cyrillic_pe","","",null,null],[17,"XKB_KEY_Cyrillic_ya","","",null,null],[17,"XKB_KEY_Cyrillic_er","","",null,null],[17,"XKB_KEY_Cyrillic_es","","",null,null],[17,"XKB_KEY_Cyrillic_te","","",null,null],[17,"XKB_KEY_Cyrillic_u","","",null,null],[17,"XKB_KEY_Cyrillic_zhe","","",null,null],[17,"XKB_KEY_Cyrillic_ve","","",null,null],[17,"XKB_KEY_Cyrillic_softsign","","",null,null],[17,"XKB_KEY_Cyrillic_yeru","","",null,null],[17,"XKB_KEY_Cyrillic_ze","","",null,null],[17,"XKB_KEY_Cyrillic_sha","","",null,null],[17,"XKB_KEY_Cyrillic_e","","",null,null],[17,"XKB_KEY_Cyrillic_shcha","","",null,null],[17,"XKB_KEY_Cyrillic_che","","",null,null],[17,"XKB_KEY_Cyrillic_hardsign","","",null,null],[17,"XKB_KEY_Cyrillic_YU","","",null,null],[17,"XKB_KEY_Cyrillic_A","","",null,null],[17,"XKB_KEY_Cyrillic_BE","","",null,null],[17,"XKB_KEY_Cyrillic_TSE","","",null,null],[17,"XKB_KEY_Cyrillic_DE","","",null,null],[17,"XKB_KEY_Cyrillic_IE","","",null,null],[17,"XKB_KEY_Cyrillic_EF","","",null,null],[17,"XKB_KEY_Cyrillic_GHE","","",null,null],[17,"XKB_KEY_Cyrillic_HA","","",null,null],[17,"XKB_KEY_Cyrillic_I","","",null,null],[17,"XKB_KEY_Cyrillic_SHORTI","","",null,null],[17,"XKB_KEY_Cyrillic_KA","","",null,null],[17,"XKB_KEY_Cyrillic_EL","","",null,null],[17,"XKB_KEY_Cyrillic_EM","","",null,null],[17,"XKB_KEY_Cyrillic_EN","","",null,null],[17,"XKB_KEY_Cyrillic_O","","",null,null],[17,"XKB_KEY_Cyrillic_PE","","",null,null],[17,"XKB_KEY_Cyrillic_YA","","",null,null],[17,"XKB_KEY_Cyrillic_ER","","",null,null],[17,"XKB_KEY_Cyrillic_ES","","",null,null],[17,"XKB_KEY_Cyrillic_TE","","",null,null],[17,"XKB_KEY_Cyrillic_U","","",null,null],[17,"XKB_KEY_Cyrillic_ZHE","","",null,null],[17,"XKB_KEY_Cyrillic_VE","","",null,null],[17,"XKB_KEY_Cyrillic_SOFTSIGN","","",null,null],[17,"XKB_KEY_Cyrillic_YERU","","",null,null],[17,"XKB_KEY_Cyrillic_ZE","","",null,null],[17,"XKB_KEY_Cyrillic_SHA","","",null,null],[17,"XKB_KEY_Cyrillic_E","","",null,null],[17,"XKB_KEY_Cyrillic_SHCHA","","",null,null],[17,"XKB_KEY_Cyrillic_CHE","","",null,null],[17,"XKB_KEY_Cyrillic_HARDSIGN","","",null,null],[17,"XKB_KEY_Greek_ALPHAaccent","","",null,null],[17,"XKB_KEY_Greek_EPSILONaccent","","",null,null],[17,"XKB_KEY_Greek_ETAaccent","","",null,null],[17,"XKB_KEY_Greek_IOTAaccent","","",null,null],[17,"XKB_KEY_Greek_IOTAdieresis","","",null,null],[17,"XKB_KEY_Greek_IOTAdiaeresis","","",null,null],[17,"XKB_KEY_Greek_OMICRONaccent","","",null,null],[17,"XKB_KEY_Greek_UPSILONaccent","","",null,null],[17,"XKB_KEY_Greek_UPSILONdieresis","","",null,null],[17,"XKB_KEY_Greek_OMEGAaccent","","",null,null],[17,"XKB_KEY_Greek_accentdieresis","","",null,null],[17,"XKB_KEY_Greek_horizbar","","",null,null],[17,"XKB_KEY_Greek_alphaaccent","","",null,null],[17,"XKB_KEY_Greek_epsilonaccent","","",null,null],[17,"XKB_KEY_Greek_etaaccent","","",null,null],[17,"XKB_KEY_Greek_iotaaccent","","",null,null],[17,"XKB_KEY_Greek_iotadieresis","","",null,null],[17,"XKB_KEY_Greek_iotaaccentdieresis","","",null,null],[17,"XKB_KEY_Greek_omicronaccent","","",null,null],[17,"XKB_KEY_Greek_upsilonaccent","","",null,null],[17,"XKB_KEY_Greek_upsilondieresis","","",null,null],[17,"XKB_KEY_Greek_upsilonaccentdieresis","","",null,null],[17,"XKB_KEY_Greek_omegaaccent","","",null,null],[17,"XKB_KEY_Greek_ALPHA","","",null,null],[17,"XKB_KEY_Greek_BETA","","",null,null],[17,"XKB_KEY_Greek_GAMMA","","",null,null],[17,"XKB_KEY_Greek_DELTA","","",null,null],[17,"XKB_KEY_Greek_EPSILON","","",null,null],[17,"XKB_KEY_Greek_ZETA","","",null,null],[17,"XKB_KEY_Greek_ETA","","",null,null],[17,"XKB_KEY_Greek_THETA","","",null,null],[17,"XKB_KEY_Greek_IOTA","","",null,null],[17,"XKB_KEY_Greek_KAPPA","","",null,null],[17,"XKB_KEY_Greek_LAMDA","","",null,null],[17,"XKB_KEY_Greek_LAMBDA","","",null,null],[17,"XKB_KEY_Greek_MU","","",null,null],[17,"XKB_KEY_Greek_NU","","",null,null],[17,"XKB_KEY_Greek_XI","","",null,null],[17,"XKB_KEY_Greek_OMICRON","","",null,null],[17,"XKB_KEY_Greek_PI","","",null,null],[17,"XKB_KEY_Greek_RHO","","",null,null],[17,"XKB_KEY_Greek_SIGMA","","",null,null],[17,"XKB_KEY_Greek_TAU","","",null,null],[17,"XKB_KEY_Greek_UPSILON","","",null,null],[17,"XKB_KEY_Greek_PHI","","",null,null],[17,"XKB_KEY_Greek_CHI","","",null,null],[17,"XKB_KEY_Greek_PSI","","",null,null],[17,"XKB_KEY_Greek_OMEGA","","",null,null],[17,"XKB_KEY_Greek_alpha","","",null,null],[17,"XKB_KEY_Greek_beta","","",null,null],[17,"XKB_KEY_Greek_gamma","","",null,null],[17,"XKB_KEY_Greek_delta","","",null,null],[17,"XKB_KEY_Greek_epsilon","","",null,null],[17,"XKB_KEY_Greek_zeta","","",null,null],[17,"XKB_KEY_Greek_eta","","",null,null],[17,"XKB_KEY_Greek_theta","","",null,null],[17,"XKB_KEY_Greek_iota","","",null,null],[17,"XKB_KEY_Greek_kappa","","",null,null],[17,"XKB_KEY_Greek_lamda","","",null,null],[17,"XKB_KEY_Greek_lambda","","",null,null],[17,"XKB_KEY_Greek_mu","","",null,null],[17,"XKB_KEY_Greek_nu","","",null,null],[17,"XKB_KEY_Greek_xi","","",null,null],[17,"XKB_KEY_Greek_omicron","","",null,null],[17,"XKB_KEY_Greek_pi","","",null,null],[17,"XKB_KEY_Greek_rho","","",null,null],[17,"XKB_KEY_Greek_sigma","","",null,null],[17,"XKB_KEY_Greek_finalsmallsigma","","",null,null],[17,"XKB_KEY_Greek_tau","","",null,null],[17,"XKB_KEY_Greek_upsilon","","",null,null],[17,"XKB_KEY_Greek_phi","","",null,null],[17,"XKB_KEY_Greek_chi","","",null,null],[17,"XKB_KEY_Greek_psi","","",null,null],[17,"XKB_KEY_Greek_omega","","",null,null],[17,"XKB_KEY_Greek_switch","","",null,null],[17,"XKB_KEY_leftradical","","",null,null],[17,"XKB_KEY_topleftradical","","",null,null],[17,"XKB_KEY_horizconnector","","",null,null],[17,"XKB_KEY_topintegral","","",null,null],[17,"XKB_KEY_botintegral","","",null,null],[17,"XKB_KEY_vertconnector","","",null,null],[17,"XKB_KEY_topleftsqbracket","","",null,null],[17,"XKB_KEY_botleftsqbracket","","",null,null],[17,"XKB_KEY_toprightsqbracket","","",null,null],[17,"XKB_KEY_botrightsqbracket","","",null,null],[17,"XKB_KEY_topleftparens","","",null,null],[17,"XKB_KEY_botleftparens","","",null,null],[17,"XKB_KEY_toprightparens","","",null,null],[17,"XKB_KEY_botrightparens","","",null,null],[17,"XKB_KEY_leftmiddlecurlybrace","","",null,null],[17,"XKB_KEY_rightmiddlecurlybrace","","",null,null],[17,"XKB_KEY_topleftsummation","","",null,null],[17,"XKB_KEY_botleftsummation","","",null,null],[17,"XKB_KEY_topvertsummationconnector","","",null,null],[17,"XKB_KEY_botvertsummationconnector","","",null,null],[17,"XKB_KEY_toprightsummation","","",null,null],[17,"XKB_KEY_botrightsummation","","",null,null],[17,"XKB_KEY_rightmiddlesummation","","",null,null],[17,"XKB_KEY_lessthanequal","","",null,null],[17,"XKB_KEY_notequal","","",null,null],[17,"XKB_KEY_greaterthanequal","","",null,null],[17,"XKB_KEY_integral","","",null,null],[17,"XKB_KEY_therefore","","",null,null],[17,"XKB_KEY_variation","","",null,null],[17,"XKB_KEY_infinity","","",null,null],[17,"XKB_KEY_nabla","","",null,null],[17,"XKB_KEY_approximate","","",null,null],[17,"XKB_KEY_similarequal","","",null,null],[17,"XKB_KEY_ifonlyif","","",null,null],[17,"XKB_KEY_implies","","",null,null],[17,"XKB_KEY_identical","","",null,null],[17,"XKB_KEY_radical","","",null,null],[17,"XKB_KEY_includedin","","",null,null],[17,"XKB_KEY_includes","","",null,null],[17,"XKB_KEY_intersection","","",null,null],[17,"XKB_KEY_union","","",null,null],[17,"XKB_KEY_logicaland","","",null,null],[17,"XKB_KEY_logicalor","","",null,null],[17,"XKB_KEY_partialderivative","","",null,null],[17,"XKB_KEY_function","","",null,null],[17,"XKB_KEY_leftarrow","","",null,null],[17,"XKB_KEY_uparrow","","",null,null],[17,"XKB_KEY_rightarrow","","",null,null],[17,"XKB_KEY_downarrow","","",null,null],[17,"XKB_KEY_blank","","",null,null],[17,"XKB_KEY_soliddiamond","","",null,null],[17,"XKB_KEY_checkerboard","","",null,null],[17,"XKB_KEY_ht","","",null,null],[17,"XKB_KEY_ff","","",null,null],[17,"XKB_KEY_cr","","",null,null],[17,"XKB_KEY_lf","","",null,null],[17,"XKB_KEY_nl","","",null,null],[17,"XKB_KEY_vt","","",null,null],[17,"XKB_KEY_lowrightcorner","","",null,null],[17,"XKB_KEY_uprightcorner","","",null,null],[17,"XKB_KEY_upleftcorner","","",null,null],[17,"XKB_KEY_lowleftcorner","","",null,null],[17,"XKB_KEY_crossinglines","","",null,null],[17,"XKB_KEY_horizlinescan1","","",null,null],[17,"XKB_KEY_horizlinescan3","","",null,null],[17,"XKB_KEY_horizlinescan5","","",null,null],[17,"XKB_KEY_horizlinescan7","","",null,null],[17,"XKB_KEY_horizlinescan9","","",null,null],[17,"XKB_KEY_leftt","","",null,null],[17,"XKB_KEY_rightt","","",null,null],[17,"XKB_KEY_bott","","",null,null],[17,"XKB_KEY_topt","","",null,null],[17,"XKB_KEY_vertbar","","",null,null],[17,"XKB_KEY_emspace","","",null,null],[17,"XKB_KEY_enspace","","",null,null],[17,"XKB_KEY_em3space","","",null,null],[17,"XKB_KEY_em4space","","",null,null],[17,"XKB_KEY_digitspace","","",null,null],[17,"XKB_KEY_punctspace","","",null,null],[17,"XKB_KEY_thinspace","","",null,null],[17,"XKB_KEY_hairspace","","",null,null],[17,"XKB_KEY_emdash","","",null,null],[17,"XKB_KEY_endash","","",null,null],[17,"XKB_KEY_signifblank","","",null,null],[17,"XKB_KEY_ellipsis","","",null,null],[17,"XKB_KEY_doubbaselinedot","","",null,null],[17,"XKB_KEY_onethird","","",null,null],[17,"XKB_KEY_twothirds","","",null,null],[17,"XKB_KEY_onefifth","","",null,null],[17,"XKB_KEY_twofifths","","",null,null],[17,"XKB_KEY_threefifths","","",null,null],[17,"XKB_KEY_fourfifths","","",null,null],[17,"XKB_KEY_onesixth","","",null,null],[17,"XKB_KEY_fivesixths","","",null,null],[17,"XKB_KEY_careof","","",null,null],[17,"XKB_KEY_figdash","","",null,null],[17,"XKB_KEY_leftanglebracket","","",null,null],[17,"XKB_KEY_decimalpoint","","",null,null],[17,"XKB_KEY_rightanglebracket","","",null,null],[17,"XKB_KEY_marker","","",null,null],[17,"XKB_KEY_oneeighth","","",null,null],[17,"XKB_KEY_threeeighths","","",null,null],[17,"XKB_KEY_fiveeighths","","",null,null],[17,"XKB_KEY_seveneighths","","",null,null],[17,"XKB_KEY_trademark","","",null,null],[17,"XKB_KEY_signaturemark","","",null,null],[17,"XKB_KEY_trademarkincircle","","",null,null],[17,"XKB_KEY_leftopentriangle","","",null,null],[17,"XKB_KEY_rightopentriangle","","",null,null],[17,"XKB_KEY_emopencircle","","",null,null],[17,"XKB_KEY_emopenrectangle","","",null,null],[17,"XKB_KEY_leftsinglequotemark","","",null,null],[17,"XKB_KEY_rightsinglequotemark","","",null,null],[17,"XKB_KEY_leftdoublequotemark","","",null,null],[17,"XKB_KEY_rightdoublequotemark","","",null,null],[17,"XKB_KEY_prescription","","",null,null],[17,"XKB_KEY_permille","","",null,null],[17,"XKB_KEY_minutes","","",null,null],[17,"XKB_KEY_seconds","","",null,null],[17,"XKB_KEY_latincross","","",null,null],[17,"XKB_KEY_hexagram","","",null,null],[17,"XKB_KEY_filledrectbullet","","",null,null],[17,"XKB_KEY_filledlefttribullet","","",null,null],[17,"XKB_KEY_filledrighttribullet","","",null,null],[17,"XKB_KEY_emfilledcircle","","",null,null],[17,"XKB_KEY_emfilledrect","","",null,null],[17,"XKB_KEY_enopencircbullet","","",null,null],[17,"XKB_KEY_enopensquarebullet","","",null,null],[17,"XKB_KEY_openrectbullet","","",null,null],[17,"XKB_KEY_opentribulletup","","",null,null],[17,"XKB_KEY_opentribulletdown","","",null,null],[17,"XKB_KEY_openstar","","",null,null],[17,"XKB_KEY_enfilledcircbullet","","",null,null],[17,"XKB_KEY_enfilledsqbullet","","",null,null],[17,"XKB_KEY_filledtribulletup","","",null,null],[17,"XKB_KEY_filledtribulletdown","","",null,null],[17,"XKB_KEY_leftpointer","","",null,null],[17,"XKB_KEY_rightpointer","","",null,null],[17,"XKB_KEY_club","","",null,null],[17,"XKB_KEY_diamond","","",null,null],[17,"XKB_KEY_heart","","",null,null],[17,"XKB_KEY_maltesecross","","",null,null],[17,"XKB_KEY_dagger","","",null,null],[17,"XKB_KEY_doubledagger","","",null,null],[17,"XKB_KEY_checkmark","","",null,null],[17,"XKB_KEY_ballotcross","","",null,null],[17,"XKB_KEY_musicalsharp","","",null,null],[17,"XKB_KEY_musicalflat","","",null,null],[17,"XKB_KEY_malesymbol","","",null,null],[17,"XKB_KEY_femalesymbol","","",null,null],[17,"XKB_KEY_telephone","","",null,null],[17,"XKB_KEY_telephonerecorder","","",null,null],[17,"XKB_KEY_phonographcopyright","","",null,null],[17,"XKB_KEY_caret","","",null,null],[17,"XKB_KEY_singlelowquotemark","","",null,null],[17,"XKB_KEY_doublelowquotemark","","",null,null],[17,"XKB_KEY_cursor","","",null,null],[17,"XKB_KEY_leftcaret","","",null,null],[17,"XKB_KEY_rightcaret","","",null,null],[17,"XKB_KEY_downcaret","","",null,null],[17,"XKB_KEY_upcaret","","",null,null],[17,"XKB_KEY_overbar","","",null,null],[17,"XKB_KEY_downtack","","",null,null],[17,"XKB_KEY_upshoe","","",null,null],[17,"XKB_KEY_downstile","","",null,null],[17,"XKB_KEY_underbar","","",null,null],[17,"XKB_KEY_jot","","",null,null],[17,"XKB_KEY_quad","","",null,null],[17,"XKB_KEY_uptack","","",null,null],[17,"XKB_KEY_circle","","",null,null],[17,"XKB_KEY_upstile","","",null,null],[17,"XKB_KEY_downshoe","","",null,null],[17,"XKB_KEY_rightshoe","","",null,null],[17,"XKB_KEY_leftshoe","","",null,null],[17,"XKB_KEY_lefttack","","",null,null],[17,"XKB_KEY_righttack","","",null,null],[17,"XKB_KEY_hebrew_doublelowline","","",null,null],[17,"XKB_KEY_hebrew_aleph","","",null,null],[17,"XKB_KEY_hebrew_bet","","",null,null],[17,"XKB_KEY_hebrew_beth","","",null,null],[17,"XKB_KEY_hebrew_gimel","","",null,null],[17,"XKB_KEY_hebrew_gimmel","","",null,null],[17,"XKB_KEY_hebrew_dalet","","",null,null],[17,"XKB_KEY_hebrew_daleth","","",null,null],[17,"XKB_KEY_hebrew_he","","",null,null],[17,"XKB_KEY_hebrew_waw","","",null,null],[17,"XKB_KEY_hebrew_zain","","",null,null],[17,"XKB_KEY_hebrew_zayin","","",null,null],[17,"XKB_KEY_hebrew_chet","","",null,null],[17,"XKB_KEY_hebrew_het","","",null,null],[17,"XKB_KEY_hebrew_tet","","",null,null],[17,"XKB_KEY_hebrew_teth","","",null,null],[17,"XKB_KEY_hebrew_yod","","",null,null],[17,"XKB_KEY_hebrew_finalkaph","","",null,null],[17,"XKB_KEY_hebrew_kaph","","",null,null],[17,"XKB_KEY_hebrew_lamed","","",null,null],[17,"XKB_KEY_hebrew_finalmem","","",null,null],[17,"XKB_KEY_hebrew_mem","","",null,null],[17,"XKB_KEY_hebrew_finalnun","","",null,null],[17,"XKB_KEY_hebrew_nun","","",null,null],[17,"XKB_KEY_hebrew_samech","","",null,null],[17,"XKB_KEY_hebrew_samekh","","",null,null],[17,"XKB_KEY_hebrew_ayin","","",null,null],[17,"XKB_KEY_hebrew_finalpe","","",null,null],[17,"XKB_KEY_hebrew_pe","","",null,null],[17,"XKB_KEY_hebrew_finalzade","","",null,null],[17,"XKB_KEY_hebrew_finalzadi","","",null,null],[17,"XKB_KEY_hebrew_zade","","",null,null],[17,"XKB_KEY_hebrew_zadi","","",null,null],[17,"XKB_KEY_hebrew_qoph","","",null,null],[17,"XKB_KEY_hebrew_kuf","","",null,null],[17,"XKB_KEY_hebrew_resh","","",null,null],[17,"XKB_KEY_hebrew_shin","","",null,null],[17,"XKB_KEY_hebrew_taw","","",null,null],[17,"XKB_KEY_hebrew_taf","","",null,null],[17,"XKB_KEY_Hebrew_switch","","",null,null],[17,"XKB_KEY_Thai_kokai","","",null,null],[17,"XKB_KEY_Thai_khokhai","","",null,null],[17,"XKB_KEY_Thai_khokhuat","","",null,null],[17,"XKB_KEY_Thai_khokhwai","","",null,null],[17,"XKB_KEY_Thai_khokhon","","",null,null],[17,"XKB_KEY_Thai_khorakhang","","",null,null],[17,"XKB_KEY_Thai_ngongu","","",null,null],[17,"XKB_KEY_Thai_chochan","","",null,null],[17,"XKB_KEY_Thai_choching","","",null,null],[17,"XKB_KEY_Thai_chochang","","",null,null],[17,"XKB_KEY_Thai_soso","","",null,null],[17,"XKB_KEY_Thai_chochoe","","",null,null],[17,"XKB_KEY_Thai_yoying","","",null,null],[17,"XKB_KEY_Thai_dochada","","",null,null],[17,"XKB_KEY_Thai_topatak","","",null,null],[17,"XKB_KEY_Thai_thothan","","",null,null],[17,"XKB_KEY_Thai_thonangmontho","","",null,null],[17,"XKB_KEY_Thai_thophuthao","","",null,null],[17,"XKB_KEY_Thai_nonen","","",null,null],[17,"XKB_KEY_Thai_dodek","","",null,null],[17,"XKB_KEY_Thai_totao","","",null,null],[17,"XKB_KEY_Thai_thothung","","",null,null],[17,"XKB_KEY_Thai_thothahan","","",null,null],[17,"XKB_KEY_Thai_thothong","","",null,null],[17,"XKB_KEY_Thai_nonu","","",null,null],[17,"XKB_KEY_Thai_bobaimai","","",null,null],[17,"XKB_KEY_Thai_popla","","",null,null],[17,"XKB_KEY_Thai_phophung","","",null,null],[17,"XKB_KEY_Thai_fofa","","",null,null],[17,"XKB_KEY_Thai_phophan","","",null,null],[17,"XKB_KEY_Thai_fofan","","",null,null],[17,"XKB_KEY_Thai_phosamphao","","",null,null],[17,"XKB_KEY_Thai_moma","","",null,null],[17,"XKB_KEY_Thai_yoyak","","",null,null],[17,"XKB_KEY_Thai_rorua","","",null,null],[17,"XKB_KEY_Thai_ru","","",null,null],[17,"XKB_KEY_Thai_loling","","",null,null],[17,"XKB_KEY_Thai_lu","","",null,null],[17,"XKB_KEY_Thai_wowaen","","",null,null],[17,"XKB_KEY_Thai_sosala","","",null,null],[17,"XKB_KEY_Thai_sorusi","","",null,null],[17,"XKB_KEY_Thai_sosua","","",null,null],[17,"XKB_KEY_Thai_hohip","","",null,null],[17,"XKB_KEY_Thai_lochula","","",null,null],[17,"XKB_KEY_Thai_oang","","",null,null],[17,"XKB_KEY_Thai_honokhuk","","",null,null],[17,"XKB_KEY_Thai_paiyannoi","","",null,null],[17,"XKB_KEY_Thai_saraa","","",null,null],[17,"XKB_KEY_Thai_maihanakat","","",null,null],[17,"XKB_KEY_Thai_saraaa","","",null,null],[17,"XKB_KEY_Thai_saraam","","",null,null],[17,"XKB_KEY_Thai_sarai","","",null,null],[17,"XKB_KEY_Thai_saraii","","",null,null],[17,"XKB_KEY_Thai_saraue","","",null,null],[17,"XKB_KEY_Thai_sarauee","","",null,null],[17,"XKB_KEY_Thai_sarau","","",null,null],[17,"XKB_KEY_Thai_sarauu","","",null,null],[17,"XKB_KEY_Thai_phinthu","","",null,null],[17,"XKB_KEY_Thai_maihanakat_maitho","","",null,null],[17,"XKB_KEY_Thai_baht","","",null,null],[17,"XKB_KEY_Thai_sarae","","",null,null],[17,"XKB_KEY_Thai_saraae","","",null,null],[17,"XKB_KEY_Thai_sarao","","",null,null],[17,"XKB_KEY_Thai_saraaimaimuan","","",null,null],[17,"XKB_KEY_Thai_saraaimaimalai","","",null,null],[17,"XKB_KEY_Thai_lakkhangyao","","",null,null],[17,"XKB_KEY_Thai_maiyamok","","",null,null],[17,"XKB_KEY_Thai_maitaikhu","","",null,null],[17,"XKB_KEY_Thai_maiek","","",null,null],[17,"XKB_KEY_Thai_maitho","","",null,null],[17,"XKB_KEY_Thai_maitri","","",null,null],[17,"XKB_KEY_Thai_maichattawa","","",null,null],[17,"XKB_KEY_Thai_thanthakhat","","",null,null],[17,"XKB_KEY_Thai_nikhahit","","",null,null],[17,"XKB_KEY_Thai_leksun","","",null,null],[17,"XKB_KEY_Thai_leknung","","",null,null],[17,"XKB_KEY_Thai_leksong","","",null,null],[17,"XKB_KEY_Thai_leksam","","",null,null],[17,"XKB_KEY_Thai_leksi","","",null,null],[17,"XKB_KEY_Thai_lekha","","",null,null],[17,"XKB_KEY_Thai_lekhok","","",null,null],[17,"XKB_KEY_Thai_lekchet","","",null,null],[17,"XKB_KEY_Thai_lekpaet","","",null,null],[17,"XKB_KEY_Thai_lekkao","","",null,null],[17,"XKB_KEY_Hangul","","",null,null],[17,"XKB_KEY_Hangul_Start","","",null,null],[17,"XKB_KEY_Hangul_End","","",null,null],[17,"XKB_KEY_Hangul_Hanja","","",null,null],[17,"XKB_KEY_Hangul_Jamo","","",null,null],[17,"XKB_KEY_Hangul_Romaja","","",null,null],[17,"XKB_KEY_Hangul_Codeinput","","",null,null],[17,"XKB_KEY_Hangul_Jeonja","","",null,null],[17,"XKB_KEY_Hangul_Banja","","",null,null],[17,"XKB_KEY_Hangul_PreHanja","","",null,null],[17,"XKB_KEY_Hangul_PostHanja","","",null,null],[17,"XKB_KEY_Hangul_SingleCandidate","","",null,null],[17,"XKB_KEY_Hangul_MultipleCandidate","","",null,null],[17,"XKB_KEY_Hangul_PreviousCandidate","","",null,null],[17,"XKB_KEY_Hangul_Special","","",null,null],[17,"XKB_KEY_Hangul_switch","","",null,null],[17,"XKB_KEY_Hangul_Kiyeog","","",null,null],[17,"XKB_KEY_Hangul_SsangKiyeog","","",null,null],[17,"XKB_KEY_Hangul_KiyeogSios","","",null,null],[17,"XKB_KEY_Hangul_Nieun","","",null,null],[17,"XKB_KEY_Hangul_NieunJieuj","","",null,null],[17,"XKB_KEY_Hangul_NieunHieuh","","",null,null],[17,"XKB_KEY_Hangul_Dikeud","","",null,null],[17,"XKB_KEY_Hangul_SsangDikeud","","",null,null],[17,"XKB_KEY_Hangul_Rieul","","",null,null],[17,"XKB_KEY_Hangul_RieulKiyeog","","",null,null],[17,"XKB_KEY_Hangul_RieulMieum","","",null,null],[17,"XKB_KEY_Hangul_RieulPieub","","",null,null],[17,"XKB_KEY_Hangul_RieulSios","","",null,null],[17,"XKB_KEY_Hangul_RieulTieut","","",null,null],[17,"XKB_KEY_Hangul_RieulPhieuf","","",null,null],[17,"XKB_KEY_Hangul_RieulHieuh","","",null,null],[17,"XKB_KEY_Hangul_Mieum","","",null,null],[17,"XKB_KEY_Hangul_Pieub","","",null,null],[17,"XKB_KEY_Hangul_SsangPieub","","",null,null],[17,"XKB_KEY_Hangul_PieubSios","","",null,null],[17,"XKB_KEY_Hangul_Sios","","",null,null],[17,"XKB_KEY_Hangul_SsangSios","","",null,null],[17,"XKB_KEY_Hangul_Ieung","","",null,null],[17,"XKB_KEY_Hangul_Jieuj","","",null,null],[17,"XKB_KEY_Hangul_SsangJieuj","","",null,null],[17,"XKB_KEY_Hangul_Cieuc","","",null,null],[17,"XKB_KEY_Hangul_Khieuq","","",null,null],[17,"XKB_KEY_Hangul_Tieut","","",null,null],[17,"XKB_KEY_Hangul_Phieuf","","",null,null],[17,"XKB_KEY_Hangul_Hieuh","","",null,null],[17,"XKB_KEY_Hangul_A","","",null,null],[17,"XKB_KEY_Hangul_AE","","",null,null],[17,"XKB_KEY_Hangul_YA","","",null,null],[17,"XKB_KEY_Hangul_YAE","","",null,null],[17,"XKB_KEY_Hangul_EO","","",null,null],[17,"XKB_KEY_Hangul_E","","",null,null],[17,"XKB_KEY_Hangul_YEO","","",null,null],[17,"XKB_KEY_Hangul_YE","","",null,null],[17,"XKB_KEY_Hangul_O","","",null,null],[17,"XKB_KEY_Hangul_WA","","",null,null],[17,"XKB_KEY_Hangul_WAE","","",null,null],[17,"XKB_KEY_Hangul_OE","","",null,null],[17,"XKB_KEY_Hangul_YO","","",null,null],[17,"XKB_KEY_Hangul_U","","",null,null],[17,"XKB_KEY_Hangul_WEO","","",null,null],[17,"XKB_KEY_Hangul_WE","","",null,null],[17,"XKB_KEY_Hangul_WI","","",null,null],[17,"XKB_KEY_Hangul_YU","","",null,null],[17,"XKB_KEY_Hangul_EU","","",null,null],[17,"XKB_KEY_Hangul_YI","","",null,null],[17,"XKB_KEY_Hangul_I","","",null,null],[17,"XKB_KEY_Hangul_J_Kiyeog","","",null,null],[17,"XKB_KEY_Hangul_J_SsangKiyeog","","",null,null],[17,"XKB_KEY_Hangul_J_KiyeogSios","","",null,null],[17,"XKB_KEY_Hangul_J_Nieun","","",null,null],[17,"XKB_KEY_Hangul_J_NieunJieuj","","",null,null],[17,"XKB_KEY_Hangul_J_NieunHieuh","","",null,null],[17,"XKB_KEY_Hangul_J_Dikeud","","",null,null],[17,"XKB_KEY_Hangul_J_Rieul","","",null,null],[17,"XKB_KEY_Hangul_J_RieulKiyeog","","",null,null],[17,"XKB_KEY_Hangul_J_RieulMieum","","",null,null],[17,"XKB_KEY_Hangul_J_RieulPieub","","",null,null],[17,"XKB_KEY_Hangul_J_RieulSios","","",null,null],[17,"XKB_KEY_Hangul_J_RieulTieut","","",null,null],[17,"XKB_KEY_Hangul_J_RieulPhieuf","","",null,null],[17,"XKB_KEY_Hangul_J_RieulHieuh","","",null,null],[17,"XKB_KEY_Hangul_J_Mieum","","",null,null],[17,"XKB_KEY_Hangul_J_Pieub","","",null,null],[17,"XKB_KEY_Hangul_J_PieubSios","","",null,null],[17,"XKB_KEY_Hangul_J_Sios","","",null,null],[17,"XKB_KEY_Hangul_J_SsangSios","","",null,null],[17,"XKB_KEY_Hangul_J_Ieung","","",null,null],[17,"XKB_KEY_Hangul_J_Jieuj","","",null,null],[17,"XKB_KEY_Hangul_J_Cieuc","","",null,null],[17,"XKB_KEY_Hangul_J_Khieuq","","",null,null],[17,"XKB_KEY_Hangul_J_Tieut","","",null,null],[17,"XKB_KEY_Hangul_J_Phieuf","","",null,null],[17,"XKB_KEY_Hangul_J_Hieuh","","",null,null],[17,"XKB_KEY_Hangul_RieulYeorinHieuh","","",null,null],[17,"XKB_KEY_Hangul_SunkyeongeumMieum","","",null,null],[17,"XKB_KEY_Hangul_SunkyeongeumPieub","","",null,null],[17,"XKB_KEY_Hangul_PanSios","","",null,null],[17,"XKB_KEY_Hangul_KkogjiDalrinIeung","","",null,null],[17,"XKB_KEY_Hangul_SunkyeongeumPhieuf","","",null,null],[17,"XKB_KEY_Hangul_YeorinHieuh","","",null,null],[17,"XKB_KEY_Hangul_AraeA","","",null,null],[17,"XKB_KEY_Hangul_AraeAE","","",null,null],[17,"XKB_KEY_Hangul_J_PanSios","","",null,null],[17,"XKB_KEY_Hangul_J_KkogjiDalrinIeung","","",null,null],[17,"XKB_KEY_Hangul_J_YeorinHieuh","","",null,null],[17,"XKB_KEY_Korean_Won","","",null,null],[17,"XKB_KEY_Armenian_ligature_ew","","",null,null],[17,"XKB_KEY_Armenian_full_stop","","",null,null],[17,"XKB_KEY_Armenian_verjaket","","",null,null],[17,"XKB_KEY_Armenian_separation_mark","","",null,null],[17,"XKB_KEY_Armenian_but","","",null,null],[17,"XKB_KEY_Armenian_hyphen","","",null,null],[17,"XKB_KEY_Armenian_yentamna","","",null,null],[17,"XKB_KEY_Armenian_exclam","","",null,null],[17,"XKB_KEY_Armenian_amanak","","",null,null],[17,"XKB_KEY_Armenian_accent","","",null,null],[17,"XKB_KEY_Armenian_shesht","","",null,null],[17,"XKB_KEY_Armenian_question","","",null,null],[17,"XKB_KEY_Armenian_paruyk","","",null,null],[17,"XKB_KEY_Armenian_AYB","","",null,null],[17,"XKB_KEY_Armenian_ayb","","",null,null],[17,"XKB_KEY_Armenian_BEN","","",null,null],[17,"XKB_KEY_Armenian_ben","","",null,null],[17,"XKB_KEY_Armenian_GIM","","",null,null],[17,"XKB_KEY_Armenian_gim","","",null,null],[17,"XKB_KEY_Armenian_DA","","",null,null],[17,"XKB_KEY_Armenian_da","","",null,null],[17,"XKB_KEY_Armenian_YECH","","",null,null],[17,"XKB_KEY_Armenian_yech","","",null,null],[17,"XKB_KEY_Armenian_ZA","","",null,null],[17,"XKB_KEY_Armenian_za","","",null,null],[17,"XKB_KEY_Armenian_E","","",null,null],[17,"XKB_KEY_Armenian_e","","",null,null],[17,"XKB_KEY_Armenian_AT","","",null,null],[17,"XKB_KEY_Armenian_at","","",null,null],[17,"XKB_KEY_Armenian_TO","","",null,null],[17,"XKB_KEY_Armenian_to","","",null,null],[17,"XKB_KEY_Armenian_ZHE","","",null,null],[17,"XKB_KEY_Armenian_zhe","","",null,null],[17,"XKB_KEY_Armenian_INI","","",null,null],[17,"XKB_KEY_Armenian_ini","","",null,null],[17,"XKB_KEY_Armenian_LYUN","","",null,null],[17,"XKB_KEY_Armenian_lyun","","",null,null],[17,"XKB_KEY_Armenian_KHE","","",null,null],[17,"XKB_KEY_Armenian_khe","","",null,null],[17,"XKB_KEY_Armenian_TSA","","",null,null],[17,"XKB_KEY_Armenian_tsa","","",null,null],[17,"XKB_KEY_Armenian_KEN","","",null,null],[17,"XKB_KEY_Armenian_ken","","",null,null],[17,"XKB_KEY_Armenian_HO","","",null,null],[17,"XKB_KEY_Armenian_ho","","",null,null],[17,"XKB_KEY_Armenian_DZA","","",null,null],[17,"XKB_KEY_Armenian_dza","","",null,null],[17,"XKB_KEY_Armenian_GHAT","","",null,null],[17,"XKB_KEY_Armenian_ghat","","",null,null],[17,"XKB_KEY_Armenian_TCHE","","",null,null],[17,"XKB_KEY_Armenian_tche","","",null,null],[17,"XKB_KEY_Armenian_MEN","","",null,null],[17,"XKB_KEY_Armenian_men","","",null,null],[17,"XKB_KEY_Armenian_HI","","",null,null],[17,"XKB_KEY_Armenian_hi","","",null,null],[17,"XKB_KEY_Armenian_NU","","",null,null],[17,"XKB_KEY_Armenian_nu","","",null,null],[17,"XKB_KEY_Armenian_SHA","","",null,null],[17,"XKB_KEY_Armenian_sha","","",null,null],[17,"XKB_KEY_Armenian_VO","","",null,null],[17,"XKB_KEY_Armenian_vo","","",null,null],[17,"XKB_KEY_Armenian_CHA","","",null,null],[17,"XKB_KEY_Armenian_cha","","",null,null],[17,"XKB_KEY_Armenian_PE","","",null,null],[17,"XKB_KEY_Armenian_pe","","",null,null],[17,"XKB_KEY_Armenian_JE","","",null,null],[17,"XKB_KEY_Armenian_je","","",null,null],[17,"XKB_KEY_Armenian_RA","","",null,null],[17,"XKB_KEY_Armenian_ra","","",null,null],[17,"XKB_KEY_Armenian_SE","","",null,null],[17,"XKB_KEY_Armenian_se","","",null,null],[17,"XKB_KEY_Armenian_VEV","","",null,null],[17,"XKB_KEY_Armenian_vev","","",null,null],[17,"XKB_KEY_Armenian_TYUN","","",null,null],[17,"XKB_KEY_Armenian_tyun","","",null,null],[17,"XKB_KEY_Armenian_RE","","",null,null],[17,"XKB_KEY_Armenian_re","","",null,null],[17,"XKB_KEY_Armenian_TSO","","",null,null],[17,"XKB_KEY_Armenian_tso","","",null,null],[17,"XKB_KEY_Armenian_VYUN","","",null,null],[17,"XKB_KEY_Armenian_vyun","","",null,null],[17,"XKB_KEY_Armenian_PYUR","","",null,null],[17,"XKB_KEY_Armenian_pyur","","",null,null],[17,"XKB_KEY_Armenian_KE","","",null,null],[17,"XKB_KEY_Armenian_ke","","",null,null],[17,"XKB_KEY_Armenian_O","","",null,null],[17,"XKB_KEY_Armenian_o","","",null,null],[17,"XKB_KEY_Armenian_FE","","",null,null],[17,"XKB_KEY_Armenian_fe","","",null,null],[17,"XKB_KEY_Armenian_apostrophe","","",null,null],[17,"XKB_KEY_Georgian_an","","",null,null],[17,"XKB_KEY_Georgian_ban","","",null,null],[17,"XKB_KEY_Georgian_gan","","",null,null],[17,"XKB_KEY_Georgian_don","","",null,null],[17,"XKB_KEY_Georgian_en","","",null,null],[17,"XKB_KEY_Georgian_vin","","",null,null],[17,"XKB_KEY_Georgian_zen","","",null,null],[17,"XKB_KEY_Georgian_tan","","",null,null],[17,"XKB_KEY_Georgian_in","","",null,null],[17,"XKB_KEY_Georgian_kan","","",null,null],[17,"XKB_KEY_Georgian_las","","",null,null],[17,"XKB_KEY_Georgian_man","","",null,null],[17,"XKB_KEY_Georgian_nar","","",null,null],[17,"XKB_KEY_Georgian_on","","",null,null],[17,"XKB_KEY_Georgian_par","","",null,null],[17,"XKB_KEY_Georgian_zhar","","",null,null],[17,"XKB_KEY_Georgian_rae","","",null,null],[17,"XKB_KEY_Georgian_san","","",null,null],[17,"XKB_KEY_Georgian_tar","","",null,null],[17,"XKB_KEY_Georgian_un","","",null,null],[17,"XKB_KEY_Georgian_phar","","",null,null],[17,"XKB_KEY_Georgian_khar","","",null,null],[17,"XKB_KEY_Georgian_ghan","","",null,null],[17,"XKB_KEY_Georgian_qar","","",null,null],[17,"XKB_KEY_Georgian_shin","","",null,null],[17,"XKB_KEY_Georgian_chin","","",null,null],[17,"XKB_KEY_Georgian_can","","",null,null],[17,"XKB_KEY_Georgian_jil","","",null,null],[17,"XKB_KEY_Georgian_cil","","",null,null],[17,"XKB_KEY_Georgian_char","","",null,null],[17,"XKB_KEY_Georgian_xan","","",null,null],[17,"XKB_KEY_Georgian_jhan","","",null,null],[17,"XKB_KEY_Georgian_hae","","",null,null],[17,"XKB_KEY_Georgian_he","","",null,null],[17,"XKB_KEY_Georgian_hie","","",null,null],[17,"XKB_KEY_Georgian_we","","",null,null],[17,"XKB_KEY_Georgian_har","","",null,null],[17,"XKB_KEY_Georgian_hoe","","",null,null],[17,"XKB_KEY_Georgian_fi","","",null,null],[17,"XKB_KEY_Xabovedot","","",null,null],[17,"XKB_KEY_Ibreve","","",null,null],[17,"XKB_KEY_Zstroke","","",null,null],[17,"XKB_KEY_Gcaron","","",null,null],[17,"XKB_KEY_Ocaron","","",null,null],[17,"XKB_KEY_Obarred","","",null,null],[17,"XKB_KEY_xabovedot","","",null,null],[17,"XKB_KEY_ibreve","","",null,null],[17,"XKB_KEY_zstroke","","",null,null],[17,"XKB_KEY_gcaron","","",null,null],[17,"XKB_KEY_ocaron","","",null,null],[17,"XKB_KEY_obarred","","",null,null],[17,"XKB_KEY_SCHWA","","",null,null],[17,"XKB_KEY_schwa","","",null,null],[17,"XKB_KEY_EZH","","",null,null],[17,"XKB_KEY_ezh","","",null,null],[17,"XKB_KEY_Lbelowdot","","",null,null],[17,"XKB_KEY_lbelowdot","","",null,null],[17,"XKB_KEY_Abelowdot","","",null,null],[17,"XKB_KEY_abelowdot","","",null,null],[17,"XKB_KEY_Ahook","","",null,null],[17,"XKB_KEY_ahook","","",null,null],[17,"XKB_KEY_Acircumflexacute","","",null,null],[17,"XKB_KEY_acircumflexacute","","",null,null],[17,"XKB_KEY_Acircumflexgrave","","",null,null],[17,"XKB_KEY_acircumflexgrave","","",null,null],[17,"XKB_KEY_Acircumflexhook","","",null,null],[17,"XKB_KEY_acircumflexhook","","",null,null],[17,"XKB_KEY_Acircumflextilde","","",null,null],[17,"XKB_KEY_acircumflextilde","","",null,null],[17,"XKB_KEY_Acircumflexbelowdot","","",null,null],[17,"XKB_KEY_acircumflexbelowdot","","",null,null],[17,"XKB_KEY_Abreveacute","","",null,null],[17,"XKB_KEY_abreveacute","","",null,null],[17,"XKB_KEY_Abrevegrave","","",null,null],[17,"XKB_KEY_abrevegrave","","",null,null],[17,"XKB_KEY_Abrevehook","","",null,null],[17,"XKB_KEY_abrevehook","","",null,null],[17,"XKB_KEY_Abrevetilde","","",null,null],[17,"XKB_KEY_abrevetilde","","",null,null],[17,"XKB_KEY_Abrevebelowdot","","",null,null],[17,"XKB_KEY_abrevebelowdot","","",null,null],[17,"XKB_KEY_Ebelowdot","","",null,null],[17,"XKB_KEY_ebelowdot","","",null,null],[17,"XKB_KEY_Ehook","","",null,null],[17,"XKB_KEY_ehook","","",null,null],[17,"XKB_KEY_Etilde","","",null,null],[17,"XKB_KEY_etilde","","",null,null],[17,"XKB_KEY_Ecircumflexacute","","",null,null],[17,"XKB_KEY_ecircumflexacute","","",null,null],[17,"XKB_KEY_Ecircumflexgrave","","",null,null],[17,"XKB_KEY_ecircumflexgrave","","",null,null],[17,"XKB_KEY_Ecircumflexhook","","",null,null],[17,"XKB_KEY_ecircumflexhook","","",null,null],[17,"XKB_KEY_Ecircumflextilde","","",null,null],[17,"XKB_KEY_ecircumflextilde","","",null,null],[17,"XKB_KEY_Ecircumflexbelowdot","","",null,null],[17,"XKB_KEY_ecircumflexbelowdot","","",null,null],[17,"XKB_KEY_Ihook","","",null,null],[17,"XKB_KEY_ihook","","",null,null],[17,"XKB_KEY_Ibelowdot","","",null,null],[17,"XKB_KEY_ibelowdot","","",null,null],[17,"XKB_KEY_Obelowdot","","",null,null],[17,"XKB_KEY_obelowdot","","",null,null],[17,"XKB_KEY_Ohook","","",null,null],[17,"XKB_KEY_ohook","","",null,null],[17,"XKB_KEY_Ocircumflexacute","","",null,null],[17,"XKB_KEY_ocircumflexacute","","",null,null],[17,"XKB_KEY_Ocircumflexgrave","","",null,null],[17,"XKB_KEY_ocircumflexgrave","","",null,null],[17,"XKB_KEY_Ocircumflexhook","","",null,null],[17,"XKB_KEY_ocircumflexhook","","",null,null],[17,"XKB_KEY_Ocircumflextilde","","",null,null],[17,"XKB_KEY_ocircumflextilde","","",null,null],[17,"XKB_KEY_Ocircumflexbelowdot","","",null,null],[17,"XKB_KEY_ocircumflexbelowdot","","",null,null],[17,"XKB_KEY_Ohornacute","","",null,null],[17,"XKB_KEY_ohornacute","","",null,null],[17,"XKB_KEY_Ohorngrave","","",null,null],[17,"XKB_KEY_ohorngrave","","",null,null],[17,"XKB_KEY_Ohornhook","","",null,null],[17,"XKB_KEY_ohornhook","","",null,null],[17,"XKB_KEY_Ohorntilde","","",null,null],[17,"XKB_KEY_ohorntilde","","",null,null],[17,"XKB_KEY_Ohornbelowdot","","",null,null],[17,"XKB_KEY_ohornbelowdot","","",null,null],[17,"XKB_KEY_Ubelowdot","","",null,null],[17,"XKB_KEY_ubelowdot","","",null,null],[17,"XKB_KEY_Uhook","","",null,null],[17,"XKB_KEY_uhook","","",null,null],[17,"XKB_KEY_Uhornacute","","",null,null],[17,"XKB_KEY_uhornacute","","",null,null],[17,"XKB_KEY_Uhorngrave","","",null,null],[17,"XKB_KEY_uhorngrave","","",null,null],[17,"XKB_KEY_Uhornhook","","",null,null],[17,"XKB_KEY_uhornhook","","",null,null],[17,"XKB_KEY_Uhorntilde","","",null,null],[17,"XKB_KEY_uhorntilde","","",null,null],[17,"XKB_KEY_Uhornbelowdot","","",null,null],[17,"XKB_KEY_uhornbelowdot","","",null,null],[17,"XKB_KEY_Ybelowdot","","",null,null],[17,"XKB_KEY_ybelowdot","","",null,null],[17,"XKB_KEY_Yhook","","",null,null],[17,"XKB_KEY_yhook","","",null,null],[17,"XKB_KEY_Ytilde","","",null,null],[17,"XKB_KEY_ytilde","","",null,null],[17,"XKB_KEY_Ohorn","","",null,null],[17,"XKB_KEY_ohorn","","",null,null],[17,"XKB_KEY_Uhorn","","",null,null],[17,"XKB_KEY_uhorn","","",null,null],[17,"XKB_KEY_EcuSign","","",null,null],[17,"XKB_KEY_ColonSign","","",null,null],[17,"XKB_KEY_CruzeiroSign","","",null,null],[17,"XKB_KEY_FFrancSign","","",null,null],[17,"XKB_KEY_LiraSign","","",null,null],[17,"XKB_KEY_MillSign","","",null,null],[17,"XKB_KEY_NairaSign","","",null,null],[17,"XKB_KEY_PesetaSign","","",null,null],[17,"XKB_KEY_RupeeSign","","",null,null],[17,"XKB_KEY_WonSign","","",null,null],[17,"XKB_KEY_NewSheqelSign","","",null,null],[17,"XKB_KEY_DongSign","","",null,null],[17,"XKB_KEY_EuroSign","","",null,null],[17,"XKB_KEY_zerosuperior","","",null,null],[17,"XKB_KEY_foursuperior","","",null,null],[17,"XKB_KEY_fivesuperior","","",null,null],[17,"XKB_KEY_sixsuperior","","",null,null],[17,"XKB_KEY_sevensuperior","","",null,null],[17,"XKB_KEY_eightsuperior","","",null,null],[17,"XKB_KEY_ninesuperior","","",null,null],[17,"XKB_KEY_zerosubscript","","",null,null],[17,"XKB_KEY_onesubscript","","",null,null],[17,"XKB_KEY_twosubscript","","",null,null],[17,"XKB_KEY_threesubscript","","",null,null],[17,"XKB_KEY_foursubscript","","",null,null],[17,"XKB_KEY_fivesubscript","","",null,null],[17,"XKB_KEY_sixsubscript","","",null,null],[17,"XKB_KEY_sevensubscript","","",null,null],[17,"XKB_KEY_eightsubscript","","",null,null],[17,"XKB_KEY_ninesubscript","","",null,null],[17,"XKB_KEY_partdifferential","","",null,null],[17,"XKB_KEY_emptyset","","",null,null],[17,"XKB_KEY_elementof","","",null,null],[17,"XKB_KEY_notelementof","","",null,null],[17,"XKB_KEY_containsas","","",null,null],[17,"XKB_KEY_squareroot","","",null,null],[17,"XKB_KEY_cuberoot","","",null,null],[17,"XKB_KEY_fourthroot","","",null,null],[17,"XKB_KEY_dintegral","","",null,null],[17,"XKB_KEY_tintegral","","",null,null],[17,"XKB_KEY_because","","",null,null],[17,"XKB_KEY_approxeq","","",null,null],[17,"XKB_KEY_notapproxeq","","",null,null],[17,"XKB_KEY_notidentical","","",null,null],[17,"XKB_KEY_stricteq","","",null,null],[17,"XKB_KEY_braille_dot_1","","",null,null],[17,"XKB_KEY_braille_dot_2","","",null,null],[17,"XKB_KEY_braille_dot_3","","",null,null],[17,"XKB_KEY_braille_dot_4","","",null,null],[17,"XKB_KEY_braille_dot_5","","",null,null],[17,"XKB_KEY_braille_dot_6","","",null,null],[17,"XKB_KEY_braille_dot_7","","",null,null],[17,"XKB_KEY_braille_dot_8","","",null,null],[17,"XKB_KEY_braille_dot_9","","",null,null],[17,"XKB_KEY_braille_dot_10","","",null,null],[17,"XKB_KEY_braille_blank","","",null,null],[17,"XKB_KEY_braille_dots_1","","",null,null],[17,"XKB_KEY_braille_dots_2","","",null,null],[17,"XKB_KEY_braille_dots_12","","",null,null],[17,"XKB_KEY_braille_dots_3","","",null,null],[17,"XKB_KEY_braille_dots_13","","",null,null],[17,"XKB_KEY_braille_dots_23","","",null,null],[17,"XKB_KEY_braille_dots_123","","",null,null],[17,"XKB_KEY_braille_dots_4","","",null,null],[17,"XKB_KEY_braille_dots_14","","",null,null],[17,"XKB_KEY_braille_dots_24","","",null,null],[17,"XKB_KEY_braille_dots_124","","",null,null],[17,"XKB_KEY_braille_dots_34","","",null,null],[17,"XKB_KEY_braille_dots_134","","",null,null],[17,"XKB_KEY_braille_dots_234","","",null,null],[17,"XKB_KEY_braille_dots_1234","","",null,null],[17,"XKB_KEY_braille_dots_5","","",null,null],[17,"XKB_KEY_braille_dots_15","","",null,null],[17,"XKB_KEY_braille_dots_25","","",null,null],[17,"XKB_KEY_braille_dots_125","","",null,null],[17,"XKB_KEY_braille_dots_35","","",null,null],[17,"XKB_KEY_braille_dots_135","","",null,null],[17,"XKB_KEY_braille_dots_235","","",null,null],[17,"XKB_KEY_braille_dots_1235","","",null,null],[17,"XKB_KEY_braille_dots_45","","",null,null],[17,"XKB_KEY_braille_dots_145","","",null,null],[17,"XKB_KEY_braille_dots_245","","",null,null],[17,"XKB_KEY_braille_dots_1245","","",null,null],[17,"XKB_KEY_braille_dots_345","","",null,null],[17,"XKB_KEY_braille_dots_1345","","",null,null],[17,"XKB_KEY_braille_dots_2345","","",null,null],[17,"XKB_KEY_braille_dots_12345","","",null,null],[17,"XKB_KEY_braille_dots_6","","",null,null],[17,"XKB_KEY_braille_dots_16","","",null,null],[17,"XKB_KEY_braille_dots_26","","",null,null],[17,"XKB_KEY_braille_dots_126","","",null,null],[17,"XKB_KEY_braille_dots_36","","",null,null],[17,"XKB_KEY_braille_dots_136","","",null,null],[17,"XKB_KEY_braille_dots_236","","",null,null],[17,"XKB_KEY_braille_dots_1236","","",null,null],[17,"XKB_KEY_braille_dots_46","","",null,null],[17,"XKB_KEY_braille_dots_146","","",null,null],[17,"XKB_KEY_braille_dots_246","","",null,null],[17,"XKB_KEY_braille_dots_1246","","",null,null],[17,"XKB_KEY_braille_dots_346","","",null,null],[17,"XKB_KEY_braille_dots_1346","","",null,null],[17,"XKB_KEY_braille_dots_2346","","",null,null],[17,"XKB_KEY_braille_dots_12346","","",null,null],[17,"XKB_KEY_braille_dots_56","","",null,null],[17,"XKB_KEY_braille_dots_156","","",null,null],[17,"XKB_KEY_braille_dots_256","","",null,null],[17,"XKB_KEY_braille_dots_1256","","",null,null],[17,"XKB_KEY_braille_dots_356","","",null,null],[17,"XKB_KEY_braille_dots_1356","","",null,null],[17,"XKB_KEY_braille_dots_2356","","",null,null],[17,"XKB_KEY_braille_dots_12356","","",null,null],[17,"XKB_KEY_braille_dots_456","","",null,null],[17,"XKB_KEY_braille_dots_1456","","",null,null],[17,"XKB_KEY_braille_dots_2456","","",null,null],[17,"XKB_KEY_braille_dots_12456","","",null,null],[17,"XKB_KEY_braille_dots_3456","","",null,null],[17,"XKB_KEY_braille_dots_13456","","",null,null],[17,"XKB_KEY_braille_dots_23456","","",null,null],[17,"XKB_KEY_braille_dots_123456","","",null,null],[17,"XKB_KEY_braille_dots_7","","",null,null],[17,"XKB_KEY_braille_dots_17","","",null,null],[17,"XKB_KEY_braille_dots_27","","",null,null],[17,"XKB_KEY_braille_dots_127","","",null,null],[17,"XKB_KEY_braille_dots_37","","",null,null],[17,"XKB_KEY_braille_dots_137","","",null,null],[17,"XKB_KEY_braille_dots_237","","",null,null],[17,"XKB_KEY_braille_dots_1237","","",null,null],[17,"XKB_KEY_braille_dots_47","","",null,null],[17,"XKB_KEY_braille_dots_147","","",null,null],[17,"XKB_KEY_braille_dots_247","","",null,null],[17,"XKB_KEY_braille_dots_1247","","",null,null],[17,"XKB_KEY_braille_dots_347","","",null,null],[17,"XKB_KEY_braille_dots_1347","","",null,null],[17,"XKB_KEY_braille_dots_2347","","",null,null],[17,"XKB_KEY_braille_dots_12347","","",null,null],[17,"XKB_KEY_braille_dots_57","","",null,null],[17,"XKB_KEY_braille_dots_157","","",null,null],[17,"XKB_KEY_braille_dots_257","","",null,null],[17,"XKB_KEY_braille_dots_1257","","",null,null],[17,"XKB_KEY_braille_dots_357","","",null,null],[17,"XKB_KEY_braille_dots_1357","","",null,null],[17,"XKB_KEY_braille_dots_2357","","",null,null],[17,"XKB_KEY_braille_dots_12357","","",null,null],[17,"XKB_KEY_braille_dots_457","","",null,null],[17,"XKB_KEY_braille_dots_1457","","",null,null],[17,"XKB_KEY_braille_dots_2457","","",null,null],[17,"XKB_KEY_braille_dots_12457","","",null,null],[17,"XKB_KEY_braille_dots_3457","","",null,null],[17,"XKB_KEY_braille_dots_13457","","",null,null],[17,"XKB_KEY_braille_dots_23457","","",null,null],[17,"XKB_KEY_braille_dots_123457","","",null,null],[17,"XKB_KEY_braille_dots_67","","",null,null],[17,"XKB_KEY_braille_dots_167","","",null,null],[17,"XKB_KEY_braille_dots_267","","",null,null],[17,"XKB_KEY_braille_dots_1267","","",null,null],[17,"XKB_KEY_braille_dots_367","","",null,null],[17,"XKB_KEY_braille_dots_1367","","",null,null],[17,"XKB_KEY_braille_dots_2367","","",null,null],[17,"XKB_KEY_braille_dots_12367","","",null,null],[17,"XKB_KEY_braille_dots_467","","",null,null],[17,"XKB_KEY_braille_dots_1467","","",null,null],[17,"XKB_KEY_braille_dots_2467","","",null,null],[17,"XKB_KEY_braille_dots_12467","","",null,null],[17,"XKB_KEY_braille_dots_3467","","",null,null],[17,"XKB_KEY_braille_dots_13467","","",null,null],[17,"XKB_KEY_braille_dots_23467","","",null,null],[17,"XKB_KEY_braille_dots_123467","","",null,null],[17,"XKB_KEY_braille_dots_567","","",null,null],[17,"XKB_KEY_braille_dots_1567","","",null,null],[17,"XKB_KEY_braille_dots_2567","","",null,null],[17,"XKB_KEY_braille_dots_12567","","",null,null],[17,"XKB_KEY_braille_dots_3567","","",null,null],[17,"XKB_KEY_braille_dots_13567","","",null,null],[17,"XKB_KEY_braille_dots_23567","","",null,null],[17,"XKB_KEY_braille_dots_123567","","",null,null],[17,"XKB_KEY_braille_dots_4567","","",null,null],[17,"XKB_KEY_braille_dots_14567","","",null,null],[17,"XKB_KEY_braille_dots_24567","","",null,null],[17,"XKB_KEY_braille_dots_124567","","",null,null],[17,"XKB_KEY_braille_dots_34567","","",null,null],[17,"XKB_KEY_braille_dots_134567","","",null,null],[17,"XKB_KEY_braille_dots_234567","","",null,null],[17,"XKB_KEY_braille_dots_1234567","","",null,null],[17,"XKB_KEY_braille_dots_8","","",null,null],[17,"XKB_KEY_braille_dots_18","","",null,null],[17,"XKB_KEY_braille_dots_28","","",null,null],[17,"XKB_KEY_braille_dots_128","","",null,null],[17,"XKB_KEY_braille_dots_38","","",null,null],[17,"XKB_KEY_braille_dots_138","","",null,null],[17,"XKB_KEY_braille_dots_238","","",null,null],[17,"XKB_KEY_braille_dots_1238","","",null,null],[17,"XKB_KEY_braille_dots_48","","",null,null],[17,"XKB_KEY_braille_dots_148","","",null,null],[17,"XKB_KEY_braille_dots_248","","",null,null],[17,"XKB_KEY_braille_dots_1248","","",null,null],[17,"XKB_KEY_braille_dots_348","","",null,null],[17,"XKB_KEY_braille_dots_1348","","",null,null],[17,"XKB_KEY_braille_dots_2348","","",null,null],[17,"XKB_KEY_braille_dots_12348","","",null,null],[17,"XKB_KEY_braille_dots_58","","",null,null],[17,"XKB_KEY_braille_dots_158","","",null,null],[17,"XKB_KEY_braille_dots_258","","",null,null],[17,"XKB_KEY_braille_dots_1258","","",null,null],[17,"XKB_KEY_braille_dots_358","","",null,null],[17,"XKB_KEY_braille_dots_1358","","",null,null],[17,"XKB_KEY_braille_dots_2358","","",null,null],[17,"XKB_KEY_braille_dots_12358","","",null,null],[17,"XKB_KEY_braille_dots_458","","",null,null],[17,"XKB_KEY_braille_dots_1458","","",null,null],[17,"XKB_KEY_braille_dots_2458","","",null,null],[17,"XKB_KEY_braille_dots_12458","","",null,null],[17,"XKB_KEY_braille_dots_3458","","",null,null],[17,"XKB_KEY_braille_dots_13458","","",null,null],[17,"XKB_KEY_braille_dots_23458","","",null,null],[17,"XKB_KEY_braille_dots_123458","","",null,null],[17,"XKB_KEY_braille_dots_68","","",null,null],[17,"XKB_KEY_braille_dots_168","","",null,null],[17,"XKB_KEY_braille_dots_268","","",null,null],[17,"XKB_KEY_braille_dots_1268","","",null,null],[17,"XKB_KEY_braille_dots_368","","",null,null],[17,"XKB_KEY_braille_dots_1368","","",null,null],[17,"XKB_KEY_braille_dots_2368","","",null,null],[17,"XKB_KEY_braille_dots_12368","","",null,null],[17,"XKB_KEY_braille_dots_468","","",null,null],[17,"XKB_KEY_braille_dots_1468","","",null,null],[17,"XKB_KEY_braille_dots_2468","","",null,null],[17,"XKB_KEY_braille_dots_12468","","",null,null],[17,"XKB_KEY_braille_dots_3468","","",null,null],[17,"XKB_KEY_braille_dots_13468","","",null,null],[17,"XKB_KEY_braille_dots_23468","","",null,null],[17,"XKB_KEY_braille_dots_123468","","",null,null],[17,"XKB_KEY_braille_dots_568","","",null,null],[17,"XKB_KEY_braille_dots_1568","","",null,null],[17,"XKB_KEY_braille_dots_2568","","",null,null],[17,"XKB_KEY_braille_dots_12568","","",null,null],[17,"XKB_KEY_braille_dots_3568","","",null,null],[17,"XKB_KEY_braille_dots_13568","","",null,null],[17,"XKB_KEY_braille_dots_23568","","",null,null],[17,"XKB_KEY_braille_dots_123568","","",null,null],[17,"XKB_KEY_braille_dots_4568","","",null,null],[17,"XKB_KEY_braille_dots_14568","","",null,null],[17,"XKB_KEY_braille_dots_24568","","",null,null],[17,"XKB_KEY_braille_dots_124568","","",null,null],[17,"XKB_KEY_braille_dots_34568","","",null,null],[17,"XKB_KEY_braille_dots_134568","","",null,null],[17,"XKB_KEY_braille_dots_234568","","",null,null],[17,"XKB_KEY_braille_dots_1234568","","",null,null],[17,"XKB_KEY_braille_dots_78","","",null,null],[17,"XKB_KEY_braille_dots_178","","",null,null],[17,"XKB_KEY_braille_dots_278","","",null,null],[17,"XKB_KEY_braille_dots_1278","","",null,null],[17,"XKB_KEY_braille_dots_378","","",null,null],[17,"XKB_KEY_braille_dots_1378","","",null,null],[17,"XKB_KEY_braille_dots_2378","","",null,null],[17,"XKB_KEY_braille_dots_12378","","",null,null],[17,"XKB_KEY_braille_dots_478","","",null,null],[17,"XKB_KEY_braille_dots_1478","","",null,null],[17,"XKB_KEY_braille_dots_2478","","",null,null],[17,"XKB_KEY_braille_dots_12478","","",null,null],[17,"XKB_KEY_braille_dots_3478","","",null,null],[17,"XKB_KEY_braille_dots_13478","","",null,null],[17,"XKB_KEY_braille_dots_23478","","",null,null],[17,"XKB_KEY_braille_dots_123478","","",null,null],[17,"XKB_KEY_braille_dots_578","","",null,null],[17,"XKB_KEY_braille_dots_1578","","",null,null],[17,"XKB_KEY_braille_dots_2578","","",null,null],[17,"XKB_KEY_braille_dots_12578","","",null,null],[17,"XKB_KEY_braille_dots_3578","","",null,null],[17,"XKB_KEY_braille_dots_13578","","",null,null],[17,"XKB_KEY_braille_dots_23578","","",null,null],[17,"XKB_KEY_braille_dots_123578","","",null,null],[17,"XKB_KEY_braille_dots_4578","","",null,null],[17,"XKB_KEY_braille_dots_14578","","",null,null],[17,"XKB_KEY_braille_dots_24578","","",null,null],[17,"XKB_KEY_braille_dots_124578","","",null,null],[17,"XKB_KEY_braille_dots_34578","","",null,null],[17,"XKB_KEY_braille_dots_134578","","",null,null],[17,"XKB_KEY_braille_dots_234578","","",null,null],[17,"XKB_KEY_braille_dots_1234578","","",null,null],[17,"XKB_KEY_braille_dots_678","","",null,null],[17,"XKB_KEY_braille_dots_1678","","",null,null],[17,"XKB_KEY_braille_dots_2678","","",null,null],[17,"XKB_KEY_braille_dots_12678","","",null,null],[17,"XKB_KEY_braille_dots_3678","","",null,null],[17,"XKB_KEY_braille_dots_13678","","",null,null],[17,"XKB_KEY_braille_dots_23678","","",null,null],[17,"XKB_KEY_braille_dots_123678","","",null,null],[17,"XKB_KEY_braille_dots_4678","","",null,null],[17,"XKB_KEY_braille_dots_14678","","",null,null],[17,"XKB_KEY_braille_dots_24678","","",null,null],[17,"XKB_KEY_braille_dots_124678","","",null,null],[17,"XKB_KEY_braille_dots_34678","","",null,null],[17,"XKB_KEY_braille_dots_134678","","",null,null],[17,"XKB_KEY_braille_dots_234678","","",null,null],[17,"XKB_KEY_braille_dots_1234678","","",null,null],[17,"XKB_KEY_braille_dots_5678","","",null,null],[17,"XKB_KEY_braille_dots_15678","","",null,null],[17,"XKB_KEY_braille_dots_25678","","",null,null],[17,"XKB_KEY_braille_dots_125678","","",null,null],[17,"XKB_KEY_braille_dots_35678","","",null,null],[17,"XKB_KEY_braille_dots_135678","","",null,null],[17,"XKB_KEY_braille_dots_235678","","",null,null],[17,"XKB_KEY_braille_dots_1235678","","",null,null],[17,"XKB_KEY_braille_dots_45678","","",null,null],[17,"XKB_KEY_braille_dots_145678","","",null,null],[17,"XKB_KEY_braille_dots_245678","","",null,null],[17,"XKB_KEY_braille_dots_1245678","","",null,null],[17,"XKB_KEY_braille_dots_345678","","",null,null],[17,"XKB_KEY_braille_dots_1345678","","",null,null],[17,"XKB_KEY_braille_dots_2345678","","",null,null],[17,"XKB_KEY_braille_dots_12345678","","",null,null],[17,"XKB_KEY_Sinh_ng","","",null,null],[17,"XKB_KEY_Sinh_h2","","",null,null],[17,"XKB_KEY_Sinh_a","","",null,null],[17,"XKB_KEY_Sinh_aa","","",null,null],[17,"XKB_KEY_Sinh_ae","","",null,null],[17,"XKB_KEY_Sinh_aee","","",null,null],[17,"XKB_KEY_Sinh_i","","",null,null],[17,"XKB_KEY_Sinh_ii","","",null,null],[17,"XKB_KEY_Sinh_u","","",null,null],[17,"XKB_KEY_Sinh_uu","","",null,null],[17,"XKB_KEY_Sinh_ri","","",null,null],[17,"XKB_KEY_Sinh_rii","","",null,null],[17,"XKB_KEY_Sinh_lu","","",null,null],[17,"XKB_KEY_Sinh_luu","","",null,null],[17,"XKB_KEY_Sinh_e","","",null,null],[17,"XKB_KEY_Sinh_ee","","",null,null],[17,"XKB_KEY_Sinh_ai","","",null,null],[17,"XKB_KEY_Sinh_o","","",null,null],[17,"XKB_KEY_Sinh_oo","","",null,null],[17,"XKB_KEY_Sinh_au","","",null,null],[17,"XKB_KEY_Sinh_ka","","",null,null],[17,"XKB_KEY_Sinh_kha","","",null,null],[17,"XKB_KEY_Sinh_ga","","",null,null],[17,"XKB_KEY_Sinh_gha","","",null,null],[17,"XKB_KEY_Sinh_ng2","","",null,null],[17,"XKB_KEY_Sinh_nga","","",null,null],[17,"XKB_KEY_Sinh_ca","","",null,null],[17,"XKB_KEY_Sinh_cha","","",null,null],[17,"XKB_KEY_Sinh_ja","","",null,null],[17,"XKB_KEY_Sinh_jha","","",null,null],[17,"XKB_KEY_Sinh_nya","","",null,null],[17,"XKB_KEY_Sinh_jnya","","",null,null],[17,"XKB_KEY_Sinh_nja","","",null,null],[17,"XKB_KEY_Sinh_tta","","",null,null],[17,"XKB_KEY_Sinh_ttha","","",null,null],[17,"XKB_KEY_Sinh_dda","","",null,null],[17,"XKB_KEY_Sinh_ddha","","",null,null],[17,"XKB_KEY_Sinh_nna","","",null,null],[17,"XKB_KEY_Sinh_ndda","","",null,null],[17,"XKB_KEY_Sinh_tha","","",null,null],[17,"XKB_KEY_Sinh_thha","","",null,null],[17,"XKB_KEY_Sinh_dha","","",null,null],[17,"XKB_KEY_Sinh_dhha","","",null,null],[17,"XKB_KEY_Sinh_na","","",null,null],[17,"XKB_KEY_Sinh_ndha","","",null,null],[17,"XKB_KEY_Sinh_pa","","",null,null],[17,"XKB_KEY_Sinh_pha","","",null,null],[17,"XKB_KEY_Sinh_ba","","",null,null],[17,"XKB_KEY_Sinh_bha","","",null,null],[17,"XKB_KEY_Sinh_ma","","",null,null],[17,"XKB_KEY_Sinh_mba","","",null,null],[17,"XKB_KEY_Sinh_ya","","",null,null],[17,"XKB_KEY_Sinh_ra","","",null,null],[17,"XKB_KEY_Sinh_la","","",null,null],[17,"XKB_KEY_Sinh_va","","",null,null],[17,"XKB_KEY_Sinh_sha","","",null,null],[17,"XKB_KEY_Sinh_ssha","","",null,null],[17,"XKB_KEY_Sinh_sa","","",null,null],[17,"XKB_KEY_Sinh_ha","","",null,null],[17,"XKB_KEY_Sinh_lla","","",null,null],[17,"XKB_KEY_Sinh_fa","","",null,null],[17,"XKB_KEY_Sinh_al","","",null,null],[17,"XKB_KEY_Sinh_aa2","","",null,null],[17,"XKB_KEY_Sinh_ae2","","",null,null],[17,"XKB_KEY_Sinh_aee2","","",null,null],[17,"XKB_KEY_Sinh_i2","","",null,null],[17,"XKB_KEY_Sinh_ii2","","",null,null],[17,"XKB_KEY_Sinh_u2","","",null,null],[17,"XKB_KEY_Sinh_uu2","","",null,null],[17,"XKB_KEY_Sinh_ru2","","",null,null],[17,"XKB_KEY_Sinh_e2","","",null,null],[17,"XKB_KEY_Sinh_ee2","","",null,null],[17,"XKB_KEY_Sinh_ai2","","",null,null],[17,"XKB_KEY_Sinh_o2","","",null,null],[17,"XKB_KEY_Sinh_oo2","","",null,null],[17,"XKB_KEY_Sinh_au2","","",null,null],[17,"XKB_KEY_Sinh_lu2","","",null,null],[17,"XKB_KEY_Sinh_ruu2","","",null,null],[17,"XKB_KEY_Sinh_luu2","","",null,null],[17,"XKB_KEY_Sinh_kunddaliya","","",null,null],[17,"XKB_KEY_XF86ModeLock","","",null,null],[17,"XKB_KEY_XF86MonBrightnessUp","","",null,null],[17,"XKB_KEY_XF86MonBrightnessDown","","",null,null],[17,"XKB_KEY_XF86KbdLightOnOff","","",null,null],[17,"XKB_KEY_XF86KbdBrightnessUp","","",null,null],[17,"XKB_KEY_XF86KbdBrightnessDown","","",null,null],[17,"XKB_KEY_XF86Standby","","",null,null],[17,"XKB_KEY_XF86AudioLowerVolume","","",null,null],[17,"XKB_KEY_XF86AudioMute","","",null,null],[17,"XKB_KEY_XF86AudioRaiseVolume","","",null,null],[17,"XKB_KEY_XF86AudioPlay","","",null,null],[17,"XKB_KEY_XF86AudioStop","","",null,null],[17,"XKB_KEY_XF86AudioPrev","","",null,null],[17,"XKB_KEY_XF86AudioNext","","",null,null],[17,"XKB_KEY_XF86HomePage","","",null,null],[17,"XKB_KEY_XF86Mail","","",null,null],[17,"XKB_KEY_XF86Start","","",null,null],[17,"XKB_KEY_XF86Search","","",null,null],[17,"XKB_KEY_XF86AudioRecord","","",null,null],[17,"XKB_KEY_XF86Calculator","","",null,null],[17,"XKB_KEY_XF86Memo","","",null,null],[17,"XKB_KEY_XF86ToDoList","","",null,null],[17,"XKB_KEY_XF86Calendar","","",null,null],[17,"XKB_KEY_XF86PowerDown","","",null,null],[17,"XKB_KEY_XF86ContrastAdjust","","",null,null],[17,"XKB_KEY_XF86RockerUp","","",null,null],[17,"XKB_KEY_XF86RockerDown","","",null,null],[17,"XKB_KEY_XF86RockerEnter","","",null,null],[17,"XKB_KEY_XF86Back","","",null,null],[17,"XKB_KEY_XF86Forward","","",null,null],[17,"XKB_KEY_XF86Stop","","",null,null],[17,"XKB_KEY_XF86Refresh","","",null,null],[17,"XKB_KEY_XF86PowerOff","","",null,null],[17,"XKB_KEY_XF86WakeUp","","",null,null],[17,"XKB_KEY_XF86Eject","","",null,null],[17,"XKB_KEY_XF86ScreenSaver","","",null,null],[17,"XKB_KEY_XF86WWW","","",null,null],[17,"XKB_KEY_XF86Sleep","","",null,null],[17,"XKB_KEY_XF86Favorites","","",null,null],[17,"XKB_KEY_XF86AudioPause","","",null,null],[17,"XKB_KEY_XF86AudioMedia","","",null,null],[17,"XKB_KEY_XF86MyComputer","","",null,null],[17,"XKB_KEY_XF86VendorHome","","",null,null],[17,"XKB_KEY_XF86LightBulb","","",null,null],[17,"XKB_KEY_XF86Shop","","",null,null],[17,"XKB_KEY_XF86History","","",null,null],[17,"XKB_KEY_XF86OpenURL","","",null,null],[17,"XKB_KEY_XF86AddFavorite","","",null,null],[17,"XKB_KEY_XF86HotLinks","","",null,null],[17,"XKB_KEY_XF86BrightnessAdjust","","",null,null],[17,"XKB_KEY_XF86Finance","","",null,null],[17,"XKB_KEY_XF86Community","","",null,null],[17,"XKB_KEY_XF86AudioRewind","","",null,null],[17,"XKB_KEY_XF86BackForward","","",null,null],[17,"XKB_KEY_XF86Launch0","","",null,null],[17,"XKB_KEY_XF86Launch1","","",null,null],[17,"XKB_KEY_XF86Launch2","","",null,null],[17,"XKB_KEY_XF86Launch3","","",null,null],[17,"XKB_KEY_XF86Launch4","","",null,null],[17,"XKB_KEY_XF86Launch5","","",null,null],[17,"XKB_KEY_XF86Launch6","","",null,null],[17,"XKB_KEY_XF86Launch7","","",null,null],[17,"XKB_KEY_XF86Launch8","","",null,null],[17,"XKB_KEY_XF86Launch9","","",null,null],[17,"XKB_KEY_XF86LaunchA","","",null,null],[17,"XKB_KEY_XF86LaunchB","","",null,null],[17,"XKB_KEY_XF86LaunchC","","",null,null],[17,"XKB_KEY_XF86LaunchD","","",null,null],[17,"XKB_KEY_XF86LaunchE","","",null,null],[17,"XKB_KEY_XF86LaunchF","","",null,null],[17,"XKB_KEY_XF86ApplicationLeft","","",null,null],[17,"XKB_KEY_XF86ApplicationRight","","",null,null],[17,"XKB_KEY_XF86Book","","",null,null],[17,"XKB_KEY_XF86CD","","",null,null],[17,"XKB_KEY_XF86Calculater","","",null,null],[17,"XKB_KEY_XF86Clear","","",null,null],[17,"XKB_KEY_XF86Close","","",null,null],[17,"XKB_KEY_XF86Copy","","",null,null],[17,"XKB_KEY_XF86Cut","","",null,null],[17,"XKB_KEY_XF86Display","","",null,null],[17,"XKB_KEY_XF86DOS","","",null,null],[17,"XKB_KEY_XF86Documents","","",null,null],[17,"XKB_KEY_XF86Excel","","",null,null],[17,"XKB_KEY_XF86Explorer","","",null,null],[17,"XKB_KEY_XF86Game","","",null,null],[17,"XKB_KEY_XF86Go","","",null,null],[17,"XKB_KEY_XF86iTouch","","",null,null],[17,"XKB_KEY_XF86LogOff","","",null,null],[17,"XKB_KEY_XF86Market","","",null,null],[17,"XKB_KEY_XF86Meeting","","",null,null],[17,"XKB_KEY_XF86MenuKB","","",null,null],[17,"XKB_KEY_XF86MenuPB","","",null,null],[17,"XKB_KEY_XF86MySites","","",null,null],[17,"XKB_KEY_XF86New","","",null,null],[17,"XKB_KEY_XF86News","","",null,null],[17,"XKB_KEY_XF86OfficeHome","","",null,null],[17,"XKB_KEY_XF86Open","","",null,null],[17,"XKB_KEY_XF86Option","","",null,null],[17,"XKB_KEY_XF86Paste","","",null,null],[17,"XKB_KEY_XF86Phone","","",null,null],[17,"XKB_KEY_XF86Q","","",null,null],[17,"XKB_KEY_XF86Reply","","",null,null],[17,"XKB_KEY_XF86Reload","","",null,null],[17,"XKB_KEY_XF86RotateWindows","","",null,null],[17,"XKB_KEY_XF86RotationPB","","",null,null],[17,"XKB_KEY_XF86RotationKB","","",null,null],[17,"XKB_KEY_XF86Save","","",null,null],[17,"XKB_KEY_XF86ScrollUp","","",null,null],[17,"XKB_KEY_XF86ScrollDown","","",null,null],[17,"XKB_KEY_XF86ScrollClick","","",null,null],[17,"XKB_KEY_XF86Send","","",null,null],[17,"XKB_KEY_XF86Spell","","",null,null],[17,"XKB_KEY_XF86SplitScreen","","",null,null],[17,"XKB_KEY_XF86Support","","",null,null],[17,"XKB_KEY_XF86TaskPane","","",null,null],[17,"XKB_KEY_XF86Terminal","","",null,null],[17,"XKB_KEY_XF86Tools","","",null,null],[17,"XKB_KEY_XF86Travel","","",null,null],[17,"XKB_KEY_XF86UserPB","","",null,null],[17,"XKB_KEY_XF86User1KB","","",null,null],[17,"XKB_KEY_XF86User2KB","","",null,null],[17,"XKB_KEY_XF86Video","","",null,null],[17,"XKB_KEY_XF86WheelButton","","",null,null],[17,"XKB_KEY_XF86Word","","",null,null],[17,"XKB_KEY_XF86Xfer","","",null,null],[17,"XKB_KEY_XF86ZoomIn","","",null,null],[17,"XKB_KEY_XF86ZoomOut","","",null,null],[17,"XKB_KEY_XF86Away","","",null,null],[17,"XKB_KEY_XF86Messenger","","",null,null],[17,"XKB_KEY_XF86WebCam","","",null,null],[17,"XKB_KEY_XF86MailForward","","",null,null],[17,"XKB_KEY_XF86Pictures","","",null,null],[17,"XKB_KEY_XF86Music","","",null,null],[17,"XKB_KEY_XF86Battery","","",null,null],[17,"XKB_KEY_XF86Bluetooth","","",null,null],[17,"XKB_KEY_XF86WLAN","","",null,null],[17,"XKB_KEY_XF86UWB","","",null,null],[17,"XKB_KEY_XF86AudioForward","","",null,null],[17,"XKB_KEY_XF86AudioRepeat","","",null,null],[17,"XKB_KEY_XF86AudioRandomPlay","","",null,null],[17,"XKB_KEY_XF86Subtitle","","",null,null],[17,"XKB_KEY_XF86AudioCycleTrack","","",null,null],[17,"XKB_KEY_XF86CycleAngle","","",null,null],[17,"XKB_KEY_XF86FrameBack","","",null,null],[17,"XKB_KEY_XF86FrameForward","","",null,null],[17,"XKB_KEY_XF86Time","","",null,null],[17,"XKB_KEY_XF86Select","","",null,null],[17,"XKB_KEY_XF86View","","",null,null],[17,"XKB_KEY_XF86TopMenu","","",null,null],[17,"XKB_KEY_XF86Red","","",null,null],[17,"XKB_KEY_XF86Green","","",null,null],[17,"XKB_KEY_XF86Yellow","","",null,null],[17,"XKB_KEY_XF86Blue","","",null,null],[17,"XKB_KEY_XF86Suspend","","",null,null],[17,"XKB_KEY_XF86Hibernate","","",null,null],[17,"XKB_KEY_XF86TouchpadToggle","","",null,null],[17,"XKB_KEY_XF86TouchpadOn","","",null,null],[17,"XKB_KEY_XF86TouchpadOff","","",null,null],[17,"XKB_KEY_XF86AudioMicMute","","",null,null],[17,"XKB_KEY_XF86Switch_VT_1","","",null,null],[17,"XKB_KEY_XF86Switch_VT_2","","",null,null],[17,"XKB_KEY_XF86Switch_VT_3","","",null,null],[17,"XKB_KEY_XF86Switch_VT_4","","",null,null],[17,"XKB_KEY_XF86Switch_VT_5","","",null,null],[17,"XKB_KEY_XF86Switch_VT_6","","",null,null],[17,"XKB_KEY_XF86Switch_VT_7","","",null,null],[17,"XKB_KEY_XF86Switch_VT_8","","",null,null],[17,"XKB_KEY_XF86Switch_VT_9","","",null,null],[17,"XKB_KEY_XF86Switch_VT_10","","",null,null],[17,"XKB_KEY_XF86Switch_VT_11","","",null,null],[17,"XKB_KEY_XF86Switch_VT_12","","",null,null],[17,"XKB_KEY_XF86Ungrab","","",null,null],[17,"XKB_KEY_XF86ClearGrab","","",null,null],[17,"XKB_KEY_XF86Next_VMode","","",null,null],[17,"XKB_KEY_XF86Prev_VMode","","",null,null],[17,"XKB_KEY_XF86LogWindowTree","","",null,null],[17,"XKB_KEY_XF86LogGrabInfo","","",null,null],[17,"XKB_KEY_SunFA_Grave","","",null,null],[17,"XKB_KEY_SunFA_Circum","","",null,null],[17,"XKB_KEY_SunFA_Tilde","","",null,null],[17,"XKB_KEY_SunFA_Acute","","",null,null],[17,"XKB_KEY_SunFA_Diaeresis","","",null,null],[17,"XKB_KEY_SunFA_Cedilla","","",null,null],[17,"XKB_KEY_SunF36","","",null,null],[17,"XKB_KEY_SunF37","","",null,null],[17,"XKB_KEY_SunSys_Req","","",null,null],[17,"XKB_KEY_SunPrint_Screen","","",null,null],[17,"XKB_KEY_SunCompose","","",null,null],[17,"XKB_KEY_SunAltGraph","","",null,null],[17,"XKB_KEY_SunPageUp","","",null,null],[17,"XKB_KEY_SunPageDown","","",null,null],[17,"XKB_KEY_SunUndo","","",null,null],[17,"XKB_KEY_SunAgain","","",null,null],[17,"XKB_KEY_SunFind","","",null,null],[17,"XKB_KEY_SunStop","","",null,null],[17,"XKB_KEY_SunProps","","",null,null],[17,"XKB_KEY_SunFront","","",null,null],[17,"XKB_KEY_SunCopy","","",null,null],[17,"XKB_KEY_SunOpen","","",null,null],[17,"XKB_KEY_SunPaste","","",null,null],[17,"XKB_KEY_SunCut","","",null,null],[17,"XKB_KEY_SunPowerSwitch","","",null,null],[17,"XKB_KEY_SunAudioLowerVolume","","",null,null],[17,"XKB_KEY_SunAudioMute","","",null,null],[17,"XKB_KEY_SunAudioRaiseVolume","","",null,null],[17,"XKB_KEY_SunVideoDegauss","","",null,null],[17,"XKB_KEY_SunVideoLowerBrightness","","",null,null],[17,"XKB_KEY_SunVideoRaiseBrightness","","",null,null],[17,"XKB_KEY_SunPowerSwitchShift","","",null,null],[17,"XKB_KEY_Dring_accent","","",null,null],[17,"XKB_KEY_Dcircumflex_accent","","",null,null],[17,"XKB_KEY_Dcedilla_accent","","",null,null],[17,"XKB_KEY_Dacute_accent","","",null,null],[17,"XKB_KEY_Dgrave_accent","","",null,null],[17,"XKB_KEY_Dtilde","","",null,null],[17,"XKB_KEY_Ddiaeresis","","",null,null],[17,"XKB_KEY_DRemove","","",null,null],[17,"XKB_KEY_hpClearLine","","",null,null],[17,"XKB_KEY_hpInsertLine","","",null,null],[17,"XKB_KEY_hpDeleteLine","","",null,null],[17,"XKB_KEY_hpInsertChar","","",null,null],[17,"XKB_KEY_hpDeleteChar","","",null,null],[17,"XKB_KEY_hpBackTab","","",null,null],[17,"XKB_KEY_hpKP_BackTab","","",null,null],[17,"XKB_KEY_hpModelock1","","",null,null],[17,"XKB_KEY_hpModelock2","","",null,null],[17,"XKB_KEY_hpReset","","",null,null],[17,"XKB_KEY_hpSystem","","",null,null],[17,"XKB_KEY_hpUser","","",null,null],[17,"XKB_KEY_hpmute_acute","","",null,null],[17,"XKB_KEY_hpmute_grave","","",null,null],[17,"XKB_KEY_hpmute_asciicircum","","",null,null],[17,"XKB_KEY_hpmute_diaeresis","","",null,null],[17,"XKB_KEY_hpmute_asciitilde","","",null,null],[17,"XKB_KEY_hplira","","",null,null],[17,"XKB_KEY_hpguilder","","",null,null],[17,"XKB_KEY_hpYdiaeresis","","",null,null],[17,"XKB_KEY_hpIO","","",null,null],[17,"XKB_KEY_hplongminus","","",null,null],[17,"XKB_KEY_hpblock","","",null,null],[17,"XKB_KEY_osfCopy","","",null,null],[17,"XKB_KEY_osfCut","","",null,null],[17,"XKB_KEY_osfPaste","","",null,null],[17,"XKB_KEY_osfBackTab","","",null,null],[17,"XKB_KEY_osfBackSpace","","",null,null],[17,"XKB_KEY_osfClear","","",null,null],[17,"XKB_KEY_osfEscape","","",null,null],[17,"XKB_KEY_osfAddMode","","",null,null],[17,"XKB_KEY_osfPrimaryPaste","","",null,null],[17,"XKB_KEY_osfQuickPaste","","",null,null],[17,"XKB_KEY_osfPageLeft","","",null,null],[17,"XKB_KEY_osfPageUp","","",null,null],[17,"XKB_KEY_osfPageDown","","",null,null],[17,"XKB_KEY_osfPageRight","","",null,null],[17,"XKB_KEY_osfActivate","","",null,null],[17,"XKB_KEY_osfMenuBar","","",null,null],[17,"XKB_KEY_osfLeft","","",null,null],[17,"XKB_KEY_osfUp","","",null,null],[17,"XKB_KEY_osfRight","","",null,null],[17,"XKB_KEY_osfDown","","",null,null],[17,"XKB_KEY_osfEndLine","","",null,null],[17,"XKB_KEY_osfBeginLine","","",null,null],[17,"XKB_KEY_osfEndData","","",null,null],[17,"XKB_KEY_osfBeginData","","",null,null],[17,"XKB_KEY_osfPrevMenu","","",null,null],[17,"XKB_KEY_osfNextMenu","","",null,null],[17,"XKB_KEY_osfPrevField","","",null,null],[17,"XKB_KEY_osfNextField","","",null,null],[17,"XKB_KEY_osfSelect","","",null,null],[17,"XKB_KEY_osfInsert","","",null,null],[17,"XKB_KEY_osfUndo","","",null,null],[17,"XKB_KEY_osfMenu","","",null,null],[17,"XKB_KEY_osfCancel","","",null,null],[17,"XKB_KEY_osfHelp","","",null,null],[17,"XKB_KEY_osfSelectAll","","",null,null],[17,"XKB_KEY_osfDeselectAll","","",null,null],[17,"XKB_KEY_osfReselect","","",null,null],[17,"XKB_KEY_osfExtend","","",null,null],[17,"XKB_KEY_osfRestore","","",null,null],[17,"XKB_KEY_osfDelete","","",null,null],[17,"XKB_KEY_Reset","","",null,null],[17,"XKB_KEY_System","","",null,null],[17,"XKB_KEY_User","","",null,null],[17,"XKB_KEY_ClearLine","","",null,null],[17,"XKB_KEY_InsertLine","","",null,null],[17,"XKB_KEY_DeleteLine","","",null,null],[17,"XKB_KEY_InsertChar","","",null,null],[17,"XKB_KEY_DeleteChar","","",null,null],[17,"XKB_KEY_BackTab","","",null,null],[17,"XKB_KEY_KP_BackTab","","",null,null],[17,"XKB_KEY_Ext16bit_L","","",null,null],[17,"XKB_KEY_Ext16bit_R","","",null,null],[17,"XKB_KEY_mute_acute","","",null,null],[17,"XKB_KEY_mute_grave","","",null,null],[17,"XKB_KEY_mute_asciicircum","","",null,null],[17,"XKB_KEY_mute_diaeresis","","",null,null],[17,"XKB_KEY_mute_asciitilde","","",null,null],[17,"XKB_KEY_lira","","",null,null],[17,"XKB_KEY_guilder","","",null,null],[17,"XKB_KEY_IO","","",null,null],[17,"XKB_KEY_longminus","","",null,null],[17,"XKB_KEY_block","","",null,null]],"paths":[[3,"KeyEvent"],[4,"MappedKeyboardEvent"],[4,"MappedKeyboardError"],[4,"Option"],[3,"Wrapping"],[3,"Decoded"],[4,"FullDecoded"],[4,"Part"],[3,"Formatted"],[4,"Sign"],[3,"Unpacked"],[4,"Sign"],[3,"Decimal"],[4,"ParseResult"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[3,"Big32x40"],[3,"Big8x3"],[3,"Fp"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[4,"ChainState"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"CharRange"],[3,"SipHasher"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[3,"MappedKeyboard"]]};
searchIndex['wayland_window'] = {"items":[[0,"","wayland_window","Wayland Window, a minimalistic decoration-drawing library for\nwayland applications.",null,null],[3,"DecoratedSurface","","A wrapper for a decorated surface.",null,null],[5,"substract_borders","","Substracts the border dimensions from the given dimensions.",null,null],[5,"add_borders","","Adds the border dimensions to the given dimensions.",null,null],[11,"resize","","Resizes the borders to given width and height.",0,{"inputs":[{"name":"decoratedsurface"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"new","","Creates a new decorated window around given surface.",0,{"inputs":[{"name":"decoratedsurface"},{"name":"wlsurface"},{"name":"i32"},{"name":"i32"},{"name":"wlcompositor"},{"name":"wlsubcompositor"},{"name":"wlshm"},{"name":"wlshell"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_title","","Set a short title for the surface.",0,{"inputs":[{"name":"decoratedsurface"},{"name":"string"}],"output":null}],[11,"set_class","","Set a class for the surface.",0,{"inputs":[{"name":"decoratedsurface"},{"name":"string"}],"output":null}],[11,"next","","",0,{"inputs":[{"name":"decoratedsurface"}],"output":{"name":"option"}}]],"paths":[[3,"DecoratedSurface"]]};
searchIndex['wayland_client'] = {"items":[[0,"","wayland_client","",null,null],[3,"EventIterator","","",null,null],[3,"ProxyId","","",null,null],[4,"Event","","",null,null],[13,"Wayland","","",0,null],[5,"is_available","","Checks if the wayland lib is available",null,{"inputs":[],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"event"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",1,{"inputs":[{"name":"eventiterator"}],"output":{"name":"eventiterator"}}],[11,"drop","","",1,{"inputs":[{"name":"eventiterator"}],"output":null}],[11,"next","","",1,{"inputs":[{"name":"eventiterator"}],"output":{"name":"option"}}],[0,"egl","","",null,null],[3,"WlEglSurface","wayland_client::egl","",null,null],[5,"is_available","","Checks if the wayland-egl lib is available and can be used",null,{"inputs":[],"output":{"name":"bool"}}],[11,"new","","",2,{"inputs":[{"name":"wleglsurface"},{"name":"wlsurface"},{"name":"i32"},{"name":"i32"}],"output":{"name":"wleglsurface"}}],[11,"destroy","","",2,{"inputs":[{"name":"wleglsurface"}],"output":{"name":"wlsurface"}}],[11,"get_size","","",2,null],[11,"resize","","",2,{"inputs":[{"name":"wleglsurface"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"egl_surface_ptr","","",2,null],[11,"egl_surfaceptr","","DEPRECATED",2,null],[11,"drop","","",2,{"inputs":[{"name":"wleglsurface"}],"output":null}],[11,"deref","","",2,{"inputs":[{"name":"wleglsurface"}],"output":{"name":"wlsurface"}}],[0,"wayland","wayland_client","",null,null],[3,"WlCallback","wayland_client::wayland","callback object",null,null],[3,"WlDisplay","","core global object",null,null],[3,"WlRegistry","","global registry object",null,null],[3,"ReadEventsGuard","","A guard over a read intention.",null,null],[4,"WlCallbackEvent","","",null,null],[13,"Done","","done event",3,null],[4,"WlDisplayEvent","","",null,null],[13,"Error","","fatal error event",4,null],[13,"DeleteId","","acknowledge object ID deletion",4,null],[4,"WlRegistryEvent","","",null,null],[13,"Global","","announce global object",5,null],[13,"GlobalRemove","","announce removal of global object",5,null],[4,"WaylandProtocolEvent","","An event generated by the protocol wayland.",null,null],[13,"WlDisplay","","",6,null],[13,"WlRegistry","","",6,null],[13,"WlCallback","","",6,null],[13,"WlShm","","",6,null],[13,"WlBuffer","","",6,null],[13,"WlDataOffer","","",6,null],[13,"WlDataSource","","",6,null],[13,"WlDataDevice","","",6,null],[13,"WlShellSurface","","",6,null],[13,"WlSurface","","",6,null],[13,"WlSeat","","",6,null],[13,"WlPointer","","",6,null],[13,"WlKeyboard","","",6,null],[13,"WlTouch","","",6,null],[13,"WlOutput","","",6,null],[5,"get_display","","",null,{"inputs":[],"output":{"name":"option"}}],[0,"compositor","","",null,null],[3,"WlCompositor","wayland_client::wayland::compositor","the compositor singleton",null,null],[3,"WlRegion","","region interface",null,null],[3,"WlSurface","","an onscreen surface",null,null],[4,"WlSurfaceEvent","","",null,null],[13,"Enter","","surface enters an output",7,null],[13,"Leave","","surface leaves an output",7,null],[0,"data_device","wayland_client::wayland","",null,null],[3,"WlDataDevice","wayland_client::wayland::data_device","data transfer device",null,null],[3,"WlDataDeviceManager","","data transfer interface",null,null],[3,"WlDataOffer","","offer to transfer data",null,null],[3,"WlDataSource","","offer to transfer data",null,null],[4,"WlDataDeviceEvent","","",null,null],[13,"DataOffer","","introduce a new wl_data_offer",8,null],[13,"Enter","","initiate drag-and-drop session",8,null],[13,"Leave","","end drag-and-drop session",8,null],[13,"Motion","","drag-and-drop session motion",8,null],[13,"Drop","","end drag-and-drag session successfully",8,null],[13,"Selection","","advertise new selection",8,null],[4,"WlDataOfferEvent","","",null,null],[13,"Offer","","advertise offered mime type",9,null],[4,"WlDataSourceEvent","","",null,null],[13,"Target","","a target accepts an offered mime type",10,null],[13,"Send","","send the data",10,null],[13,"Cancelled","","selection was cancelled",10,null],[0,"output","wayland_client::wayland","",null,null],[3,"WlOutput","wayland_client::wayland::output","compositor output region",null,null],[4,"WlOutputEvent","","",null,null],[13,"Geometry","","properties of the output",11,null],[13,"Mode","","advertise available modes for the output",11,null],[13,"Done","","sent all information about output",11,null],[13,"Scale","","output scaling properties",11,null],[4,"WlOutputSubpixel","","subpixel geometry information",null,null],[13,"Unknown","","",12,null],[13,"None","","",12,null],[13,"HorizontalRgb","","",12,null],[13,"HorizontalBgr","","",12,null],[13,"VerticalRgb","","",12,null],[13,"VerticalBgr","","",12,null],[4,"WlOutputTransform","","transform from framebuffer to output",null,null],[13,"Normal","","",13,null],[13,"T90","","",13,null],[13,"T180","","",13,null],[13,"T270","","",13,null],[13,"Flipped","","",13,null],[13,"Flipped90","","",13,null],[13,"Flipped180","","",13,null],[13,"Flipped270","","",13,null],[0,"WlOutputMode","","mode information",null,null],[3,"WlOutputMode","wayland_client::wayland::output::WlOutputMode","",null,null],[17,"Current","","indicates this is the current mode",null,null],[17,"Preferred","","indicates this is the preferred mode",null,null],[11,"hash","","",14,null],[11,"cmp","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"option"}}],[11,"lt","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"le","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"gt","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"ge","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"eq","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"fmt","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",14,{"inputs":[{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"all","","Returns the set containing all flags.",14,{"inputs":[{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",14,{"inputs":[{"name":"wloutputmode"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",14,{"inputs":[{"name":"wloutputmode"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",14,{"inputs":[{"name":"wloutputmode"},{"name":"u32"}],"output":{"name":"wloutputmode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",14,{"inputs":[{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",14,{"inputs":[{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"sub","","Returns the set difference of the two sets of flags.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"not","","Returns the complement of this set of flags.",14,{"inputs":[{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"from_iter","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"t"}],"output":{"name":"wloutputmode"}}],[0,"seat","wayland_client::wayland","",null,null],[3,"WlKeyboard","wayland_client::wayland::seat","keyboard input device",null,null],[3,"WlPointer","","pointer input device",null,null],[3,"WlSeat","","group of input devices",null,null],[3,"WlTouch","","touchscreen input device",null,null],[4,"WlKeyboardEvent","","",null,null],[13,"Keymap","","keyboard mapping",15,null],[13,"Enter","","enter event",15,null],[13,"Leave","","leave event",15,null],[13,"Key","","key event",15,null],[13,"Modifiers","","modifier and group state",15,null],[13,"RepeatInfo","","repeat rate and delay",15,null],[4,"WlPointerEvent","","",null,null],[13,"Enter","","enter event",16,null],[13,"Leave","","leave event",16,null],[13,"Motion","","pointer motion event",16,null],[13,"Button","","pointer button event",16,null],[13,"Axis","","axis event",16,null],[4,"WlSeatEvent","","",null,null],[13,"Capabilities","","seat capabilities changed",17,null],[13,"Name","","unique identifier for this seat",17,null],[4,"WlTouchEvent","","",null,null],[13,"Down","","touch down event and beginning of a touch sequence",18,null],[13,"Up","","end of a touch event sequence",18,null],[13,"Motion","","update of touch point coordinates",18,null],[13,"Frame","","end of touch frame event",18,null],[13,"Cancel","","touch session cancelled",18,null],[4,"WlKeyboardKeyState","","physical key state",null,null],[13,"Released","","key is not pressed",19,null],[13,"Pressed","","key is pressed",19,null],[4,"WlKeyboardKeymapFormat","","keyboard mapping format",null,null],[13,"NoKeymap","","no keymap; client must understand how to interpret the raw keycode",20,null],[13,"XkbV1","","libxkbcommon compatible; to determine the xkb keycode, clients must add 8 to the key event keycode",20,null],[4,"WlPointerAxis","","axis types",null,null],[13,"VerticalScroll","","",21,null],[13,"HorizontalScroll","","",21,null],[4,"WlPointerButtonState","","physical button state",null,null],[13,"Released","","The button is not pressed",22,null],[13,"Pressed","","The button is pressed",22,null],[0,"WlSeatCapability","","seat capability bitmask",null,null],[3,"WlSeatCapability","wayland_client::wayland::seat::WlSeatCapability","",null,null],[17,"Pointer","","The seat has pointer devices",null,null],[17,"Keyboard","","The seat has one or more keyboards",null,null],[17,"Touch","","The seat has touch devices",null,null],[11,"hash","","",23,null],[11,"cmp","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"option"}}],[11,"lt","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"le","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"gt","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"ge","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"eq","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"fmt","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",23,{"inputs":[{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"all","","Returns the set containing all flags.",23,{"inputs":[{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"bits","","Returns the raw value of the flags currently stored.",23,{"inputs":[{"name":"wlseatcapability"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"u32"}],"output":{"name":"wlseatcapability"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",23,{"inputs":[{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",23,{"inputs":[{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"sub","","Returns the set difference of the two sets of flags.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"not","","Returns the complement of this set of flags.",23,{"inputs":[{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"from_iter","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"t"}],"output":{"name":"wlseatcapability"}}],[0,"shell","wayland_client::wayland","",null,null],[3,"WlShell","wayland_client::wayland::shell","create desktop-style surfaces",null,null],[3,"WlShellSurface","","desktop-style metadata interface",null,null],[4,"WlShellSurfaceEvent","","",null,null],[13,"Ping","","ping client",24,null],[13,"Configure","","suggest resize",24,null],[13,"PopupDone","","popup interaction is done",24,null],[4,"WlShellSurfaceFullscreenMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","no preference, apply default policy",25,null],[13,"Scale","","scale, preserve the surface's aspect ratio and center on output",25,null],[13,"Driver","","switch output mode to the smallest mode that can fit the surface, add black borders to compensate size mismatch",25,null],[13,"Fill","","no upscaling, center on output and add black borders to compensate size mismatch",25,null],[0,"WlShellSurfaceResize","","edge values for resizing",null,null],[3,"WlShellSurfaceResize","wayland_client::wayland::shell::WlShellSurfaceResize","",null,null],[17,"None","","",null,null],[17,"Top","","",null,null],[17,"Bottom","","",null,null],[17,"Left","","",null,null],[17,"TopLeft","","",null,null],[17,"BottomLeft","","",null,null],[17,"Right","","",null,null],[17,"TopRight","","",null,null],[17,"BottomRight","","",null,null],[11,"hash","","",26,null],[11,"cmp","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"option"}}],[11,"lt","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"le","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"gt","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"ge","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"eq","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"fmt","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",26,{"inputs":[{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"all","","Returns the set containing all flags.",26,{"inputs":[{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"bits","","Returns the raw value of the flags currently stored.",26,{"inputs":[{"name":"wlshellsurfaceresize"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"u32"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",26,{"inputs":[{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",26,{"inputs":[{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"sub","","Returns the set difference of the two sets of flags.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"not","","Returns the complement of this set of flags.",26,{"inputs":[{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"from_iter","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"t"}],"output":{"name":"wlshellsurfaceresize"}}],[0,"WlShellSurfaceTransient","wayland_client::wayland::shell","details of transient behaviour",null,null],[3,"WlShellSurfaceTransient","wayland_client::wayland::shell::WlShellSurfaceTransient","",null,null],[17,"Inactive","","do not set keyboard focus",null,null],[11,"hash","","",27,null],[11,"cmp","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"option"}}],[11,"lt","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"le","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"gt","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"ge","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"eq","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"fmt","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",27,{"inputs":[{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"all","","Returns the set containing all flags.",27,{"inputs":[{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"bits","","Returns the raw value of the flags currently stored.",27,{"inputs":[{"name":"wlshellsurfacetransient"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"u32"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",27,{"inputs":[{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",27,{"inputs":[{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"sub","","Returns the set difference of the two sets of flags.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"not","","Returns the complement of this set of flags.",27,{"inputs":[{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"from_iter","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"t"}],"output":{"name":"wlshellsurfacetransient"}}],[0,"shm","wayland_client::wayland","",null,null],[3,"WlBuffer","wayland_client::wayland::shm","content for a wl_surface",null,null],[3,"WlShm","","shared memory support",null,null],[3,"WlShmPool","","a shared memory pool",null,null],[4,"WlBufferEvent","","",null,null],[13,"Release","","compositor releases buffer",28,null],[4,"WlShmEvent","","",null,null],[13,"Format","","pixel format description",29,null],[4,"WlShmFormat","","pixel formats",null,null],[13,"Argb8888","","32-bit ARGB format",30,null],[13,"Xrgb8888","","32-bit RGB format",30,null],[13,"C8","","",30,null],[13,"Rgb332","","",30,null],[13,"Bgr233","","",30,null],[13,"Xrgb4444","","",30,null],[13,"Xbgr4444","","",30,null],[13,"Rgbx4444","","",30,null],[13,"Bgrx4444","","",30,null],[13,"Argb4444","","",30,null],[13,"Abgr4444","","",30,null],[13,"Rgba4444","","",30,null],[13,"Bgra4444","","",30,null],[13,"Xrgb1555","","",30,null],[13,"Xbgr1555","","",30,null],[13,"Rgbx5551","","",30,null],[13,"Bgrx5551","","",30,null],[13,"Argb1555","","",30,null],[13,"Abgr1555","","",30,null],[13,"Rgba5551","","",30,null],[13,"Bgra5551","","",30,null],[13,"Rgb565","","",30,null],[13,"Bgr565","","",30,null],[13,"Rgb888","","",30,null],[13,"Bgr888","","",30,null],[13,"Xbgr8888","","",30,null],[13,"Rgbx8888","","",30,null],[13,"Bgrx8888","","",30,null],[13,"Abgr8888","","",30,null],[13,"Rgba8888","","",30,null],[13,"Bgra8888","","",30,null],[13,"Xrgb2101010","","",30,null],[13,"Xbgr2101010","","",30,null],[13,"Rgbx1010102","","",30,null],[13,"Bgrx1010102","","",30,null],[13,"Argb2101010","","",30,null],[13,"Abgr2101010","","",30,null],[13,"Rgba1010102","","",30,null],[13,"Bgra1010102","","",30,null],[13,"Yuyv","","",30,null],[13,"Yvyu","","",30,null],[13,"Uyvy","","",30,null],[13,"Vyuy","","",30,null],[13,"Ayuv","","",30,null],[13,"Nv12","","",30,null],[13,"Nv21","","",30,null],[13,"Nv16","","",30,null],[13,"Nv61","","",30,null],[13,"Yuv410","","",30,null],[13,"Yvu410","","",30,null],[13,"Yuv411","","",30,null],[13,"Yvu411","","",30,null],[13,"Yuv420","","",30,null],[13,"Yvu420","","",30,null],[13,"Yuv422","","",30,null],[13,"Yvu422","","",30,null],[13,"Yuv444","","",30,null],[13,"Yvu444","","",30,null],[0,"subcompositor","wayland_client::wayland","",null,null],[3,"WlSubcompositor","wayland_client::wayland::subcompositor","sub-surface compositing",null,null],[3,"WlSubsurface","","sub-surface interface to a wl_surface",null,null],[11,"sync_roundtrip","wayland_client::wayland","Synchronous roundtrip",31,{"inputs":[{"name":"wldisplay"}],"output":{"name":"result"}}],[11,"dispatch","","Blocking dispatch",31,{"inputs":[{"name":"wldisplay"}],"output":{"name":"result"}}],[11,"dispatch_pending","","Non-blocking dispatch",31,{"inputs":[{"name":"wldisplay"}],"output":{"name":"result"}}],[11,"prepare_read","","Prepare an conccurent read",31,{"inputs":[{"name":"wldisplay"}],"output":{"name":"option"}}],[11,"flush","","Non-blocking write to the server",31,{"inputs":[{"name":"wldisplay"}],"output":{"name":"result"}}],[11,"drop","","",31,{"inputs":[{"name":"wldisplay"}],"output":null}],[11,"read_events","","Read events",32,{"inputs":[{"name":"readeventsguard"}],"output":{"name":"result"}}],[11,"cancel","","Cancel the read",32,{"inputs":[{"name":"readeventsguard"}],"output":null}],[11,"drop","","",32,{"inputs":[{"name":"readeventsguard"}],"output":null}],[8,"Proxy","wayland_client","",null,null],[10,"ptr","","",33,null],[10,"interface","","",33,null],[10,"interface_name","","The internal name of this interface, as advertized by the registry if it is a global.",33,{"inputs":[{"name":"proxy"}],"output":{"name":"str"}}],[10,"version","","The maximum version of this interface handled by the library.",33,{"inputs":[{"name":"proxy"}],"output":{"name":"u32"}}],[10,"id","","Get the id of this proxy",33,{"inputs":[{"name":"proxy"}],"output":{"name":"proxyid"}}],[10,"from_ptr","","Creates a proxy from a fresh ptr",33,null],[10,"from_ptr_no_own","","Creates a proxy from a ptr that is managed elsewhere",33,null],[10,"set_evt_iterator","","Set the event iterator associated to this proxy",33,{"inputs":[{"name":"proxy"},{"name":"eventiterator"}],"output":null}],[11,"hash","","",34,null],[11,"fmt","","",34,{"inputs":[{"name":"proxyid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",34,{"inputs":[{"name":"proxyid"},{"name":"proxyid"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"proxyid"},{"name":"proxyid"}],"output":{"name":"bool"}}],[11,"clone","","",34,{"inputs":[{"name":"proxyid"}],"output":{"name":"proxyid"}}],[14,"wayland_env!","","This macro allows you to create a simple wayland environment handler.",null,null],[11,"hash","wayland_client::wayland::shell::WlShellSurfaceResize","",26,null],[11,"cmp","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"option"}}],[11,"lt","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"le","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"gt","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"ge","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"eq","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"fmt","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",26,{"inputs":[{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"all","","Returns the set containing all flags.",26,{"inputs":[{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"bits","","Returns the raw value of the flags currently stored.",26,{"inputs":[{"name":"wlshellsurfaceresize"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"u32"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",26,{"inputs":[{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",26,{"inputs":[{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"sub","","Returns the set difference of the two sets of flags.",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"not","","Returns the complement of this set of flags.",26,{"inputs":[{"name":"wlshellsurfaceresize"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"from_iter","","",26,{"inputs":[{"name":"wlshellsurfaceresize"},{"name":"t"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"hash","wayland_client::wayland::shell::WlShellSurfaceTransient","",27,null],[11,"cmp","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"option"}}],[11,"lt","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"le","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"gt","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"ge","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"eq","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"fmt","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",27,{"inputs":[{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"all","","Returns the set containing all flags.",27,{"inputs":[{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"bits","","Returns the raw value of the flags currently stored.",27,{"inputs":[{"name":"wlshellsurfacetransient"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"u32"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",27,{"inputs":[{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",27,{"inputs":[{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"sub","","Returns the set difference of the two sets of flags.",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"not","","Returns the complement of this set of flags.",27,{"inputs":[{"name":"wlshellsurfacetransient"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"from_iter","","",27,{"inputs":[{"name":"wlshellsurfacetransient"},{"name":"t"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"hash","wayland_client::wayland::seat::WlSeatCapability","",23,null],[11,"cmp","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"option"}}],[11,"lt","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"le","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"gt","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"ge","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"eq","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"fmt","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",23,{"inputs":[{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"all","","Returns the set containing all flags.",23,{"inputs":[{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"bits","","Returns the raw value of the flags currently stored.",23,{"inputs":[{"name":"wlseatcapability"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"u32"}],"output":{"name":"wlseatcapability"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",23,{"inputs":[{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",23,{"inputs":[{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"sub","","Returns the set difference of the two sets of flags.",23,{"inputs":[{"name":"wlseatcapability"},{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"not","","Returns the complement of this set of flags.",23,{"inputs":[{"name":"wlseatcapability"}],"output":{"name":"wlseatcapability"}}],[11,"from_iter","","",23,{"inputs":[{"name":"wlseatcapability"},{"name":"t"}],"output":{"name":"wlseatcapability"}}],[11,"hash","wayland_client::wayland::output::WlOutputMode","",14,null],[11,"cmp","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"option"}}],[11,"lt","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"le","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"gt","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"ge","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"eq","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"fmt","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",14,{"inputs":[{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"all","","Returns the set containing all flags.",14,{"inputs":[{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",14,{"inputs":[{"name":"wloutputmode"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",14,{"inputs":[{"name":"wloutputmode"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",14,{"inputs":[{"name":"wloutputmode"},{"name":"u32"}],"output":{"name":"wloutputmode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",14,{"inputs":[{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",14,{"inputs":[{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"sub","","Returns the set difference of the two sets of flags.",14,{"inputs":[{"name":"wloutputmode"},{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"not","","Returns the complement of this set of flags.",14,{"inputs":[{"name":"wloutputmode"}],"output":{"name":"wloutputmode"}}],[11,"from_iter","","",14,{"inputs":[{"name":"wloutputmode"},{"name":"t"}],"output":{"name":"wloutputmode"}}],[11,"fmt","wayland_client::wayland","",6,{"inputs":[{"name":"waylandprotocolevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"ptr","","",31,null],[11,"interface","","",31,null],[11,"interface_name","","",31,{"inputs":[{"name":"wldisplay"}],"output":{"name":"str"}}],[11,"version","","",31,{"inputs":[{"name":"wldisplay"}],"output":{"name":"u32"}}],[11,"id","","",31,{"inputs":[{"name":"wldisplay"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",31,null],[11,"from_ptr_no_own","","",31,null],[11,"set_evt_iterator","","",31,{"inputs":[{"name":"wldisplay"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",31,{"inputs":[{"name":"wldisplay"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"wldisplayevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"sync","","asynchronous roundtrip",31,{"inputs":[{"name":"wldisplay"}],"output":{"name":"wlcallback"}}],[11,"get_registry","","get global registry object",31,{"inputs":[{"name":"wldisplay"}],"output":{"name":"wlregistry"}}],[11,"ptr","","",35,null],[11,"interface","","",35,null],[11,"interface_name","","",35,{"inputs":[{"name":"wlregistry"}],"output":{"name":"str"}}],[11,"version","","",35,{"inputs":[{"name":"wlregistry"}],"output":{"name":"u32"}}],[11,"id","","",35,{"inputs":[{"name":"wlregistry"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",35,null],[11,"from_ptr_no_own","","",35,null],[11,"set_evt_iterator","","",35,{"inputs":[{"name":"wlregistry"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",35,{"inputs":[{"name":"wlregistry"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"wlregistryevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","bind an object to the display",35,{"inputs":[{"name":"wlregistry"},{"name":"u32"},{"name":"u32"}],"output":{"name":"t"}}],[11,"drop","","",35,{"inputs":[{"name":"wlregistry"}],"output":null}],[11,"ptr","","",36,null],[11,"interface","","",36,null],[11,"interface_name","","",36,{"inputs":[{"name":"wlcallback"}],"output":{"name":"str"}}],[11,"version","","",36,{"inputs":[{"name":"wlcallback"}],"output":{"name":"u32"}}],[11,"id","","",36,{"inputs":[{"name":"wlcallback"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",36,null],[11,"from_ptr_no_own","","",36,null],[11,"set_evt_iterator","","",36,{"inputs":[{"name":"wlcallback"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",36,{"inputs":[{"name":"wlcallback"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"wlcallbackevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",36,{"inputs":[{"name":"wlcallback"}],"output":null}],[11,"ptr","wayland_client::wayland::compositor","",37,null],[11,"interface","","",37,null],[11,"interface_name","","",37,{"inputs":[{"name":"wlcompositor"}],"output":{"name":"str"}}],[11,"version","","",37,{"inputs":[{"name":"wlcompositor"}],"output":{"name":"u32"}}],[11,"id","","",37,{"inputs":[{"name":"wlcompositor"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",37,null],[11,"from_ptr_no_own","","",37,null],[11,"set_evt_iterator","","",37,{"inputs":[{"name":"wlcompositor"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",37,{"inputs":[{"name":"wlcompositor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"create_surface","","create new surface",37,{"inputs":[{"name":"wlcompositor"}],"output":{"name":"wlsurface"}}],[11,"create_region","","create new region",37,{"inputs":[{"name":"wlcompositor"}],"output":{"name":"wlregion"}}],[11,"drop","","",37,{"inputs":[{"name":"wlcompositor"}],"output":null}],[11,"ptr","wayland_client::wayland::shm","",38,null],[11,"interface","","",38,null],[11,"interface_name","","",38,{"inputs":[{"name":"wlshmpool"}],"output":{"name":"str"}}],[11,"version","","",38,{"inputs":[{"name":"wlshmpool"}],"output":{"name":"u32"}}],[11,"id","","",38,{"inputs":[{"name":"wlshmpool"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",38,null],[11,"from_ptr_no_own","","",38,null],[11,"set_evt_iterator","","",38,{"inputs":[{"name":"wlshmpool"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",38,{"inputs":[{"name":"wlshmpool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"create_buffer","","create a buffer from the pool",38,{"inputs":[{"name":"wlshmpool"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"u32"}],"output":{"name":"wlbuffer"}}],[11,"destroy","","destroy the pool",38,{"inputs":[{"name":"wlshmpool"}],"output":null}],[11,"resize","","change the size of the pool mapping",38,{"inputs":[{"name":"wlshmpool"},{"name":"i32"}],"output":null}],[11,"drop","","",38,{"inputs":[{"name":"wlshmpool"}],"output":null}],[11,"ptr","","",39,null],[11,"interface","","",39,null],[11,"interface_name","","",39,{"inputs":[{"name":"wlshm"}],"output":{"name":"str"}}],[11,"version","","",39,{"inputs":[{"name":"wlshm"}],"output":{"name":"u32"}}],[11,"id","","",39,{"inputs":[{"name":"wlshm"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",39,null],[11,"from_ptr_no_own","","",39,null],[11,"set_evt_iterator","","",39,{"inputs":[{"name":"wlshm"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",39,{"inputs":[{"name":"wlshm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",30,{"inputs":[{"name":"wlshmformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"wlshmevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"create_pool","","create a shm pool",39,{"inputs":[{"name":"wlshm"},{"name":"rawfd"},{"name":"i32"}],"output":{"name":"wlshmpool"}}],[11,"drop","","",39,{"inputs":[{"name":"wlshm"}],"output":null}],[11,"ptr","","",40,null],[11,"interface","","",40,null],[11,"interface_name","","",40,{"inputs":[{"name":"wlbuffer"}],"output":{"name":"str"}}],[11,"version","","",40,{"inputs":[{"name":"wlbuffer"}],"output":{"name":"u32"}}],[11,"id","","",40,{"inputs":[{"name":"wlbuffer"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",40,null],[11,"from_ptr_no_own","","",40,null],[11,"set_evt_iterator","","",40,{"inputs":[{"name":"wlbuffer"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",40,{"inputs":[{"name":"wlbuffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",28,{"inputs":[{"name":"wlbufferevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"destroy","","destroy a buffer",40,{"inputs":[{"name":"wlbuffer"}],"output":null}],[11,"drop","","",40,{"inputs":[{"name":"wlbuffer"}],"output":null}],[11,"ptr","wayland_client::wayland::data_device","",41,null],[11,"interface","","",41,null],[11,"interface_name","","",41,{"inputs":[{"name":"wldataoffer"}],"output":{"name":"str"}}],[11,"version","","",41,{"inputs":[{"name":"wldataoffer"}],"output":{"name":"u32"}}],[11,"id","","",41,{"inputs":[{"name":"wldataoffer"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",41,null],[11,"from_ptr_no_own","","",41,null],[11,"set_evt_iterator","","",41,{"inputs":[{"name":"wldataoffer"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",41,{"inputs":[{"name":"wldataoffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"wldataofferevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"accept","","accept one of the offered mime types",41,{"inputs":[{"name":"wldataoffer"},{"name":"u32"},{"name":"option"}],"output":null}],[11,"receive","","request that the data is transferred",41,{"inputs":[{"name":"wldataoffer"},{"name":"string"},{"name":"rawfd"}],"output":null}],[11,"destroy","","destroy data offer",41,{"inputs":[{"name":"wldataoffer"}],"output":null}],[11,"drop","","",41,{"inputs":[{"name":"wldataoffer"}],"output":null}],[11,"ptr","","",42,null],[11,"interface","","",42,null],[11,"interface_name","","",42,{"inputs":[{"name":"wldatasource"}],"output":{"name":"str"}}],[11,"version","","",42,{"inputs":[{"name":"wldatasource"}],"output":{"name":"u32"}}],[11,"id","","",42,{"inputs":[{"name":"wldatasource"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",42,null],[11,"from_ptr_no_own","","",42,null],[11,"set_evt_iterator","","",42,{"inputs":[{"name":"wldatasource"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",42,{"inputs":[{"name":"wldatasource"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"wldatasourceevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"offer","","add an offered mime type",42,{"inputs":[{"name":"wldatasource"},{"name":"string"}],"output":null}],[11,"destroy","","destroy the data source",42,{"inputs":[{"name":"wldatasource"}],"output":null}],[11,"drop","","",42,{"inputs":[{"name":"wldatasource"}],"output":null}],[11,"ptr","","",43,null],[11,"interface","","",43,null],[11,"interface_name","","",43,{"inputs":[{"name":"wldatadevice"}],"output":{"name":"str"}}],[11,"version","","",43,{"inputs":[{"name":"wldatadevice"}],"output":{"name":"u32"}}],[11,"id","","",43,{"inputs":[{"name":"wldatadevice"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",43,null],[11,"from_ptr_no_own","","",43,null],[11,"set_evt_iterator","","",43,{"inputs":[{"name":"wldatadevice"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",43,{"inputs":[{"name":"wldatadevice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"wldatadeviceevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"start_drag","","start drag-and-drop operation",43,{"inputs":[{"name":"wldatadevice"},{"name":"option"},{"name":"wlsurface"},{"name":"option"},{"name":"u32"}],"output":null}],[11,"set_selection","","copy data to the selection",43,{"inputs":[{"name":"wldatadevice"},{"name":"option"},{"name":"u32"}],"output":null}],[11,"release","","destroy data device",43,{"inputs":[{"name":"wldatadevice"}],"output":null}],[11,"drop","","",43,{"inputs":[{"name":"wldatadevice"}],"output":null}],[11,"ptr","","",44,null],[11,"interface","","",44,null],[11,"interface_name","","",44,{"inputs":[{"name":"wldatadevicemanager"}],"output":{"name":"str"}}],[11,"version","","",44,{"inputs":[{"name":"wldatadevicemanager"}],"output":{"name":"u32"}}],[11,"id","","",44,{"inputs":[{"name":"wldatadevicemanager"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",44,null],[11,"from_ptr_no_own","","",44,null],[11,"set_evt_iterator","","",44,{"inputs":[{"name":"wldatadevicemanager"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",44,{"inputs":[{"name":"wldatadevicemanager"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"create_data_source","","create a new data source",44,{"inputs":[{"name":"wldatadevicemanager"}],"output":{"name":"wldatasource"}}],[11,"get_data_device","","create a new data device",44,{"inputs":[{"name":"wldatadevicemanager"},{"name":"wlseat"}],"output":{"name":"wldatadevice"}}],[11,"drop","","",44,{"inputs":[{"name":"wldatadevicemanager"}],"output":null}],[11,"ptr","wayland_client::wayland::shell","",45,null],[11,"interface","","",45,null],[11,"interface_name","","",45,{"inputs":[{"name":"wlshell"}],"output":{"name":"str"}}],[11,"version","","",45,{"inputs":[{"name":"wlshell"}],"output":{"name":"u32"}}],[11,"id","","",45,{"inputs":[{"name":"wlshell"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",45,null],[11,"from_ptr_no_own","","",45,null],[11,"set_evt_iterator","","",45,{"inputs":[{"name":"wlshell"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",45,{"inputs":[{"name":"wlshell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_shell_surface","","create a shell surface from a surface",45,{"inputs":[{"name":"wlshell"},{"name":"wlsurface"}],"output":{"name":"wlshellsurface"}}],[11,"drop","","",45,{"inputs":[{"name":"wlshell"}],"output":null}],[11,"ptr","","",46,null],[11,"interface","","",46,null],[11,"interface_name","","",46,{"inputs":[{"name":"wlshellsurface"}],"output":{"name":"str"}}],[11,"version","","",46,{"inputs":[{"name":"wlshellsurface"}],"output":{"name":"u32"}}],[11,"id","","",46,{"inputs":[{"name":"wlshellsurface"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",46,null],[11,"from_ptr_no_own","","",46,null],[11,"set_evt_iterator","","",46,{"inputs":[{"name":"wlshellsurface"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",46,{"inputs":[{"name":"wlshellsurface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",25,{"inputs":[{"name":"wlshellsurfacefullscreenmethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",24,{"inputs":[{"name":"wlshellsurfaceevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pong","","respond to a ping event",46,{"inputs":[{"name":"wlshellsurface"},{"name":"u32"}],"output":null}],[11,"move_","","start an interactive move",46,{"inputs":[{"name":"wlshellsurface"},{"name":"wlseat"},{"name":"u32"}],"output":null}],[11,"resize","","start an interactive resize",46,{"inputs":[{"name":"wlshellsurface"},{"name":"wlseat"},{"name":"u32"},{"name":"wlshellsurfaceresize"}],"output":null}],[11,"set_toplevel","","make the surface a toplevel surface",46,{"inputs":[{"name":"wlshellsurface"}],"output":null}],[11,"set_transient","","make the surface a transient surface",46,{"inputs":[{"name":"wlshellsurface"},{"name":"wlsurface"},{"name":"i32"},{"name":"i32"},{"name":"wlshellsurfacetransient"}],"output":null}],[11,"set_fullscreen","","make the surface a fullscreen surface",46,{"inputs":[{"name":"wlshellsurface"},{"name":"wlshellsurfacefullscreenmethod"},{"name":"u32"},{"name":"option"}],"output":null}],[11,"set_popup","","make the surface a popup surface",46,{"inputs":[{"name":"wlshellsurface"},{"name":"wlseat"},{"name":"u32"},{"name":"wlsurface"},{"name":"i32"},{"name":"i32"},{"name":"wlshellsurfacetransient"}],"output":null}],[11,"set_maximized","","make the surface a maximized surface",46,{"inputs":[{"name":"wlshellsurface"},{"name":"option"}],"output":null}],[11,"set_title","","set surface title",46,{"inputs":[{"name":"wlshellsurface"},{"name":"string"}],"output":null}],[11,"set_class","","set surface class",46,{"inputs":[{"name":"wlshellsurface"},{"name":"string"}],"output":null}],[11,"drop","","",46,{"inputs":[{"name":"wlshellsurface"}],"output":null}],[11,"ptr","wayland_client::wayland::compositor","",47,null],[11,"interface","","",47,null],[11,"interface_name","","",47,{"inputs":[{"name":"wlsurface"}],"output":{"name":"str"}}],[11,"version","","",47,{"inputs":[{"name":"wlsurface"}],"output":{"name":"u32"}}],[11,"id","","",47,{"inputs":[{"name":"wlsurface"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",47,null],[11,"from_ptr_no_own","","",47,null],[11,"set_evt_iterator","","",47,{"inputs":[{"name":"wlsurface"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",47,{"inputs":[{"name":"wlsurface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"wlsurfaceevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"destroy","","delete surface",47,{"inputs":[{"name":"wlsurface"}],"output":null}],[11,"attach","","set the surface contents",47,{"inputs":[{"name":"wlsurface"},{"name":"option"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"damage","","mark part of the surface damaged",47,{"inputs":[{"name":"wlsurface"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"frame","","request a frame throttling hint",47,{"inputs":[{"name":"wlsurface"}],"output":{"name":"wlcallback"}}],[11,"set_opaque_region","","set opaque region",47,{"inputs":[{"name":"wlsurface"},{"name":"option"}],"output":null}],[11,"set_input_region","","set input region",47,{"inputs":[{"name":"wlsurface"},{"name":"option"}],"output":null}],[11,"commit","","commit pending surface state",47,{"inputs":[{"name":"wlsurface"}],"output":null}],[11,"set_buffer_transform","","sets the buffer transformation",47,{"inputs":[{"name":"wlsurface"},{"name":"i32"}],"output":null}],[11,"set_buffer_scale","","sets the buffer scaling factor",47,{"inputs":[{"name":"wlsurface"},{"name":"i32"}],"output":null}],[11,"drop","","",47,{"inputs":[{"name":"wlsurface"}],"output":null}],[11,"ptr","wayland_client::wayland::seat","",48,null],[11,"interface","","",48,null],[11,"interface_name","","",48,{"inputs":[{"name":"wlseat"}],"output":{"name":"str"}}],[11,"version","","",48,{"inputs":[{"name":"wlseat"}],"output":{"name":"u32"}}],[11,"id","","",48,{"inputs":[{"name":"wlseat"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",48,null],[11,"from_ptr_no_own","","",48,null],[11,"set_evt_iterator","","",48,{"inputs":[{"name":"wlseat"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",48,{"inputs":[{"name":"wlseat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",17,{"inputs":[{"name":"wlseatevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_pointer","","return pointer object",48,{"inputs":[{"name":"wlseat"}],"output":{"name":"wlpointer"}}],[11,"get_keyboard","","return keyboard object",48,{"inputs":[{"name":"wlseat"}],"output":{"name":"wlkeyboard"}}],[11,"get_touch","","return touch object",48,{"inputs":[{"name":"wlseat"}],"output":{"name":"wltouch"}}],[11,"release","","release the seat object",48,{"inputs":[{"name":"wlseat"}],"output":null}],[11,"drop","","",48,{"inputs":[{"name":"wlseat"}],"output":null}],[11,"ptr","","",49,null],[11,"interface","","",49,null],[11,"interface_name","","",49,{"inputs":[{"name":"wlpointer"}],"output":{"name":"str"}}],[11,"version","","",49,{"inputs":[{"name":"wlpointer"}],"output":{"name":"u32"}}],[11,"id","","",49,{"inputs":[{"name":"wlpointer"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",49,null],[11,"from_ptr_no_own","","",49,null],[11,"set_evt_iterator","","",49,{"inputs":[{"name":"wlpointer"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",49,{"inputs":[{"name":"wlpointer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",22,{"inputs":[{"name":"wlpointerbuttonstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",21,{"inputs":[{"name":"wlpointeraxis"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",16,{"inputs":[{"name":"wlpointerevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set_cursor","","set the pointer surface",49,{"inputs":[{"name":"wlpointer"},{"name":"u32"},{"name":"option"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"release","","release the pointer object",49,{"inputs":[{"name":"wlpointer"}],"output":null}],[11,"drop","","",49,{"inputs":[{"name":"wlpointer"}],"output":null}],[11,"ptr","","",50,null],[11,"interface","","",50,null],[11,"interface_name","","",50,{"inputs":[{"name":"wlkeyboard"}],"output":{"name":"str"}}],[11,"version","","",50,{"inputs":[{"name":"wlkeyboard"}],"output":{"name":"u32"}}],[11,"id","","",50,{"inputs":[{"name":"wlkeyboard"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",50,null],[11,"from_ptr_no_own","","",50,null],[11,"set_evt_iterator","","",50,{"inputs":[{"name":"wlkeyboard"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",50,{"inputs":[{"name":"wlkeyboard"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",20,{"inputs":[{"name":"wlkeyboardkeymapformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",19,{"inputs":[{"name":"wlkeyboardkeystate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"wlkeyboardevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"release","","release the keyboard object",50,{"inputs":[{"name":"wlkeyboard"}],"output":null}],[11,"drop","","",50,{"inputs":[{"name":"wlkeyboard"}],"output":null}],[11,"ptr","","",51,null],[11,"interface","","",51,null],[11,"interface_name","","",51,{"inputs":[{"name":"wltouch"}],"output":{"name":"str"}}],[11,"version","","",51,{"inputs":[{"name":"wltouch"}],"output":{"name":"u32"}}],[11,"id","","",51,{"inputs":[{"name":"wltouch"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",51,null],[11,"from_ptr_no_own","","",51,null],[11,"set_evt_iterator","","",51,{"inputs":[{"name":"wltouch"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",51,{"inputs":[{"name":"wltouch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",18,{"inputs":[{"name":"wltouchevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"release","","release the touch object",51,{"inputs":[{"name":"wltouch"}],"output":null}],[11,"drop","","",51,{"inputs":[{"name":"wltouch"}],"output":null}],[11,"ptr","wayland_client::wayland::output","",52,null],[11,"interface","","",52,null],[11,"interface_name","","",52,{"inputs":[{"name":"wloutput"}],"output":{"name":"str"}}],[11,"version","","",52,{"inputs":[{"name":"wloutput"}],"output":{"name":"u32"}}],[11,"id","","",52,{"inputs":[{"name":"wloutput"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",52,null],[11,"from_ptr_no_own","","",52,null],[11,"set_evt_iterator","","",52,{"inputs":[{"name":"wloutput"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",52,{"inputs":[{"name":"wloutput"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",12,{"inputs":[{"name":"wloutputsubpixel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"wloutputtransform"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"wloutputevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",52,{"inputs":[{"name":"wloutput"}],"output":null}],[11,"ptr","wayland_client::wayland::compositor","",53,null],[11,"interface","","",53,null],[11,"interface_name","","",53,{"inputs":[{"name":"wlregion"}],"output":{"name":"str"}}],[11,"version","","",53,{"inputs":[{"name":"wlregion"}],"output":{"name":"u32"}}],[11,"id","","",53,{"inputs":[{"name":"wlregion"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",53,null],[11,"from_ptr_no_own","","",53,null],[11,"set_evt_iterator","","",53,{"inputs":[{"name":"wlregion"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",53,{"inputs":[{"name":"wlregion"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"destroy","","destroy region",53,{"inputs":[{"name":"wlregion"}],"output":null}],[11,"add","","add rectangle to region",53,{"inputs":[{"name":"wlregion"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"subtract","","subtract rectangle from region",53,{"inputs":[{"name":"wlregion"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"drop","","",53,{"inputs":[{"name":"wlregion"}],"output":null}],[11,"ptr","wayland_client::wayland::subcompositor","",54,null],[11,"interface","","",54,null],[11,"interface_name","","",54,{"inputs":[{"name":"wlsubcompositor"}],"output":{"name":"str"}}],[11,"version","","",54,{"inputs":[{"name":"wlsubcompositor"}],"output":{"name":"u32"}}],[11,"id","","",54,{"inputs":[{"name":"wlsubcompositor"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",54,null],[11,"from_ptr_no_own","","",54,null],[11,"set_evt_iterator","","",54,{"inputs":[{"name":"wlsubcompositor"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",54,{"inputs":[{"name":"wlsubcompositor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"destroy","","unbind from the subcompositor interface",54,{"inputs":[{"name":"wlsubcompositor"}],"output":null}],[11,"get_subsurface","","give a surface the role sub-surface",54,{"inputs":[{"name":"wlsubcompositor"},{"name":"wlsurface"},{"name":"wlsurface"}],"output":{"name":"wlsubsurface"}}],[11,"drop","","",54,{"inputs":[{"name":"wlsubcompositor"}],"output":null}],[11,"ptr","","",55,null],[11,"interface","","",55,null],[11,"interface_name","","",55,{"inputs":[{"name":"wlsubsurface"}],"output":{"name":"str"}}],[11,"version","","",55,{"inputs":[{"name":"wlsubsurface"}],"output":{"name":"u32"}}],[11,"id","","",55,{"inputs":[{"name":"wlsubsurface"}],"output":{"name":"proxyid"}}],[11,"from_ptr","","",55,null],[11,"from_ptr_no_own","","",55,null],[11,"set_evt_iterator","","",55,{"inputs":[{"name":"wlsubsurface"},{"name":"eventiterator"}],"output":null}],[11,"fmt","","",55,{"inputs":[{"name":"wlsubsurface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"destroy","","remove sub-surface interface",55,{"inputs":[{"name":"wlsubsurface"}],"output":null}],[11,"set_position","","reposition the sub-surface",55,{"inputs":[{"name":"wlsubsurface"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"place_above","","restack the sub-surface",55,{"inputs":[{"name":"wlsubsurface"},{"name":"wlsurface"}],"output":null}],[11,"place_below","","restack the sub-surface",55,{"inputs":[{"name":"wlsubsurface"},{"name":"wlsurface"}],"output":null}],[11,"set_sync","","set sub-surface to synchronized mode",55,{"inputs":[{"name":"wlsubsurface"}],"output":null}],[11,"set_desync","","set sub-surface to desynchronized mode",55,{"inputs":[{"name":"wlsubsurface"}],"output":null}],[11,"drop","","",55,{"inputs":[{"name":"wlsubsurface"}],"output":null}]],"paths":[[4,"Event"],[3,"EventIterator"],[3,"WlEglSurface"],[4,"WlCallbackEvent"],[4,"WlDisplayEvent"],[4,"WlRegistryEvent"],[4,"WaylandProtocolEvent"],[4,"WlSurfaceEvent"],[4,"WlDataDeviceEvent"],[4,"WlDataOfferEvent"],[4,"WlDataSourceEvent"],[4,"WlOutputEvent"],[4,"WlOutputSubpixel"],[4,"WlOutputTransform"],[3,"WlOutputMode"],[4,"WlKeyboardEvent"],[4,"WlPointerEvent"],[4,"WlSeatEvent"],[4,"WlTouchEvent"],[4,"WlKeyboardKeyState"],[4,"WlKeyboardKeymapFormat"],[4,"WlPointerAxis"],[4,"WlPointerButtonState"],[3,"WlSeatCapability"],[4,"WlShellSurfaceEvent"],[4,"WlShellSurfaceFullscreenMethod"],[3,"WlShellSurfaceResize"],[3,"WlShellSurfaceTransient"],[4,"WlBufferEvent"],[4,"WlShmEvent"],[4,"WlShmFormat"],[3,"WlDisplay"],[3,"ReadEventsGuard"],[8,"Proxy"],[3,"ProxyId"],[3,"WlRegistry"],[3,"WlCallback"],[3,"WlCompositor"],[3,"WlShmPool"],[3,"WlShm"],[3,"WlBuffer"],[3,"WlDataOffer"],[3,"WlDataSource"],[3,"WlDataDevice"],[3,"WlDataDeviceManager"],[3,"WlShell"],[3,"WlShellSurface"],[3,"WlSurface"],[3,"WlSeat"],[3,"WlPointer"],[3,"WlKeyboard"],[3,"WlTouch"],[3,"WlOutput"],[3,"WlRegion"],[3,"WlSubcompositor"],[3,"WlSubsurface"]]};
searchIndex['wayland_sys'] = {"items":[[0,"","wayland_sys","FFI bindings to the wayland system libraries.",null,null],[0,"common","","Various types and functions that are used by both the client and the server\nlibraries.",null,null],[3,"wl_message","wayland_sys::common","",null,null],[12,"name","","",0,null],[12,"signature","","",0,null],[12,"types","","",0,null],[3,"wl_interface","","",null,null],[12,"name","","",1,null],[12,"version","","",1,null],[12,"request_count","","",1,null],[12,"requests","","",1,null],[12,"event_count","","",1,null],[12,"events","","",1,null],[3,"wl_list","","",null,null],[12,"prev","","",2,null],[12,"next","","",2,null],[3,"wl_array","","",null,null],[12,"size","","",3,null],[12,"alloc","","",3,null],[12,"data","","",3,null],[3,"wl_argument","","",null,null],[5,"wl_fixed_to_double","","",null,{"inputs":[{"name":"wl_fixed_t"}],"output":{"name":"f64"}}],[5,"wl_fixed_from_double","","",null,{"inputs":[{"name":"f64"}],"output":{"name":"wl_fixed_t"}}],[5,"wl_fixed_to_int","","",null,{"inputs":[{"name":"wl_fixed_t"}],"output":{"name":"i32"}}],[5,"wl_fixed_from_int","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"wl_fixed_t"}}],[6,"wl_fixed_t","","",null,null],[6,"wl_dispatcher_func_t","","",null,null],[6,"wl_log_func_t","","",null,null],[0,"client","wayland_sys","Bindings to the client library `libwayland-client.so`",null,null],[3,"WaylandClient","wayland_sys::client","",null,null],[12,"wl_display_connect_to_fd","","",4,null],[12,"wl_display_connect","","",4,null],[12,"wl_display_disconnect","","",4,null],[12,"wl_display_get_fd","","",4,null],[12,"wl_display_roundtrip","","",4,null],[12,"wl_display_read_events","","",4,null],[12,"wl_display_prepare_read","","",4,null],[12,"wl_display_cancel_read","","",4,null],[12,"wl_display_dispatch","","",4,null],[12,"wl_display_dispatch_pending","","",4,null],[12,"wl_display_get_error","","",4,null],[12,"wl_display_get_protocol_error","","",4,null],[12,"wl_display_flush","","",4,null],[12,"wl_event_queue_destroy","","",4,null],[12,"wl_display_create_queue","","",4,null],[12,"wl_display_roundtrip_queue","","",4,null],[12,"wl_display_prepare_read_queue","","",4,null],[12,"wl_display_dispatch_queue","","",4,null],[12,"wl_display_dispatch_queue_pending","","",4,null],[12,"wl_proxy_create","","",4,null],[12,"wl_proxy_destroy","","",4,null],[12,"wl_proxy_add_listener","","",4,null],[12,"wl_proxy_get_listener","","",4,null],[12,"wl_proxy_add_dispatcher","","",4,null],[12,"wl_proxy_marshal_array_constructor","","",4,null],[12,"wl_proxy_marshal_array","","",4,null],[12,"wl_proxy_set_user_data","","",4,null],[12,"wl_proxy_get_user_data","","",4,null],[12,"wl_proxy_get_id","","",4,null],[12,"wl_proxy_get_class","","",4,null],[12,"wl_proxy_set_queue","","",4,null],[12,"wl_log_set_handler_client","","",4,null],[12,"wl_list_init","","",4,null],[12,"wl_list_insert","","",4,null],[12,"wl_list_remove","","",4,null],[12,"wl_list_length","","",4,null],[12,"wl_list_empty","","",4,null],[12,"wl_list_insert_list","","",4,null],[12,"wl_array_init","","",4,null],[12,"wl_array_release","","",4,null],[12,"wl_array_add","","",4,null],[12,"wl_array_copy","","",4,null],[12,"wl_proxy_marshal_constructor","","",4,null],[12,"wl_proxy_marshal","","",4,null],[3,"WAYLAND_CLIENT_OPTION","","",null,null],[3,"WAYLAND_CLIENT_HANDLE","","",null,null],[4,"wl_proxy","","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_queue","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[11,"open","","",4,{"inputs":[{"name":"waylandclient"},{"name":"str"}],"output":{"name":"result"}}],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",5,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",5,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",5,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",5,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",5,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",5,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",5,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",5,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",5,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",5,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",5,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",5,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",5,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",5,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",5,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",5,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",5,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",5,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",5,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",5,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",5,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",5,null],[11,"cloned","","Maps an `Option<&T>` to an `Option<T>` by cloning the contents of the\noption.",5,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",5,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","core::num","",6,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"fmt","","",6,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",6,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",6,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",6,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",6,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",6,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",6,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",6,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",6,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",6,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",6,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",6,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",6,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",6,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",6,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",6,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",6,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",6,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",6,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",6,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",6,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",6,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",6,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",6,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",6,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",6,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",6,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",6,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",6,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",6,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",6,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",6,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"eq","core::num::flt2dec::decoder","",7,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"decoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"decoded"}],"output":{"name":"decoded"}}],[11,"eq","","",8,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"fmt","","",8,{"inputs":[{"name":"fulldecoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"fulldecoded"}],"output":{"name":"fulldecoded"}}],[11,"fmt","core::num::flt2dec","",9,{"inputs":[{"name":"part"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"part"}],"output":{"name":"part"}}],[11,"len","","Returns the exact byte length of given part.",9,{"inputs":[{"name":"part"}],"output":{"name":"usize"}}],[11,"write","","Writes a part into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",9,null],[11,"clone","","",10,{"inputs":[{"name":"formatted"}],"output":{"name":"formatted"}}],[11,"len","","Returns the exact byte length of combined formatted result.",10,{"inputs":[{"name":"formatted"}],"output":{"name":"usize"}}],[11,"write","","Writes all formatted parts into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",10,null],[11,"fmt","","",11,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","core::num::dec2flt::rawfp","",12,{"inputs":[{"name":"unpacked"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"unpacked"}],"output":{"name":"unpacked"}}],[11,"new","","",12,{"inputs":[{"name":"unpacked"},{"name":"u64"},{"name":"i16"}],"output":{"name":"unpacked"}}],[11,"fmt","core::num::dec2flt::parse","",13,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"fmt","","",14,{"inputs":[{"name":"decimal"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",14,null],[11,"eq","","",15,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"fmt","","",15,{"inputs":[{"name":"parseresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::dec2flt","",16,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",16,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",17,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"floaterrorkind"}],"output":{"name":"floaterrorkind"}}],[11,"fmt","","",17,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",16,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::bignum","Makes a bignum from one digit.",18,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"from_u64","","Makes a bignum from `u64` value.",18,{"inputs":[{"name":"big32x40"},{"name":"u64"}],"output":{"name":"big32x40"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",18,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",18,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",18,{"inputs":[{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",18,{"inputs":[{"name":"big32x40"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",18,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"add_small","","",18,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",18,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",18,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",18,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",18,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",18,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",18,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",18,null],[11,"eq","","",18,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",18,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"option"}}],[11,"cmp","","",18,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"ordering"}}],[11,"clone","","",18,{"inputs":[{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"fmt","","",18,{"inputs":[{"name":"big32x40"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::bignum::tests","Makes a bignum from one digit.",19,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"from_u64","","Makes a bignum from `u64` value.",19,{"inputs":[{"name":"big8x3"},{"name":"u64"}],"output":{"name":"big8x3"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",19,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",19,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",19,{"inputs":[{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",19,{"inputs":[{"name":"big8x3"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",19,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"add_small","","",19,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",19,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",19,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",19,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",19,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",19,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",19,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",19,null],[11,"eq","","",19,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",19,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"option"}}],[11,"cmp","","",19,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"ordering"}}],[11,"clone","","",19,{"inputs":[{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"fmt","","",19,{"inputs":[{"name":"big8x3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::num::diy_float","",20,{"inputs":[{"name":"fp"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"mul","","Returns a correctly rounded product of itself and `other`.",20,{"inputs":[{"name":"fp"},{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize","","Normalizes itself so that the resulting mantissa is at least `2^63`.",20,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize_to","","Normalizes itself to have the shared exponent.\nIt can only decrease the exponent (and thus increase the mantissa).",20,{"inputs":[{"name":"fp"},{"name":"i16"}],"output":{"name":"fp"}}],[11,"fmt","core::num","",21,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",21,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",22,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",22,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",23,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",22,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",24,null],[11,"fmt","","",24,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",24,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",24,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",24,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",24,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",24,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",24,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",24,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually \"non-zero\".",24,{"inputs":[{"name":"nonzero"},{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",24,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",25,null],[11,"get","","Dereferences the content.",25,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",25,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",25,null],[11,"fmt","","",25,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",26,null],[11,"clone","","",26,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",26,null],[11,"fmt","","",26,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::marker","",27,null],[11,"eq","","",27,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",27,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",27,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",27,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",28,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",28,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",29,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",30,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",30,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",31,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",31,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",31,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",32,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",32,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",32,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",32,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","wayland_sys","",33,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",33,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",33,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",33,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",33,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",33,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",33,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",33,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",34,null],[11,"fmt","","",34,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",34,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",34,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",34,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",35,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",36,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",37,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",38,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",39,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",35,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",35,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",35,null],[11,"swap","","Stores a value into the bool, returning the old value.",35,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",35,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",35,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",35,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",35,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",35,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",36,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",36,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",36,null],[11,"swap","","Stores a value into the isize, returning the old value.",36,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",36,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",36,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",36,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",36,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",36,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",36,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",37,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",37,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",37,null],[11,"swap","","Stores a value into the usize, returning the old value.",37,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",37,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",37,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",37,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",37,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",37,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",37,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",38,null],[11,"load","","Loads a value from the pointer.",38,null],[11,"store","","Stores a value into the pointer.",38,null],[11,"swap","","Stores a value into the pointer, returning the old value.",38,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",38,null],[11,"fmt","","",37,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",36,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",35,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",38,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",40,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",40,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",40,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",40,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",40,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",40,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",40,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",41,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",41,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",41,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",42,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",42,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",42,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",42,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",42,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",42,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",42,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",42,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",42,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",43,null],[11,"clone","","",43,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",44,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",44,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",44,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",44,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",45,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",45,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",46,null],[11,"deref","","",45,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",45,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",47,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",47,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",47,null],[11,"clone","core::char","",48,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",49,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",48,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"size_hint","","",48,null],[11,"clone","","",50,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",51,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",50,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",50,null],[11,"clone","core::iter","",52,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",52,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",52,null],[11,"next_back","","",52,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",53,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",53,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",53,null],[11,"next_back","","",53,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",54,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",54,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",54,null],[11,"clone","","",55,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"clone","","",56,{"inputs":[{"name":"chainstate"}],"output":{"name":"chainstate"}}],[11,"next","","",55,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",55,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",55,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",55,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",55,null],[11,"next_back","","",55,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",57,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",57,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",57,null],[11,"next_back","","",57,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",58,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",58,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",58,null],[11,"next_back","","",58,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",59,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",59,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"next_back","","",59,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",60,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",60,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",60,null],[11,"next_back","","",60,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",61,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",61,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"nth","","",61,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",61,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",61,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",62,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",62,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",62,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",62,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",62,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",62,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",62,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",62,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",63,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",63,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"clone","","",64,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",64,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"clone","","",65,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",65,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",65,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",65,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",65,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",65,null],[11,"clone","","",66,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",66,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",66,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",66,null],[11,"clone","","",67,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",67,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",67,null],[11,"clone","","",68,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",68,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",68,null],[11,"next_back","","",68,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",69,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",69,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",69,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",69,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",69,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",69,null],[11,"next_back","","",69,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",70,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",70,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",70,null],[11,"next_back","","",70,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",71,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",30,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",29,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",71,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",71,null],[11,"clone","","",72,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",72,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",72,null],[11,"next_back","","",72,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",71,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",71,null],[11,"next","core::ops","",29,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",29,null],[11,"next_back","","",29,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",30,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",73,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",73,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",73,null],[11,"next_back","","",73,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",74,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",74,null],[11,"next_back","","",74,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",74,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",74,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",74,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",75,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",75,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",75,null],[11,"next_back","","",75,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",75,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::option","",5,null],[11,"fmt","","",5,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",5,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",5,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"default","","",5,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",5,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",76,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",76,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",76,null],[11,"next_back","","",76,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",77,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",77,null],[11,"next_back","","",77,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",77,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",78,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",78,null],[11,"next_back","","",78,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",79,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",79,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",79,null],[11,"next_back","","",79,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",5,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",80,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",81,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",82,null],[11,"fmt","","",82,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",82,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",82,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",82,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",82,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",82,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",82,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",82,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",82,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",82,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",82,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",82,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",82,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",82,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",82,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",82,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",82,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",82,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",82,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",82,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",82,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",82,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",82,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",82,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",82,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",82,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",82,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",82,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",82,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",82,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",82,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",82,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",83,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",83,null],[11,"next_back","","",83,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",83,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",84,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",84,null],[11,"next_back","","",84,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",85,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",85,null],[11,"next_back","","",85,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",82,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::simd","",86,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",86,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",87,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",87,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",88,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",88,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",89,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",89,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",90,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",90,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",91,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",91,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",92,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",92,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",93,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",93,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",94,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",94,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",95,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",95,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"add","","",90,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"add","","",91,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"add","","",92,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"add","","",93,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"add","","",86,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"add","","",87,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"add","","",88,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"add","","",89,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"add","","",94,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"add","","",95,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"sub","","",90,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"sub","","",91,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"sub","","",92,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"sub","","",93,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"sub","","",86,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"sub","","",87,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"sub","","",88,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"sub","","",89,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"sub","","",94,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"sub","","",95,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"mul","","",90,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"mul","","",91,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"mul","","",92,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"mul","","",93,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"mul","","",86,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"mul","","",87,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"mul","","",88,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"mul","","",89,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"mul","","",94,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"mul","","",95,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"div","","",94,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"div","","",95,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"shl","","",90,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shl","","",91,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shl","","",92,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shl","","",93,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shl","","",86,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shl","","",87,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shl","","",88,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shl","","",89,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"shr","","",90,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shr","","",91,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shr","","",92,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shr","","",93,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shr","","",86,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shr","","",87,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shr","","",88,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shr","","",89,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitand","","",90,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitand","","",91,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitand","","",92,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitand","","",93,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitand","","",86,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitand","","",87,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitand","","",88,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitand","","",89,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitor","","",90,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitor","","",91,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitor","","",92,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitor","","",93,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitor","","",86,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitor","","",87,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitor","","",88,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitor","","",89,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitxor","","",90,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitxor","","",91,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitxor","","",92,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitxor","","",93,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitxor","","",86,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitxor","","",87,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitxor","","",88,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitxor","","",89,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",96,null],[11,"next","","",96,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",96,null],[11,"count","","",96,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",96,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",96,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",96,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",96,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",97,null],[11,"next","","",97,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",97,null],[11,"count","","",97,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",97,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",97,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",97,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",98,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",98,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",98,null],[11,"next_back","","",98,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",98,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",99,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",99,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",99,null],[11,"next_back","","",99,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",100,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",100,null],[11,"next","","",101,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",101,null],[11,"next","","",102,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",102,null],[11,"next","","",103,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",103,null],[11,"next","","",104,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",104,null],[11,"clone","","",105,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",105,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",105,null],[11,"count","","",105,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"nth","","",105,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",105,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"next_back","","",105,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"clone","","",106,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",106,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",106,null],[11,"count","","",106,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"nth","","",106,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",106,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next_back","","",106,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next","","",107,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",107,null],[11,"count","","",107,{"inputs":[{"name":"chunksmut"}],"output":{"name":"usize"}}],[11,"nth","","",107,{"inputs":[{"name":"chunksmut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",107,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"next_back","","",107,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"fmt","core::str::pattern","",108,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",108,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",108,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",108,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",109,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",110,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",109,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",109,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",109,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",111,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",111,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",111,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",111,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",111,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",111,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",111,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",111,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",112,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",112,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",112,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",112,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",112,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",112,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",112,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",112,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",113,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",113,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",113,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",113,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",113,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",113,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",113,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",113,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",114,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",114,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",115,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",115,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",116,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",116,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",114,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",114,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",114,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",114,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",114,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",117,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",117,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",118,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",118,null],[11,"matching","","",118,null],[11,"use_early_reject","","",119,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",119,null],[11,"matching","","",119,null],[11,"eq","core::str","",120,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",120,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",120,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",120,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",120,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",121,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",121,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",121,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",121,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",121,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",121,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",122,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",122,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",122,null],[11,"next_back","","",122,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",122,{"inputs":[{"name":"chars"}],"output":{"name":"str"}}],[11,"clone","","",123,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",123,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",123,null],[11,"next_back","","",123,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",123,{"inputs":[{"name":"charindices"}],"output":{"name":"str"}}],[11,"clone","","",124,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"next","","",124,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",124,null],[11,"count","","",124,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"last","","",124,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"nth","","",124,{"inputs":[{"name":"bytes"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next_back","","",124,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",124,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",125,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",126,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",126,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",127,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",127,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",126,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",127,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",128,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",128,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",129,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",129,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",128,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",129,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",130,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",131,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",131,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",132,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",132,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",133,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",134,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",134,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",135,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",135,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",134,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",135,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",136,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",137,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",137,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",138,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",138,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",137,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",138,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",139,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",139,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",139,null],[11,"next_back","","",139,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",140,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",141,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",141,null],[11,"call_mut","","",141,null],[11,"call_once","","",141,null],[11,"next","","",140,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",140,null],[11,"next_back","","",140,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",142,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",143,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",143,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",143,null],[11,"finish","","",143,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",143,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",143,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"eq","core::fmt::num","",144,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",144,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",144,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",145,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",145,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",145,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",146,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",146,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",147,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",147,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",147,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",148,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",148,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",148,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",149,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",149,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",149,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",150,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",151,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",152,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Finishes output and returns any error encountered.",152,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",153,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Finishes output and returns any error encountered.",153,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"formatter","","Returns the wrapped `Formatter`.",153,{"inputs":[{"name":"debugtuple"}],"output":{"name":"formatter"}}],[11,"finish","","",154,null],[11,"entry","","Adds a new entry to the set output.",155,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"entries","","Adds the contents of an iterator of entries to the set output.",155,{"inputs":[{"name":"debugset"},{"name":"i"}],"output":{"name":"debugset"}}],[11,"finish","","Finishes output and returns any error encountered.",155,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the list output.",156,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"entries","","Adds the contents of an iterator of entries to the list output.",156,{"inputs":[{"name":"debuglist"},{"name":"i"}],"output":{"name":"debuglist"}}],[11,"finish","","Finishes output and returns any error encountered.",156,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",157,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"entries","","Adds the contents of an iterator of entries to the map output.",157,{"inputs":[{"name":"debugmap"},{"name":"i"}],"output":{"name":"debugmap"}}],[11,"finish","","Finishes output and returns any error encountered.",157,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"clone","core::fmt::rt::v1","",158,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",159,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",160,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",160,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",160,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",161,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",162,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","core::fmt","",163,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",163,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",164,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",165,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",166,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",166,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",166,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",167,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",167,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",167,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",167,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",167,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as 'fill' whenever there is alignment",167,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",167,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",167,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",167,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"sign_plus","","Determines if the `+` flag was specified.",167,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_minus","","Determines if the `-` flag was specified.",167,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"alternate","","Determines if the `#` flag was specified.",167,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",167,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",167,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",167,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",167,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",167,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",167,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"write_str","","",167,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",167,{"inputs":[{"name":"formatter"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","",167,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"fmt","","",163,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",27,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",40,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",42,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",44,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",45,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","wayland_sys::client","",168,{"inputs":[{"name":"wayland_client_option"}],"output":{"name":"option"}}],[11,"deref","","",169,{"inputs":[{"name":"wayland_client_handle"}],"output":{"name":"waylandclient"}}],[0,"egl","wayland_sys","Bindings to the EGL library `libwayland-egl.so`",null,null],[3,"WaylandEgl","wayland_sys::egl","",null,null],[12,"wl_egl_window_create","","",170,null],[12,"wl_egl_window_destroy","","",170,null],[12,"wl_egl_window_resize","","",170,null],[12,"wl_egl_window_get_attached_size","","",170,null],[3,"WAYLAND_EGL_OPTION","","",null,null],[3,"WAYLAND_EGL_HANDLE","","",null,null],[4,"wl_egl_window","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[11,"open","","",170,{"inputs":[{"name":"waylandegl"},{"name":"str"}],"output":{"name":"result"}}],[11,"deref","","",171,{"inputs":[{"name":"wayland_egl_option"}],"output":{"name":"option"}}],[11,"deref","","",172,{"inputs":[{"name":"wayland_egl_handle"}],"output":{"name":"waylandegl"}}],[14,"ffi_dispatch!","wayland_sys","",null,null]],"paths":[[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[3,"WaylandClient"],[4,"Option"],[3,"Wrapping"],[3,"Decoded"],[4,"FullDecoded"],[4,"Part"],[3,"Formatted"],[4,"Sign"],[3,"Unpacked"],[4,"Sign"],[3,"Decimal"],[4,"ParseResult"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[3,"Big32x40"],[3,"Big8x3"],[3,"Fp"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[4,"ChainState"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"CharRange"],[3,"SipHasher"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[3,"WAYLAND_CLIENT_OPTION"],[3,"WAYLAND_CLIENT_HANDLE"],[3,"WaylandEgl"],[3,"WAYLAND_EGL_OPTION"],[3,"WAYLAND_EGL_HANDLE"]]};
searchIndex['tempfile'] = {"items":[[0,"","tempfile","Securely create and manage temporary files. Temporary files created by this create are\nautomatically deleted.",null,null],[3,"NamedTempFile","","A named temporary file.",null,null],[3,"TempFile","","An unnamed temporary file.",null,null],[11,"fmt","","",0,{"inputs":[{"name":"namedtempfile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"open","std::fs","Attempts to open a file in read-only mode.",1,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",1,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",1,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"metadata","","Queries metadata about the underlying file.",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"from","alloc::boxed","",2,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"box"},{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",3,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"str"}}],[11,"description","","",4,{"inputs":[{"name":"utf8error"}],"output":{"name":"str"}}],[11,"description","core::num","",5,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"description","core::num::dec2flt","",6,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"str"}}],[11,"description","collections::string","",7,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"str"}}],[11,"description","","",8,{"inputs":[{"name":"fromutf16error"}],"output":{"name":"str"}}],[11,"is","tempfile","Returns true if the boxed type is the same as `T`",9,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",9,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",9,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",9,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"next","std::ascii","",10,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",10,null],[11,"next_back","","",10,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"shl","core::num","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"clone","std::thread::local","",12,{"inputs":[{"name":"localkeystate"}],"output":{"name":"localkeystate"}}],[11,"eq","","",12,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"with","","Acquires a reference to the value in this TLS key.",13,{"inputs":[{"name":"localkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"state","","Query the current state of this key.",13,{"inputs":[{"name":"localkey"}],"output":{"name":"localkeystate"}}],[11,"new","std::thread::local::imp","",14,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"get","","",14,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"set","std::thread::scoped_tls","Inserts a value into this scoped thread local storage slot for a\nduration of a closure.",15,{"inputs":[{"name":"scopedkey"},{"name":"t"},{"name":"f"}],"output":{"name":"r"}}],[11,"with","","Gets a value out of this scoped variable.",15,{"inputs":[{"name":"scopedkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"is_set","","Test whether this TLS key has been `set` for the current thread.",15,{"inputs":[{"name":"scopedkey"}],"output":{"name":"bool"}}],[11,"new","std::thread::scoped_tls::imp","",16,{"inputs":[{"name":"keyinner"}],"output":{"name":"keyinner"}}],[11,"set","","",16,null],[11,"get","","",16,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",17,{"inputs":[{"name":"builder"}],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",17,{"inputs":[{"name":"builder"},{"name":"string"}],"output":{"name":"builder"}}],[11,"stack_size","","Sets the size of the stack for the new thread.",17,{"inputs":[{"name":"builder"},{"name":"usize"}],"output":{"name":"builder"}}],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",17,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"thread"}],"output":{"name":"thread"}}],[11,"unpark","","Atomically makes the handle's token available if it is not already.",18,null],[11,"name","","Gets the thread's name.",18,{"inputs":[{"name":"thread"}],"output":{"name":"option"}}],[11,"fmt","","",18,{"inputs":[{"name":"thread"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",18,{"inputs":[{"name":"thread"},{"name":"option"}],"output":{"name":"thread"}}],[11,"thread","","Extracts a handle to the underlying thread",19,{"inputs":[{"name":"joinhandle"}],"output":{"name":"thread"}}],[11,"join","","Waits for the associated thread to finish.",19,{"inputs":[{"name":"joinhandle"}],"output":{"name":"result"}}],[11,"clone","std::collections::hash::table","",20,{"inputs":[{"name":"rawbucket"}],"output":{"name":"rawbucket"}}],[11,"clone","","",21,{"inputs":[{"name":"bucket"}],"output":{"name":"bucket"}}],[11,"clone","","",22,{"inputs":[{"name":"safehash"}],"output":{"name":"safehash"}}],[11,"eq","","",22,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"inspect","","Peek at the hash value, which is guaranteed to be non-zero.",22,{"inputs":[{"name":"safehash"}],"output":{"name":"u64"}}],[11,"table","","Borrow a reference to the table.",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"table","","Borrow a reference to the table.",24,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",24,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",21,{"inputs":[{"name":"bucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",21,{"inputs":[{"name":"bucket"}],"output":{"name":"usize"}}],[11,"new","","",21,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"safehash"}],"output":{"name":"bucket"}}],[11,"at_index","","",21,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"usize"}],"output":{"name":"bucket"}}],[11,"first","","",21,{"inputs":[{"name":"bucket"},{"name":"m"}],"output":{"name":"bucket"}}],[11,"peek","","Reads a bucket at a given index, returning an enum indicating whether\nit's initialized or not. You need to match on this enum to get\nthe appropriate types to call most of the other functions in\nthis module.",21,{"inputs":[{"name":"bucket"}],"output":{"name":"bucketstate"}}],[11,"next","","Modifies the bucket pointer in place to make it point to the next slot.",21,null],[11,"next","","",24,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",24,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"gap_peek","","",24,{"inputs":[{"name":"emptybucket"}],"output":{"name":"option"}}],[11,"put","","Puts given key and value pair, along with the key's hash,\ninto this bucket in the hashtable. Note how `self` is 'moved' into\nthis function, because this slot will no longer be empty when\nwe return! A `FullBucket` is returned for later use, pointing to\nthe newly-filled slot in the hashtable.",24,{"inputs":[{"name":"emptybucket"},{"name":"safehash"},{"name":"k"},{"name":"v"}],"output":{"name":"fullbucket"}}],[11,"next","","",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"distance","","Get the distance between this bucket and the 'ideal' location\nas determined by the key's hash stored in it.",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"hash","","",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"safehash"}}],[11,"read","","Gets references to the key and value at a given index.",23,null],[11,"take","","Removes this bucket's key and value from the hashtable.",23,null],[11,"replace","","",23,null],[11,"read_mut","","Gets mutable references to the key and value at a given index.",23,null],[11,"into_refs","","Exchange a bucket state for immutable references into the table.\nBecause the underlying reference to the table is also consumed,\nno further changes to the structure of the table are possible;\nin exchange for this, the returned references have a longer lifetime\nthan the references returned by `read()`.",23,null],[11,"into_mut_refs","","This works similarly to `into_refs`, exchanging a bucket state\nfor mutable references into the table.",23,null],[11,"expect_full","","",25,{"inputs":[{"name":"bucketstate"}],"output":{"name":"fullbucket"}}],[11,"full","","",26,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"fullbucket"}}],[11,"shift","","",26,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"option"}}],[11,"new","","Creates a new raw table from a given capacity. All buckets are\ninitially empty.",27,{"inputs":[{"name":"rawtable"},{"name":"usize"}],"output":{"name":"rawtable"}}],[11,"capacity","","The hashtable's capacity, similar to a vector's.",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"size","","The number of elements ever `put` in the hashtable, minus the number\nof elements ever `take`n.",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"iter","","",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"iter"}}],[11,"iter_mut","","",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"itermut"}}],[11,"into_iter","","",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"intoiter"}}],[11,"drain","","",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"drain"}}],[11,"clone","","",28,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"rawbuckets"}}],[11,"next","","",28,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"option"}}],[11,"next","","",29,{"inputs":[{"name":"revmovebuckets"}],"output":{"name":"option"}}],[11,"clone","","",30,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",30,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",30,null],[11,"len","","",30,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",31,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",31,null],[11,"len","","",31,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",32,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",32,null],[11,"len","","",32,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",33,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",33,null],[11,"len","","",33,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"drop","","",33,null],[11,"clone","","",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"rawtable"}}],[11,"drop","","",27,null],[11,"clone","std::collections::hash::map","",34,{"inputs":[{"name":"defaultresizepolicy"}],"output":{"name":"defaultresizepolicy"}}],[11,"clone","","",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"new","","Creates an empty HashMap.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",35,{"inputs":[{"name":"hashmap"},{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hash_state","","Creates an empty hashmap which will use the given hasher to hash keys.",35,{"inputs":[{"name":"hashmap"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",35,{"inputs":[{"name":"hashmap"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",35,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",35,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&'a K`.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"keys"}}],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&'a V`.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"values"}}],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&'a K, &'a V)`.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&'a K, &'a mut V)`.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"itermut"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",35,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"len","","Returns the number of elements in the map.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"drain"}}],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",35,null],[11,"get","","Returns a reference to the value corresponding to the key.",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map.",35,{"inputs":[{"name":"hashmap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",35,{"inputs":[{"name":"hashmap"},{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"fmt","","",35,{"inputs":[{"name":"hashmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"index","","",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"v"}}],[11,"clone","","",36,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",37,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",38,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"intoiter"}}],[11,"next","","",36,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",36,null],[11,"len","","",36,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",39,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",39,null],[11,"len","","",39,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",40,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",40,null],[11,"len","","",40,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",37,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",37,null],[11,"len","","",37,{"inputs":[{"name":"keys"}],"output":{"name":"usize"}}],[11,"next","","",38,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",38,null],[11,"len","","",38,{"inputs":[{"name":"values"}],"output":{"name":"usize"}}],[11,"next","","",41,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",41,null],[11,"len","","",41,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",42,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",42,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",43,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",43,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",43,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry, and returns the entry's old value",43,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value out of the entry, and returns it",43,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it",44,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","","",35,{"inputs":[{"name":"hashmap"},{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",35,null],[11,"extend","","",35,null],[11,"clone","","",45,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",45,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"hasher","","",45,{"inputs":[{"name":"randomstate"}],"output":{"name":"siphasher"}}],[11,"default","","",45,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"get","","",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"take","","",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"replace","","",35,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"option"}}],[11,"clone","std::collections::hash::set","",46,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"new","","Creates an empty HashSet.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",46,{"inputs":[{"name":"hashset"},{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hash_state","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",46,{"inputs":[{"name":"hashset"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",46,{"inputs":[{"name":"hashset"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",46,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",46,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &'a T.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"iter"}}],[11,"difference","","Visit the values representing the difference.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visit the values representing the intersection.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"intersection"}}],[11,"union","","Visit the values representing the union.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"bool"}}],[11,"drain","","Clears the set, returning all elements in an iterator.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"drain"}}],[11,"clear","","Clears the set, removing all values.",46,null],[11,"contains","","Returns `true` if the set contains a value.",46,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",46,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set.",46,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",46,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"option"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",46,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",46,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"fmt","","",46,{"inputs":[{"name":"hashset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",46,{"inputs":[{"name":"hashset"},{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",46,null],[11,"extend","","",46,null],[11,"default","","",46,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"intoiter"}}],[11,"clone","","",47,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",47,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",47,null],[11,"len","","",47,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",48,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",48,null],[11,"len","","",48,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",49,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",49,null],[11,"len","","",49,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"clone","","",50,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"next","","",50,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",50,null],[11,"clone","","",51,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"next","","",51,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",51,null],[11,"clone","","",52,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",52,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",52,null],[11,"clone","","",53,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"next","","",53,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",53,null],[11,"hasher","std::collections::hash::state","",54,{"inputs":[{"name":"defaultstate"}],"output":{"name":"h"}}],[11,"clone","","",54,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"default","","",54,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"clone","collections::linked_list","",55,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",56,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"from","","",57,{"inputs":[{"name":"rawlink"},{"name":"option"}],"output":{"name":"rawlink"}}],[11,"clone","","",57,{"inputs":[{"name":"rawlink"}],"output":{"name":"rawlink"}}],[11,"default","","",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",58,null],[11,"iter","","Provides a forward iterator.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"iter"}}],[11,"iter_mut","","Provides a forward iterator with mutable references.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"itermut"}}],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of the `LinkedList`.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"usize"}}],[11,"clear","","Removes all elements from the `LinkedList`.",58,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_front","","Adds an element first in the list.",58,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_back","","Appends an element to the back of a list",58,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",58,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"linkedlist"}}],[11,"drop","","",58,null],[11,"next","","",55,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",55,null],[11,"next_back","","",55,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",59,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"next_back","","",59,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",59,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",59,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",56,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",56,null],[11,"next_back","","",56,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","",58,{"inputs":[{"name":"linkedlist"},{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"intoiter"}}],[11,"extend","","",58,null],[11,"extend","","",58,null],[11,"eq","","",58,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",58,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"cmp","","",58,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"ordering"}}],[11,"clone","","",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"fmt","","",58,{"inputs":[{"name":"linkedlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",58,null],[11,"clone","collections::binary_heap","",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"clone_from","","",60,null],[11,"default","","",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"fmt","","",60,{"inputs":[{"name":"binaryheap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",60,{"inputs":[{"name":"binaryheap"},{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"from_vec","","Creates a `BinaryHeap` from a vector. This is sometimes called\n`heapifying` the vector.",60,{"inputs":[{"name":"binaryheap"},{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"iter"}}],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",60,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",60,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",60,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"push","","Pushes an item onto the binary heap.",60,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",60,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"t"}}],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",60,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"option"}}],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of the binary heap.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"is_empty","","Checks if the binary heap is empty.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"drain"}}],[11,"clear","","Drops all items from the binary heap.",60,null],[11,"drop","","",61,null],[11,"clone","","",62,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",62,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",62,null],[11,"next_back","","",62,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",63,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"next_back","","",63,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"next","","",64,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"next_back","","",64,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"from","","",60,{"inputs":[{"name":"binaryheap"},{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",65,{"inputs":[{"name":"vec"},{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",60,{"inputs":[{"name":"binaryheap"},{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"intoiter"}}],[11,"extend","","",60,null],[11,"extend","","",60,null],[11,"clone","collections::vec_deque","",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"drop","","",66,null],[11,"default","","",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap","","Swaps elements at indices `i` and `j`.",66,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",66,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",66,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",66,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",66,null],[11,"iter","","Returns a front-to-back iterator.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"itermut"}}],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",66,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",66,null],[11,"len","","Returns the number of elements in the `VecDeque`.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the buffer contains no elements",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items from start to end. The element\nrange is removed even if the iterator is not consumed until the end.",66,{"inputs":[{"name":"vecdeque"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the buffer, removing all values.",66,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"push_front","","Inserts an element first in the sequence.",66,null],[11,"push_back","","Appends an element to the back of a buffer",66,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_back_remove","","deprecated",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_front_remove","","deprecated",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",66,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"split_off","","Splits the collection into two at the given index.",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",66,null],[11,"retain","","Retains only the elements specified by the predicate.",66,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",66,null],[11,"clone","","",67,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",67,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",67,null],[11,"next_back","","",67,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",68,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",68,null],[11,"next_back","","",68,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",69,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",69,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",69,null],[11,"next_back","","",69,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",70,null],[11,"next","","",70,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",70,null],[11,"next_back","","",70,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"eq","","",66,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",66,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"cmp","","",66,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"ordering"}}],[11,"hash","","",66,null],[11,"index","","",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"index_mut","","",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"from_iter","","",66,{"inputs":[{"name":"vecdeque"},{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"intoiter"}}],[11,"extend","","",66,null],[11,"extend","","",66,null],[11,"fmt","","",66,{"inputs":[{"name":"vecdeque"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","std::dynamic_lib","",71,null],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",71,{"inputs":[{"name":"dynamiclibrary"},{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process's search path for dynamic libraries",71,null],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",71,null],[11,"envvar","","Returns the environment variable for this process's dynamic library\nsearch path",71,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",71,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"vec"}}],[11,"symbol","","Accesses the value at the symbol of the dynamic library.",71,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}],[11,"next","std::env","",72,{"inputs":[{"name":"vars"}],"output":{"name":"option"}}],[11,"size_hint","","",72,null],[11,"next","","",73,{"inputs":[{"name":"varsos"}],"output":{"name":"option"}}],[11,"size_hint","","",73,null],[11,"clone","","",74,{"inputs":[{"name":"varerror"}],"output":{"name":"varerror"}}],[11,"eq","","",74,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"fmt","","",74,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",74,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",74,{"inputs":[{"name":"varerror"}],"output":{"name":"str"}}],[11,"next","","",75,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",75,null],[11,"fmt","","",76,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",76,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",76,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",77,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",77,null],[11,"len","","",77,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",78,{"inputs":[{"name":"argsos"}],"output":{"name":"option"}}],[11,"size_hint","","",78,null],[11,"len","","",78,{"inputs":[{"name":"argsos"}],"output":{"name":"usize"}}],[11,"clone","std::ffi::c_str","",79,{"inputs":[{"name":"cstring"}],"output":{"name":"cstring"}}],[11,"hash","","",79,null],[11,"cmp","","",79,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",79,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"option"}}],[11,"lt","","",79,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"le","","",79,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"gt","","",79,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ge","","",79,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"eq","","",79,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"hash","","",80,null],[11,"fmt","","",81,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",81,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"ne","","",81,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"clone","","",81,{"inputs":[{"name":"nulerror"}],"output":{"name":"nulerror"}}],[11,"fmt","","",82,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",82,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"ne","","",82,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"clone","","",82,{"inputs":[{"name":"intostringerror"}],"output":{"name":"intostringerror"}}],[11,"new","","Creates a new C-compatible string from a container of bytes.",79,{"inputs":[{"name":"cstring"},{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",79,{"inputs":[{"name":"cstring"},{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_ptr","","Retakes ownership of a CString that was transferred to C.",79,null],[11,"from_raw","","Retakes ownership of a CString that was transferred to C.",79,null],[11,"into_ptr","","Transfers ownership of the string to a C caller.",79,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",79,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",79,{"inputs":[{"name":"cstring"}],"output":{"name":"result"}}],[11,"into_bytes","","Returns the underlying byte buffer.",79,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",79,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",79,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",79,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",80,null],[11,"as_ptr","","Returns the inner pointer to this C string.",80,null],[11,"to_bytes","","Converts this C string to a byte slice.",80,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",80,null],[11,"to_str","","Yields a `&str` slice if the `CStr` contains valid UTF-8.",80,{"inputs":[{"name":"cstr"}],"output":{"name":"result"}}],[11,"to_string_lossy","","Converts a `CStr` into a `Cow<str>`.",80,{"inputs":[{"name":"cstr"}],"output":{"name":"cow"}}],[11,"deref","","",79,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"fmt","","",79,{"inputs":[{"name":"cstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",80,{"inputs":[{"name":"cstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",79,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",81,{"inputs":[{"name":"nulerror"}],"output":{"name":"usize"}}],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",81,{"inputs":[{"name":"nulerror"}],"output":{"name":"vec"}}],[11,"description","","",81,{"inputs":[{"name":"nulerror"}],"output":{"name":"str"}}],[11,"fmt","","",81,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","std::io::error","",83,{"inputs":[{"name":"error"},{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",82,{"inputs":[{"name":"intostringerror"}],"output":{"name":"cstring"}}],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",82,{"inputs":[{"name":"intostringerror"}],"output":{"name":"utf8error"}}],[11,"description","","",82,{"inputs":[{"name":"intostringerror"}],"output":{"name":"str"}}],[11,"fmt","","",82,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",80,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",80,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"option"}}],[11,"cmp","","",80,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"ordering"}}],[11,"to_owned","","",80,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"clone","std::ffi::os_str","",84,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"new","","Constructs a new empty `OsString`.",84,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"from_bytes","","Constructs an `OsString` from a byte sequence.",84,{"inputs":[{"name":"osstring"},{"name":"b"}],"output":{"name":"option"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",84,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",84,{"inputs":[{"name":"osstring"}],"output":{"name":"result"}}],[11,"push","","Extends the string with the given `&OsStr` slice.",84,null],[11,"from","","",84,{"inputs":[{"name":"osstring"},{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",84,{"inputs":[{"name":"osstring"},{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",84,{"inputs":[{"name":"osstring"},{"name":"rangefull"}],"output":{"name":"osstr"}}],[11,"new","","Coerces into an `OsStr` slice.",85,{"inputs":[{"name":"osstr"},{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `OsStr` is valid unicode.",85,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow<str>`.",85,{"inputs":[{"name":"osstr"}],"output":{"name":"cow"}}],[11,"to_os_string","","Copies the slice into an owned `OsString`.",85,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"to_bytes","","Yields this `OsStr` as a byte slice.",85,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_cstring","","Creates a `CString` containing this `OsStr` data.",85,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"deref","","",84,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"fmt","","",84,{"inputs":[{"name":"osstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",84,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","","",84,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",84,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"lt","","",84,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"le","","",84,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"gt","","",84,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"ge","","",84,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",84,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",84,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"ordering"}}],[11,"hash","","",84,null],[11,"eq","","",85,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","","",85,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",85,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"lt","","",85,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"le","","",85,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"gt","","",85,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"ge","","",85,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",85,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",85,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"ordering"}}],[11,"hash","","",85,null],[11,"fmt","","",85,{"inputs":[{"name":"osstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",84,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"to_owned","","",85,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"as_ref","","",85,{"inputs":[{"name":"osstr"}],"output":{"name":"osstr"}}],[11,"as_ref","","",84,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"as_ref","collections::string","",86,{"inputs":[{"name":"string"}],"output":{"name":"osstr"}}],[11,"clone","std::fs","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"metadata"}}],[11,"clone","","",88,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",89,{"inputs":[{"name":"permissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",89,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"clone","","",89,{"inputs":[{"name":"permissions"}],"output":{"name":"permissions"}}],[11,"hash","","",90,null],[11,"eq","","",90,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",90,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"fmt","","",1,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",1,null],[11,"read_to_end","","",1,{"inputs":[{"name":"file"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",1,null],[11,"flush","","",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",1,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"new","","Creates a blank net set of options ready for configuration.",88,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",88,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"write","","Sets the option for write access.",88,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"append","","Sets the option for the append mode.",88,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"truncate","","Sets the option for truncating a previous file.",88,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create","","Sets the option for creating a new file.",88,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"open","","Opens a file at `path` with the options specified by `self`.",88,{"inputs":[{"name":"openoptions"},{"name":"p"}],"output":{"name":"result"}}],[11,"file_type","","Returns the file type for this metadata.",87,{"inputs":[{"name":"metadata"}],"output":{"name":"filetype"}}],[11,"is_dir","","Returns whether this metadata is for a directory.",87,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether this metadata is for a regular file.",87,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"permissions","","Returns the permissions of the file this metadata is for.",87,{"inputs":[{"name":"metadata"}],"output":{"name":"permissions"}}],[11,"readonly","","Returns whether these permissions describe a readonly file.",89,{"inputs":[{"name":"permissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",89,null],[11,"is_dir","","Test whether this file type represents a directory.",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","Test whether this file type represents a regular file.",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","Test whether this file type represents a symbolic link.",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"next","","",91,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"path","","Returns the full path to the file that this entry represents.",92,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"metadata","","Return the metadata for the file that this entry points at.",92,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","Return the file type for the file that this entry points at.",92,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",92,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"next","","",93,{"inputs":[{"name":"walkdir"}],"output":{"name":"option"}}],[11,"metadata","std::path","",94,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","",94,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","",94,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","",94,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","",94,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","",94,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","",94,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","",94,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"new","std::fs","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",95,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",95,{"inputs":[{"name":"dirbuilder"},{"name":"bool"}],"output":{"name":"dirbuilder"}}],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",95,{"inputs":[{"name":"dirbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",96,{"inputs":[{"name":"bufreader"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",96,{"inputs":[{"name":"bufreader"},{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",96,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_mut","","Gets a mutable reference to the underlying reader.",96,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",96,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"read","","",96,null],[11,"fill_buf","","",96,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"consume","","",96,null],[11,"fmt","","",96,{"inputs":[{"name":"bufreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",96,{"inputs":[{"name":"bufreader"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fmt","","",97,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",98,{"inputs":[{"name":"bufwriter"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",98,{"inputs":[{"name":"bufwriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",98,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",98,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",98,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"write","","",98,null],[11,"flush","","",98,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"fmt","","",98,{"inputs":[{"name":"bufwriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",98,{"inputs":[{"name":"bufwriter"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"drop","","",98,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",97,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"into_inner","","Returns the buffered writer instance which generated the error.",97,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"w"}}],[11,"from","std::io::error","",83,{"inputs":[{"name":"error"},{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",97,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"str"}}],[11,"fmt","","",97,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `LineWriter`.",99,{"inputs":[{"name":"linewriter"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",99,{"inputs":[{"name":"linewriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",99,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",99,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",99,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"write","","",99,null],[11,"flush","","",99,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"fmt","","",99,{"inputs":[{"name":"linewriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",100,null],[11,"fmt","std::io::cursor","",101,{"inputs":[{"name":"cursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",101,{"inputs":[{"name":"cursor"}],"output":{"name":"cursor"}}],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",101,{"inputs":[{"name":"cursor"},{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",101,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",101,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",101,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"position","","Returns the current position of this cursor.",101,{"inputs":[{"name":"cursor"}],"output":{"name":"u64"}}],[11,"set_position","","Sets the position of this cursor.",101,null],[11,"seek","","",101,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"read","","",101,null],[11,"fill_buf","","",101,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",101,null],[11,"write","","",101,null],[11,"flush","","",101,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",101,null],[11,"flush","","",101,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",101,null],[11,"flush","","",101,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"fmt","std::io::error","",83,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",102,{"inputs":[{"name":"custom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",103,{"inputs":[{"name":"errorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",103,{"inputs":[{"name":"errorkind"}],"output":{"name":"errorkind"}}],[11,"eq","","",103,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",83,{"inputs":[{"name":"error"},{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",83,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",83,{"inputs":[{"name":"error"},{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",83,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",83,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",83,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",83,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",83,{"inputs":[{"name":"error"}],"output":{"name":"errorkind"}}],[11,"fmt","","",104,{"inputs":[{"name":"repr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",83,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",83,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",83,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"read","alloc::boxed","",2,null],[11,"read_to_end","","",2,{"inputs":[{"name":"box"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",2,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",2,null],[11,"write","","",2,null],[11,"flush","","",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"write_all","","",2,null],[11,"write_fmt","","",2,{"inputs":[{"name":"box"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"seek","","",2,{"inputs":[{"name":"box"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fill_buf","","",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"consume","","",2,null],[11,"read_until","","",2,{"inputs":[{"name":"box"},{"name":"u8"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_line","","",2,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","collections::vec","",65,null],[11,"write_all","","",65,null],[11,"flush","","",65,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"new","std::io::lazy","",105,null],[11,"get","","",105,{"inputs":[{"name":"lazy"}],"output":{"name":"option"}}],[11,"read","std::io::util","",106,null],[11,"fill_buf","","",106,{"inputs":[{"name":"empty"}],"output":{"name":"result"}}],[11,"consume","","",106,null],[11,"read","","",107,null],[11,"write","","",108,null],[11,"flush","","",108,{"inputs":[{"name":"sink"}],"output":{"name":"result"}}],[11,"read","std::io::stdio","",109,null],[11,"write","","",110,null],[11,"flush","","",110,{"inputs":[{"name":"stdoutraw"}],"output":{"name":"result"}}],[11,"write","","",111,null],[11,"flush","","",111,{"inputs":[{"name":"stderrraw"}],"output":{"name":"result"}}],[11,"write","","",112,null],[11,"flush","","",112,{"inputs":[{"name":"maybe"}],"output":{"name":"result"}}],[11,"read","","",112,null],[11,"lock","","Locks this handle to the standard input stream, returning a readable\nguard.",113,{"inputs":[{"name":"stdin"}],"output":{"name":"stdinlock"}}],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",113,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",113,null],[11,"read_to_end","","",113,{"inputs":[{"name":"stdin"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",113,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",113,null],[11,"read","","",114,null],[11,"read_to_end","","",114,{"inputs":[{"name":"stdinlock"},{"name":"vec"}],"output":{"name":"result"}}],[11,"fill_buf","","",114,{"inputs":[{"name":"stdinlock"}],"output":{"name":"result"}}],[11,"consume","","",114,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",115,{"inputs":[{"name":"stdout"}],"output":{"name":"stdoutlock"}}],[11,"write","","",115,null],[11,"flush","","",115,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write_all","","",115,null],[11,"write_fmt","","",115,{"inputs":[{"name":"stdout"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",116,null],[11,"flush","","",116,{"inputs":[{"name":"stdoutlock"}],"output":{"name":"result"}}],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",117,{"inputs":[{"name":"stderr"}],"output":{"name":"stderrlock"}}],[11,"write","","",117,null],[11,"flush","","",117,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write_all","","",117,null],[11,"write_fmt","","",117,{"inputs":[{"name":"stderr"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",118,null],[11,"flush","","",118,{"inputs":[{"name":"stderrlock"}],"output":{"name":"result"}}],[11,"fmt","std::io","",119,{"inputs":[{"name":"seekfrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",119,{"inputs":[{"name":"seekfrom"}],"output":{"name":"seekfrom"}}],[11,"eq","","",119,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"ne","","",119,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"write","","",120,null],[11,"flush","","",120,{"inputs":[{"name":"broadcast"}],"output":{"name":"result"}}],[11,"read","","",121,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",122,{"inputs":[{"name":"take"}],"output":{"name":"u64"}}],[11,"read","","",122,null],[11,"fill_buf","","",122,{"inputs":[{"name":"take"}],"output":{"name":"result"}}],[11,"consume","","",122,null],[11,"read","","",123,null],[11,"next","","",124,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"fmt","","",125,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",126,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"description","","",125,{"inputs":[{"name":"charserror"}],"output":{"name":"str"}}],[11,"cause","","",125,{"inputs":[{"name":"charserror"}],"output":{"name":"option"}}],[11,"fmt","","",125,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",127,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next","","",128,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"cmp","std::net::ip","",129,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",129,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"option"}}],[11,"lt","","",129,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"le","","",129,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"gt","","",129,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ge","","",129,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"hash","","",129,null],[11,"fmt","","",129,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",129,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ne","","",129,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"clone","","",129,{"inputs":[{"name":"ipaddr"}],"output":{"name":"ipaddr"}}],[11,"fmt","","",130,{"inputs":[{"name":"ipv6multicastscope"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",130,null],[11,"clone","","",130,{"inputs":[{"name":"ipv6multicastscope"}],"output":{"name":"ipv6multicastscope"}}],[11,"eq","","",130,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"ne","","",130,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",131,{"inputs":[{"name":"ipv4addr"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",131,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address 0.0.0.0.",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_private","","Returns true if this is a private address.",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_multicast","","Returns true if this is a multicast address.",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_broadcast","","Returns true if this is a broadcast address.",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"fmt","","",129,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",131,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",131,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv4addr"}}],[11,"eq","","",131,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"hash","","",131,null],[11,"partial_cmp","","",131,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"option"}}],[11,"cmp","","",131,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"ordering"}}],[11,"from","","",131,{"inputs":[{"name":"ipv4addr"},{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",132,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",132,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address ::.",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (::1).",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"multicast_scope","","Returns the address's multicast scope if the address is multicast.",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"is_multicast","","Returns true if this is a multicast address.",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"fmt","","",132,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",132,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6addr"}}],[11,"eq","","",132,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"hash","","",132,null],[11,"partial_cmp","","",132,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"cmp","","",132,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"ordering"}}],[11,"fmt","std::net::addr","",133,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",133,null],[11,"eq","","",133,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"ne","","",133,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"clone","","",133,{"inputs":[{"name":"socketaddr"}],"output":{"name":"socketaddr"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",133,{"inputs":[{"name":"socketaddr"},{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",133,{"inputs":[{"name":"socketaddr"}],"output":{"name":"ipaddr"}}],[11,"port","","Returns the port number associated with this socket address.",133,{"inputs":[{"name":"socketaddr"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",134,{"inputs":[{"name":"socketaddrv4"},{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",134,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"ipv4addr"}}],[11,"port","","Returns the port number associated with this socket address.",134,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",135,{"inputs":[{"name":"socketaddrv6"},{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",135,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"ipv6addr"}}],[11,"port","","Returns the port number associated with this socket address.",135,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u16"}}],[11,"flowinfo","","Returns scope ID associated with this address, corresponding to the\n`sin6_flowinfo` field in C.",135,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"scope_id","","Returns scope ID associated with this address, corresponding to the\n`sin6_scope_id` field in C.",135,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"fmt","","",133,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",135,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",135,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",134,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"socketaddrv4"}}],[11,"clone","","",135,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"socketaddrv6"}}],[11,"eq","","",134,{"inputs":[{"name":"socketaddrv4"},{"name":"socketaddrv4"}],"output":{"name":"bool"}}],[11,"eq","","",135,{"inputs":[{"name":"socketaddrv6"},{"name":"socketaddrv6"}],"output":{"name":"bool"}}],[11,"hash","","",134,null],[11,"hash","","",135,null],[11,"to_socket_addrs","","",133,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",134,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",135,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"result"}}],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",136,{"inputs":[{"name":"tcpstream"},{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",136,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",136,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",136,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",136,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",136,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",136,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",136,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",136,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",136,null],[11,"read_to_end","","",136,{"inputs":[{"name":"tcpstream"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",136,null],[11,"flush","","",136,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",136,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",137,{"inputs":[{"name":"tcplistener"},{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",137,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",137,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","Accept a new incoming connection from this listener.",137,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",137,{"inputs":[{"name":"tcplistener"}],"output":{"name":"incoming"}}],[11,"next","","",138,{"inputs":[{"name":"incoming"}],"output":{"name":"option"}}],[11,"fmt","","",137,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",139,{"inputs":[{"name":"udpsocket"},{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",139,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",139,null],[11,"local_addr","","Returns the socket address that this socket was created from.",139,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",139,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",139,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",139,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",139,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",139,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",139,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","std::net::ip","",129,{"inputs":[{"name":"ipaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",131,{"inputs":[{"name":"ipv4addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",132,{"inputs":[{"name":"ipv6addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",134,{"inputs":[{"name":"socketaddrv4"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",135,{"inputs":[{"name":"socketaddrv6"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",133,{"inputs":[{"name":"socketaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",140,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"clone","","",140,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"addrparseerror"}}],[11,"fmt","","",140,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",140,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"str"}}],[11,"fmt","std::net","",141,{"inputs":[{"name":"shutdown"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",141,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"clone","","",141,{"inputs":[{"name":"shutdown"}],"output":{"name":"shutdown"}}],[11,"next","","",142,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"clone","std::os::linux::raw::arch","",143,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"as_raw_fd","std::fs","",1,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",1,{"inputs":[{"name":"file"},{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",1,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::tcp","",136,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",137,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::udp","",139,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_raw_fd","std::net::tcp","",136,{"inputs":[{"name":"tcpstream"},{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",137,{"inputs":[{"name":"tcplistener"},{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",139,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",136,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",137,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"into_raw_fd","std::net::udp","",139,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_vec","std::ffi::os_str","",84,{"inputs":[{"name":"osstring"},{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",84,{"inputs":[{"name":"osstring"}],"output":{"name":"vec"}}],[11,"from_bytes","","",85,null],[11,"as_bytes","","",85,null],[11,"mode","std::fs","",89,{"inputs":[{"name":"permissions"}],"output":{"name":"u32"}}],[11,"set_mode","","",89,null],[11,"from_mode","","",89,{"inputs":[{"name":"permissions"},{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",88,{"inputs":[{"name":"openoptions"},{"name":"u32"}],"output":{"name":"openoptions"}}],[11,"dev","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"ino","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"mode","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"nlink","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"uid","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"gid","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"rdev","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"size","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime_nsec","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime_nsec","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime_nsec","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blksize","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blocks","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"is_block_device","","",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_char_device","","",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_fifo","","",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_socket","","",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ino","","",92,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"mode","","",95,{"inputs":[{"name":"dirbuilder"},{"name":"u32"}],"output":{"name":"dirbuilder"}}],[11,"uid","std::process","",144,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"gid","","",144,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"session_leader","","",144,{"inputs":[{"name":"command"},{"name":"bool"}],"output":{"name":"command"}}],[11,"signal","","",145,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"from_raw_fd","","",146,{"inputs":[{"name":"stdio"},{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",147,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",148,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",149,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",147,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",148,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",149,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"eq","std::path","",150,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ne","","",150,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"cmp","","",150,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",150,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"option"}}],[11,"lt","","",150,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"le","","",150,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"gt","","",150,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ge","","",150,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"hash","","",150,null],[11,"fmt","","",150,{"inputs":[{"name":"prefix"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",150,{"inputs":[{"name":"prefix"}],"output":{"name":"prefix"}}],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",150,{"inputs":[{"name":"prefix"}],"output":{"name":"bool"}}],[11,"fmt","","",151,{"inputs":[{"name":"state"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",151,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"option"}}],[11,"lt","","",151,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"le","","",151,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"gt","","",151,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ge","","",151,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"eq","","",151,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",151,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",151,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"fmt","","",152,{"inputs":[{"name":"prefixcomponent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",152,null],[11,"clone","","",152,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefixcomponent"}}],[11,"kind","","The parsed prefix data.",152,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefix"}}],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",152,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"osstr"}}],[11,"eq","","",152,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",152,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"option"}}],[11,"cmp","","",152,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"ordering"}}],[11,"fmt","","",153,{"inputs":[{"name":"component"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",153,null],[11,"cmp","","",153,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",153,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"option"}}],[11,"lt","","",153,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"le","","",153,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"gt","","",153,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ge","","",153,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"eq","","",153,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ne","","",153,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"clone","","",153,{"inputs":[{"name":"component"}],"output":{"name":"component"}}],[11,"as_os_str","","Extracts the underlying `OsStr` slice",153,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"as_ref","","",153,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"clone","","",154,{"inputs":[{"name":"components"}],"output":{"name":"components"}}],[11,"clone","","",155,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",154,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"peek","","Examine the next component without consuming it.",154,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"as_ref","","",154,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"as_ref","","",154,{"inputs":[{"name":"components"}],"output":{"name":"osstr"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",155,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",155,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",155,{"inputs":[{"name":"iter"}],"output":{"name":"osstr"}}],[11,"next","","",155,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",155,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",154,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"next_back","","",154,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"eq","","",154,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",154,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"option"}}],[11,"cmp","","",154,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"ordering"}}],[11,"hash","","",156,null],[11,"clone","","",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"new","","Allocates an empty `PathBuf`.",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"push","","Extends `self` with `path`.",156,null],[11,"pop","","Truncate `self` to `self.parent()`.",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",156,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",156,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"bool"}}],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"from","","",156,{"inputs":[{"name":"pathbuf"},{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",156,{"inputs":[{"name":"pathbuf"},{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",156,{"inputs":[{"name":"pathbuf"},{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",156,{"inputs":[{"name":"pathbuf"},{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",156,null],[11,"fmt","","",156,{"inputs":[{"name":"pathbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Directly wrap a string slice as a `Path` slice.",94,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",94,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `Path` is valid unicode.",94,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts a `Path` to a `Cow<str>`.",94,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",94,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",94,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_relative","","A path is *relative* if it is not absolute.",94,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"prefix","","Returns the *prefix* of a path, if any.",94,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",94,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"parent","","The path without its final component, if any.",94,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"file_name","","The final component of the path, if it is a normal file.",94,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"relative_from","","Returns a path that, when joined onto `base`, yields `self`.",94,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"option"}}],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",94,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",94,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",94,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",94,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",94,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"pathbuf"}}],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",94,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",94,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"components","","Produce an iterator over the components of the path.",94,{"inputs":[{"name":"path"}],"output":{"name":"components"}}],[11,"iter","","Produce an iterator over the path's components viewed as `OsStr` slices.",94,{"inputs":[{"name":"path"}],"output":{"name":"iter"}}],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",94,{"inputs":[{"name":"path"}],"output":{"name":"display"}}],[11,"metadata","","Gets information on the file, directory, etc at this path.",94,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","Gets information on the file, directory, etc at this path.",94,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","Returns the canonical form of a path, normalizing all components and\neliminate all symlinks.",94,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","Reads the symlink at this path.",94,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","Reads the directory at this path.",94,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","Boolean value indicator whether the underlying file exists on the local\nfilesystem. Returns false in exactly the cases where `fs::stat` fails.",94,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","Whether the underlying implementation (be it a file path, or something\nelse) points at a \"regular file\" on the FS. Will return false for paths\nto non-existent locations or directories or other non-regular files\n(named pipes, etc). Follows links when making this determination.",94,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","Whether the underlying implementation (be it a file path, or something\nelse) is pointing at a directory in the underlying FS. Will return\nfalse for paths to non-existent locations or if the item is not a\ndirectory (eg files, named pipes, etc). Follows links when making this\ndetermination.",94,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"deref","","",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"borrow","","",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"into_cow","","",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","","",94,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"eq","","",156,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",156,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"cmp","","",156,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"ordering"}}],[11,"as_ref","","",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstr"}}],[11,"into","","",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"hash","","",94,null],[11,"as_ref","","",94,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"fmt","","",94,{"inputs":[{"name":"path"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",157,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",157,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",94,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",94,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[11,"cmp","","",94,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"ordering"}}],[11,"as_ref","","",94,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"as_ref","std::ffi::os_str","",85,{"inputs":[{"name":"osstr"}],"output":{"name":"path"}}],[11,"as_ref","","",84,{"inputs":[{"name":"osstring"}],"output":{"name":"path"}}],[11,"as_ref","collections::string","",86,{"inputs":[{"name":"string"}],"output":{"name":"path"}}],[11,"as_ref","std::path","",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"write","std::process","",147,null],[11,"flush","","",147,{"inputs":[{"name":"childstdin"}],"output":{"name":"result"}}],[11,"read","","",148,null],[11,"read","","",149,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",144,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",144,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"args","","Add multiple arguments to pass to the program.",144,null],[11,"env","","Inserts or updates an environment variable mapping.",144,{"inputs":[{"name":"command"},{"name":"k"},{"name":"v"}],"output":{"name":"command"}}],[11,"env_remove","","Removes an environment variable mapping.",144,{"inputs":[{"name":"command"},{"name":"k"}],"output":{"name":"command"}}],[11,"env_clear","","Clears the entire environment map for the child process.",144,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"current_dir","","Sets the working directory for the child process.",144,{"inputs":[{"name":"command"},{"name":"p"}],"output":{"name":"command"}}],[11,"stdin","","Configuration for the child process's stdin handle (file descriptor 0).",144,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stdout","","Configuration for the child process's stdout handle (file descriptor 1).",144,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stderr","","Configuration for the child process's stderr handle (file descriptor 2).",144,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"spawn","","Executes the command as a child process, returning a handle to it.",144,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",144,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",144,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",144,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",158,{"inputs":[{"name":"output"}],"output":{"name":"output"}}],[11,"eq","","",158,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"ne","","",158,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",146,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",146,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",146,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"fmt","","",145,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",145,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",145,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",145,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",145,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","Returns the exit code of the process, if any.",145,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",145,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",159,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"id","","Returns the OS-assigned process identifier associated with this child.",159,{"inputs":[{"name":"child"}],"output":{"name":"u32"}}],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",159,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning a `Output`\ninstance.",159,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"clone","std::sync::mpsc::blocking","",160,{"inputs":[{"name":"signaltoken"}],"output":{"name":"signaltoken"}}],[11,"signal","","",160,{"inputs":[{"name":"signaltoken"}],"output":{"name":"bool"}}],[11,"cast_to_usize","","Convert to an unsafe usize value. Useful for storing in a pipe's state\nflag.",160,{"inputs":[{"name":"signaltoken"}],"output":{"name":"usize"}}],[11,"cast_from_usize","","Convert from an unsafe usize value. Useful for retrieving a pipe's state\nflag.",160,{"inputs":[{"name":"signaltoken"},{"name":"usize"}],"output":{"name":"signaltoken"}}],[11,"wait","","",161,null],[11,"new","std::sync::mpsc::oneshot","",162,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",162,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"sent","","",162,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"recv","","",162,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",162,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"upgrade","","",162,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"drop_chan","","",162,null],[11,"drop_port","","",162,null],[11,"can_recv","","",162,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",162,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",162,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop","","",162,null],[11,"eq","std::sync::mpsc::select","",163,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"ne","","",163,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new selection structure. This set is initially empty.",164,{"inputs":[{"name":"select"}],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",164,{"inputs":[{"name":"select"},{"name":"receiver"}],"output":{"name":"handle"}}],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",164,{"inputs":[{"name":"select"}],"output":{"name":"usize"}}],[11,"id","","Retrieves the id of this handle.",165,{"inputs":[{"name":"handle"}],"output":{"name":"usize"}}],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",165,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",165,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",165,null],[11,"drop","","",164,null],[11,"drop","","",165,null],[11,"next","","",166,{"inputs":[{"name":"packets"}],"output":{"name":"option"}}],[11,"new","std::sync::mpsc::shared","",167,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"postinit_lock","","",167,{"inputs":[{"name":"packet"}],"output":{"name":"mutexguard"}}],[11,"inherit_blocker","","",167,null],[11,"send","","",167,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",167,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",167,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",167,null],[11,"drop_chan","","",167,null],[11,"drop_port","","",167,null],[11,"can_recv","","",167,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",167,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",167,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"drop","","",167,null],[11,"new","std::sync::mpsc::stream","",168,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",168,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"upgrade","","",168,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"recv","","",168,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",168,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop_chan","","",168,null],[11,"drop_port","","",168,null],[11,"can_recv","","",168,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",168,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",168,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"result"}}],[11,"drop","","",168,null],[11,"fmt","std::sync::mpsc::sync","",169,{"inputs":[{"name":"failure"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",170,{"inputs":[{"name":"packet"},{"name":"usize"}],"output":{"name":"packet"}}],[11,"send","","",170,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","",170,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",170,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",170,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",170,null],[11,"drop_chan","","",170,null],[11,"drop_port","","",170,null],[11,"can_recv","","",170,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",170,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",170,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"drop","","",170,null],[11,"new","std::sync::mpsc::mpsc_queue","Creates a new queue that is safe to share among multiple producers and\none consumer.",171,{"inputs":[{"name":"queue"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue.",171,null],[11,"pop","","Pops some data from this queue.",171,{"inputs":[{"name":"queue"}],"output":{"name":"popresult"}}],[11,"drop","","",171,null],[11,"new","std::sync::mpsc::spsc_queue","Creates a new queue.",172,{"inputs":[{"name":"queue"},{"name":"usize"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue. Note that to use this function\nsafely, it must be externally guaranteed that there is only one pusher.",172,null],[11,"pop","","Attempts to pop a value from this queue. Remember that to use this type\nsafely you must ensure that there is only one popper at a time.",172,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"peek","","Attempts to peek at the head of the queue, returning `None` if the queue\nhas no data currently",172,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"drop","","",172,null],[11,"clone","std::sync::mpsc","",173,{"inputs":[{"name":"senderror"}],"output":{"name":"senderror"}}],[11,"eq","","",173,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",173,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"fmt","","",174,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",174,{"inputs":[{"name":"recverror"}],"output":{"name":"recverror"}}],[11,"eq","","",174,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"ne","","",174,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"fmt","","",175,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",175,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"tryrecverror"}}],[11,"eq","","",175,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"clone","","",176,{"inputs":[{"name":"trysenderror"}],"output":{"name":"trysenderror"}}],[11,"eq","","",176,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",176,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",177,{"inputs":[{"name":"sender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",177,{"inputs":[{"name":"sender"}],"output":{"name":"sender"}}],[11,"drop","","",177,null],[11,"send","","Sends a value on this synchronous channel.",178,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","Attempts to send a value on this channel without blocking.",178,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",178,{"inputs":[{"name":"syncsender"}],"output":{"name":"syncsender"}}],[11,"drop","","",178,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",179,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",179,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",179,{"inputs":[{"name":"receiver"}],"output":{"name":"iter"}}],[11,"next","","",180,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",181,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"into_iter","","",179,{"inputs":[{"name":"receiver"}],"output":{"name":"intoiter"}}],[11,"drop","","",179,null],[11,"fmt","","",173,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",173,{"inputs":[{"name":"senderror"}],"output":{"name":"str"}}],[11,"cause","","",173,{"inputs":[{"name":"senderror"}],"output":{"name":"option"}}],[11,"fmt","","",176,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",176,{"inputs":[{"name":"trysenderror"}],"output":{"name":"str"}}],[11,"cause","","",176,{"inputs":[{"name":"trysenderror"}],"output":{"name":"option"}}],[11,"fmt","","",174,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",174,{"inputs":[{"name":"recverror"}],"output":{"name":"str"}}],[11,"cause","","",174,{"inputs":[{"name":"recverror"}],"output":{"name":"option"}}],[11,"fmt","","",175,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",175,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"str"}}],[11,"cause","","",175,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"option"}}],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",182,{"inputs":[{"name":"barrier"},{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads has rendezvoused here.",182,{"inputs":[{"name":"barrier"}],"output":{"name":"barrierwaitresult"}}],[11,"is_leader","","Returns whether this thread from `wait` is the \"leader thread\".",183,{"inputs":[{"name":"barrierwaitresult"}],"output":{"name":"bool"}}],[11,"clone","std::sync::condvar","",184,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"waittimeoutresult"}}],[11,"eq","","",184,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"ne","","",184,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"fmt","","",184,{"inputs":[{"name":"waittimeoutresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"timed_out","","Returns whether the wait was known to have timed out.",184,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",185,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",185,{"inputs":[{"name":"condvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",185,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",185,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",185,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",185,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",185,null],[11,"drop","","",185,null],[11,"new","","Creates a new condition variable",186,{"inputs":[{"name":"staticcondvar"}],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",186,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",186,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",186,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",186,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",186,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",186,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",186,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",187,{"inputs":[{"name":"mutex"},{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",187,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",187,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",187,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this mutex, returning the underlying data.",187,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",187,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"drop","","",187,null],[11,"fmt","","",187,{"inputs":[{"name":"mutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new mutex in an unlocked state ready for use.",188,{"inputs":[{"name":"staticmutex"}],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",188,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",188,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates resources associated with this static mutex.",188,null],[11,"deref","","",189,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",189,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"drop","","",189,null],[11,"new","std::sync::once","Creates a new `Once` value.",190,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",190,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock<T>` which is unlocked.",191,{"inputs":[{"name":"rwlock"},{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",191,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",191,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",191,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",191,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",191,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",191,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",191,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"drop","","",191,null],[11,"fmt","","",191,{"inputs":[{"name":"rwlock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new rwlock.",192,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",192,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this lock with shared read access.",192,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",192,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",192,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates all resources associated with this static lock.",192,null],[11,"deref","","",193,{"inputs":[{"name":"rwlockreadguard"}],"output":{"name":"t"}}],[11,"deref","","",194,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",194,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"drop","","",193,null],[11,"drop","","",194,null],[11,"new","std::sync::semaphore","Creates a new semaphore with the initial count specified.",195,{"inputs":[{"name":"semaphore"},{"name":"isize"}],"output":{"name":"semaphore"}}],[11,"acquire","","Acquires a resource of this semaphore, blocking the current thread until\nit can do so.",195,null],[11,"release","","Release a resource from this semaphore.",195,null],[11,"access","","Acquires a resource of this semaphore, returning an RAII guard to\nrelease the semaphore when dropped.",195,{"inputs":[{"name":"semaphore"}],"output":{"name":"semaphoreguard"}}],[11,"drop","","",196,null],[11,"default","core::sync::atomic","",197,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",198,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",199,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",200,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",201,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",197,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",197,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",197,null],[11,"swap","","Stores a value into the bool, returning the old value.",197,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",197,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",197,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",197,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",197,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",197,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",198,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",198,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",198,null],[11,"swap","","Stores a value into the isize, returning the old value.",198,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",198,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",198,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",198,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",198,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",198,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",198,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",199,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",199,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",199,null],[11,"swap","","Stores a value into the usize, returning the old value.",199,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",199,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",199,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",199,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",199,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",199,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",199,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",200,null],[11,"load","","Loads a value from the pointer.",200,null],[11,"store","","Stores a value into the pointer.",200,null],[11,"swap","","Stores a value into the pointer, returning the old value.",200,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",200,null],[11,"fmt","","",199,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",198,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",197,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",200,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::time::duration","",202,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",202,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",202,{"inputs":[{"name":"duration"},{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",202,{"inputs":[{"name":"duration"},{"name":"f"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",202,{"inputs":[{"name":"duration"},{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",202,{"inputs":[{"name":"duration"},{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",202,{"inputs":[{"name":"duration"}],"output":{"name":"u64"}}],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",202,{"inputs":[{"name":"duration"}],"output":{"name":"u32"}}],[11,"add","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",202,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"div","","",202,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"new","std::sys_common::condvar","Creates a new condition variable for use.",203,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","Signals one waiter on this condition variable to wake up.",203,null],[11,"notify_all","","Awakens all current waiters on this condition variable.",203,null],[11,"wait","","Waits for a signal on the specified mutex.",203,null],[11,"wait_timeout","","Waits for a signal on the specified mutex with a timeout duration\nspecified by `dur` (a relative time into the future).",203,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","Deallocates all resources associated with this condition variable.",203,null],[11,"clone","std::sys_common::dwarf::eh","",204,{"inputs":[{"name":"ehcontext"}],"output":{"name":"ehcontext"}}],[11,"new","std::sys_common::dwarf","",205,null],[11,"read","","",205,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"t"}}],[11,"read_uleb128","","",205,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"u64"}}],[11,"read_sleb128","","",205,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"i64"}}],[11,"clone","std::sys_common::libunwind","",206,{"inputs":[{"name":"_unwind_action"}],"output":{"name":"_unwind_action"}}],[11,"clone","","",207,{"inputs":[{"name":"_unwind_reason_code"}],"output":{"name":"_unwind_reason_code"}}],[11,"new","std::sys_common::mutex","Creates a new mutex for use.",208,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","Locks the mutex blocking the current thread until it is available.",208,null],[11,"try_lock","","Attempts to lock the mutex without blocking, returning whether it was\nsuccessfully acquired or not.",208,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"unlock","","Unlocks the mutex.",208,null],[11,"destroy","","Deallocates all resources associated with this mutex.",208,null],[11,"next","std::sys_common::net","",209,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"drop","","",209,null],[11,"connect","","",210,{"inputs":[{"name":"tcpstream"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",210,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"into_socket","","",210,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"set_read_timeout","","",210,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",210,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",210,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","",210,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",210,null],[11,"write","","",210,null],[11,"peer_addr","","",210,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"socket_addr","","",210,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","",210,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"duplicate","","",210,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",210,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",211,{"inputs":[{"name":"tcplistener"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",211,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"into_socket","","",211,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"socket_addr","","",211,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","",211,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"duplicate","","",211,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"fmt","","",211,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",212,{"inputs":[{"name":"udpsocket"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",212,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"into_socket","","",212,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"socket_addr","","",212,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"recv_from","","",212,null],[11,"send_to","","",212,null],[11,"duplicate","","",212,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","",212,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",212,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",212,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","",212,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",212,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys_common::poison","",213,{"inputs":[{"name":"flag"}],"output":{"name":"flag"}}],[11,"borrow","","",213,{"inputs":[{"name":"flag"}],"output":{"name":"result"}}],[11,"done","","",213,null],[11,"get","","",213,{"inputs":[{"name":"flag"}],"output":{"name":"bool"}}],[11,"fmt","","",214,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",214,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",214,{"inputs":[{"name":"poisonerror"}],"output":{"name":"str"}}],[11,"new","","Creates a `PoisonError`.",214,{"inputs":[{"name":"poisonerror"},{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",214,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",214,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",214,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"from","","",215,{"inputs":[{"name":"trylockerror"},{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",215,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",215,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",215,{"inputs":[{"name":"trylockerror"}],"output":{"name":"str"}}],[11,"cause","","",215,{"inputs":[{"name":"trylockerror"}],"output":{"name":"option"}}],[11,"new","std::sys_common::remutex","Creates a new reentrant mutex in an unlocked state.",216,{"inputs":[{"name":"reentrantmutex"},{"name":"t"}],"output":{"name":"reentrantmutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",216,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",216,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"drop","","",216,null],[11,"fmt","","",216,{"inputs":[{"name":"reentrantmutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",217,{"inputs":[{"name":"reentrantmutexguard"}],"output":{"name":"t"}}],[11,"drop","","",217,null],[11,"new","std::sys_common::rwlock","Creates a new reader-writer lock for use.",218,{"inputs":[{"name":"rwlock"}],"output":{"name":"rwlock"}}],[11,"read","","Acquires shared access to the underlying lock, blocking the current\nthread to do so.",218,null],[11,"try_read","","Attempts to acquire shared access to this lock, returning whether it\nsucceeded or not.",218,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","Acquires write access to the underlying lock, blocking the current thread\nto do so.",218,null],[11,"try_write","","Attempts to acquire exclusive access to this lock, returning whether it\nsucceeded or not.",218,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","Unlocks previously acquired shared access to this lock.",218,null],[11,"write_unlock","","Unlocks previously acquired exclusive access to this lock.",218,null],[11,"destroy","","Destroys OS-related resources with this RWLock.",218,null],[11,"new","std::sys_common::thread_local","",219,{"inputs":[{"name":"statickey"},{"name":"option"}],"output":{"name":"statickey"}}],[11,"get","","Gets the value associated with this TLS key",219,null],[11,"set","","Sets this TLS key to a new value.",219,null],[11,"destroy","","Deallocates this OS TLS key.",219,null],[11,"new","","Creates a new managed OS TLS key.",220,{"inputs":[{"name":"key"},{"name":"option"}],"output":{"name":"key"}}],[11,"get","","See StaticKey::get",220,null],[11,"set","","See StaticKey::set",220,null],[11,"drop","","",220,null],[11,"clone","std::sys_common::wtf8","",221,{"inputs":[{"name":"codepoint"}],"output":{"name":"codepoint"}}],[11,"partial_cmp","","",221,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"option"}}],[11,"lt","","",221,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"le","","",221,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"gt","","",221,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ge","","",221,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"cmp","","",221,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"ordering"}}],[11,"eq","","",221,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ne","","",221,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"fmt","","",221,{"inputs":[{"name":"codepoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u32_unchecked","","Unsafely creates a new `CodePoint` without checking the value.",221,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"codepoint"}}],[11,"from_u32","","Creates a new `CodePoint` if the value is a valid code point.",221,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_char","","Creates a new `CodePoint` from a `char`.",221,{"inputs":[{"name":"codepoint"},{"name":"char"}],"output":{"name":"codepoint"}}],[11,"to_u32","","Returns the numeric value of the code point.",221,{"inputs":[{"name":"codepoint"}],"output":{"name":"u32"}}],[11,"to_char","","Optionally returns a Unicode scalar value for the code point.",221,{"inputs":[{"name":"codepoint"}],"output":{"name":"option"}}],[11,"to_char_lossy","","Returns a Unicode scalar value for the code point.",221,{"inputs":[{"name":"codepoint"}],"output":{"name":"char"}}],[11,"clone","","",222,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"partial_cmp","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"option"}}],[11,"lt","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"le","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"gt","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ge","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"cmp","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"ordering"}}],[11,"eq","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ne","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"from_str","","Creates a WTF-8 slice from a UTF-8 `&str` slice.",223,{"inputs":[{"name":"wtf8"},{"name":"str"}],"output":{"name":"wtf8"}}],[11,"len","","Returns the length, in WTF-8 bytes.",223,{"inputs":[{"name":"wtf8"}],"output":{"name":"usize"}}],[11,"ascii_byte_at","","Returns the code point at `position` if it is in the ASCII range,\nor `b'\\xFF' otherwise.",223,{"inputs":[{"name":"wtf8"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"code_points","","Returns an iterator for the string’s code points.",223,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8codepoints"}}],[11,"as_str","","Tries to convert the string to UTF-8 and return a `&str` slice.",223,{"inputs":[{"name":"wtf8"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Lossily converts the string to UTF-8.\nReturns a UTF-8 `&str` slice if the contents are well-formed in UTF-8.",223,{"inputs":[{"name":"wtf8"}],"output":{"name":"cow"}}],[11,"encode_wide","","Converts the WTF-8 string to potentially ill-formed UTF-16\nand return an iterator of 16-bit code units.",223,{"inputs":[{"name":"wtf8"}],"output":{"name":"encodewide"}}],[11,"deref","","",222,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"fmt","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new, empty WTF-8 string.",222,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"with_capacity","","Creates a new, empty WTF-8 string with pre-allocated capacity for `n` bytes.",222,{"inputs":[{"name":"wtf8buf"},{"name":"usize"}],"output":{"name":"wtf8buf"}}],[11,"from_string","","Creates a WTF-8 string from a UTF-8 `String`.",222,{"inputs":[{"name":"wtf8buf"},{"name":"string"}],"output":{"name":"wtf8buf"}}],[11,"from_str","","Creates a WTF-8 string from a UTF-8 `&str` slice.",222,{"inputs":[{"name":"wtf8buf"},{"name":"str"}],"output":{"name":"wtf8buf"}}],[11,"from_wide","","Creates a WTF-8 string from a potentially ill-formed UTF-16 slice of 16-bit code units.",222,null],[11,"as_slice","","",222,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `Wtf8Buf`.\nThe collection may reserve more space to avoid frequent reallocations.",222,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without reallocating.",222,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"usize"}}],[11,"push_str","","Append a UTF-8 slice at the end of the string.",222,null],[11,"push_wtf8","","Append a WTF-8 slice at the end of the string.",222,null],[11,"push_char","","Append a Unicode scalar value at the end of the string.",222,null],[11,"push","","Append a code point at the end of the string.",222,null],[11,"truncate","","Shortens a string to the specified length.",222,null],[11,"into_string","","Consumes the WTF-8 string and tries to convert it to UTF-8.",222,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"result"}}],[11,"into_string_lossy","","Consumes the WTF-8 string and converts it lossily to UTF-8.",222,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"string"}}],[11,"from_iter","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"t"}],"output":{"name":"wtf8buf"}}],[11,"extend","","",222,null],[11,"partial_cmp","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"option"}}],[11,"lt","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"le","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"gt","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ge","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"eq","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ne","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"cmp","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"ordering"}}],[11,"fmt","","",223,{"inputs":[{"name":"wtf8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",223,{"inputs":[{"name":"wtf8"},{"name":"range"}],"output":{"name":"wtf8"}}],[11,"index","","",223,{"inputs":[{"name":"wtf8"},{"name":"rangefrom"}],"output":{"name":"wtf8"}}],[11,"index","","",223,{"inputs":[{"name":"wtf8"},{"name":"rangeto"}],"output":{"name":"wtf8"}}],[11,"index","","",223,{"inputs":[{"name":"wtf8"},{"name":"rangefull"}],"output":{"name":"wtf8"}}],[11,"clone","","",224,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"wtf8codepoints"}}],[11,"next","","",224,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"option"}}],[11,"size_hint","","",224,null],[11,"clone","","",225,{"inputs":[{"name":"encodewide"}],"output":{"name":"encodewide"}}],[11,"next","","",225,{"inputs":[{"name":"encodewide"}],"output":{"name":"option"}}],[11,"size_hint","","",225,null],[11,"hash","","",221,null],[11,"hash","","",222,null],[11,"hash","","",223,null],[11,"is_ascii","","",223,{"inputs":[{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"to_ascii_uppercase","","",223,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"to_ascii_lowercase","","",223,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"eq_ignore_ascii_case","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"make_ascii_uppercase","","",223,null],[11,"make_ascii_lowercase","","",223,null],[11,"new","std::sys::condvar","",226,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","",226,null],[11,"notify_all","","",226,null],[11,"wait","","",226,null],[11,"wait_timeout","","",226,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","",226,null],[11,"new","std::sys::fd","",227,{"inputs":[{"name":"filedesc"},{"name":"i32"}],"output":{"name":"filedesc"}}],[11,"raw","","",227,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"into_raw","","Extracts the actual filedescriptor without closing it.",227,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"read","","",227,null],[11,"write","","",227,null],[11,"set_cloexec","","",227,null],[11,"drop","","",227,null],[11,"clone","std::sys::fs","",228,{"inputs":[{"name":"fileattr"}],"output":{"name":"fileattr"}}],[11,"clone","","",229,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",230,{"inputs":[{"name":"filepermissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",230,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"ne","","",230,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"clone","","",230,{"inputs":[{"name":"filepermissions"}],"output":{"name":"filepermissions"}}],[11,"hash","","",231,null],[11,"eq","","",231,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",231,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",231,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"size","","",228,{"inputs":[{"name":"fileattr"}],"output":{"name":"u64"}}],[11,"perm","","",228,{"inputs":[{"name":"fileattr"}],"output":{"name":"filepermissions"}}],[11,"file_type","","",228,{"inputs":[{"name":"fileattr"}],"output":{"name":"filetype"}}],[11,"as_raw_stat","std::fs","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"stat"}}],[11,"readonly","std::sys::fs","",230,{"inputs":[{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","",230,null],[11,"mode","","",230,{"inputs":[{"name":"filepermissions"}],"output":{"name":"u32"}}],[11,"is_dir","","",231,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","",231,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","",231,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is","","",231,{"inputs":[{"name":"filetype"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"next","","",232,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"drop","","",233,null],[11,"path","","",234,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"file_name","","",234,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"metadata","","",234,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","",234,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"ino","","",234,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"new","","",229,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","",229,null],[11,"write","","",229,null],[11,"append","","",229,null],[11,"truncate","","",229,null],[11,"create","","",229,null],[11,"mode","","",229,null],[11,"open","","",235,{"inputs":[{"name":"file"},{"name":"path"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"open_c","","",235,{"inputs":[{"name":"file"},{"name":"cstr"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"file_attr","","",235,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fsync","","",235,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"datasync","","",235,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"truncate","","",235,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read","","",235,null],[11,"write","","",235,null],[11,"flush","","",235,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",235,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fd","","",235,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",235,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"new","","",236,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"mkdir","","",236,{"inputs":[{"name":"dirbuilder"},{"name":"path"}],"output":{"name":"result"}}],[11,"set_mode","","",236,null],[11,"fmt","","",235,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys::mutex","",237,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","",237,null],[11,"unlock","","",237,null],[11,"try_lock","","",237,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"destroy","","",237,null],[11,"uninitialized","","",238,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"reentrantmutex"}}],[11,"init","","",238,null],[11,"lock","","",238,null],[11,"try_lock","","",238,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"bool"}}],[11,"unlock","","",238,null],[11,"destroy","","",238,null],[11,"new","std::sys::net","",239,{"inputs":[{"name":"socket"},{"name":"socketaddr"},{"name":"i32"}],"output":{"name":"result"}}],[11,"accept","","",239,null],[11,"duplicate","","",239,{"inputs":[{"name":"socket"}],"output":{"name":"result"}}],[11,"read","","",239,null],[11,"set_timeout","","",239,{"inputs":[{"name":"socket"},{"name":"option"},{"name":"i32"}],"output":{"name":"result"}}],[11,"timeout","","",239,{"inputs":[{"name":"socket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"next","std::sys::os","",240,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",240,null],[11,"fmt","","",241,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",241,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",241,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",242,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",242,null],[11,"len","","",242,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",243,{"inputs":[{"name":"env"}],"output":{"name":"option"}}],[11,"size_hint","","",243,null],[11,"hash","std::sys::os_str","",244,null],[11,"clone","","",244,{"inputs":[{"name":"buf"}],"output":{"name":"buf"}}],[11,"fmt","","",245,{"inputs":[{"name":"slice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",244,{"inputs":[{"name":"buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_string","","",244,{"inputs":[{"name":"buf"},{"name":"string"}],"output":{"name":"buf"}}],[11,"as_slice","","",244,{"inputs":[{"name":"buf"}],"output":{"name":"slice"}}],[11,"into_string","","",244,{"inputs":[{"name":"buf"}],"output":{"name":"result"}}],[11,"push_slice","","",244,null],[11,"from_str","","",245,{"inputs":[{"name":"slice"},{"name":"str"}],"output":{"name":"slice"}}],[11,"to_str","","",245,{"inputs":[{"name":"slice"}],"output":{"name":"option"}}],[11,"to_string_lossy","","",245,{"inputs":[{"name":"slice"}],"output":{"name":"cow"}}],[11,"to_owned","","",245,{"inputs":[{"name":"slice"}],"output":{"name":"buf"}}],[11,"from_fd","std::sys::pipe","",246,{"inputs":[{"name":"anonpipe"},{"name":"i32"}],"output":{"name":"anonpipe"}}],[11,"read","","",246,null],[11,"write","","",246,null],[11,"raw","","",246,{"inputs":[{"name":"anonpipe"}],"output":{"name":"i32"}}],[11,"fd","","",246,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",246,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"clone","std::sys::process","",247,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"new","","",247,{"inputs":[{"name":"command"},{"name":"osstr"}],"output":{"name":"command"}}],[11,"arg","","",247,null],[11,"args","","",247,null],[11,"env","","",247,null],[11,"env_remove","","",247,null],[11,"env_clear","","",247,null],[11,"cwd","","",247,null],[11,"fmt","","",248,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",248,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",248,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",248,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","",248,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","",248,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",248,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","",249,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"spawn","","",249,{"inputs":[{"name":"process"},{"name":"command"},{"name":"stdio"},{"name":"stdio"},{"name":"stdio"}],"output":{"name":"result"}}],[11,"id","","",249,{"inputs":[{"name":"process"}],"output":{"name":"u32"}}],[11,"wait","","",249,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"try_wait","","",249,{"inputs":[{"name":"process"}],"output":{"name":"option"}}],[11,"new","std::sys::rwlock","",250,{"inputs":[{"name":"rwlock"}],"output":{"name":"rwlock"}}],[11,"read","","",250,null],[11,"try_read","","",250,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","",250,null],[11,"try_write","","",250,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","",250,null],[11,"write_unlock","","",250,null],[11,"destroy","","",250,null],[11,"new","std::sys::stack_overflow","",251,{"inputs":[{"name":"handler"}],"output":{"name":"handler"}}],[11,"drop","","",251,null],[11,"new","std::sys::thread","",252,{"inputs":[{"name":"thread"},{"name":"usize"},{"name":"box"}],"output":{"name":"result"}}],[11,"yield_now","","",252,null],[11,"set_name","","",252,null],[11,"sleep","","",252,null],[11,"join","","",252,null],[11,"drop","","",252,null],[11,"now","std::sys::time::inner","",253,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"new","std::sys::stdio","",254,{"inputs":[{"name":"stdin"}],"output":{"name":"result"}}],[11,"read","","",254,null],[11,"new","","",255,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write","","",255,null],[11,"new","","",256,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write","","",256,null],[11,"write","","",256,null],[11,"flush","","",256,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"new","std::rand::os::imp","Create a new `OsRng`.",257,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",257,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",257,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",257,null],[11,"new","std::rand::reader","Create a new `ReaderRng` from a `Read`.",258,{"inputs":[{"name":"readerrng"},{"name":"r"}],"output":{"name":"readerrng"}}],[11,"next_u32","","",258,{"inputs":[{"name":"readerrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",258,{"inputs":[{"name":"readerrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",258,null],[11,"clone","std::rand","",259,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",259,{"inputs":[{"name":"stdrng"}],"output":{"name":"result"}}],[11,"next_u32","","",259,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",259,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",259,null],[11,"from_seed","","",259,null],[11,"reseed","","",260,null],[11,"clone","","",261,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",261,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",261,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",261,null],[11,"new","alloc::rc","Constructs a new `Rc<T>`.",262,{"inputs":[{"name":"rc"},{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc<T>` has only one strong reference.\nThis will succeed even if there are outstanding weak references.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Downgrades the `Rc<T>` to a `Weak<T>` reference.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak<T>` values that share\nthe same inner value.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc<T>` has\none strong reference and no weak references.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"make_unique","","",262,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"make_mut","","Make a mutable reference into the given `Rc<T>` by cloning the inner\ndata if the `Rc<T>` doesn't have one strong reference and no weak\nreferences.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",262,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Rc<T>`.",262,null],[11,"clone","","Makes a clone of the `Rc<T>`.",262,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"default","","Creates a new `Rc<T>`, with the `Default` value for `T`.",262,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc<T>`s.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Rc<T>`s.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Rc<T>`s.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Rc<T>`s.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"le","","'Less-than or equal to' comparison for two `Rc<T>`s.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Rc<T>`s.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ge","","'Greater-than or equal to' comparison for two `Rc<T>`s.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"cmp","","Comparison for two `Rc<T>`s.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"ordering"}}],[11,"hash","","",262,null],[11,"fmt","","",262,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",262,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",262,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",263,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Weak<T>`.",263,null],[11,"clone","","Makes a clone of the `Weak<T>`.",263,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"fmt","","",263,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",262,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"as_ref","","",262,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"fmt","core::cmp","",264,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",264,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",264,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",264,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",264,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",264,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",264,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"hash","core::marker","",265,null],[11,"eq","","",265,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",265,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",265,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",265,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"fmt","core::simd","",266,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",266,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",267,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",267,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",268,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",268,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",269,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",269,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",270,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",270,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",271,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",271,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",272,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",272,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",273,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",273,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",274,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",274,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",275,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",275,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"add","","",270,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"add","","",271,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"add","","",272,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"add","","",273,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"add","","",266,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"add","","",267,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"add","","",268,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"add","","",269,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"add","","",274,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"add","","",275,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"sub","","",270,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"sub","","",271,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"sub","","",272,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"sub","","",273,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"sub","","",266,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"sub","","",267,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"sub","","",268,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"sub","","",269,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"sub","","",274,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"sub","","",275,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"mul","","",270,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"mul","","",271,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"mul","","",272,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"mul","","",273,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"mul","","",266,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"mul","","",267,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"mul","","",268,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"mul","","",269,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"mul","","",274,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"mul","","",275,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"div","","",274,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"div","","",275,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"shl","","",270,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shl","","",271,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shl","","",272,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shl","","",273,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shl","","",266,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shl","","",267,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shl","","",268,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shl","","",269,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"shr","","",270,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shr","","",271,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shr","","",272,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shr","","",273,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shr","","",266,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shr","","",267,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shr","","",268,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shr","","",269,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitand","","",270,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitand","","",271,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitand","","",272,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitand","","",273,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitand","","",266,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitand","","",267,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitand","","",268,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitand","","",269,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitor","","",270,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitor","","",271,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitor","","",272,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitor","","",273,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitor","","",266,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitor","","",267,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitor","","",268,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitor","","",269,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitxor","","",270,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitxor","","",271,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitxor","","",272,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitxor","","",273,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitxor","","",266,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitxor","","",267,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitxor","","",268,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitxor","","",269,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"next","rustc_unicode::char","",276,{"inputs":[{"name":"tolowercase"}],"output":{"name":"option"}}],[11,"next","","",277,{"inputs":[{"name":"touppercase"}],"output":{"name":"option"}}],[11,"next","","",278,{"inputs":[{"name":"casemappingiter"}],"output":{"name":"option"}}],[11,"clone","","",279,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"decodeutf16"}}],[11,"next","","",279,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"option"}}],[11,"size_hint","","",279,null],[11,"borrow","collections::vec","",65,null],[11,"borrow_mut","","",65,null],[11,"eq","core::ops","",280,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",280,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",280,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",280,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",281,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",281,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",281,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",281,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",282,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",282,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",282,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",282,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",283,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",283,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",283,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",283,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::result","",284,null],[11,"fmt","","",284,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",284,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",284,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",284,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",284,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",284,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",284,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",284,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",284,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",284,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",284,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",284,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",284,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",284,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",284,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",284,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",284,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",284,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",284,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",284,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",284,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",284,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",285,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",285,null],[11,"next_back","","",285,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",285,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",286,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",286,null],[11,"next_back","","",286,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",287,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",287,null],[11,"next_back","","",287,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",284,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",288,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",288,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",288,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",288,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",288,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",288,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",288,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",289,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",289,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",289,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",289,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",290,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",290,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",290,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",290,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",290,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",290,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",290,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",290,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",290,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",291,null],[11,"clone","","",291,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",292,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",292,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",292,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",292,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",293,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",293,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",294,null],[11,"deref","","",293,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",293,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",295,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",295,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",295,null],[11,"clone","collections::str","",296,{"inputs":[{"name":"utf16units"}],"output":{"name":"utf16units"}}],[11,"next","","",296,{"inputs":[{"name":"utf16units"}],"output":{"name":"option"}}],[11,"size_hint","","",296,null],[11,"borrow","collections::string","",86,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"fmt","core::str::pattern","",297,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",297,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",297,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",297,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",298,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",299,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",298,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",298,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",298,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",300,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",300,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",300,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",300,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",300,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",300,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",300,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",300,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",301,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",301,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",301,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",301,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",301,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",301,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",301,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",301,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",302,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",302,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",302,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",302,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",302,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",302,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",302,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",302,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",303,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",303,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",304,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",304,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",305,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",305,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",303,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",303,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",303,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",303,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",303,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",306,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",306,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",307,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",307,null],[11,"matching","","",307,null],[11,"use_early_reject","","",308,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",308,null],[11,"matching","","",308,null],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",309,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",309,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",309,null],[11,"finish","","",309,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",309,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",309,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"borrow","collections::borrow","",310,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"clone","","",310,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",310,null],[11,"into_owned","","Extracts the owned data.",310,null],[11,"deref","","",310,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"cmp","","",310,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"ordering"}}],[11,"eq","","",310,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",310,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","","",310,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",310,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",310,null],[11,"into_cow","","",310,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"as_ref","","",310,{"inputs":[{"name":"cow"}],"output":{"name":"t"}}],[11,"new","collections::vec","Constructs a new, empty `Vec<T>`.",65,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec<T>` with the specified capacity.",65,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec<T>` directly from the raw components of another vector.",65,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",65,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec<T>`. The collection may reserve more space to avoid\nfrequent reallocations.",65,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec<T>`. Does nothing if the capacity is already\nsufficient.",65,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",65,null],[11,"into_boxed_slice","","Converts the vector into Box<[T]>.",65,{"inputs":[{"name":"vec"}],"output":{"name":"box"}}],[11,"truncate","","Shorten a vector, dropping excess elements.",65,null],[11,"as_slice","","Extracts a slice containing the entire vector.",65,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",65,null],[11,"set_len","","Sets the length of a vector.",65,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",65,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after position `i` one position to the right.",65,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after position `index` one position to the left.",65,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"retain","","Retains only the elements specified by the predicate.",65,null],[11,"push","","Appends an element to the back of a collection.",65,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",65,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",65,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",65,{"inputs":[{"name":"vec"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the vector, removing all values.",65,null],[11,"len","","Returns the number of elements in the vector.",65,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector contains no elements.",65,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"split_off","","Splits the collection into two at the given index.",65,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",65,null],[11,"push_all","","Appends all elements in a slice to the `Vec`.",65,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",65,null],[11,"clone","","",65,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"clone_from","","",65,null],[11,"hash","","",65,null],[11,"index","","",65,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",65,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index","","",65,null],[11,"index","","",65,null],[11,"index","","",65,null],[11,"index","","",65,null],[11,"index_mut","","",65,null],[11,"index_mut","","",65,null],[11,"index_mut","","",65,null],[11,"index_mut","","",65,null],[11,"deref","","",65,null],[11,"deref_mut","","",65,null],[11,"from_iter","","",65,{"inputs":[{"name":"vec"},{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",65,{"inputs":[{"name":"vec"}],"output":{"name":"intoiter"}}],[11,"extend","","",65,null],[11,"extend","","",65,null],[11,"eq","","",65,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","collections::borrow","",310,null],[11,"ne","","",310,null],[11,"eq","","",310,null],[11,"ne","","",310,null],[11,"eq","","",310,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",310,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","collections::vec","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"partial_cmp","","",65,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"option"}}],[11,"cmp","","",65,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"ordering"}}],[11,"drop","","",65,null],[11,"default","","",65,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"fmt","","",65,{"inputs":[{"name":"vec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",65,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_mut","","",65,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_ref","","",65,null],[11,"as_mut","","",65,null],[11,"from","","",65,null],[11,"from","","",65,{"inputs":[{"name":"vec"},{"name":"str"}],"output":{"name":"vec"}}],[11,"from_iter","collections::borrow","",310,{"inputs":[{"name":"cow"},{"name":"i"}],"output":{"name":"cow"}}],[11,"into_cow","collections::vec","",65,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"next","","",311,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",311,null],[11,"count","","",311,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next_back","","",311,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",311,null],[11,"next","","",312,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",312,null],[11,"next_back","","",312,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","","",312,null],[11,"clone","core::iter","",313,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",313,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",313,null],[11,"next_back","","",313,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",314,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",314,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",314,null],[11,"next_back","","",314,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",315,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",315,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",315,null],[11,"clone","","",316,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"clone","","",317,{"inputs":[{"name":"chainstate"}],"output":{"name":"chainstate"}}],[11,"next","","",316,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",316,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",316,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",316,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",316,null],[11,"next_back","","",316,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",318,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",318,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",318,null],[11,"next_back","","",318,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",319,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",319,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",319,null],[11,"next_back","","",319,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",320,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",320,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",320,null],[11,"next_back","","",320,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",321,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",321,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",321,null],[11,"next_back","","",321,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",322,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",322,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",322,null],[11,"nth","","",322,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",322,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",322,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",323,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",323,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",323,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",323,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",323,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",323,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",323,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",323,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",324,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",324,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",324,null],[11,"clone","","",325,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",325,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",325,null],[11,"clone","","",326,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",326,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",326,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",326,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",326,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",326,null],[11,"clone","","",327,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",327,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",327,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",327,null],[11,"clone","","",328,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",328,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",328,null],[11,"clone","","",329,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",329,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",329,null],[11,"next_back","","",329,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",330,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",330,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",330,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",330,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",330,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",330,null],[11,"next_back","","",330,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",331,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",331,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",331,null],[11,"next_back","","",331,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",332,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",282,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",281,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",332,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",332,null],[11,"clone","","",333,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",333,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",333,null],[11,"next_back","","",333,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",332,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",332,null],[11,"next","core::ops","",281,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",281,null],[11,"next_back","","",281,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",282,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",334,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",334,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",334,null],[11,"next_back","","",334,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",335,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",335,null],[11,"next_back","","",335,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",335,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",335,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",335,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",336,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",336,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",336,null],[11,"next_back","","",336,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",336,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"cmp","collections::string","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"option"}}],[11,"lt","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"le","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"gt","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ge","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new string buffer initialized with the empty string.",86,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new string buffer with the given capacity.\nThe string will be able to hold exactly `capacity` bytes without\nreallocating. If `capacity` is 0, the string will not allocate.",86,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",86,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a `String`, including invalid characters.",86,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `None`\nif `v` contains any invalid data.",86,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",86,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",86,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",86,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Returns the underlying byte buffer, encoded as UTF-8.",86,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"as_str","","Extracts a string slice containing the entire string.",86,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"push_str","","Pushes the given string onto this string buffer.",86,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without\nreallocating.",86,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `String`. The collection may reserve more space to avoid\nfrequent reallocations.",86,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bytes to be\ninserted in the given `String`. Does nothing if the capacity is already\nsufficient.",86,null],[11,"shrink_to_fit","","Shrinks the capacity of this string buffer to match its length.",86,null],[11,"push","","Adds the given character to the end of the string.",86,null],[11,"as_bytes","","Works with the underlying buffer as a byte slice.",86,null],[11,"truncate","","Shortens a string to the specified length.",86,null],[11,"pop","","Removes the last character from the string buffer and returns it.\nReturns `None` if this string buffer is empty.",86,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"remove","","Removes the character from the string buffer at byte position `idx` and\nreturns it.",86,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"char"}}],[11,"insert","","Inserts a character into the string buffer at byte position `idx`.",86,null],[11,"as_mut_vec","","Views the string buffer as a mutable sequence of bytes.",86,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"len","","Returns the number of bytes in this string.",86,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the string contains no bytes",86,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"clear","","Truncates the string, returning it to 0 length.",86,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",86,{"inputs":[{"name":"string"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_boxed_str","","Converts the string into `Box<str>`.",86,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_boxed_slice","","Converts the string into `Box<str>`.",86,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_bytes","","Consumes this error, returning the bytes that were attempted to make a\n`String` with.",7,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"vec"}}],[11,"utf8_error","","Access the underlying UTF8-error that was the cause of this error.",7,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"utf8error"}}],[11,"fmt","","",7,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",86,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"clone_from","","",86,null],[11,"from_iter","","",86,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",86,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",86,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",86,null],[11,"extend","","",86,null],[11,"extend","","",86,null],[11,"extend","","",86,null],[11,"eq","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",310,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",310,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",310,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",310,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",86,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",310,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",310,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"default","collections::string","",86,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",86,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",86,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",86,null],[11,"add","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"index","","",86,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index","","",86,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index","","",86,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index","","",86,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"index_mut","","",86,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index_mut","","",86,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index_mut","","",86,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index_mut","","",86,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"deref","","",86,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"deref_mut","","",86,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"from_str","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",337,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"fmt","","",337,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",337,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"as_ref","","",86,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_ref","","",86,null],[11,"from","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",310,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",310,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",86,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"into_cow","","",86,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"write_str","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",86,{"inputs":[{"name":"string"},{"name":"char"}],"output":{"name":"result"}}],[11,"drop","","",338,null],[11,"next","","",338,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",338,null],[11,"next_back","","",338,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"fmt","tempfile","",339,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",339,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",339,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",339,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",339,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",339,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",339,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",339,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",340,null],[11,"fmt","","",340,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",340,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",340,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",340,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",340,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"hash","core::option","",341,null],[11,"fmt","","",341,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",341,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"is_some","","Returns `true` if the option is a `Some` value",341,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",341,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",341,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",341,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",341,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",341,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",341,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",341,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",341,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",341,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",341,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",341,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",341,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",341,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",341,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",341,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",341,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",341,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",341,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",341,null],[11,"cloned","","Maps an `Option<&T>` to an `Option<T>` by cloning the contents of the\noption.",341,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",341,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","","",341,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",341,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",342,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",342,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",342,null],[11,"next_back","","",342,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",343,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",343,null],[11,"next_back","","",343,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",343,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",344,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",344,null],[11,"next_back","","",344,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",345,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",345,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",345,null],[11,"next_back","","",345,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",341,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","alloc::boxed","",346,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"exchangeheapsingleton"}}],[11,"pointer","","",347,null],[11,"make_place","","",347,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"intermediatebox"}}],[11,"finalize","","",347,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"finalize","","",2,{"inputs":[{"name":"box"},{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",346,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"intermediatebox"}}],[11,"drop","","",347,null],[11,"new","","Allocates memory on the heap and then moves `x` into it.",2,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from the raw pointer.",2,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",2,null],[11,"default","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"default","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box's contents.",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`'s contents into `self` without creating a new allocation.",2,null],[11,"clone","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"eq","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",2,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"next","","",2,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",2,null],[11,"next_back","","",2,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"call_once","","",2,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"call_once","","",2,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"clone","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"borrow","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"borrow_mut","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_ref","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_mut","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",348,null],[11,"get","","Dereferences the content.",348,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",348,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",348,null],[11,"fmt","","",348,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",349,null],[11,"clone","","",349,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",349,null],[11,"fmt","","",349,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","core::raw","",350,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",351,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"clone","core::fmt::rt::v1","",352,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",353,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",354,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",354,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",354,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",355,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",356,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"deref","tempfile","",0,{"inputs":[{"name":"namedtempfile"}],"output":{"name":"file"}}],[11,"deref_mut","","",0,{"inputs":[{"name":"namedtempfile"}],"output":{"name":"file"}}],[11,"from","std::io::error","",83,{"inputs":[{"name":"error"},{"name":"persisterror"}],"output":{"name":"error"}}],[11,"new","tempfile","Create a new temporary file.",0,{"inputs":[{"name":"namedtempfile"}],"output":{"name":"result"}}],[11,"new_in","","Create a new temporary file in the specified directory.",0,{"inputs":[{"name":"namedtempfile"},{"name":"p"}],"output":{"name":"result"}}],[11,"path","","Get the temporary file's path.",0,{"inputs":[{"name":"namedtempfile"}],"output":{"name":"path"}}],[11,"close","","Close and remove the temporary file.",0,{"inputs":[{"name":"namedtempfile"}],"output":{"name":"result"}}],[11,"persist","","Persist the temporary file at the target path.",0,{"inputs":[{"name":"namedtempfile"},{"name":"p"}],"output":{"name":"result"}}],[11,"drop","","",0,{"inputs":[{"name":"namedtempfile"}],"output":null}],[11,"read","","",0,null],[11,"write","","",0,null],[11,"flush","","",0,{"inputs":[{"name":"namedtempfile"}],"output":{"name":"result"}}],[11,"seek","","",0,{"inputs":[{"name":"namedtempfile"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"as_raw_fd","","",0,{"inputs":[{"name":"namedtempfile"}],"output":{"name":"rawfd"}}],[11,"fmt","","",357,{"inputs":[{"name":"tempfile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new temporary file.",357,{"inputs":[{"name":"tempfile"}],"output":{"name":"result"}}],[11,"new_in","","Create a new temporary file in the specified directory.",357,{"inputs":[{"name":"tempfile"},{"name":"p"}],"output":{"name":"result"}}],[11,"shared","","Create a new temporary file and open it `count` times returning `count` independent\nreferences to the same file.",357,{"inputs":[{"name":"tempfile"},{"name":"usize"}],"output":{"name":"result"}}],[11,"shared_in","","Same as `shared` but creates the file in the specified directory.",357,{"inputs":[{"name":"tempfile"},{"name":"p"},{"name":"usize"}],"output":{"name":"result"}}],[11,"len","","Number of bytes in the file.",357,{"inputs":[{"name":"tempfile"}],"output":{"name":"result"}}],[11,"set_len","","Truncate the file to `size` bytes.",357,{"inputs":[{"name":"tempfile"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read","","",357,null],[11,"write","","",357,null],[11,"flush","","",357,{"inputs":[{"name":"tempfile"}],"output":{"name":"result"}}],[11,"seek","","",357,{"inputs":[{"name":"tempfile"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"as_raw_fd","","",357,{"inputs":[{"name":"tempfile"}],"output":{"name":"rawfd"}}]],"paths":[[3,"NamedTempFile"],[3,"File"],[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[8,"Error"],[3,"EscapeDefault"],[3,"Wrapping"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"ScopedKey"],[3,"KeyInner"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"RawBucket"],[3,"Bucket"],[3,"SafeHash"],[3,"FullBucket"],[3,"EmptyBucket"],[4,"BucketState"],[3,"GapThenFull"],[3,"RawTable"],[3,"RawBuckets"],[3,"RevMoveBuckets"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DefaultResizePolicy"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"DefaultState"],[3,"Iter"],[3,"IntoIter"],[3,"Rawlink"],[3,"LinkedList"],[3,"IterMut"],[3,"BinaryHeap"],[3,"Hole"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DynamicLibrary"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"ReadDir"],[3,"DirEntry"],[3,"WalkDir"],[3,"Path"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"InternalBufWriter"],[3,"Cursor"],[3,"Custom"],[4,"ErrorKind"],[4,"Repr"],[3,"Lazy"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"StdinRaw"],[3,"StdoutRaw"],[3,"StderrRaw"],[4,"Maybe"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Broadcast"],[3,"Chain"],[3,"Take"],[3,"Tee"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[4,"Prefix"],[4,"State"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"SignalToken"],[3,"WaitToken"],[3,"Packet"],[4,"StartResult"],[3,"Select"],[3,"Handle"],[3,"Packets"],[3,"Packet"],[3,"Packet"],[4,"Failure"],[3,"Packet"],[3,"Queue"],[3,"Queue"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"Mutex"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Semaphore"],[3,"SemaphoreGuard"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Duration"],[3,"Condvar"],[3,"EHContext"],[3,"DwarfReader"],[4,"_Unwind_Action"],[4,"_Unwind_Reason_Code"],[3,"Mutex"],[3,"LookupHost"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[3,"Flag"],[3,"PoisonError"],[4,"TryLockError"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"RWLock"],[3,"StaticKey"],[3,"Key"],[3,"CodePoint"],[3,"Wtf8Buf"],[3,"Wtf8"],[3,"Wtf8CodePoints"],[3,"EncodeWide"],[3,"Condvar"],[3,"FileDesc"],[3,"FileAttr"],[3,"OpenOptions"],[3,"FilePermissions"],[3,"FileType"],[3,"ReadDir"],[3,"Dir"],[3,"DirEntry"],[3,"File"],[3,"DirBuilder"],[3,"Mutex"],[3,"ReentrantMutex"],[3,"Socket"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"Env"],[3,"Buf"],[3,"Slice"],[3,"AnonPipe"],[3,"Command"],[4,"ExitStatus"],[3,"Process"],[3,"RWLock"],[3,"Handler"],[3,"Thread"],[3,"SteadyTime"],[3,"Stdin"],[3,"Stdout"],[3,"Stderr"],[3,"OsRng"],[3,"ReaderRng"],[3,"StdRng"],[3,"ThreadRngReseeder"],[3,"ThreadRng"],[3,"Rc"],[3,"Weak"],[4,"Ordering"],[3,"PhantomData"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"ToLowercase"],[3,"ToUppercase"],[4,"CaseMappingIter"],[3,"DecodeUtf16"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"Utf16Units"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"SipHasher"],[4,"Cow"],[3,"IntoIter"],[3,"Drain"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[4,"ChainState"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[4,"ParseError"],[3,"Drain"],[8,"Any"],[3,"TypeId"],[4,"Option"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"Unique"],[3,"Shared"],[3,"Slice"],[3,"TraitObject"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"TempFile"]]};
searchIndex['dlib'] = {"items":[[0,"","dlib","",null,null],[11,"new","libloading","Find and load a shared library (module).",0,{"inputs":[{"name":"library"},{"name":"p"}],"output":{"name":"result"}}],[11,"get","","Get a symbol by name.",0,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",1,{"inputs":[{"name":"mutex"},{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this mutex, returning the underlying data.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"from","alloc::boxed","",2,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"box"},{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",3,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"str"}}],[11,"description","","",4,{"inputs":[{"name":"utf8error"}],"output":{"name":"str"}}],[11,"description","core::num","",5,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"description","core::num::dec2flt","",6,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"str"}}],[11,"description","collections::string","",7,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"str"}}],[11,"description","","",8,{"inputs":[{"name":"fromutf16error"}],"output":{"name":"str"}}],[11,"is","","Returns true if the boxed type is the same as `T`",9,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",9,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",9,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",9,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"next","std::ascii","",10,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",10,null],[11,"next_back","","",10,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"shl","core::num","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"clone","std::thread::local","",12,{"inputs":[{"name":"localkeystate"}],"output":{"name":"localkeystate"}}],[11,"eq","","",12,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"with","","Acquires a reference to the value in this TLS key.",13,{"inputs":[{"name":"localkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"state","","Query the current state of this key.",13,{"inputs":[{"name":"localkey"}],"output":{"name":"localkeystate"}}],[11,"new","std::thread::local::imp","",14,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"get","","",14,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"set","std::thread::scoped_tls","Inserts a value into this scoped thread local storage slot for a\nduration of a closure.",15,{"inputs":[{"name":"scopedkey"},{"name":"t"},{"name":"f"}],"output":{"name":"r"}}],[11,"with","","Gets a value out of this scoped variable.",15,{"inputs":[{"name":"scopedkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"is_set","","Test whether this TLS key has been `set` for the current thread.",15,{"inputs":[{"name":"scopedkey"}],"output":{"name":"bool"}}],[11,"new","std::thread::scoped_tls::imp","",16,{"inputs":[{"name":"keyinner"}],"output":{"name":"keyinner"}}],[11,"set","","",16,null],[11,"get","","",16,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",17,{"inputs":[{"name":"builder"}],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",17,{"inputs":[{"name":"builder"},{"name":"string"}],"output":{"name":"builder"}}],[11,"stack_size","","Sets the size of the stack for the new thread.",17,{"inputs":[{"name":"builder"},{"name":"usize"}],"output":{"name":"builder"}}],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",17,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"thread"}],"output":{"name":"thread"}}],[11,"unpark","","Atomically makes the handle's token available if it is not already.",18,null],[11,"name","","Gets the thread's name.",18,{"inputs":[{"name":"thread"}],"output":{"name":"option"}}],[11,"fmt","","",18,{"inputs":[{"name":"thread"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",18,{"inputs":[{"name":"thread"},{"name":"option"}],"output":{"name":"thread"}}],[11,"thread","","Extracts a handle to the underlying thread",19,{"inputs":[{"name":"joinhandle"}],"output":{"name":"thread"}}],[11,"join","","Waits for the associated thread to finish.",19,{"inputs":[{"name":"joinhandle"}],"output":{"name":"result"}}],[11,"clone","std::collections::hash::table","",20,{"inputs":[{"name":"rawbucket"}],"output":{"name":"rawbucket"}}],[11,"clone","","",21,{"inputs":[{"name":"bucket"}],"output":{"name":"bucket"}}],[11,"clone","","",22,{"inputs":[{"name":"safehash"}],"output":{"name":"safehash"}}],[11,"eq","","",22,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"inspect","","Peek at the hash value, which is guaranteed to be non-zero.",22,{"inputs":[{"name":"safehash"}],"output":{"name":"u64"}}],[11,"table","","Borrow a reference to the table.",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"table","","Borrow a reference to the table.",24,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",24,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",21,{"inputs":[{"name":"bucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",21,{"inputs":[{"name":"bucket"}],"output":{"name":"usize"}}],[11,"new","","",21,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"safehash"}],"output":{"name":"bucket"}}],[11,"at_index","","",21,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"usize"}],"output":{"name":"bucket"}}],[11,"first","","",21,{"inputs":[{"name":"bucket"},{"name":"m"}],"output":{"name":"bucket"}}],[11,"peek","","Reads a bucket at a given index, returning an enum indicating whether\nit's initialized or not. You need to match on this enum to get\nthe appropriate types to call most of the other functions in\nthis module.",21,{"inputs":[{"name":"bucket"}],"output":{"name":"bucketstate"}}],[11,"next","","Modifies the bucket pointer in place to make it point to the next slot.",21,null],[11,"next","","",24,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",24,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"gap_peek","","",24,{"inputs":[{"name":"emptybucket"}],"output":{"name":"option"}}],[11,"put","","Puts given key and value pair, along with the key's hash,\ninto this bucket in the hashtable. Note how `self` is 'moved' into\nthis function, because this slot will no longer be empty when\nwe return! A `FullBucket` is returned for later use, pointing to\nthe newly-filled slot in the hashtable.",24,{"inputs":[{"name":"emptybucket"},{"name":"safehash"},{"name":"k"},{"name":"v"}],"output":{"name":"fullbucket"}}],[11,"next","","",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"distance","","Get the distance between this bucket and the 'ideal' location\nas determined by the key's hash stored in it.",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"hash","","",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"safehash"}}],[11,"read","","Gets references to the key and value at a given index.",23,null],[11,"take","","Removes this bucket's key and value from the hashtable.",23,null],[11,"replace","","",23,null],[11,"read_mut","","Gets mutable references to the key and value at a given index.",23,null],[11,"into_refs","","Exchange a bucket state for immutable references into the table.\nBecause the underlying reference to the table is also consumed,\nno further changes to the structure of the table are possible;\nin exchange for this, the returned references have a longer lifetime\nthan the references returned by `read()`.",23,null],[11,"into_mut_refs","","This works similarly to `into_refs`, exchanging a bucket state\nfor mutable references into the table.",23,null],[11,"expect_full","","",25,{"inputs":[{"name":"bucketstate"}],"output":{"name":"fullbucket"}}],[11,"full","","",26,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"fullbucket"}}],[11,"shift","","",26,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"option"}}],[11,"new","","Creates a new raw table from a given capacity. All buckets are\ninitially empty.",27,{"inputs":[{"name":"rawtable"},{"name":"usize"}],"output":{"name":"rawtable"}}],[11,"capacity","","The hashtable's capacity, similar to a vector's.",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"size","","The number of elements ever `put` in the hashtable, minus the number\nof elements ever `take`n.",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"iter","","",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"iter"}}],[11,"iter_mut","","",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"itermut"}}],[11,"into_iter","","",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"intoiter"}}],[11,"drain","","",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"drain"}}],[11,"clone","","",28,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"rawbuckets"}}],[11,"next","","",28,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"option"}}],[11,"next","","",29,{"inputs":[{"name":"revmovebuckets"}],"output":{"name":"option"}}],[11,"clone","","",30,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",30,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",30,null],[11,"len","","",30,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",31,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",31,null],[11,"len","","",31,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",32,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",32,null],[11,"len","","",32,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",33,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",33,null],[11,"len","","",33,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"drop","","",33,null],[11,"clone","","",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"rawtable"}}],[11,"drop","","",27,null],[11,"clone","std::collections::hash::map","",34,{"inputs":[{"name":"defaultresizepolicy"}],"output":{"name":"defaultresizepolicy"}}],[11,"clone","","",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"new","","Creates an empty HashMap.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",35,{"inputs":[{"name":"hashmap"},{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hash_state","","Creates an empty hashmap which will use the given hasher to hash keys.",35,{"inputs":[{"name":"hashmap"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",35,{"inputs":[{"name":"hashmap"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",35,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",35,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&'a K`.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"keys"}}],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&'a V`.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"values"}}],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&'a K, &'a V)`.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&'a K, &'a mut V)`.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"itermut"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",35,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"len","","Returns the number of elements in the map.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"drain"}}],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",35,null],[11,"get","","Returns a reference to the value corresponding to the key.",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map.",35,{"inputs":[{"name":"hashmap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",35,{"inputs":[{"name":"hashmap"},{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"fmt","","",35,{"inputs":[{"name":"hashmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"index","","",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"v"}}],[11,"clone","","",36,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",37,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",38,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"intoiter"}}],[11,"next","","",36,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",36,null],[11,"len","","",36,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",39,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",39,null],[11,"len","","",39,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",40,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",40,null],[11,"len","","",40,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",37,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",37,null],[11,"len","","",37,{"inputs":[{"name":"keys"}],"output":{"name":"usize"}}],[11,"next","","",38,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",38,null],[11,"len","","",38,{"inputs":[{"name":"values"}],"output":{"name":"usize"}}],[11,"next","","",41,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",41,null],[11,"len","","",41,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",42,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",42,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",43,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",43,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",43,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry, and returns the entry's old value",43,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value out of the entry, and returns it",43,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it",44,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","","",35,{"inputs":[{"name":"hashmap"},{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",35,null],[11,"extend","","",35,null],[11,"clone","","",45,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",45,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"hasher","","",45,{"inputs":[{"name":"randomstate"}],"output":{"name":"siphasher"}}],[11,"default","","",45,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"get","","",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"take","","",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"replace","","",35,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"option"}}],[11,"clone","std::collections::hash::set","",46,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"new","","Creates an empty HashSet.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",46,{"inputs":[{"name":"hashset"},{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hash_state","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",46,{"inputs":[{"name":"hashset"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",46,{"inputs":[{"name":"hashset"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",46,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",46,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &'a T.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"iter"}}],[11,"difference","","Visit the values representing the difference.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visit the values representing the intersection.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"intersection"}}],[11,"union","","Visit the values representing the union.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"bool"}}],[11,"drain","","Clears the set, returning all elements in an iterator.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"drain"}}],[11,"clear","","Clears the set, removing all values.",46,null],[11,"contains","","Returns `true` if the set contains a value.",46,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",46,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set.",46,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",46,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"option"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",46,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",46,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"fmt","","",46,{"inputs":[{"name":"hashset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",46,{"inputs":[{"name":"hashset"},{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",46,null],[11,"extend","","",46,null],[11,"default","","",46,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"intoiter"}}],[11,"clone","","",47,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",47,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",47,null],[11,"len","","",47,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",48,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",48,null],[11,"len","","",48,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",49,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",49,null],[11,"len","","",49,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"clone","","",50,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"next","","",50,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",50,null],[11,"clone","","",51,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"next","","",51,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",51,null],[11,"clone","","",52,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",52,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",52,null],[11,"clone","","",53,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"next","","",53,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",53,null],[11,"hasher","std::collections::hash::state","",54,{"inputs":[{"name":"defaultstate"}],"output":{"name":"h"}}],[11,"clone","","",54,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"default","","",54,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"clone","collections::linked_list","",55,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",56,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"from","","",57,{"inputs":[{"name":"rawlink"},{"name":"option"}],"output":{"name":"rawlink"}}],[11,"clone","","",57,{"inputs":[{"name":"rawlink"}],"output":{"name":"rawlink"}}],[11,"default","","",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",58,null],[11,"iter","","Provides a forward iterator.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"iter"}}],[11,"iter_mut","","Provides a forward iterator with mutable references.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"itermut"}}],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of the `LinkedList`.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"usize"}}],[11,"clear","","Removes all elements from the `LinkedList`.",58,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_front","","Adds an element first in the list.",58,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_back","","Appends an element to the back of a list",58,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",58,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"linkedlist"}}],[11,"drop","","",58,null],[11,"next","","",55,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",55,null],[11,"next_back","","",55,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",59,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"next_back","","",59,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",59,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",59,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",56,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",56,null],[11,"next_back","","",56,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","",58,{"inputs":[{"name":"linkedlist"},{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"intoiter"}}],[11,"extend","","",58,null],[11,"extend","","",58,null],[11,"eq","","",58,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",58,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"cmp","","",58,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"ordering"}}],[11,"clone","","",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"fmt","","",58,{"inputs":[{"name":"linkedlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",58,null],[11,"clone","collections::binary_heap","",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"clone_from","","",60,null],[11,"default","","",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"fmt","","",60,{"inputs":[{"name":"binaryheap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",60,{"inputs":[{"name":"binaryheap"},{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"from_vec","","Creates a `BinaryHeap` from a vector. This is sometimes called\n`heapifying` the vector.",60,{"inputs":[{"name":"binaryheap"},{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"iter"}}],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",60,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",60,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",60,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"push","","Pushes an item onto the binary heap.",60,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",60,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"t"}}],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",60,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"option"}}],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of the binary heap.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"is_empty","","Checks if the binary heap is empty.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"drain"}}],[11,"clear","","Drops all items from the binary heap.",60,null],[11,"drop","","",61,null],[11,"clone","","",62,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",62,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",62,null],[11,"next_back","","",62,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",63,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"next_back","","",63,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"next","","",64,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"next_back","","",64,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"from","","",60,{"inputs":[{"name":"binaryheap"},{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",65,{"inputs":[{"name":"vec"},{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",60,{"inputs":[{"name":"binaryheap"},{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"intoiter"}}],[11,"extend","","",60,null],[11,"extend","","",60,null],[11,"clone","collections::vec_deque","",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"drop","","",66,null],[11,"default","","",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap","","Swaps elements at indices `i` and `j`.",66,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",66,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",66,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",66,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",66,null],[11,"iter","","Returns a front-to-back iterator.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"itermut"}}],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",66,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",66,null],[11,"len","","Returns the number of elements in the `VecDeque`.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the buffer contains no elements",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items from start to end. The element\nrange is removed even if the iterator is not consumed until the end.",66,{"inputs":[{"name":"vecdeque"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the buffer, removing all values.",66,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"push_front","","Inserts an element first in the sequence.",66,null],[11,"push_back","","Appends an element to the back of a buffer",66,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_back_remove","","deprecated",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_front_remove","","deprecated",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",66,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"split_off","","Splits the collection into two at the given index.",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",66,null],[11,"retain","","Retains only the elements specified by the predicate.",66,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",66,null],[11,"clone","","",67,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",67,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",67,null],[11,"next_back","","",67,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",68,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",68,null],[11,"next_back","","",68,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",69,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",69,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",69,null],[11,"next_back","","",69,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",70,null],[11,"next","","",70,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",70,null],[11,"next_back","","",70,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"eq","","",66,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",66,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"cmp","","",66,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"ordering"}}],[11,"hash","","",66,null],[11,"index","","",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"index_mut","","",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"from_iter","","",66,{"inputs":[{"name":"vecdeque"},{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"intoiter"}}],[11,"extend","","",66,null],[11,"extend","","",66,null],[11,"fmt","","",66,{"inputs":[{"name":"vecdeque"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","std::dynamic_lib","",71,null],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",71,{"inputs":[{"name":"dynamiclibrary"},{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process's search path for dynamic libraries",71,null],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",71,null],[11,"envvar","","Returns the environment variable for this process's dynamic library\nsearch path",71,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",71,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"vec"}}],[11,"symbol","","Accesses the value at the symbol of the dynamic library.",71,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}],[11,"next","std::env","",72,{"inputs":[{"name":"vars"}],"output":{"name":"option"}}],[11,"size_hint","","",72,null],[11,"next","","",73,{"inputs":[{"name":"varsos"}],"output":{"name":"option"}}],[11,"size_hint","","",73,null],[11,"clone","","",74,{"inputs":[{"name":"varerror"}],"output":{"name":"varerror"}}],[11,"eq","","",74,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"fmt","","",74,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",74,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",74,{"inputs":[{"name":"varerror"}],"output":{"name":"str"}}],[11,"next","","",75,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",75,null],[11,"fmt","","",76,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",76,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",76,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",77,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",77,null],[11,"len","","",77,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",78,{"inputs":[{"name":"argsos"}],"output":{"name":"option"}}],[11,"size_hint","","",78,null],[11,"len","","",78,{"inputs":[{"name":"argsos"}],"output":{"name":"usize"}}],[11,"clone","std::ffi::c_str","",79,{"inputs":[{"name":"cstring"}],"output":{"name":"cstring"}}],[11,"hash","","",79,null],[11,"cmp","","",79,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",79,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"option"}}],[11,"lt","","",79,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"le","","",79,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"gt","","",79,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ge","","",79,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"eq","","",79,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"hash","","",80,null],[11,"fmt","","",81,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",81,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"ne","","",81,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"clone","","",81,{"inputs":[{"name":"nulerror"}],"output":{"name":"nulerror"}}],[11,"fmt","","",82,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",82,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"ne","","",82,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"clone","","",82,{"inputs":[{"name":"intostringerror"}],"output":{"name":"intostringerror"}}],[11,"new","","Creates a new C-compatible string from a container of bytes.",79,{"inputs":[{"name":"cstring"},{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",79,{"inputs":[{"name":"cstring"},{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_ptr","","Retakes ownership of a CString that was transferred to C.",79,null],[11,"from_raw","","Retakes ownership of a CString that was transferred to C.",79,null],[11,"into_ptr","","Transfers ownership of the string to a C caller.",79,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",79,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",79,{"inputs":[{"name":"cstring"}],"output":{"name":"result"}}],[11,"into_bytes","","Returns the underlying byte buffer.",79,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",79,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",79,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",79,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",80,null],[11,"as_ptr","","Returns the inner pointer to this C string.",80,null],[11,"to_bytes","","Converts this C string to a byte slice.",80,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",80,null],[11,"to_str","","Yields a `&str` slice if the `CStr` contains valid UTF-8.",80,{"inputs":[{"name":"cstr"}],"output":{"name":"result"}}],[11,"to_string_lossy","","Converts a `CStr` into a `Cow<str>`.",80,{"inputs":[{"name":"cstr"}],"output":{"name":"cow"}}],[11,"deref","","",79,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"fmt","","",79,{"inputs":[{"name":"cstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",80,{"inputs":[{"name":"cstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",79,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",81,{"inputs":[{"name":"nulerror"}],"output":{"name":"usize"}}],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",81,{"inputs":[{"name":"nulerror"}],"output":{"name":"vec"}}],[11,"description","","",81,{"inputs":[{"name":"nulerror"}],"output":{"name":"str"}}],[11,"fmt","","",81,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","std::io::error","",83,{"inputs":[{"name":"error"},{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",82,{"inputs":[{"name":"intostringerror"}],"output":{"name":"cstring"}}],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",82,{"inputs":[{"name":"intostringerror"}],"output":{"name":"utf8error"}}],[11,"description","","",82,{"inputs":[{"name":"intostringerror"}],"output":{"name":"str"}}],[11,"fmt","","",82,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",80,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",80,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"option"}}],[11,"cmp","","",80,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"ordering"}}],[11,"to_owned","","",80,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"clone","std::ffi::os_str","",84,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"new","","Constructs a new empty `OsString`.",84,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"from_bytes","","Constructs an `OsString` from a byte sequence.",84,{"inputs":[{"name":"osstring"},{"name":"b"}],"output":{"name":"option"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",84,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",84,{"inputs":[{"name":"osstring"}],"output":{"name":"result"}}],[11,"push","","Extends the string with the given `&OsStr` slice.",84,null],[11,"from","","",84,{"inputs":[{"name":"osstring"},{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",84,{"inputs":[{"name":"osstring"},{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",84,{"inputs":[{"name":"osstring"},{"name":"rangefull"}],"output":{"name":"osstr"}}],[11,"new","","Coerces into an `OsStr` slice.",85,{"inputs":[{"name":"osstr"},{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `OsStr` is valid unicode.",85,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow<str>`.",85,{"inputs":[{"name":"osstr"}],"output":{"name":"cow"}}],[11,"to_os_string","","Copies the slice into an owned `OsString`.",85,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"to_bytes","","Yields this `OsStr` as a byte slice.",85,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_cstring","","Creates a `CString` containing this `OsStr` data.",85,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"deref","","",84,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"fmt","","",84,{"inputs":[{"name":"osstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",84,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","","",84,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",84,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"lt","","",84,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"le","","",84,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"gt","","",84,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"ge","","",84,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",84,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",84,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"ordering"}}],[11,"hash","","",84,null],[11,"eq","","",85,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","","",85,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",85,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"lt","","",85,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"le","","",85,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"gt","","",85,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"ge","","",85,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",85,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",85,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"ordering"}}],[11,"hash","","",85,null],[11,"fmt","","",85,{"inputs":[{"name":"osstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",84,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"to_owned","","",85,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"as_ref","","",85,{"inputs":[{"name":"osstr"}],"output":{"name":"osstr"}}],[11,"as_ref","","",84,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"as_ref","collections::string","",86,{"inputs":[{"name":"string"}],"output":{"name":"osstr"}}],[11,"clone","std::fs","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"metadata"}}],[11,"clone","","",88,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",89,{"inputs":[{"name":"permissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",89,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"clone","","",89,{"inputs":[{"name":"permissions"}],"output":{"name":"permissions"}}],[11,"hash","","",90,null],[11,"eq","","",90,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",90,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"open","","Attempts to open a file in read-only mode.",91,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",91,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",91,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",91,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",91,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"metadata","","Queries metadata about the underlying file.",91,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fmt","","",91,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",91,null],[11,"read_to_end","","",91,{"inputs":[{"name":"file"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",91,null],[11,"flush","","",91,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",91,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"new","","Creates a blank net set of options ready for configuration.",88,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",88,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"write","","Sets the option for write access.",88,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"append","","Sets the option for the append mode.",88,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"truncate","","Sets the option for truncating a previous file.",88,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create","","Sets the option for creating a new file.",88,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"open","","Opens a file at `path` with the options specified by `self`.",88,{"inputs":[{"name":"openoptions"},{"name":"p"}],"output":{"name":"result"}}],[11,"file_type","","Returns the file type for this metadata.",87,{"inputs":[{"name":"metadata"}],"output":{"name":"filetype"}}],[11,"is_dir","","Returns whether this metadata is for a directory.",87,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether this metadata is for a regular file.",87,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"permissions","","Returns the permissions of the file this metadata is for.",87,{"inputs":[{"name":"metadata"}],"output":{"name":"permissions"}}],[11,"readonly","","Returns whether these permissions describe a readonly file.",89,{"inputs":[{"name":"permissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",89,null],[11,"is_dir","","Test whether this file type represents a directory.",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","Test whether this file type represents a regular file.",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","Test whether this file type represents a symbolic link.",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"next","","",92,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"path","","Returns the full path to the file that this entry represents.",93,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"metadata","","Return the metadata for the file that this entry points at.",93,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","Return the file type for the file that this entry points at.",93,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",93,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"next","","",94,{"inputs":[{"name":"walkdir"}],"output":{"name":"option"}}],[11,"metadata","std::path","",95,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","",95,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","",95,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","",95,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","",95,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","",95,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","",95,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","",95,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"new","std::fs","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",96,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",96,{"inputs":[{"name":"dirbuilder"},{"name":"bool"}],"output":{"name":"dirbuilder"}}],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",96,{"inputs":[{"name":"dirbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",97,{"inputs":[{"name":"bufreader"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",97,{"inputs":[{"name":"bufreader"},{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",97,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_mut","","Gets a mutable reference to the underlying reader.",97,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",97,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"read","","",97,null],[11,"fill_buf","","",97,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"consume","","",97,null],[11,"fmt","","",97,{"inputs":[{"name":"bufreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",97,{"inputs":[{"name":"bufreader"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fmt","","",98,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",99,{"inputs":[{"name":"bufwriter"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",99,{"inputs":[{"name":"bufwriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",99,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",99,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",99,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"write","","",99,null],[11,"flush","","",99,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"fmt","","",99,{"inputs":[{"name":"bufwriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",99,{"inputs":[{"name":"bufwriter"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"drop","","",99,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",98,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"into_inner","","Returns the buffered writer instance which generated the error.",98,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"w"}}],[11,"from","std::io::error","",83,{"inputs":[{"name":"error"},{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",98,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"str"}}],[11,"fmt","","",98,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `LineWriter`.",100,{"inputs":[{"name":"linewriter"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",100,{"inputs":[{"name":"linewriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",100,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",100,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",100,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"write","","",100,null],[11,"flush","","",100,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"fmt","","",100,{"inputs":[{"name":"linewriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",101,null],[11,"fmt","std::io::cursor","",102,{"inputs":[{"name":"cursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",102,{"inputs":[{"name":"cursor"}],"output":{"name":"cursor"}}],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",102,{"inputs":[{"name":"cursor"},{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",102,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",102,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",102,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"position","","Returns the current position of this cursor.",102,{"inputs":[{"name":"cursor"}],"output":{"name":"u64"}}],[11,"set_position","","Sets the position of this cursor.",102,null],[11,"seek","","",102,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"read","","",102,null],[11,"fill_buf","","",102,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",102,null],[11,"write","","",102,null],[11,"flush","","",102,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",102,null],[11,"flush","","",102,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",102,null],[11,"flush","","",102,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"fmt","std::io::error","",83,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",103,{"inputs":[{"name":"custom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",104,{"inputs":[{"name":"errorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",104,{"inputs":[{"name":"errorkind"}],"output":{"name":"errorkind"}}],[11,"eq","","",104,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",104,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",83,{"inputs":[{"name":"error"},{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",83,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",83,{"inputs":[{"name":"error"},{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",83,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",83,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",83,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",83,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",83,{"inputs":[{"name":"error"}],"output":{"name":"errorkind"}}],[11,"fmt","","",105,{"inputs":[{"name":"repr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",83,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",83,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",83,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"read","alloc::boxed","",2,null],[11,"read_to_end","","",2,{"inputs":[{"name":"box"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",2,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",2,null],[11,"write","","",2,null],[11,"flush","","",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"write_all","","",2,null],[11,"write_fmt","","",2,{"inputs":[{"name":"box"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"seek","","",2,{"inputs":[{"name":"box"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fill_buf","","",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"consume","","",2,null],[11,"read_until","","",2,{"inputs":[{"name":"box"},{"name":"u8"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_line","","",2,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","collections::vec","",65,null],[11,"write_all","","",65,null],[11,"flush","","",65,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"new","std::io::lazy","",106,null],[11,"get","","",106,{"inputs":[{"name":"lazy"}],"output":{"name":"option"}}],[11,"read","std::io::util","",107,null],[11,"fill_buf","","",107,{"inputs":[{"name":"empty"}],"output":{"name":"result"}}],[11,"consume","","",107,null],[11,"read","","",108,null],[11,"write","","",109,null],[11,"flush","","",109,{"inputs":[{"name":"sink"}],"output":{"name":"result"}}],[11,"read","std::io::stdio","",110,null],[11,"write","","",111,null],[11,"flush","","",111,{"inputs":[{"name":"stdoutraw"}],"output":{"name":"result"}}],[11,"write","","",112,null],[11,"flush","","",112,{"inputs":[{"name":"stderrraw"}],"output":{"name":"result"}}],[11,"write","","",113,null],[11,"flush","","",113,{"inputs":[{"name":"maybe"}],"output":{"name":"result"}}],[11,"read","","",113,null],[11,"lock","","Locks this handle to the standard input stream, returning a readable\nguard.",114,{"inputs":[{"name":"stdin"}],"output":{"name":"stdinlock"}}],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",114,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",114,null],[11,"read_to_end","","",114,{"inputs":[{"name":"stdin"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",114,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",114,null],[11,"read","","",115,null],[11,"read_to_end","","",115,{"inputs":[{"name":"stdinlock"},{"name":"vec"}],"output":{"name":"result"}}],[11,"fill_buf","","",115,{"inputs":[{"name":"stdinlock"}],"output":{"name":"result"}}],[11,"consume","","",115,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",116,{"inputs":[{"name":"stdout"}],"output":{"name":"stdoutlock"}}],[11,"write","","",116,null],[11,"flush","","",116,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write_all","","",116,null],[11,"write_fmt","","",116,{"inputs":[{"name":"stdout"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",117,null],[11,"flush","","",117,{"inputs":[{"name":"stdoutlock"}],"output":{"name":"result"}}],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",118,{"inputs":[{"name":"stderr"}],"output":{"name":"stderrlock"}}],[11,"write","","",118,null],[11,"flush","","",118,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write_all","","",118,null],[11,"write_fmt","","",118,{"inputs":[{"name":"stderr"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",119,null],[11,"flush","","",119,{"inputs":[{"name":"stderrlock"}],"output":{"name":"result"}}],[11,"fmt","std::io","",120,{"inputs":[{"name":"seekfrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",120,{"inputs":[{"name":"seekfrom"}],"output":{"name":"seekfrom"}}],[11,"eq","","",120,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"ne","","",120,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"write","","",121,null],[11,"flush","","",121,{"inputs":[{"name":"broadcast"}],"output":{"name":"result"}}],[11,"read","","",122,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",123,{"inputs":[{"name":"take"}],"output":{"name":"u64"}}],[11,"read","","",123,null],[11,"fill_buf","","",123,{"inputs":[{"name":"take"}],"output":{"name":"result"}}],[11,"consume","","",123,null],[11,"read","","",124,null],[11,"next","","",125,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"fmt","","",126,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",127,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"description","","",126,{"inputs":[{"name":"charserror"}],"output":{"name":"str"}}],[11,"cause","","",126,{"inputs":[{"name":"charserror"}],"output":{"name":"option"}}],[11,"fmt","","",126,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",128,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next","","",129,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"cmp","std::net::ip","",130,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",130,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"option"}}],[11,"lt","","",130,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"le","","",130,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"gt","","",130,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ge","","",130,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"hash","","",130,null],[11,"fmt","","",130,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",130,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ne","","",130,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"clone","","",130,{"inputs":[{"name":"ipaddr"}],"output":{"name":"ipaddr"}}],[11,"fmt","","",131,{"inputs":[{"name":"ipv6multicastscope"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",131,null],[11,"clone","","",131,{"inputs":[{"name":"ipv6multicastscope"}],"output":{"name":"ipv6multicastscope"}}],[11,"eq","","",131,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"ne","","",131,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",132,{"inputs":[{"name":"ipv4addr"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",132,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address 0.0.0.0.",132,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",132,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_private","","Returns true if this is a private address.",132,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",132,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",132,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_multicast","","Returns true if this is a multicast address.",132,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_broadcast","","Returns true if this is a broadcast address.",132,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",132,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",132,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",132,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"fmt","","",130,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",132,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",132,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",132,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv4addr"}}],[11,"eq","","",132,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"hash","","",132,null],[11,"partial_cmp","","",132,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"option"}}],[11,"cmp","","",132,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"ordering"}}],[11,"from","","",132,{"inputs":[{"name":"ipv4addr"},{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",133,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",133,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address ::.",133,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (::1).",133,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",133,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",133,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",133,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",133,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",133,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"multicast_scope","","Returns the address's multicast scope if the address is multicast.",133,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"is_multicast","","Returns true if this is a multicast address.",133,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",133,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"fmt","","",133,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",133,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",133,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6addr"}}],[11,"eq","","",133,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"hash","","",133,null],[11,"partial_cmp","","",133,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"cmp","","",133,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"ordering"}}],[11,"fmt","std::net::addr","",134,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",134,null],[11,"eq","","",134,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"ne","","",134,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"clone","","",134,{"inputs":[{"name":"socketaddr"}],"output":{"name":"socketaddr"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",134,{"inputs":[{"name":"socketaddr"},{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",134,{"inputs":[{"name":"socketaddr"}],"output":{"name":"ipaddr"}}],[11,"port","","Returns the port number associated with this socket address.",134,{"inputs":[{"name":"socketaddr"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",135,{"inputs":[{"name":"socketaddrv4"},{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",135,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"ipv4addr"}}],[11,"port","","Returns the port number associated with this socket address.",135,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",136,{"inputs":[{"name":"socketaddrv6"},{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",136,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"ipv6addr"}}],[11,"port","","Returns the port number associated with this socket address.",136,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u16"}}],[11,"flowinfo","","Returns scope ID associated with this address, corresponding to the\n`sin6_flowinfo` field in C.",136,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"scope_id","","Returns scope ID associated with this address, corresponding to the\n`sin6_scope_id` field in C.",136,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"fmt","","",134,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",135,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",135,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",136,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",136,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",135,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"socketaddrv4"}}],[11,"clone","","",136,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"socketaddrv6"}}],[11,"eq","","",135,{"inputs":[{"name":"socketaddrv4"},{"name":"socketaddrv4"}],"output":{"name":"bool"}}],[11,"eq","","",136,{"inputs":[{"name":"socketaddrv6"},{"name":"socketaddrv6"}],"output":{"name":"bool"}}],[11,"hash","","",135,null],[11,"hash","","",136,null],[11,"to_socket_addrs","","",134,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",135,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",136,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"result"}}],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",137,{"inputs":[{"name":"tcpstream"},{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",137,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",137,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",137,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",137,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",137,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",137,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",137,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",137,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",137,null],[11,"read_to_end","","",137,{"inputs":[{"name":"tcpstream"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",137,null],[11,"flush","","",137,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",137,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",138,{"inputs":[{"name":"tcplistener"},{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",138,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",138,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","Accept a new incoming connection from this listener.",138,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",138,{"inputs":[{"name":"tcplistener"}],"output":{"name":"incoming"}}],[11,"next","","",139,{"inputs":[{"name":"incoming"}],"output":{"name":"option"}}],[11,"fmt","","",138,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",140,{"inputs":[{"name":"udpsocket"},{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",140,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",140,null],[11,"local_addr","","Returns the socket address that this socket was created from.",140,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",140,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",140,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",140,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",140,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",140,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","std::net::ip","",130,{"inputs":[{"name":"ipaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",132,{"inputs":[{"name":"ipv4addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",133,{"inputs":[{"name":"ipv6addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",135,{"inputs":[{"name":"socketaddrv4"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",136,{"inputs":[{"name":"socketaddrv6"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",134,{"inputs":[{"name":"socketaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",141,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"clone","","",141,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"addrparseerror"}}],[11,"fmt","","",141,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",141,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",141,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"str"}}],[11,"fmt","std::net","",142,{"inputs":[{"name":"shutdown"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",142,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"clone","","",142,{"inputs":[{"name":"shutdown"}],"output":{"name":"shutdown"}}],[11,"next","","",143,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"clone","std::os::linux::raw::arch","",144,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"as_raw_fd","std::fs","",91,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",91,{"inputs":[{"name":"file"},{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",91,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::tcp","",137,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",138,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::udp","",140,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_raw_fd","std::net::tcp","",137,{"inputs":[{"name":"tcpstream"},{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",138,{"inputs":[{"name":"tcplistener"},{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",140,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",137,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",138,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"into_raw_fd","std::net::udp","",140,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_vec","std::ffi::os_str","",84,{"inputs":[{"name":"osstring"},{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",84,{"inputs":[{"name":"osstring"}],"output":{"name":"vec"}}],[11,"from_bytes","","",85,null],[11,"as_bytes","","",85,null],[11,"mode","std::fs","",89,{"inputs":[{"name":"permissions"}],"output":{"name":"u32"}}],[11,"set_mode","","",89,null],[11,"from_mode","","",89,{"inputs":[{"name":"permissions"},{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",88,{"inputs":[{"name":"openoptions"},{"name":"u32"}],"output":{"name":"openoptions"}}],[11,"dev","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"ino","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"mode","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"nlink","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"uid","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"gid","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"rdev","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"size","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime_nsec","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime_nsec","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime_nsec","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blksize","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blocks","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"is_block_device","","",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_char_device","","",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_fifo","","",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_socket","","",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ino","","",93,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"mode","","",96,{"inputs":[{"name":"dirbuilder"},{"name":"u32"}],"output":{"name":"dirbuilder"}}],[11,"uid","std::process","",145,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"gid","","",145,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"session_leader","","",145,{"inputs":[{"name":"command"},{"name":"bool"}],"output":{"name":"command"}}],[11,"signal","","",146,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"from_raw_fd","","",147,{"inputs":[{"name":"stdio"},{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",148,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",149,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",150,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",148,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",149,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",150,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"eq","std::path","",151,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ne","","",151,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"cmp","","",151,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",151,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"option"}}],[11,"lt","","",151,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"le","","",151,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"gt","","",151,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ge","","",151,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"hash","","",151,null],[11,"fmt","","",151,{"inputs":[{"name":"prefix"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",151,{"inputs":[{"name":"prefix"}],"output":{"name":"prefix"}}],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",151,{"inputs":[{"name":"prefix"}],"output":{"name":"bool"}}],[11,"fmt","","",152,{"inputs":[{"name":"state"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",152,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"option"}}],[11,"lt","","",152,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"le","","",152,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"gt","","",152,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ge","","",152,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"eq","","",152,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",152,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",152,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"fmt","","",153,{"inputs":[{"name":"prefixcomponent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",153,null],[11,"clone","","",153,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefixcomponent"}}],[11,"kind","","The parsed prefix data.",153,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefix"}}],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",153,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"osstr"}}],[11,"eq","","",153,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",153,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"option"}}],[11,"cmp","","",153,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"ordering"}}],[11,"fmt","","",154,{"inputs":[{"name":"component"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",154,null],[11,"cmp","","",154,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",154,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"option"}}],[11,"lt","","",154,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"le","","",154,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"gt","","",154,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ge","","",154,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"eq","","",154,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ne","","",154,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"clone","","",154,{"inputs":[{"name":"component"}],"output":{"name":"component"}}],[11,"as_os_str","","Extracts the underlying `OsStr` slice",154,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"as_ref","","",154,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"clone","","",155,{"inputs":[{"name":"components"}],"output":{"name":"components"}}],[11,"clone","","",156,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",155,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"peek","","Examine the next component without consuming it.",155,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"as_ref","","",155,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"as_ref","","",155,{"inputs":[{"name":"components"}],"output":{"name":"osstr"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",156,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",156,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",156,{"inputs":[{"name":"iter"}],"output":{"name":"osstr"}}],[11,"next","","",156,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",156,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",155,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"next_back","","",155,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"eq","","",155,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",155,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"option"}}],[11,"cmp","","",155,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"ordering"}}],[11,"hash","","",157,null],[11,"clone","","",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"new","","Allocates an empty `PathBuf`.",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"push","","Extends `self` with `path`.",157,null],[11,"pop","","Truncate `self` to `self.parent()`.",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",157,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",157,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"bool"}}],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"from","","",157,{"inputs":[{"name":"pathbuf"},{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",157,{"inputs":[{"name":"pathbuf"},{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",157,{"inputs":[{"name":"pathbuf"},{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",157,{"inputs":[{"name":"pathbuf"},{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",157,null],[11,"fmt","","",157,{"inputs":[{"name":"pathbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Directly wrap a string slice as a `Path` slice.",95,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",95,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `Path` is valid unicode.",95,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts a `Path` to a `Cow<str>`.",95,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",95,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",95,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_relative","","A path is *relative* if it is not absolute.",95,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"prefix","","Returns the *prefix* of a path, if any.",95,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",95,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"parent","","The path without its final component, if any.",95,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"file_name","","The final component of the path, if it is a normal file.",95,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"relative_from","","Returns a path that, when joined onto `base`, yields `self`.",95,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"option"}}],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",95,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",95,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",95,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",95,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",95,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"pathbuf"}}],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",95,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",95,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"components","","Produce an iterator over the components of the path.",95,{"inputs":[{"name":"path"}],"output":{"name":"components"}}],[11,"iter","","Produce an iterator over the path's components viewed as `OsStr` slices.",95,{"inputs":[{"name":"path"}],"output":{"name":"iter"}}],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",95,{"inputs":[{"name":"path"}],"output":{"name":"display"}}],[11,"metadata","","Gets information on the file, directory, etc at this path.",95,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","Gets information on the file, directory, etc at this path.",95,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","Returns the canonical form of a path, normalizing all components and\neliminate all symlinks.",95,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","Reads the symlink at this path.",95,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","Reads the directory at this path.",95,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","Boolean value indicator whether the underlying file exists on the local\nfilesystem. Returns false in exactly the cases where `fs::stat` fails.",95,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","Whether the underlying implementation (be it a file path, or something\nelse) points at a \"regular file\" on the FS. Will return false for paths\nto non-existent locations or directories or other non-regular files\n(named pipes, etc). Follows links when making this determination.",95,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","Whether the underlying implementation (be it a file path, or something\nelse) is pointing at a directory in the underlying FS. Will return\nfalse for paths to non-existent locations or if the item is not a\ndirectory (eg files, named pipes, etc). Follows links when making this\ndetermination.",95,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"deref","","",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"borrow","","",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"into_cow","","",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","","",95,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"eq","","",157,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",157,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"cmp","","",157,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"ordering"}}],[11,"as_ref","","",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstr"}}],[11,"into","","",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"hash","","",95,null],[11,"as_ref","","",95,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"fmt","","",95,{"inputs":[{"name":"path"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",158,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",158,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",95,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",95,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[11,"cmp","","",95,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"ordering"}}],[11,"as_ref","","",95,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"as_ref","std::ffi::os_str","",85,{"inputs":[{"name":"osstr"}],"output":{"name":"path"}}],[11,"as_ref","","",84,{"inputs":[{"name":"osstring"}],"output":{"name":"path"}}],[11,"as_ref","collections::string","",86,{"inputs":[{"name":"string"}],"output":{"name":"path"}}],[11,"as_ref","std::path","",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"write","std::process","",148,null],[11,"flush","","",148,{"inputs":[{"name":"childstdin"}],"output":{"name":"result"}}],[11,"read","","",149,null],[11,"read","","",150,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",145,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",145,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"args","","Add multiple arguments to pass to the program.",145,null],[11,"env","","Inserts or updates an environment variable mapping.",145,{"inputs":[{"name":"command"},{"name":"k"},{"name":"v"}],"output":{"name":"command"}}],[11,"env_remove","","Removes an environment variable mapping.",145,{"inputs":[{"name":"command"},{"name":"k"}],"output":{"name":"command"}}],[11,"env_clear","","Clears the entire environment map for the child process.",145,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"current_dir","","Sets the working directory for the child process.",145,{"inputs":[{"name":"command"},{"name":"p"}],"output":{"name":"command"}}],[11,"stdin","","Configuration for the child process's stdin handle (file descriptor 0).",145,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stdout","","Configuration for the child process's stdout handle (file descriptor 1).",145,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stderr","","Configuration for the child process's stderr handle (file descriptor 2).",145,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"spawn","","Executes the command as a child process, returning a handle to it.",145,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",145,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",145,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",145,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",159,{"inputs":[{"name":"output"}],"output":{"name":"output"}}],[11,"eq","","",159,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"ne","","",159,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",147,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",147,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",147,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"fmt","","",146,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",146,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",146,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",146,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","Returns the exit code of the process, if any.",146,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",146,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",160,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"id","","Returns the OS-assigned process identifier associated with this child.",160,{"inputs":[{"name":"child"}],"output":{"name":"u32"}}],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",160,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning a `Output`\ninstance.",160,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"clone","std::sync::mpsc::blocking","",161,{"inputs":[{"name":"signaltoken"}],"output":{"name":"signaltoken"}}],[11,"signal","","",161,{"inputs":[{"name":"signaltoken"}],"output":{"name":"bool"}}],[11,"cast_to_usize","","Convert to an unsafe usize value. Useful for storing in a pipe's state\nflag.",161,{"inputs":[{"name":"signaltoken"}],"output":{"name":"usize"}}],[11,"cast_from_usize","","Convert from an unsafe usize value. Useful for retrieving a pipe's state\nflag.",161,{"inputs":[{"name":"signaltoken"},{"name":"usize"}],"output":{"name":"signaltoken"}}],[11,"wait","","",162,null],[11,"new","std::sync::mpsc::oneshot","",163,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",163,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"sent","","",163,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"recv","","",163,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",163,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"upgrade","","",163,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"drop_chan","","",163,null],[11,"drop_port","","",163,null],[11,"can_recv","","",163,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",163,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",163,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop","","",163,null],[11,"eq","std::sync::mpsc::select","",164,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"ne","","",164,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new selection structure. This set is initially empty.",165,{"inputs":[{"name":"select"}],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",165,{"inputs":[{"name":"select"},{"name":"receiver"}],"output":{"name":"handle"}}],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",165,{"inputs":[{"name":"select"}],"output":{"name":"usize"}}],[11,"id","","Retrieves the id of this handle.",166,{"inputs":[{"name":"handle"}],"output":{"name":"usize"}}],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",166,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",166,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",166,null],[11,"drop","","",165,null],[11,"drop","","",166,null],[11,"next","","",167,{"inputs":[{"name":"packets"}],"output":{"name":"option"}}],[11,"new","std::sync::mpsc::shared","",168,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"postinit_lock","","",168,{"inputs":[{"name":"packet"}],"output":{"name":"mutexguard"}}],[11,"inherit_blocker","","",168,null],[11,"send","","",168,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",168,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",168,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",168,null],[11,"drop_chan","","",168,null],[11,"drop_port","","",168,null],[11,"can_recv","","",168,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",168,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",168,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"drop","","",168,null],[11,"new","std::sync::mpsc::stream","",169,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",169,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"upgrade","","",169,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"recv","","",169,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",169,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop_chan","","",169,null],[11,"drop_port","","",169,null],[11,"can_recv","","",169,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",169,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",169,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"result"}}],[11,"drop","","",169,null],[11,"fmt","std::sync::mpsc::sync","",170,{"inputs":[{"name":"failure"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",171,{"inputs":[{"name":"packet"},{"name":"usize"}],"output":{"name":"packet"}}],[11,"send","","",171,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","",171,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",171,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",171,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",171,null],[11,"drop_chan","","",171,null],[11,"drop_port","","",171,null],[11,"can_recv","","",171,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",171,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",171,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"drop","","",171,null],[11,"new","std::sync::mpsc::mpsc_queue","Creates a new queue that is safe to share among multiple producers and\none consumer.",172,{"inputs":[{"name":"queue"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue.",172,null],[11,"pop","","Pops some data from this queue.",172,{"inputs":[{"name":"queue"}],"output":{"name":"popresult"}}],[11,"drop","","",172,null],[11,"new","std::sync::mpsc::spsc_queue","Creates a new queue.",173,{"inputs":[{"name":"queue"},{"name":"usize"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue. Note that to use this function\nsafely, it must be externally guaranteed that there is only one pusher.",173,null],[11,"pop","","Attempts to pop a value from this queue. Remember that to use this type\nsafely you must ensure that there is only one popper at a time.",173,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"peek","","Attempts to peek at the head of the queue, returning `None` if the queue\nhas no data currently",173,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"drop","","",173,null],[11,"clone","std::sync::mpsc","",174,{"inputs":[{"name":"senderror"}],"output":{"name":"senderror"}}],[11,"eq","","",174,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",174,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"fmt","","",175,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",175,{"inputs":[{"name":"recverror"}],"output":{"name":"recverror"}}],[11,"eq","","",175,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"fmt","","",176,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",176,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"tryrecverror"}}],[11,"eq","","",176,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"ne","","",176,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"clone","","",177,{"inputs":[{"name":"trysenderror"}],"output":{"name":"trysenderror"}}],[11,"eq","","",177,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",177,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",178,{"inputs":[{"name":"sender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",178,{"inputs":[{"name":"sender"}],"output":{"name":"sender"}}],[11,"drop","","",178,null],[11,"send","","Sends a value on this synchronous channel.",179,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","Attempts to send a value on this channel without blocking.",179,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",179,{"inputs":[{"name":"syncsender"}],"output":{"name":"syncsender"}}],[11,"drop","","",179,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",180,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",180,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",180,{"inputs":[{"name":"receiver"}],"output":{"name":"iter"}}],[11,"next","","",181,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",182,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"into_iter","","",180,{"inputs":[{"name":"receiver"}],"output":{"name":"intoiter"}}],[11,"drop","","",180,null],[11,"fmt","","",174,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",174,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",174,{"inputs":[{"name":"senderror"}],"output":{"name":"str"}}],[11,"cause","","",174,{"inputs":[{"name":"senderror"}],"output":{"name":"option"}}],[11,"fmt","","",177,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",177,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",177,{"inputs":[{"name":"trysenderror"}],"output":{"name":"str"}}],[11,"cause","","",177,{"inputs":[{"name":"trysenderror"}],"output":{"name":"option"}}],[11,"fmt","","",175,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",175,{"inputs":[{"name":"recverror"}],"output":{"name":"str"}}],[11,"cause","","",175,{"inputs":[{"name":"recverror"}],"output":{"name":"option"}}],[11,"fmt","","",176,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",176,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"str"}}],[11,"cause","","",176,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"option"}}],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",183,{"inputs":[{"name":"barrier"},{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads has rendezvoused here.",183,{"inputs":[{"name":"barrier"}],"output":{"name":"barrierwaitresult"}}],[11,"is_leader","","Returns whether this thread from `wait` is the \"leader thread\".",184,{"inputs":[{"name":"barrierwaitresult"}],"output":{"name":"bool"}}],[11,"clone","std::sync::condvar","",185,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"waittimeoutresult"}}],[11,"eq","","",185,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"ne","","",185,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"fmt","","",185,{"inputs":[{"name":"waittimeoutresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"timed_out","","Returns whether the wait was known to have timed out.",185,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",186,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",186,{"inputs":[{"name":"condvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",186,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",186,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",186,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",186,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",186,null],[11,"drop","","",186,null],[11,"new","","Creates a new condition variable",187,{"inputs":[{"name":"staticcondvar"}],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",187,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",187,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",187,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",187,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",187,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",187,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",187,null],[11,"drop","std::sync::mutex","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"mutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new mutex in an unlocked state ready for use.",188,{"inputs":[{"name":"staticmutex"}],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",188,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",188,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates resources associated with this static mutex.",188,null],[11,"deref","","",189,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",189,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"drop","","",189,null],[11,"new","std::sync::once","Creates a new `Once` value.",190,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",190,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock<T>` which is unlocked.",191,{"inputs":[{"name":"rwlock"},{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",191,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",191,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",191,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",191,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",191,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",191,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",191,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"drop","","",191,null],[11,"fmt","","",191,{"inputs":[{"name":"rwlock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new rwlock.",192,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",192,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this lock with shared read access.",192,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",192,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",192,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates all resources associated with this static lock.",192,null],[11,"deref","","",193,{"inputs":[{"name":"rwlockreadguard"}],"output":{"name":"t"}}],[11,"deref","","",194,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",194,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"drop","","",193,null],[11,"drop","","",194,null],[11,"new","std::sync::semaphore","Creates a new semaphore with the initial count specified.",195,{"inputs":[{"name":"semaphore"},{"name":"isize"}],"output":{"name":"semaphore"}}],[11,"acquire","","Acquires a resource of this semaphore, blocking the current thread until\nit can do so.",195,null],[11,"release","","Release a resource from this semaphore.",195,null],[11,"access","","Acquires a resource of this semaphore, returning an RAII guard to\nrelease the semaphore when dropped.",195,{"inputs":[{"name":"semaphore"}],"output":{"name":"semaphoreguard"}}],[11,"drop","","",196,null],[11,"default","core::sync::atomic","",197,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",198,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",199,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",200,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",201,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",197,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",197,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",197,null],[11,"swap","","Stores a value into the bool, returning the old value.",197,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",197,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",197,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",197,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",197,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",197,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",198,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",198,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",198,null],[11,"swap","","Stores a value into the isize, returning the old value.",198,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",198,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",198,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",198,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",198,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",198,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",198,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",199,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",199,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",199,null],[11,"swap","","Stores a value into the usize, returning the old value.",199,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",199,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",199,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",199,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",199,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",199,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",199,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",200,null],[11,"load","","Loads a value from the pointer.",200,null],[11,"store","","Stores a value into the pointer.",200,null],[11,"swap","","Stores a value into the pointer, returning the old value.",200,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",200,null],[11,"fmt","","",199,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",198,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",197,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",200,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::time::duration","",202,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",202,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",202,{"inputs":[{"name":"duration"},{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",202,{"inputs":[{"name":"duration"},{"name":"f"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",202,{"inputs":[{"name":"duration"},{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",202,{"inputs":[{"name":"duration"},{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",202,{"inputs":[{"name":"duration"}],"output":{"name":"u64"}}],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",202,{"inputs":[{"name":"duration"}],"output":{"name":"u32"}}],[11,"add","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",202,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"div","","",202,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"new","std::sys_common::condvar","Creates a new condition variable for use.",203,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","Signals one waiter on this condition variable to wake up.",203,null],[11,"notify_all","","Awakens all current waiters on this condition variable.",203,null],[11,"wait","","Waits for a signal on the specified mutex.",203,null],[11,"wait_timeout","","Waits for a signal on the specified mutex with a timeout duration\nspecified by `dur` (a relative time into the future).",203,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","Deallocates all resources associated with this condition variable.",203,null],[11,"clone","std::sys_common::dwarf::eh","",204,{"inputs":[{"name":"ehcontext"}],"output":{"name":"ehcontext"}}],[11,"new","std::sys_common::dwarf","",205,null],[11,"read","","",205,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"t"}}],[11,"read_uleb128","","",205,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"u64"}}],[11,"read_sleb128","","",205,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"i64"}}],[11,"clone","std::sys_common::libunwind","",206,{"inputs":[{"name":"_unwind_action"}],"output":{"name":"_unwind_action"}}],[11,"clone","","",207,{"inputs":[{"name":"_unwind_reason_code"}],"output":{"name":"_unwind_reason_code"}}],[11,"new","std::sys_common::mutex","Creates a new mutex for use.",208,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","Locks the mutex blocking the current thread until it is available.",208,null],[11,"try_lock","","Attempts to lock the mutex without blocking, returning whether it was\nsuccessfully acquired or not.",208,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"unlock","","Unlocks the mutex.",208,null],[11,"destroy","","Deallocates all resources associated with this mutex.",208,null],[11,"next","std::sys_common::net","",209,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"drop","","",209,null],[11,"connect","","",210,{"inputs":[{"name":"tcpstream"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",210,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"into_socket","","",210,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"set_read_timeout","","",210,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",210,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",210,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","",210,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",210,null],[11,"write","","",210,null],[11,"peer_addr","","",210,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"socket_addr","","",210,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","",210,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"duplicate","","",210,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",210,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",211,{"inputs":[{"name":"tcplistener"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",211,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"into_socket","","",211,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"socket_addr","","",211,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","",211,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"duplicate","","",211,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"fmt","","",211,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",212,{"inputs":[{"name":"udpsocket"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",212,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"into_socket","","",212,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"socket_addr","","",212,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"recv_from","","",212,null],[11,"send_to","","",212,null],[11,"duplicate","","",212,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","",212,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",212,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",212,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","",212,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",212,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys_common::poison","",213,{"inputs":[{"name":"flag"}],"output":{"name":"flag"}}],[11,"borrow","","",213,{"inputs":[{"name":"flag"}],"output":{"name":"result"}}],[11,"done","","",213,null],[11,"get","","",213,{"inputs":[{"name":"flag"}],"output":{"name":"bool"}}],[11,"fmt","","",214,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",214,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",214,{"inputs":[{"name":"poisonerror"}],"output":{"name":"str"}}],[11,"new","","Creates a `PoisonError`.",214,{"inputs":[{"name":"poisonerror"},{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",214,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",214,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",214,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"from","","",215,{"inputs":[{"name":"trylockerror"},{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",215,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",215,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",215,{"inputs":[{"name":"trylockerror"}],"output":{"name":"str"}}],[11,"cause","","",215,{"inputs":[{"name":"trylockerror"}],"output":{"name":"option"}}],[11,"new","std::sys_common::remutex","Creates a new reentrant mutex in an unlocked state.",216,{"inputs":[{"name":"reentrantmutex"},{"name":"t"}],"output":{"name":"reentrantmutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",216,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",216,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"drop","","",216,null],[11,"fmt","","",216,{"inputs":[{"name":"reentrantmutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",217,{"inputs":[{"name":"reentrantmutexguard"}],"output":{"name":"t"}}],[11,"drop","","",217,null],[11,"new","std::sys_common::rwlock","Creates a new reader-writer lock for use.",218,{"inputs":[{"name":"rwlock"}],"output":{"name":"rwlock"}}],[11,"read","","Acquires shared access to the underlying lock, blocking the current\nthread to do so.",218,null],[11,"try_read","","Attempts to acquire shared access to this lock, returning whether it\nsucceeded or not.",218,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","Acquires write access to the underlying lock, blocking the current thread\nto do so.",218,null],[11,"try_write","","Attempts to acquire exclusive access to this lock, returning whether it\nsucceeded or not.",218,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","Unlocks previously acquired shared access to this lock.",218,null],[11,"write_unlock","","Unlocks previously acquired exclusive access to this lock.",218,null],[11,"destroy","","Destroys OS-related resources with this RWLock.",218,null],[11,"new","std::sys_common::thread_local","",219,{"inputs":[{"name":"statickey"},{"name":"option"}],"output":{"name":"statickey"}}],[11,"get","","Gets the value associated with this TLS key",219,null],[11,"set","","Sets this TLS key to a new value.",219,null],[11,"destroy","","Deallocates this OS TLS key.",219,null],[11,"new","","Creates a new managed OS TLS key.",220,{"inputs":[{"name":"key"},{"name":"option"}],"output":{"name":"key"}}],[11,"get","","See StaticKey::get",220,null],[11,"set","","See StaticKey::set",220,null],[11,"drop","","",220,null],[11,"clone","std::sys_common::wtf8","",221,{"inputs":[{"name":"codepoint"}],"output":{"name":"codepoint"}}],[11,"partial_cmp","","",221,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"option"}}],[11,"lt","","",221,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"le","","",221,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"gt","","",221,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ge","","",221,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"cmp","","",221,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"ordering"}}],[11,"eq","","",221,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ne","","",221,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"fmt","","",221,{"inputs":[{"name":"codepoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u32_unchecked","","Unsafely creates a new `CodePoint` without checking the value.",221,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"codepoint"}}],[11,"from_u32","","Creates a new `CodePoint` if the value is a valid code point.",221,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_char","","Creates a new `CodePoint` from a `char`.",221,{"inputs":[{"name":"codepoint"},{"name":"char"}],"output":{"name":"codepoint"}}],[11,"to_u32","","Returns the numeric value of the code point.",221,{"inputs":[{"name":"codepoint"}],"output":{"name":"u32"}}],[11,"to_char","","Optionally returns a Unicode scalar value for the code point.",221,{"inputs":[{"name":"codepoint"}],"output":{"name":"option"}}],[11,"to_char_lossy","","Returns a Unicode scalar value for the code point.",221,{"inputs":[{"name":"codepoint"}],"output":{"name":"char"}}],[11,"clone","","",222,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"partial_cmp","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"option"}}],[11,"lt","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"le","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"gt","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ge","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"cmp","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"ordering"}}],[11,"eq","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ne","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"from_str","","Creates a WTF-8 slice from a UTF-8 `&str` slice.",223,{"inputs":[{"name":"wtf8"},{"name":"str"}],"output":{"name":"wtf8"}}],[11,"len","","Returns the length, in WTF-8 bytes.",223,{"inputs":[{"name":"wtf8"}],"output":{"name":"usize"}}],[11,"ascii_byte_at","","Returns the code point at `position` if it is in the ASCII range,\nor `b'\\xFF' otherwise.",223,{"inputs":[{"name":"wtf8"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"code_points","","Returns an iterator for the string’s code points.",223,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8codepoints"}}],[11,"as_str","","Tries to convert the string to UTF-8 and return a `&str` slice.",223,{"inputs":[{"name":"wtf8"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Lossily converts the string to UTF-8.\nReturns a UTF-8 `&str` slice if the contents are well-formed in UTF-8.",223,{"inputs":[{"name":"wtf8"}],"output":{"name":"cow"}}],[11,"encode_wide","","Converts the WTF-8 string to potentially ill-formed UTF-16\nand return an iterator of 16-bit code units.",223,{"inputs":[{"name":"wtf8"}],"output":{"name":"encodewide"}}],[11,"deref","","",222,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"fmt","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new, empty WTF-8 string.",222,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"with_capacity","","Creates a new, empty WTF-8 string with pre-allocated capacity for `n` bytes.",222,{"inputs":[{"name":"wtf8buf"},{"name":"usize"}],"output":{"name":"wtf8buf"}}],[11,"from_string","","Creates a WTF-8 string from a UTF-8 `String`.",222,{"inputs":[{"name":"wtf8buf"},{"name":"string"}],"output":{"name":"wtf8buf"}}],[11,"from_str","","Creates a WTF-8 string from a UTF-8 `&str` slice.",222,{"inputs":[{"name":"wtf8buf"},{"name":"str"}],"output":{"name":"wtf8buf"}}],[11,"from_wide","","Creates a WTF-8 string from a potentially ill-formed UTF-16 slice of 16-bit code units.",222,null],[11,"as_slice","","",222,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `Wtf8Buf`.\nThe collection may reserve more space to avoid frequent reallocations.",222,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without reallocating.",222,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"usize"}}],[11,"push_str","","Append a UTF-8 slice at the end of the string.",222,null],[11,"push_wtf8","","Append a WTF-8 slice at the end of the string.",222,null],[11,"push_char","","Append a Unicode scalar value at the end of the string.",222,null],[11,"push","","Append a code point at the end of the string.",222,null],[11,"truncate","","Shortens a string to the specified length.",222,null],[11,"into_string","","Consumes the WTF-8 string and tries to convert it to UTF-8.",222,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"result"}}],[11,"into_string_lossy","","Consumes the WTF-8 string and converts it lossily to UTF-8.",222,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"string"}}],[11,"from_iter","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"t"}],"output":{"name":"wtf8buf"}}],[11,"extend","","",222,null],[11,"partial_cmp","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"option"}}],[11,"lt","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"le","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"gt","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ge","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"eq","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ne","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"cmp","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"ordering"}}],[11,"fmt","","",223,{"inputs":[{"name":"wtf8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",223,{"inputs":[{"name":"wtf8"},{"name":"range"}],"output":{"name":"wtf8"}}],[11,"index","","",223,{"inputs":[{"name":"wtf8"},{"name":"rangefrom"}],"output":{"name":"wtf8"}}],[11,"index","","",223,{"inputs":[{"name":"wtf8"},{"name":"rangeto"}],"output":{"name":"wtf8"}}],[11,"index","","",223,{"inputs":[{"name":"wtf8"},{"name":"rangefull"}],"output":{"name":"wtf8"}}],[11,"clone","","",224,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"wtf8codepoints"}}],[11,"next","","",224,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"option"}}],[11,"size_hint","","",224,null],[11,"clone","","",225,{"inputs":[{"name":"encodewide"}],"output":{"name":"encodewide"}}],[11,"next","","",225,{"inputs":[{"name":"encodewide"}],"output":{"name":"option"}}],[11,"size_hint","","",225,null],[11,"hash","","",221,null],[11,"hash","","",222,null],[11,"hash","","",223,null],[11,"is_ascii","","",223,{"inputs":[{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"to_ascii_uppercase","","",223,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"to_ascii_lowercase","","",223,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"eq_ignore_ascii_case","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"make_ascii_uppercase","","",223,null],[11,"make_ascii_lowercase","","",223,null],[11,"new","std::sys::condvar","",226,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","",226,null],[11,"notify_all","","",226,null],[11,"wait","","",226,null],[11,"wait_timeout","","",226,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","",226,null],[11,"new","std::sys::fd","",227,{"inputs":[{"name":"filedesc"},{"name":"i32"}],"output":{"name":"filedesc"}}],[11,"raw","","",227,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"into_raw","","Extracts the actual filedescriptor without closing it.",227,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"read","","",227,null],[11,"write","","",227,null],[11,"set_cloexec","","",227,null],[11,"drop","","",227,null],[11,"clone","std::sys::fs","",228,{"inputs":[{"name":"fileattr"}],"output":{"name":"fileattr"}}],[11,"clone","","",229,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",230,{"inputs":[{"name":"filepermissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",230,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"ne","","",230,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"clone","","",230,{"inputs":[{"name":"filepermissions"}],"output":{"name":"filepermissions"}}],[11,"hash","","",231,null],[11,"eq","","",231,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",231,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",231,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"size","","",228,{"inputs":[{"name":"fileattr"}],"output":{"name":"u64"}}],[11,"perm","","",228,{"inputs":[{"name":"fileattr"}],"output":{"name":"filepermissions"}}],[11,"file_type","","",228,{"inputs":[{"name":"fileattr"}],"output":{"name":"filetype"}}],[11,"as_raw_stat","std::fs","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"stat"}}],[11,"readonly","std::sys::fs","",230,{"inputs":[{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","",230,null],[11,"mode","","",230,{"inputs":[{"name":"filepermissions"}],"output":{"name":"u32"}}],[11,"is_dir","","",231,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","",231,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","",231,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is","","",231,{"inputs":[{"name":"filetype"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"next","","",232,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"drop","","",233,null],[11,"path","","",234,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"file_name","","",234,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"metadata","","",234,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","",234,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"ino","","",234,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"new","","",229,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","",229,null],[11,"write","","",229,null],[11,"append","","",229,null],[11,"truncate","","",229,null],[11,"create","","",229,null],[11,"mode","","",229,null],[11,"open","","",235,{"inputs":[{"name":"file"},{"name":"path"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"open_c","","",235,{"inputs":[{"name":"file"},{"name":"cstr"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"file_attr","","",235,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fsync","","",235,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"datasync","","",235,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"truncate","","",235,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read","","",235,null],[11,"write","","",235,null],[11,"flush","","",235,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",235,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fd","","",235,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",235,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"new","","",236,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"mkdir","","",236,{"inputs":[{"name":"dirbuilder"},{"name":"path"}],"output":{"name":"result"}}],[11,"set_mode","","",236,null],[11,"fmt","","",235,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys::mutex","",237,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","",237,null],[11,"unlock","","",237,null],[11,"try_lock","","",237,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"destroy","","",237,null],[11,"uninitialized","","",238,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"reentrantmutex"}}],[11,"init","","",238,null],[11,"lock","","",238,null],[11,"try_lock","","",238,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"bool"}}],[11,"unlock","","",238,null],[11,"destroy","","",238,null],[11,"new","std::sys::net","",239,{"inputs":[{"name":"socket"},{"name":"socketaddr"},{"name":"i32"}],"output":{"name":"result"}}],[11,"accept","","",239,null],[11,"duplicate","","",239,{"inputs":[{"name":"socket"}],"output":{"name":"result"}}],[11,"read","","",239,null],[11,"set_timeout","","",239,{"inputs":[{"name":"socket"},{"name":"option"},{"name":"i32"}],"output":{"name":"result"}}],[11,"timeout","","",239,{"inputs":[{"name":"socket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"next","std::sys::os","",240,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",240,null],[11,"fmt","","",241,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",241,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",241,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",242,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",242,null],[11,"len","","",242,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",243,{"inputs":[{"name":"env"}],"output":{"name":"option"}}],[11,"size_hint","","",243,null],[11,"hash","std::sys::os_str","",244,null],[11,"clone","","",244,{"inputs":[{"name":"buf"}],"output":{"name":"buf"}}],[11,"fmt","","",245,{"inputs":[{"name":"slice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",244,{"inputs":[{"name":"buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_string","","",244,{"inputs":[{"name":"buf"},{"name":"string"}],"output":{"name":"buf"}}],[11,"as_slice","","",244,{"inputs":[{"name":"buf"}],"output":{"name":"slice"}}],[11,"into_string","","",244,{"inputs":[{"name":"buf"}],"output":{"name":"result"}}],[11,"push_slice","","",244,null],[11,"from_str","","",245,{"inputs":[{"name":"slice"},{"name":"str"}],"output":{"name":"slice"}}],[11,"to_str","","",245,{"inputs":[{"name":"slice"}],"output":{"name":"option"}}],[11,"to_string_lossy","","",245,{"inputs":[{"name":"slice"}],"output":{"name":"cow"}}],[11,"to_owned","","",245,{"inputs":[{"name":"slice"}],"output":{"name":"buf"}}],[11,"from_fd","std::sys::pipe","",246,{"inputs":[{"name":"anonpipe"},{"name":"i32"}],"output":{"name":"anonpipe"}}],[11,"read","","",246,null],[11,"write","","",246,null],[11,"raw","","",246,{"inputs":[{"name":"anonpipe"}],"output":{"name":"i32"}}],[11,"fd","","",246,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",246,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"clone","std::sys::process","",247,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"new","","",247,{"inputs":[{"name":"command"},{"name":"osstr"}],"output":{"name":"command"}}],[11,"arg","","",247,null],[11,"args","","",247,null],[11,"env","","",247,null],[11,"env_remove","","",247,null],[11,"env_clear","","",247,null],[11,"cwd","","",247,null],[11,"fmt","","",248,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",248,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",248,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",248,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","",248,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","",248,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",248,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","",249,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"spawn","","",249,{"inputs":[{"name":"process"},{"name":"command"},{"name":"stdio"},{"name":"stdio"},{"name":"stdio"}],"output":{"name":"result"}}],[11,"id","","",249,{"inputs":[{"name":"process"}],"output":{"name":"u32"}}],[11,"wait","","",249,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"try_wait","","",249,{"inputs":[{"name":"process"}],"output":{"name":"option"}}],[11,"new","std::sys::rwlock","",250,{"inputs":[{"name":"rwlock"}],"output":{"name":"rwlock"}}],[11,"read","","",250,null],[11,"try_read","","",250,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","",250,null],[11,"try_write","","",250,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","",250,null],[11,"write_unlock","","",250,null],[11,"destroy","","",250,null],[11,"new","std::sys::stack_overflow","",251,{"inputs":[{"name":"handler"}],"output":{"name":"handler"}}],[11,"drop","","",251,null],[11,"new","std::sys::thread","",252,{"inputs":[{"name":"thread"},{"name":"usize"},{"name":"box"}],"output":{"name":"result"}}],[11,"yield_now","","",252,null],[11,"set_name","","",252,null],[11,"sleep","","",252,null],[11,"join","","",252,null],[11,"drop","","",252,null],[11,"now","std::sys::time::inner","",253,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"new","std::sys::stdio","",254,{"inputs":[{"name":"stdin"}],"output":{"name":"result"}}],[11,"read","","",254,null],[11,"new","","",255,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write","","",255,null],[11,"new","","",256,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write","","",256,null],[11,"write","","",256,null],[11,"flush","","",256,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"new","std::rand::os::imp","Create a new `OsRng`.",257,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",257,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",257,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",257,null],[11,"new","std::rand::reader","Create a new `ReaderRng` from a `Read`.",258,{"inputs":[{"name":"readerrng"},{"name":"r"}],"output":{"name":"readerrng"}}],[11,"next_u32","","",258,{"inputs":[{"name":"readerrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",258,{"inputs":[{"name":"readerrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",258,null],[11,"clone","std::rand","",259,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",259,{"inputs":[{"name":"stdrng"}],"output":{"name":"result"}}],[11,"next_u32","","",259,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",259,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",259,null],[11,"from_seed","","",259,null],[11,"reseed","","",260,null],[11,"clone","","",261,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",261,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",261,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",261,null],[11,"new","alloc::rc","Constructs a new `Rc<T>`.",262,{"inputs":[{"name":"rc"},{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc<T>` has only one strong reference.\nThis will succeed even if there are outstanding weak references.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Downgrades the `Rc<T>` to a `Weak<T>` reference.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak<T>` values that share\nthe same inner value.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc<T>` has\none strong reference and no weak references.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"make_unique","","",262,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"make_mut","","Make a mutable reference into the given `Rc<T>` by cloning the inner\ndata if the `Rc<T>` doesn't have one strong reference and no weak\nreferences.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",262,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Rc<T>`.",262,null],[11,"clone","","Makes a clone of the `Rc<T>`.",262,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"default","","Creates a new `Rc<T>`, with the `Default` value for `T`.",262,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc<T>`s.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Rc<T>`s.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Rc<T>`s.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Rc<T>`s.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"le","","'Less-than or equal to' comparison for two `Rc<T>`s.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Rc<T>`s.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ge","","'Greater-than or equal to' comparison for two `Rc<T>`s.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"cmp","","Comparison for two `Rc<T>`s.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"ordering"}}],[11,"hash","","",262,null],[11,"fmt","","",262,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",262,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",262,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",263,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Weak<T>`.",263,null],[11,"clone","","Makes a clone of the `Weak<T>`.",263,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"fmt","","",263,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",262,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"as_ref","","",262,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"fmt","core::cmp","",264,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",264,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",264,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",264,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",264,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",264,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",264,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"hash","core::marker","",265,null],[11,"eq","","",265,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",265,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",265,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",265,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"fmt","core::simd","",266,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",266,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",267,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",267,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",268,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",268,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",269,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",269,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",270,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",270,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",271,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",271,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",272,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",272,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",273,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",273,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",274,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",274,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",275,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",275,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"add","","",270,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"add","","",271,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"add","","",272,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"add","","",273,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"add","","",266,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"add","","",267,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"add","","",268,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"add","","",269,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"add","","",274,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"add","","",275,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"sub","","",270,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"sub","","",271,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"sub","","",272,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"sub","","",273,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"sub","","",266,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"sub","","",267,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"sub","","",268,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"sub","","",269,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"sub","","",274,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"sub","","",275,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"mul","","",270,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"mul","","",271,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"mul","","",272,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"mul","","",273,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"mul","","",266,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"mul","","",267,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"mul","","",268,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"mul","","",269,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"mul","","",274,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"mul","","",275,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"div","","",274,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"div","","",275,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"shl","","",270,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shl","","",271,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shl","","",272,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shl","","",273,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shl","","",266,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shl","","",267,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shl","","",268,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shl","","",269,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"shr","","",270,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shr","","",271,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shr","","",272,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shr","","",273,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shr","","",266,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shr","","",267,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shr","","",268,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shr","","",269,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitand","","",270,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitand","","",271,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitand","","",272,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitand","","",273,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitand","","",266,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitand","","",267,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitand","","",268,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitand","","",269,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitor","","",270,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitor","","",271,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitor","","",272,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitor","","",273,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitor","","",266,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitor","","",267,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitor","","",268,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitor","","",269,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitxor","","",270,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitxor","","",271,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitxor","","",272,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitxor","","",273,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitxor","","",266,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitxor","","",267,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitxor","","",268,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitxor","","",269,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"next","rustc_unicode::char","",276,{"inputs":[{"name":"tolowercase"}],"output":{"name":"option"}}],[11,"next","","",277,{"inputs":[{"name":"touppercase"}],"output":{"name":"option"}}],[11,"next","","",278,{"inputs":[{"name":"casemappingiter"}],"output":{"name":"option"}}],[11,"clone","","",279,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"decodeutf16"}}],[11,"next","","",279,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"option"}}],[11,"size_hint","","",279,null],[11,"borrow","collections::vec","",65,null],[11,"borrow_mut","","",65,null],[11,"eq","core::ops","",280,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",280,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",280,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",280,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",281,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",281,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",281,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",281,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",282,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",282,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",282,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",282,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",283,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",283,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",283,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",283,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::result","",284,null],[11,"fmt","","",284,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",284,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",284,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",284,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",284,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",284,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",284,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",284,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",284,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",284,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",284,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",284,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",284,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",284,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",284,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",284,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",284,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",284,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",284,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",284,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",284,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",284,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",285,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",285,null],[11,"next_back","","",285,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",285,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",286,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",286,null],[11,"next_back","","",286,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",287,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",287,null],[11,"next_back","","",287,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",284,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",288,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",288,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",288,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",288,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",288,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",288,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",288,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",289,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",289,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",289,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",289,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",290,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",290,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",290,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",290,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",290,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",290,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",290,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",290,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",290,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",291,null],[11,"clone","","",291,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",292,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",292,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",292,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",292,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",293,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",293,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",294,null],[11,"deref","","",293,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",293,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",295,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",295,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",295,null],[11,"clone","collections::str","",296,{"inputs":[{"name":"utf16units"}],"output":{"name":"utf16units"}}],[11,"next","","",296,{"inputs":[{"name":"utf16units"}],"output":{"name":"option"}}],[11,"size_hint","","",296,null],[11,"borrow","collections::string","",86,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"fmt","core::str::pattern","",297,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",297,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",297,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",297,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",298,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",299,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",298,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",298,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",298,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",300,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",300,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",300,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",300,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",300,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",300,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",300,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",300,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",301,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",301,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",301,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",301,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",301,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",301,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",301,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",301,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",302,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",302,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",302,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",302,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",302,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",302,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",302,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",302,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",303,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",303,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",304,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",304,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",305,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",305,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",303,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",303,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",303,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",303,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",303,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",306,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",306,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",307,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",307,null],[11,"matching","","",307,null],[11,"use_early_reject","","",308,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",308,null],[11,"matching","","",308,null],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",309,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",309,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",309,null],[11,"finish","","",309,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",309,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",309,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"borrow","collections::borrow","",310,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"clone","","",310,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",310,null],[11,"into_owned","","Extracts the owned data.",310,null],[11,"deref","","",310,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"cmp","","",310,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"ordering"}}],[11,"eq","","",310,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",310,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","","",310,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",310,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",310,null],[11,"into_cow","","",310,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"as_ref","","",310,{"inputs":[{"name":"cow"}],"output":{"name":"t"}}],[11,"new","collections::vec","Constructs a new, empty `Vec<T>`.",65,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec<T>` with the specified capacity.",65,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec<T>` directly from the raw components of another vector.",65,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",65,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec<T>`. The collection may reserve more space to avoid\nfrequent reallocations.",65,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec<T>`. Does nothing if the capacity is already\nsufficient.",65,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",65,null],[11,"into_boxed_slice","","Converts the vector into Box<[T]>.",65,{"inputs":[{"name":"vec"}],"output":{"name":"box"}}],[11,"truncate","","Shorten a vector, dropping excess elements.",65,null],[11,"as_slice","","Extracts a slice containing the entire vector.",65,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",65,null],[11,"set_len","","Sets the length of a vector.",65,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",65,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after position `i` one position to the right.",65,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after position `index` one position to the left.",65,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"retain","","Retains only the elements specified by the predicate.",65,null],[11,"push","","Appends an element to the back of a collection.",65,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",65,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",65,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",65,{"inputs":[{"name":"vec"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the vector, removing all values.",65,null],[11,"len","","Returns the number of elements in the vector.",65,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector contains no elements.",65,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"split_off","","Splits the collection into two at the given index.",65,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",65,null],[11,"push_all","","Appends all elements in a slice to the `Vec`.",65,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",65,null],[11,"clone","","",65,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"clone_from","","",65,null],[11,"hash","","",65,null],[11,"index","","",65,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",65,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index","","",65,null],[11,"index","","",65,null],[11,"index","","",65,null],[11,"index","","",65,null],[11,"index_mut","","",65,null],[11,"index_mut","","",65,null],[11,"index_mut","","",65,null],[11,"index_mut","","",65,null],[11,"deref","","",65,null],[11,"deref_mut","","",65,null],[11,"from_iter","","",65,{"inputs":[{"name":"vec"},{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",65,{"inputs":[{"name":"vec"}],"output":{"name":"intoiter"}}],[11,"extend","","",65,null],[11,"extend","","",65,null],[11,"eq","","",65,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","collections::borrow","",310,null],[11,"ne","","",310,null],[11,"eq","","",310,null],[11,"ne","","",310,null],[11,"eq","","",310,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",310,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","collections::vec","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"partial_cmp","","",65,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"option"}}],[11,"cmp","","",65,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"ordering"}}],[11,"drop","","",65,null],[11,"default","","",65,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"fmt","","",65,{"inputs":[{"name":"vec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",65,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_mut","","",65,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_ref","","",65,null],[11,"as_mut","","",65,null],[11,"from","","",65,null],[11,"from","","",65,{"inputs":[{"name":"vec"},{"name":"str"}],"output":{"name":"vec"}}],[11,"from_iter","collections::borrow","",310,{"inputs":[{"name":"cow"},{"name":"i"}],"output":{"name":"cow"}}],[11,"into_cow","collections::vec","",65,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"next","","",311,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",311,null],[11,"count","","",311,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next_back","","",311,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",311,null],[11,"next","","",312,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",312,null],[11,"next_back","","",312,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","","",312,null],[11,"clone","core::iter","",313,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",313,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",313,null],[11,"next_back","","",313,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",314,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",314,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",314,null],[11,"next_back","","",314,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",315,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",315,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",315,null],[11,"clone","","",316,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"clone","","",317,{"inputs":[{"name":"chainstate"}],"output":{"name":"chainstate"}}],[11,"next","","",316,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",316,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",316,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",316,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",316,null],[11,"next_back","","",316,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",318,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",318,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",318,null],[11,"next_back","","",318,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",319,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",319,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",319,null],[11,"next_back","","",319,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",320,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",320,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",320,null],[11,"next_back","","",320,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",321,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",321,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",321,null],[11,"next_back","","",321,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",322,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",322,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",322,null],[11,"nth","","",322,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",322,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",322,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",323,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",323,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",323,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",323,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",323,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",323,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",323,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",323,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",324,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",324,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",324,null],[11,"clone","","",325,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",325,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",325,null],[11,"clone","","",326,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",326,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",326,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",326,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",326,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",326,null],[11,"clone","","",327,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",327,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",327,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",327,null],[11,"clone","","",328,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",328,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",328,null],[11,"clone","","",329,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",329,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",329,null],[11,"next_back","","",329,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",330,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",330,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",330,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",330,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",330,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",330,null],[11,"next_back","","",330,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",331,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",331,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",331,null],[11,"next_back","","",331,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",332,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",282,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",281,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",332,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",332,null],[11,"clone","","",333,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",333,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",333,null],[11,"next_back","","",333,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",332,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",332,null],[11,"next","core::ops","",281,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",281,null],[11,"next_back","","",281,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",282,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",334,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",334,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",334,null],[11,"next_back","","",334,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",335,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",335,null],[11,"next_back","","",335,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",335,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",335,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",335,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",336,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",336,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",336,null],[11,"next_back","","",336,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",336,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"cmp","collections::string","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"option"}}],[11,"lt","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"le","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"gt","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ge","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new string buffer initialized with the empty string.",86,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new string buffer with the given capacity.\nThe string will be able to hold exactly `capacity` bytes without\nreallocating. If `capacity` is 0, the string will not allocate.",86,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",86,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a `String`, including invalid characters.",86,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `None`\nif `v` contains any invalid data.",86,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",86,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",86,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",86,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Returns the underlying byte buffer, encoded as UTF-8.",86,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"as_str","","Extracts a string slice containing the entire string.",86,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"push_str","","Pushes the given string onto this string buffer.",86,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without\nreallocating.",86,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `String`. The collection may reserve more space to avoid\nfrequent reallocations.",86,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bytes to be\ninserted in the given `String`. Does nothing if the capacity is already\nsufficient.",86,null],[11,"shrink_to_fit","","Shrinks the capacity of this string buffer to match its length.",86,null],[11,"push","","Adds the given character to the end of the string.",86,null],[11,"as_bytes","","Works with the underlying buffer as a byte slice.",86,null],[11,"truncate","","Shortens a string to the specified length.",86,null],[11,"pop","","Removes the last character from the string buffer and returns it.\nReturns `None` if this string buffer is empty.",86,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"remove","","Removes the character from the string buffer at byte position `idx` and\nreturns it.",86,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"char"}}],[11,"insert","","Inserts a character into the string buffer at byte position `idx`.",86,null],[11,"as_mut_vec","","Views the string buffer as a mutable sequence of bytes.",86,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"len","","Returns the number of bytes in this string.",86,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the string contains no bytes",86,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"clear","","Truncates the string, returning it to 0 length.",86,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",86,{"inputs":[{"name":"string"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_boxed_str","","Converts the string into `Box<str>`.",86,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_boxed_slice","","Converts the string into `Box<str>`.",86,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_bytes","","Consumes this error, returning the bytes that were attempted to make a\n`String` with.",7,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"vec"}}],[11,"utf8_error","","Access the underlying UTF8-error that was the cause of this error.",7,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"utf8error"}}],[11,"fmt","","",7,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",86,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"clone_from","","",86,null],[11,"from_iter","","",86,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",86,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",86,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",86,null],[11,"extend","","",86,null],[11,"extend","","",86,null],[11,"extend","","",86,null],[11,"eq","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",310,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",310,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",310,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",310,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",86,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",310,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",310,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"default","collections::string","",86,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",86,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",86,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",86,null],[11,"add","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"index","","",86,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index","","",86,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index","","",86,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index","","",86,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"index_mut","","",86,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index_mut","","",86,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index_mut","","",86,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index_mut","","",86,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"deref","","",86,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"deref_mut","","",86,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"from_str","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",337,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"fmt","","",337,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",337,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"as_ref","","",86,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_ref","","",86,null],[11,"from","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",310,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",310,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",86,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"into_cow","","",86,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"write_str","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",86,{"inputs":[{"name":"string"},{"name":"char"}],"output":{"name":"result"}}],[11,"drop","","",338,null],[11,"next","","",338,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",338,null],[11,"next_back","","",338,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"fmt","","",339,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",339,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",339,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",339,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",339,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",339,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",339,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",339,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",340,null],[11,"fmt","","",340,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",340,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",340,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",340,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",340,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"hash","core::option","",341,null],[11,"fmt","","",341,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",341,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"is_some","","Returns `true` if the option is a `Some` value",341,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",341,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",341,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",341,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",341,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",341,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",341,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",341,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",341,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",341,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",341,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",341,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",341,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",341,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",341,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",341,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",341,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",341,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",341,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",341,null],[11,"cloned","","Maps an `Option<&T>` to an `Option<T>` by cloning the contents of the\noption.",341,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",341,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","","",341,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",341,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",342,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",342,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",342,null],[11,"next_back","","",342,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",343,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",343,null],[11,"next_back","","",343,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",343,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",344,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",344,null],[11,"next_back","","",344,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",345,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",345,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",345,null],[11,"next_back","","",345,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",341,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","alloc::boxed","",346,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"exchangeheapsingleton"}}],[11,"pointer","","",347,null],[11,"make_place","","",347,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"intermediatebox"}}],[11,"finalize","","",347,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"finalize","","",2,{"inputs":[{"name":"box"},{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",346,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"intermediatebox"}}],[11,"drop","","",347,null],[11,"new","","Allocates memory on the heap and then moves `x` into it.",2,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from the raw pointer.",2,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",2,null],[11,"default","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"default","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box's contents.",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`'s contents into `self` without creating a new allocation.",2,null],[11,"clone","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"eq","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",2,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"next","","",2,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",2,null],[11,"next_back","","",2,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"call_once","","",2,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"call_once","","",2,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"clone","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"borrow","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"borrow_mut","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_ref","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_mut","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",348,null],[11,"get","","Dereferences the content.",348,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",348,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",348,null],[11,"fmt","","",348,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",349,null],[11,"clone","","",349,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",349,null],[11,"fmt","","",349,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","core::raw","",350,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",351,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"clone","core::fmt::rt::v1","",352,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",353,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",354,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",354,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",354,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",355,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",356,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"deref","libloading::os::unix","",357,{"inputs":[{"name":"dlerror_mutex"}],"output":{"name":"mutex"}}],[11,"new","","Find and load a shared library (module).",358,{"inputs":[{"name":"library"},{"name":"p"}],"output":{"name":"result"}}],[11,"this","","Load the dynamic libraries linked into main program.",358,{"inputs":[{"name":"library"}],"output":{"name":"library"}}],[11,"get","","Get a symbol by name.",358,null],[11,"drop","","",358,null],[11,"fmt","","",358,{"inputs":[{"name":"library"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",359,{"inputs":[{"name":"symbol"}],"output":{"name":"t"}}],[11,"fmt","","",359,{"inputs":[{"name":"symbol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","libloading::util","",360,{"inputs":[{"name":"nullerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",360,{"inputs":[{"name":"nullerror"},{"name":"nulerror"}],"output":{"name":"nullerror"}}],[11,"from","std::io::error","",83,{"inputs":[{"name":"error"},{"name":"nullerror"}],"output":{"name":"error"}}],[11,"description","libloading::util","",360,{"inputs":[{"name":"nullerror"}],"output":{"name":"str"}}],[11,"fmt","","",360,{"inputs":[{"name":"nullerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_bytes","","Checks for last byte and avoids alocatting if its zero.",361,null],[11,"cstring_ref","std::ffi::c_str","",79,{"inputs":[{"name":"cstring"}],"output":{"name":"i8"}}],[11,"cstring_ref","libloading::util","",361,{"inputs":[{"name":"cowcstring"}],"output":{"name":"i8"}}],[11,"deref","libloading","",362,{"inputs":[{"name":"symbol"}],"output":{"name":"t"}}],[3,"Library","dlib","A dynamically loaded library.",null,null],[3,"Symbol","","Symbol from a library.",null,null],[4,"DlError","","",null,null],[13,"NotFound","","",363,null],[13,"MissingSymbol","","",363,null],[14,"ffi_dispatch!","","",null,null],[14,"ffi_dispatch_static!","","",null,null],[14,"link_external_library!","","",null,null],[14,"dlopen_external_library!","","",null,null],[14,"external_library!","","",null,null]],"paths":[[3,"Library"],[3,"Mutex"],[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[8,"Error"],[3,"EscapeDefault"],[3,"Wrapping"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"ScopedKey"],[3,"KeyInner"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"RawBucket"],[3,"Bucket"],[3,"SafeHash"],[3,"FullBucket"],[3,"EmptyBucket"],[4,"BucketState"],[3,"GapThenFull"],[3,"RawTable"],[3,"RawBuckets"],[3,"RevMoveBuckets"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DefaultResizePolicy"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"DefaultState"],[3,"Iter"],[3,"IntoIter"],[3,"Rawlink"],[3,"LinkedList"],[3,"IterMut"],[3,"BinaryHeap"],[3,"Hole"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DynamicLibrary"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"WalkDir"],[3,"Path"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"InternalBufWriter"],[3,"Cursor"],[3,"Custom"],[4,"ErrorKind"],[4,"Repr"],[3,"Lazy"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"StdinRaw"],[3,"StdoutRaw"],[3,"StderrRaw"],[4,"Maybe"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Broadcast"],[3,"Chain"],[3,"Take"],[3,"Tee"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[4,"Prefix"],[4,"State"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"SignalToken"],[3,"WaitToken"],[3,"Packet"],[4,"StartResult"],[3,"Select"],[3,"Handle"],[3,"Packets"],[3,"Packet"],[3,"Packet"],[4,"Failure"],[3,"Packet"],[3,"Queue"],[3,"Queue"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Semaphore"],[3,"SemaphoreGuard"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Duration"],[3,"Condvar"],[3,"EHContext"],[3,"DwarfReader"],[4,"_Unwind_Action"],[4,"_Unwind_Reason_Code"],[3,"Mutex"],[3,"LookupHost"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[3,"Flag"],[3,"PoisonError"],[4,"TryLockError"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"RWLock"],[3,"StaticKey"],[3,"Key"],[3,"CodePoint"],[3,"Wtf8Buf"],[3,"Wtf8"],[3,"Wtf8CodePoints"],[3,"EncodeWide"],[3,"Condvar"],[3,"FileDesc"],[3,"FileAttr"],[3,"OpenOptions"],[3,"FilePermissions"],[3,"FileType"],[3,"ReadDir"],[3,"Dir"],[3,"DirEntry"],[3,"File"],[3,"DirBuilder"],[3,"Mutex"],[3,"ReentrantMutex"],[3,"Socket"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"Env"],[3,"Buf"],[3,"Slice"],[3,"AnonPipe"],[3,"Command"],[4,"ExitStatus"],[3,"Process"],[3,"RWLock"],[3,"Handler"],[3,"Thread"],[3,"SteadyTime"],[3,"Stdin"],[3,"Stdout"],[3,"Stderr"],[3,"OsRng"],[3,"ReaderRng"],[3,"StdRng"],[3,"ThreadRngReseeder"],[3,"ThreadRng"],[3,"Rc"],[3,"Weak"],[4,"Ordering"],[3,"PhantomData"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"ToLowercase"],[3,"ToUppercase"],[4,"CaseMappingIter"],[3,"DecodeUtf16"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"Utf16Units"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"SipHasher"],[4,"Cow"],[3,"IntoIter"],[3,"Drain"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[4,"ChainState"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[4,"ParseError"],[3,"Drain"],[8,"Any"],[3,"TypeId"],[4,"Option"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"Unique"],[3,"Shared"],[3,"Slice"],[3,"TraitObject"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"DLERROR_MUTEX"],[3,"Library"],[3,"Symbol"],[3,"NullError"],[4,"CowCString"],[3,"Symbol"],[4,"DlError"]]};
searchIndex['rand'] = {"items":[[0,"","rand","Utilities for random number generation",null,null],[3,"Generator","","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number\ngenerator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the\nopen interval `(0,1)` (not including either endpoint).",null,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the\nclosed interval `[0,1]` (including both endpoints).",null,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current\nplatform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number\ngenerator, seeded by the system. Intended to be used in method\nchaining style, e.g. `thread_rng().gen::<i32>()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the\n`Sample` & `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",0,null],[12,"item","","The actual item which is being weighted",0,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample\nuniformly between two values. This should not be used directly,\nand is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range`\nrequires. This should not ever be called directly, only via\n`Range::new`, which will check that `low < high`, so this\nfunction doesn't have to repeat the check.",1,{"inputs":[{"name":"samplerange"},{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as\na source of randomness.",1,{"inputs":[{"name":"samplerange"},{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",2,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"new","","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low >= high`.",2,{"inputs":[{"name":"range"},{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",2,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",2,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"sup"}}],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of\nfreedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of\nfreedom.",null,null],[11,"clone","","",3,{"inputs":[{"name":"gamma"}],"output":{"name":"gamma"}}],[11,"new","","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",3,{"inputs":[{"name":"gamma"},{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",3,{"inputs":[{"name":"gamma"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",3,{"inputs":[{"name":"gamma"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",4,{"inputs":[{"name":"chisquared"}],"output":{"name":"chisquared"}}],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k < 0`.",4,{"inputs":[{"name":"chisquared"},{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",4,{"inputs":[{"name":"chisquared"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",4,{"inputs":[{"name":"chisquared"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",5,{"inputs":[{"name":"fisherf"}],"output":{"name":"fisherf"}}],[11,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",5,{"inputs":[{"name":"fisherf"},{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",5,{"inputs":[{"name":"fisherf"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",5,{"inputs":[{"name":"fisherf"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",6,{"inputs":[{"name":"studentt"}],"output":{"name":"studentt"}}],[11,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n <= 0`.",6,{"inputs":[{"name":"studentt"},{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",6,{"inputs":[{"name":"studentt"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",6,{"inputs":[{"name":"studentt"},{"name":"r"}],"output":{"name":"f64"}}],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers\n(a.k.a.  a standard normal, or Gaussian).",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",7,{"inputs":[{"name":"standardnormal"}],"output":{"name":"standardnormal"}}],[11,"rand","","",7,{"inputs":[{"name":"standardnormal"},{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",8,{"inputs":[{"name":"normal"}],"output":{"name":"normal"}}],[11,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",8,{"inputs":[{"name":"normal"},{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",8,{"inputs":[{"name":"normal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",8,{"inputs":[{"name":"normal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",9,{"inputs":[{"name":"lognormal"}],"output":{"name":"lognormal"}}],[11,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",9,{"inputs":[{"name":"lognormal"},{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",9,{"inputs":[{"name":"lognormal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",9,{"inputs":[{"name":"lognormal"},{"name":"r"}],"output":{"name":"f64"}}],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",10,{"inputs":[{"name":"exp1"}],"output":{"name":"exp1"}}],[11,"rand","","",10,{"inputs":[{"name":"exp1"},{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",11,{"inputs":[{"name":"exp"}],"output":{"name":"exp"}}],[11,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda <= 0`.",11,{"inputs":[{"name":"exp"},{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",11,{"inputs":[{"name":"exp"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",11,{"inputs":[{"name":"exp"},{"name":"r"}],"output":{"name":"f64"}}],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the\nsource of randomness.",12,{"inputs":[{"name":"sample"},{"name":"r"}],"output":{"name":"support"}}],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",13,{"inputs":[{"name":"independentsample"},{"name":"r"}],"output":{"name":"support"}}],[11,"clone","","",14,{"inputs":[{"name":"randsample"}],"output":{"name":"self"}}],[11,"sample","","",14,{"inputs":[{"name":"randsample"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",14,{"inputs":[{"name":"randsample"},{"name":"r"}],"output":{"name":"sup"}}],[11,"new","","",14,{"inputs":[{"name":"randsample"}],"output":{"name":"randsample"}}],[11,"clone","","",0,{"inputs":[{"name":"weighted"}],"output":{"name":"weighted"}}],[11,"new","","Create a new `WeightedChoice`.",15,null],[11,"sample","","",15,{"inputs":[{"name":"weightedchoice"},{"name":"r"}],"output":{"name":"t"}}],[11,"ind_sample","","",15,{"inputs":[{"name":"weightedchoice"},{"name":"r"}],"output":{"name":"t"}}],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit\nvariant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default\nfixed seed.",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"isaacrng"}}],[11,"clone","","",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"isaacrng"}}],[11,"next_u32","","",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"u32"}}],[11,"reseed","","",16,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",16,null],[11,"rand","","",16,{"inputs":[{"name":"isaacrng"},{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the\ndefault fixed seed.",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"isaac64rng"}}],[11,"clone","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"isaac64rng"}}],[11,"next_u32","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"u32"}}],[11,"next_u64","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"u64"}}],[11,"reseed","","",17,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",17,null],[11,"rand","","",17,{"inputs":[{"name":"isaac64rng"},{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"chacharng"}}],[11,"new_unseeded","","Create an ChaCha random number generator using the default\nfixed key of 8 zero words.",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to\na user-provided value. This permits jumping\narbitrarily ahead (or backwards) in the pseudorandom stream.",18,{"inputs":[{"name":"chacharng"},{"name":"u64"},{"name":"u64"}],"output":null}],[11,"next_u32","","",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"u32"}}],[11,"reseed","","",18,null],[11,"from_seed","","Create a ChaCha generator from a seed,\nobtained from a variable-length u32 array.\nOnly up to 8 words are used; if less than 8\nwords are used, the remaining are set to zero.",18,null],[11,"rand","","",18,{"inputs":[{"name":"chacharng"},{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it\ngenerates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it\nhas generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",19,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by\nreplacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",20,{"inputs":[{"name":"reseeder"},{"name":"r"}],"output":null}],[11,"new","","Create a new `ReseedingRng` with the given parameters.",19,{"inputs":[{"name":"reseedingrng"},{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",19,{"inputs":[{"name":"reseedingrng"}],"output":null}],[11,"next_u32","","",19,{"inputs":[{"name":"reseedingrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",19,{"inputs":[{"name":"reseedingrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",19,null],[11,"reseed","","",19,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",19,null],[11,"clone","","",21,{"inputs":[{"name":"reseedwithdefault"}],"output":{"name":"reseedwithdefault"}}],[11,"reseed","","",21,{"inputs":[{"name":"reseedwithdefault"},{"name":"r"}],"output":null}],[11,"default","","",21,{"inputs":[{"name":"reseedwithdefault"}],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",22,{"inputs":[{"name":"open01"},{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",23,{"inputs":[{"name":"closed01"},{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",22,{"inputs":[{"name":"open01"},{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",23,{"inputs":[{"name":"closed01"},{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","core::option","",24,{"inputs":[{"name":"option"},{"name":"r"}],"output":{"name":"option"}}],[0,"os","rand","Interfaces to the operating system provided random number\ngenerators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from\nthe operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",25,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",25,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",25,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",25,null],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will\nwork best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",26,{"inputs":[{"name":"readrng"},{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",26,{"inputs":[{"name":"readrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",26,{"inputs":[{"name":"readrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",26,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of\nrandomness.",27,{"inputs":[{"name":"rand"},{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",28,{"inputs":[{"name":"rng"}],"output":{"name":"u32"}}],[11,"next_u64","","Return the next random u64.",28,{"inputs":[{"name":"rng"}],"output":{"name":"u64"}}],[11,"next_f32","","Return the next random f32 selected from the half-open\ninterval `[0, 1)`.",28,{"inputs":[{"name":"rng"}],"output":{"name":"f32"}}],[11,"next_f64","","Return the next random f64 selected from the half-open\ninterval `[0, 1)`.",28,{"inputs":[{"name":"rng"}],"output":{"name":"f64"}}],[11,"fill_bytes","","Fill `dest` with random data.",28,null],[11,"gen","","Return a random value of a `Rand` type.",28,{"inputs":[{"name":"rng"}],"output":{"name":"t"}}],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly\ngenerated items.",28,{"inputs":[{"name":"rng"}],"output":{"name":"generator"}}],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",28,{"inputs":[{"name":"rng"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",28,{"inputs":[{"name":"rng"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",28,{"inputs":[{"name":"rng"}],"output":{"name":"asciigenerator"}}],[11,"choose","","Return a random element from `values`.",28,null],[11,"shuffle","","Shuffle a mutable slice in place.",28,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce\nthe same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",29,{"inputs":[{"name":"seedablerng"},{"name":"seed"}],"output":null}],[10,"from_seed","","Create a new RNG with the given seed.",29,{"inputs":[{"name":"seedablerng"},{"name":"seed"}],"output":{"name":"self"}}],[11,"next_u32","alloc::boxed","",30,{"inputs":[{"name":"box"}],"output":{"name":"u32"}}],[11,"next_u64","","",30,{"inputs":[{"name":"box"}],"output":{"name":"u64"}}],[11,"next_f32","","",30,{"inputs":[{"name":"box"}],"output":{"name":"f32"}}],[11,"next_f64","","",30,{"inputs":[{"name":"box"}],"output":{"name":"f64"}}],[11,"fill_bytes","","",30,null],[11,"next","rand","",31,{"inputs":[{"name":"generator"}],"output":{"name":"option"}}],[11,"next","","",32,{"inputs":[{"name":"asciigenerator"}],"output":{"name":"option"}}],[11,"clone","","",33,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"xorshiftrng"}}],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",33,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",33,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"u32"}}],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",33,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",33,null],[11,"rand","","",33,{"inputs":[{"name":"xorshiftrng"},{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",34,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",34,{"inputs":[{"name":"stdrng"}],"output":{"name":"result"}}],[11,"next_u32","","",34,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",34,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",34,null],[11,"from_seed","","",34,null],[11,"clone","","",35,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",35,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",35,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",35,null]],"paths":[[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"Open01"],[3,"Closed01"],[4,"Option"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Box"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex['libloading'] = {"items":[[0,"","libloading","A memory-safer wrapper around system dynamic library primitives.",null,null],[3,"Library","","A dynamically loaded library.",null,null],[3,"Symbol","","Symbol from a library.",null,null],[0,"os","","",null,null],[0,"unix","libloading::os","",null,null],[3,"Library","libloading::os::unix","A platform-specific equivalent of the cross-platform `Library`.",null,null],[3,"Symbol","","Symbol from a library.",null,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",0,{"inputs":[{"name":"mutex"},{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",0,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",0,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",0,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this mutex, returning the underlying data.",0,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",0,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"from","alloc::boxed","",1,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",1,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",1,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",1,{"inputs":[{"name":"box"},{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",2,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"str"}}],[11,"description","","",3,{"inputs":[{"name":"utf8error"}],"output":{"name":"str"}}],[11,"description","core::num","",4,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"description","core::num::dec2flt","",5,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"str"}}],[11,"description","collections::string","",6,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"str"}}],[11,"description","","",7,{"inputs":[{"name":"fromutf16error"}],"output":{"name":"str"}}],[11,"is","libloading::os","Returns true if the boxed type is the same as `T`",8,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",8,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",8,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",8,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",8,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",8,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",8,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",8,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",8,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",8,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",8,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",8,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"next","std::ascii","",9,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",9,null],[11,"next_back","","",9,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"shl","core::num","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",10,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",10,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",10,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",10,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",10,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",10,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",10,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",10,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",10,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",10,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"clone","std::thread::local","",11,{"inputs":[{"name":"localkeystate"}],"output":{"name":"localkeystate"}}],[11,"eq","","",11,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"with","","Acquires a reference to the value in this TLS key.",12,{"inputs":[{"name":"localkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"state","","Query the current state of this key.",12,{"inputs":[{"name":"localkey"}],"output":{"name":"localkeystate"}}],[11,"new","std::thread::local::imp","",13,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"get","","",13,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"set","std::thread::scoped_tls","Inserts a value into this scoped thread local storage slot for a\nduration of a closure.",14,{"inputs":[{"name":"scopedkey"},{"name":"t"},{"name":"f"}],"output":{"name":"r"}}],[11,"with","","Gets a value out of this scoped variable.",14,{"inputs":[{"name":"scopedkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"is_set","","Test whether this TLS key has been `set` for the current thread.",14,{"inputs":[{"name":"scopedkey"}],"output":{"name":"bool"}}],[11,"new","std::thread::scoped_tls::imp","",15,{"inputs":[{"name":"keyinner"}],"output":{"name":"keyinner"}}],[11,"set","","",15,null],[11,"get","","",15,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",16,{"inputs":[{"name":"builder"}],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",16,{"inputs":[{"name":"builder"},{"name":"string"}],"output":{"name":"builder"}}],[11,"stack_size","","Sets the size of the stack for the new thread.",16,{"inputs":[{"name":"builder"},{"name":"usize"}],"output":{"name":"builder"}}],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",16,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"thread"}],"output":{"name":"thread"}}],[11,"unpark","","Atomically makes the handle's token available if it is not already.",17,null],[11,"name","","Gets the thread's name.",17,{"inputs":[{"name":"thread"}],"output":{"name":"option"}}],[11,"fmt","","",17,{"inputs":[{"name":"thread"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",17,{"inputs":[{"name":"thread"},{"name":"option"}],"output":{"name":"thread"}}],[11,"thread","","Extracts a handle to the underlying thread",18,{"inputs":[{"name":"joinhandle"}],"output":{"name":"thread"}}],[11,"join","","Waits for the associated thread to finish.",18,{"inputs":[{"name":"joinhandle"}],"output":{"name":"result"}}],[11,"clone","std::collections::hash::table","",19,{"inputs":[{"name":"rawbucket"}],"output":{"name":"rawbucket"}}],[11,"clone","","",20,{"inputs":[{"name":"bucket"}],"output":{"name":"bucket"}}],[11,"clone","","",21,{"inputs":[{"name":"safehash"}],"output":{"name":"safehash"}}],[11,"eq","","",21,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"inspect","","Peek at the hash value, which is guaranteed to be non-zero.",21,{"inputs":[{"name":"safehash"}],"output":{"name":"u64"}}],[11,"table","","Borrow a reference to the table.",22,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",22,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",22,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"table","","Borrow a reference to the table.",23,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",23,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",20,{"inputs":[{"name":"bucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",20,{"inputs":[{"name":"bucket"}],"output":{"name":"usize"}}],[11,"new","","",20,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"safehash"}],"output":{"name":"bucket"}}],[11,"at_index","","",20,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"usize"}],"output":{"name":"bucket"}}],[11,"first","","",20,{"inputs":[{"name":"bucket"},{"name":"m"}],"output":{"name":"bucket"}}],[11,"peek","","Reads a bucket at a given index, returning an enum indicating whether\nit's initialized or not. You need to match on this enum to get\nthe appropriate types to call most of the other functions in\nthis module.",20,{"inputs":[{"name":"bucket"}],"output":{"name":"bucketstate"}}],[11,"next","","Modifies the bucket pointer in place to make it point to the next slot.",20,null],[11,"next","","",23,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",23,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"gap_peek","","",23,{"inputs":[{"name":"emptybucket"}],"output":{"name":"option"}}],[11,"put","","Puts given key and value pair, along with the key's hash,\ninto this bucket in the hashtable. Note how `self` is 'moved' into\nthis function, because this slot will no longer be empty when\nwe return! A `FullBucket` is returned for later use, pointing to\nthe newly-filled slot in the hashtable.",23,{"inputs":[{"name":"emptybucket"},{"name":"safehash"},{"name":"k"},{"name":"v"}],"output":{"name":"fullbucket"}}],[11,"next","","",22,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",22,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"distance","","Get the distance between this bucket and the 'ideal' location\nas determined by the key's hash stored in it.",22,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"hash","","",22,{"inputs":[{"name":"fullbucket"}],"output":{"name":"safehash"}}],[11,"read","","Gets references to the key and value at a given index.",22,null],[11,"take","","Removes this bucket's key and value from the hashtable.",22,null],[11,"replace","","",22,null],[11,"read_mut","","Gets mutable references to the key and value at a given index.",22,null],[11,"into_refs","","Exchange a bucket state for immutable references into the table.\nBecause the underlying reference to the table is also consumed,\nno further changes to the structure of the table are possible;\nin exchange for this, the returned references have a longer lifetime\nthan the references returned by `read()`.",22,null],[11,"into_mut_refs","","This works similarly to `into_refs`, exchanging a bucket state\nfor mutable references into the table.",22,null],[11,"expect_full","","",24,{"inputs":[{"name":"bucketstate"}],"output":{"name":"fullbucket"}}],[11,"full","","",25,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"fullbucket"}}],[11,"shift","","",25,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"option"}}],[11,"new","","Creates a new raw table from a given capacity. All buckets are\ninitially empty.",26,{"inputs":[{"name":"rawtable"},{"name":"usize"}],"output":{"name":"rawtable"}}],[11,"capacity","","The hashtable's capacity, similar to a vector's.",26,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"size","","The number of elements ever `put` in the hashtable, minus the number\nof elements ever `take`n.",26,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"iter","","",26,{"inputs":[{"name":"rawtable"}],"output":{"name":"iter"}}],[11,"iter_mut","","",26,{"inputs":[{"name":"rawtable"}],"output":{"name":"itermut"}}],[11,"into_iter","","",26,{"inputs":[{"name":"rawtable"}],"output":{"name":"intoiter"}}],[11,"drain","","",26,{"inputs":[{"name":"rawtable"}],"output":{"name":"drain"}}],[11,"clone","","",27,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"rawbuckets"}}],[11,"next","","",27,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"option"}}],[11,"next","","",28,{"inputs":[{"name":"revmovebuckets"}],"output":{"name":"option"}}],[11,"clone","","",29,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",29,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",29,null],[11,"len","","",29,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",30,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",30,null],[11,"len","","",30,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",31,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",31,null],[11,"len","","",31,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",32,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",32,null],[11,"len","","",32,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"drop","","",32,null],[11,"clone","","",26,{"inputs":[{"name":"rawtable"}],"output":{"name":"rawtable"}}],[11,"drop","","",26,null],[11,"clone","std::collections::hash::map","",33,{"inputs":[{"name":"defaultresizepolicy"}],"output":{"name":"defaultresizepolicy"}}],[11,"clone","","",34,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"new","","Creates an empty HashMap.",34,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",34,{"inputs":[{"name":"hashmap"},{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hash_state","","Creates an empty hashmap which will use the given hasher to hash keys.",34,{"inputs":[{"name":"hashmap"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",34,{"inputs":[{"name":"hashmap"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",34,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",34,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",34,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&'a K`.",34,{"inputs":[{"name":"hashmap"}],"output":{"name":"keys"}}],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&'a V`.",34,{"inputs":[{"name":"hashmap"}],"output":{"name":"values"}}],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&'a K, &'a V)`.",34,{"inputs":[{"name":"hashmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&'a K, &'a mut V)`.",34,{"inputs":[{"name":"hashmap"}],"output":{"name":"itermut"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",34,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"len","","Returns the number of elements in the map.",34,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",34,{"inputs":[{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",34,{"inputs":[{"name":"hashmap"}],"output":{"name":"drain"}}],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",34,null],[11,"get","","Returns a reference to the value corresponding to the key.",34,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",34,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",34,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map.",34,{"inputs":[{"name":"hashmap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",34,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",34,{"inputs":[{"name":"hashmap"},{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"fmt","","",34,{"inputs":[{"name":"hashmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",34,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"index","","",34,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"v"}}],[11,"clone","","",35,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",36,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",37,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",34,{"inputs":[{"name":"hashmap"}],"output":{"name":"intoiter"}}],[11,"next","","",35,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",35,null],[11,"len","","",35,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",38,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",38,null],[11,"len","","",38,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",39,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",39,null],[11,"len","","",39,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",36,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",36,null],[11,"len","","",36,{"inputs":[{"name":"keys"}],"output":{"name":"usize"}}],[11,"next","","",37,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",37,null],[11,"len","","",37,{"inputs":[{"name":"values"}],"output":{"name":"usize"}}],[11,"next","","",40,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",40,null],[11,"len","","",40,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",41,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",41,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",42,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",42,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",42,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry, and returns the entry's old value",42,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value out of the entry, and returns it",42,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it",43,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","","",34,{"inputs":[{"name":"hashmap"},{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",34,null],[11,"extend","","",34,null],[11,"clone","","",44,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",44,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"hasher","","",44,{"inputs":[{"name":"randomstate"}],"output":{"name":"siphasher"}}],[11,"default","","",44,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"get","","",34,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"take","","",34,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"replace","","",34,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"option"}}],[11,"clone","std::collections::hash::set","",45,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"new","","Creates an empty HashSet.",45,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",45,{"inputs":[{"name":"hashset"},{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hash_state","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",45,{"inputs":[{"name":"hashset"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",45,{"inputs":[{"name":"hashset"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",45,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",45,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",45,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &'a T.",45,{"inputs":[{"name":"hashset"}],"output":{"name":"iter"}}],[11,"difference","","Visit the values representing the difference.",45,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",45,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visit the values representing the intersection.",45,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"intersection"}}],[11,"union","","Visit the values representing the union.",45,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",45,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",45,{"inputs":[{"name":"hashset"}],"output":{"name":"bool"}}],[11,"drain","","Clears the set, returning all elements in an iterator.",45,{"inputs":[{"name":"hashset"}],"output":{"name":"drain"}}],[11,"clear","","Clears the set, removing all values.",45,null],[11,"contains","","Returns `true` if the set contains a value.",45,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",45,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",45,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",45,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",45,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set.",45,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",45,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"option"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",45,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",45,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",45,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"fmt","","",45,{"inputs":[{"name":"hashset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",45,{"inputs":[{"name":"hashset"},{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",45,null],[11,"extend","","",45,null],[11,"default","","",45,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",45,{"inputs":[{"name":"hashset"}],"output":{"name":"intoiter"}}],[11,"clone","","",46,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",46,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",46,null],[11,"len","","",46,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",47,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",47,null],[11,"len","","",47,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",48,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",48,null],[11,"len","","",48,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"clone","","",49,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"next","","",49,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",49,null],[11,"clone","","",50,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"next","","",50,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",50,null],[11,"clone","","",51,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",51,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",51,null],[11,"clone","","",52,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"next","","",52,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",52,null],[11,"hasher","std::collections::hash::state","",53,{"inputs":[{"name":"defaultstate"}],"output":{"name":"h"}}],[11,"clone","","",53,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"default","","",53,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"clone","collections::linked_list","",54,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",55,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"from","","",56,{"inputs":[{"name":"rawlink"},{"name":"option"}],"output":{"name":"rawlink"}}],[11,"clone","","",56,{"inputs":[{"name":"rawlink"}],"output":{"name":"rawlink"}}],[11,"default","","",57,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",57,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",57,null],[11,"iter","","Provides a forward iterator.",57,{"inputs":[{"name":"linkedlist"}],"output":{"name":"iter"}}],[11,"iter_mut","","Provides a forward iterator with mutable references.",57,{"inputs":[{"name":"linkedlist"}],"output":{"name":"itermut"}}],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",57,{"inputs":[{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of the `LinkedList`.",57,{"inputs":[{"name":"linkedlist"}],"output":{"name":"usize"}}],[11,"clear","","Removes all elements from the `LinkedList`.",57,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",57,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",57,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",57,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",57,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_front","","Adds an element first in the list.",57,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",57,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_back","","Appends an element to the back of a list",57,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",57,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",57,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"linkedlist"}}],[11,"drop","","",57,null],[11,"next","","",54,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",54,null],[11,"next_back","","",54,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",58,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",58,null],[11,"next_back","","",58,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",58,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",58,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",55,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",55,null],[11,"next_back","","",55,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","",57,{"inputs":[{"name":"linkedlist"},{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",57,{"inputs":[{"name":"linkedlist"}],"output":{"name":"intoiter"}}],[11,"extend","","",57,null],[11,"extend","","",57,null],[11,"eq","","",57,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",57,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"cmp","","",57,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"ordering"}}],[11,"clone","","",57,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"fmt","","",57,{"inputs":[{"name":"linkedlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",57,null],[11,"clone","collections::binary_heap","",59,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"clone_from","","",59,null],[11,"default","","",59,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"fmt","","",59,{"inputs":[{"name":"binaryheap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",59,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",59,{"inputs":[{"name":"binaryheap"},{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"from_vec","","Creates a `BinaryHeap` from a vector. This is sometimes called\n`heapifying` the vector.",59,{"inputs":[{"name":"binaryheap"},{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",59,{"inputs":[{"name":"binaryheap"}],"output":{"name":"iter"}}],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",59,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",59,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",59,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",59,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",59,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",59,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"push","","Pushes an item onto the binary heap.",59,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",59,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"t"}}],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",59,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"option"}}],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",59,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",59,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of the binary heap.",59,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"is_empty","","Checks if the binary heap is empty.",59,{"inputs":[{"name":"binaryheap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",59,{"inputs":[{"name":"binaryheap"}],"output":{"name":"drain"}}],[11,"clear","","Drops all items from the binary heap.",59,null],[11,"drop","","",60,null],[11,"clone","","",61,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",61,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"next_back","","",61,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",62,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",62,null],[11,"next_back","","",62,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"next","","",63,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"next_back","","",63,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"from","","",59,{"inputs":[{"name":"binaryheap"},{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",64,{"inputs":[{"name":"vec"},{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",59,{"inputs":[{"name":"binaryheap"},{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",59,{"inputs":[{"name":"binaryheap"}],"output":{"name":"intoiter"}}],[11,"extend","","",59,null],[11,"extend","","",59,null],[11,"clone","collections::vec_deque","",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"drop","","",65,null],[11,"default","","",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",65,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",65,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",65,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap","","Swaps elements at indices `i` and `j`.",65,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",65,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",65,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",65,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",65,null],[11,"iter","","Returns a front-to-back iterator.",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"itermut"}}],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",65,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",65,null],[11,"len","","Returns the number of elements in the `VecDeque`.",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the buffer contains no elements",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items from start to end. The element\nrange is removed even if the iterator is not consumed until the end.",65,{"inputs":[{"name":"vecdeque"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the buffer, removing all values.",65,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"push_front","","Inserts an element first in the sequence.",65,null],[11,"push_back","","Appends an element to the back of a buffer",65,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",65,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_back_remove","","deprecated",65,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",65,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_front_remove","","deprecated",65,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",65,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",65,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"split_off","","Splits the collection into two at the given index.",65,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",65,null],[11,"retain","","Retains only the elements specified by the predicate.",65,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",65,null],[11,"clone","","",66,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",66,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",66,null],[11,"next_back","","",66,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",67,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",67,null],[11,"next_back","","",67,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",68,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",68,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",68,null],[11,"next_back","","",68,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",69,null],[11,"next","","",69,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",69,null],[11,"next_back","","",69,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"eq","","",65,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",65,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"cmp","","",65,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"ordering"}}],[11,"hash","","",65,null],[11,"index","","",65,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"index_mut","","",65,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"from_iter","","",65,{"inputs":[{"name":"vecdeque"},{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"intoiter"}}],[11,"extend","","",65,null],[11,"extend","","",65,null],[11,"fmt","","",65,{"inputs":[{"name":"vecdeque"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","std::dynamic_lib","",70,null],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",70,{"inputs":[{"name":"dynamiclibrary"},{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process's search path for dynamic libraries",70,null],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",70,null],[11,"envvar","","Returns the environment variable for this process's dynamic library\nsearch path",70,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",70,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"vec"}}],[11,"symbol","","Accesses the value at the symbol of the dynamic library.",70,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}],[11,"next","std::env","",71,{"inputs":[{"name":"vars"}],"output":{"name":"option"}}],[11,"size_hint","","",71,null],[11,"next","","",72,{"inputs":[{"name":"varsos"}],"output":{"name":"option"}}],[11,"size_hint","","",72,null],[11,"clone","","",73,{"inputs":[{"name":"varerror"}],"output":{"name":"varerror"}}],[11,"eq","","",73,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"fmt","","",73,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",73,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",73,{"inputs":[{"name":"varerror"}],"output":{"name":"str"}}],[11,"next","","",74,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",74,null],[11,"fmt","","",75,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",75,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",75,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",76,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",76,null],[11,"len","","",76,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",77,{"inputs":[{"name":"argsos"}],"output":{"name":"option"}}],[11,"size_hint","","",77,null],[11,"len","","",77,{"inputs":[{"name":"argsos"}],"output":{"name":"usize"}}],[11,"clone","std::ffi::c_str","",78,{"inputs":[{"name":"cstring"}],"output":{"name":"cstring"}}],[11,"hash","","",78,null],[11,"cmp","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"option"}}],[11,"lt","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"le","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"gt","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ge","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"eq","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ne","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"hash","","",79,null],[11,"fmt","","",80,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",80,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"clone","","",80,{"inputs":[{"name":"nulerror"}],"output":{"name":"nulerror"}}],[11,"fmt","","",81,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",81,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"ne","","",81,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"clone","","",81,{"inputs":[{"name":"intostringerror"}],"output":{"name":"intostringerror"}}],[11,"new","","Creates a new C-compatible string from a container of bytes.",78,{"inputs":[{"name":"cstring"},{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",78,{"inputs":[{"name":"cstring"},{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_ptr","","Retakes ownership of a CString that was transferred to C.",78,null],[11,"from_raw","","Retakes ownership of a CString that was transferred to C.",78,null],[11,"into_ptr","","Transfers ownership of the string to a C caller.",78,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",78,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",78,{"inputs":[{"name":"cstring"}],"output":{"name":"result"}}],[11,"into_bytes","","Returns the underlying byte buffer.",78,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",78,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",78,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",78,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",79,null],[11,"as_ptr","","Returns the inner pointer to this C string.",79,null],[11,"to_bytes","","Converts this C string to a byte slice.",79,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",79,null],[11,"to_str","","Yields a `&str` slice if the `CStr` contains valid UTF-8.",79,{"inputs":[{"name":"cstr"}],"output":{"name":"result"}}],[11,"to_string_lossy","","Converts a `CStr` into a `Cow<str>`.",79,{"inputs":[{"name":"cstr"}],"output":{"name":"cow"}}],[11,"deref","","",78,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"fmt","","",78,{"inputs":[{"name":"cstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",79,{"inputs":[{"name":"cstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",78,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",80,{"inputs":[{"name":"nulerror"}],"output":{"name":"usize"}}],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",80,{"inputs":[{"name":"nulerror"}],"output":{"name":"vec"}}],[11,"description","","",80,{"inputs":[{"name":"nulerror"}],"output":{"name":"str"}}],[11,"fmt","","",80,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","std::io::error","",82,{"inputs":[{"name":"error"},{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",81,{"inputs":[{"name":"intostringerror"}],"output":{"name":"cstring"}}],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",81,{"inputs":[{"name":"intostringerror"}],"output":{"name":"utf8error"}}],[11,"description","","",81,{"inputs":[{"name":"intostringerror"}],"output":{"name":"str"}}],[11,"fmt","","",81,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",79,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",79,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"option"}}],[11,"cmp","","",79,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"ordering"}}],[11,"to_owned","","",79,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"clone","std::ffi::os_str","",83,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"new","","Constructs a new empty `OsString`.",83,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"from_bytes","","Constructs an `OsString` from a byte sequence.",83,{"inputs":[{"name":"osstring"},{"name":"b"}],"output":{"name":"option"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",83,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",83,{"inputs":[{"name":"osstring"}],"output":{"name":"result"}}],[11,"push","","Extends the string with the given `&OsStr` slice.",83,null],[11,"from","","",83,{"inputs":[{"name":"osstring"},{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",83,{"inputs":[{"name":"osstring"},{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",83,{"inputs":[{"name":"osstring"},{"name":"rangefull"}],"output":{"name":"osstr"}}],[11,"new","","Coerces into an `OsStr` slice.",84,{"inputs":[{"name":"osstr"},{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `OsStr` is valid unicode.",84,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow<str>`.",84,{"inputs":[{"name":"osstr"}],"output":{"name":"cow"}}],[11,"to_os_string","","Copies the slice into an owned `OsString`.",84,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"to_bytes","","Yields this `OsStr` as a byte slice.",84,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_cstring","","Creates a `CString` containing this `OsStr` data.",84,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"deref","","",83,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"fmt","","",83,{"inputs":[{"name":"osstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",83,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","","",83,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",83,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"lt","","",83,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"le","","",83,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"gt","","",83,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"ge","","",83,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",83,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",83,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"ordering"}}],[11,"hash","","",83,null],[11,"eq","","",84,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","","",84,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",84,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"lt","","",84,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"le","","",84,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"gt","","",84,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"ge","","",84,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",84,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",84,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"ordering"}}],[11,"hash","","",84,null],[11,"fmt","","",84,{"inputs":[{"name":"osstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",83,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"to_owned","","",84,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"as_ref","","",84,{"inputs":[{"name":"osstr"}],"output":{"name":"osstr"}}],[11,"as_ref","","",83,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"as_ref","collections::string","",85,{"inputs":[{"name":"string"}],"output":{"name":"osstr"}}],[11,"clone","std::fs","",86,{"inputs":[{"name":"metadata"}],"output":{"name":"metadata"}}],[11,"clone","","",87,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",88,{"inputs":[{"name":"permissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",88,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"clone","","",88,{"inputs":[{"name":"permissions"}],"output":{"name":"permissions"}}],[11,"hash","","",89,null],[11,"eq","","",89,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",89,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"open","","Attempts to open a file in read-only mode.",90,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",90,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",90,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",90,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",90,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"metadata","","Queries metadata about the underlying file.",90,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fmt","","",90,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",90,null],[11,"read_to_end","","",90,{"inputs":[{"name":"file"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",90,null],[11,"flush","","",90,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",90,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"new","","Creates a blank net set of options ready for configuration.",87,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",87,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"write","","Sets the option for write access.",87,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"append","","Sets the option for the append mode.",87,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"truncate","","Sets the option for truncating a previous file.",87,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create","","Sets the option for creating a new file.",87,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"open","","Opens a file at `path` with the options specified by `self`.",87,{"inputs":[{"name":"openoptions"},{"name":"p"}],"output":{"name":"result"}}],[11,"file_type","","Returns the file type for this metadata.",86,{"inputs":[{"name":"metadata"}],"output":{"name":"filetype"}}],[11,"is_dir","","Returns whether this metadata is for a directory.",86,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether this metadata is for a regular file.",86,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",86,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"permissions","","Returns the permissions of the file this metadata is for.",86,{"inputs":[{"name":"metadata"}],"output":{"name":"permissions"}}],[11,"readonly","","Returns whether these permissions describe a readonly file.",88,{"inputs":[{"name":"permissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",88,null],[11,"is_dir","","Test whether this file type represents a directory.",89,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","Test whether this file type represents a regular file.",89,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","Test whether this file type represents a symbolic link.",89,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"next","","",91,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"path","","Returns the full path to the file that this entry represents.",92,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"metadata","","Return the metadata for the file that this entry points at.",92,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","Return the file type for the file that this entry points at.",92,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",92,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"next","","",93,{"inputs":[{"name":"walkdir"}],"output":{"name":"option"}}],[11,"metadata","std::path","",94,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","",94,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","",94,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","",94,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","",94,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","",94,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","",94,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","",94,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"new","std::fs","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",95,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",95,{"inputs":[{"name":"dirbuilder"},{"name":"bool"}],"output":{"name":"dirbuilder"}}],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",95,{"inputs":[{"name":"dirbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",96,{"inputs":[{"name":"bufreader"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",96,{"inputs":[{"name":"bufreader"},{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",96,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_mut","","Gets a mutable reference to the underlying reader.",96,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",96,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"read","","",96,null],[11,"fill_buf","","",96,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"consume","","",96,null],[11,"fmt","","",96,{"inputs":[{"name":"bufreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",96,{"inputs":[{"name":"bufreader"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fmt","","",97,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",98,{"inputs":[{"name":"bufwriter"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",98,{"inputs":[{"name":"bufwriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",98,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",98,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",98,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"write","","",98,null],[11,"flush","","",98,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"fmt","","",98,{"inputs":[{"name":"bufwriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",98,{"inputs":[{"name":"bufwriter"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"drop","","",98,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",97,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"into_inner","","Returns the buffered writer instance which generated the error.",97,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"w"}}],[11,"from","std::io::error","",82,{"inputs":[{"name":"error"},{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",97,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"str"}}],[11,"fmt","","",97,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `LineWriter`.",99,{"inputs":[{"name":"linewriter"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",99,{"inputs":[{"name":"linewriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",99,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",99,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",99,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"write","","",99,null],[11,"flush","","",99,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"fmt","","",99,{"inputs":[{"name":"linewriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",100,null],[11,"fmt","std::io::cursor","",101,{"inputs":[{"name":"cursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",101,{"inputs":[{"name":"cursor"}],"output":{"name":"cursor"}}],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",101,{"inputs":[{"name":"cursor"},{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",101,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",101,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",101,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"position","","Returns the current position of this cursor.",101,{"inputs":[{"name":"cursor"}],"output":{"name":"u64"}}],[11,"set_position","","Sets the position of this cursor.",101,null],[11,"seek","","",101,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"read","","",101,null],[11,"fill_buf","","",101,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",101,null],[11,"write","","",101,null],[11,"flush","","",101,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",101,null],[11,"flush","","",101,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",101,null],[11,"flush","","",101,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"fmt","std::io::error","",82,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",102,{"inputs":[{"name":"custom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",103,{"inputs":[{"name":"errorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",103,{"inputs":[{"name":"errorkind"}],"output":{"name":"errorkind"}}],[11,"eq","","",103,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",82,{"inputs":[{"name":"error"},{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",82,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",82,{"inputs":[{"name":"error"},{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",82,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",82,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",82,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",82,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",82,{"inputs":[{"name":"error"}],"output":{"name":"errorkind"}}],[11,"fmt","","",104,{"inputs":[{"name":"repr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",82,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",82,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",82,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"read","alloc::boxed","",1,null],[11,"read_to_end","","",1,{"inputs":[{"name":"box"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",1,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",1,null],[11,"write","","",1,null],[11,"flush","","",1,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"write_all","","",1,null],[11,"write_fmt","","",1,{"inputs":[{"name":"box"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"seek","","",1,{"inputs":[{"name":"box"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fill_buf","","",1,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"consume","","",1,null],[11,"read_until","","",1,{"inputs":[{"name":"box"},{"name":"u8"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_line","","",1,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","collections::vec","",64,null],[11,"write_all","","",64,null],[11,"flush","","",64,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"new","std::io::lazy","",105,null],[11,"get","","",105,{"inputs":[{"name":"lazy"}],"output":{"name":"option"}}],[11,"read","std::io::util","",106,null],[11,"fill_buf","","",106,{"inputs":[{"name":"empty"}],"output":{"name":"result"}}],[11,"consume","","",106,null],[11,"read","","",107,null],[11,"write","","",108,null],[11,"flush","","",108,{"inputs":[{"name":"sink"}],"output":{"name":"result"}}],[11,"read","std::io::stdio","",109,null],[11,"write","","",110,null],[11,"flush","","",110,{"inputs":[{"name":"stdoutraw"}],"output":{"name":"result"}}],[11,"write","","",111,null],[11,"flush","","",111,{"inputs":[{"name":"stderrraw"}],"output":{"name":"result"}}],[11,"write","","",112,null],[11,"flush","","",112,{"inputs":[{"name":"maybe"}],"output":{"name":"result"}}],[11,"read","","",112,null],[11,"lock","","Locks this handle to the standard input stream, returning a readable\nguard.",113,{"inputs":[{"name":"stdin"}],"output":{"name":"stdinlock"}}],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",113,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",113,null],[11,"read_to_end","","",113,{"inputs":[{"name":"stdin"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",113,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",113,null],[11,"read","","",114,null],[11,"read_to_end","","",114,{"inputs":[{"name":"stdinlock"},{"name":"vec"}],"output":{"name":"result"}}],[11,"fill_buf","","",114,{"inputs":[{"name":"stdinlock"}],"output":{"name":"result"}}],[11,"consume","","",114,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",115,{"inputs":[{"name":"stdout"}],"output":{"name":"stdoutlock"}}],[11,"write","","",115,null],[11,"flush","","",115,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write_all","","",115,null],[11,"write_fmt","","",115,{"inputs":[{"name":"stdout"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",116,null],[11,"flush","","",116,{"inputs":[{"name":"stdoutlock"}],"output":{"name":"result"}}],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",117,{"inputs":[{"name":"stderr"}],"output":{"name":"stderrlock"}}],[11,"write","","",117,null],[11,"flush","","",117,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write_all","","",117,null],[11,"write_fmt","","",117,{"inputs":[{"name":"stderr"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",118,null],[11,"flush","","",118,{"inputs":[{"name":"stderrlock"}],"output":{"name":"result"}}],[11,"fmt","std::io","",119,{"inputs":[{"name":"seekfrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",119,{"inputs":[{"name":"seekfrom"}],"output":{"name":"seekfrom"}}],[11,"eq","","",119,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"ne","","",119,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"write","","",120,null],[11,"flush","","",120,{"inputs":[{"name":"broadcast"}],"output":{"name":"result"}}],[11,"read","","",121,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",122,{"inputs":[{"name":"take"}],"output":{"name":"u64"}}],[11,"read","","",122,null],[11,"fill_buf","","",122,{"inputs":[{"name":"take"}],"output":{"name":"result"}}],[11,"consume","","",122,null],[11,"read","","",123,null],[11,"next","","",124,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"fmt","","",125,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",126,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"description","","",125,{"inputs":[{"name":"charserror"}],"output":{"name":"str"}}],[11,"cause","","",125,{"inputs":[{"name":"charserror"}],"output":{"name":"option"}}],[11,"fmt","","",125,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",127,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next","","",128,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"cmp","std::net::ip","",129,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",129,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"option"}}],[11,"lt","","",129,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"le","","",129,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"gt","","",129,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ge","","",129,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"hash","","",129,null],[11,"fmt","","",129,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",129,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ne","","",129,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"clone","","",129,{"inputs":[{"name":"ipaddr"}],"output":{"name":"ipaddr"}}],[11,"fmt","","",130,{"inputs":[{"name":"ipv6multicastscope"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",130,null],[11,"clone","","",130,{"inputs":[{"name":"ipv6multicastscope"}],"output":{"name":"ipv6multicastscope"}}],[11,"eq","","",130,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"ne","","",130,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",131,{"inputs":[{"name":"ipv4addr"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",131,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address 0.0.0.0.",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_private","","Returns true if this is a private address.",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_multicast","","Returns true if this is a multicast address.",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_broadcast","","Returns true if this is a broadcast address.",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"fmt","","",129,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",131,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",131,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv4addr"}}],[11,"eq","","",131,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"hash","","",131,null],[11,"partial_cmp","","",131,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"option"}}],[11,"cmp","","",131,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"ordering"}}],[11,"from","","",131,{"inputs":[{"name":"ipv4addr"},{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",132,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",132,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address ::.",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (::1).",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"multicast_scope","","Returns the address's multicast scope if the address is multicast.",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"is_multicast","","Returns true if this is a multicast address.",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"fmt","","",132,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",132,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6addr"}}],[11,"eq","","",132,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"hash","","",132,null],[11,"partial_cmp","","",132,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"cmp","","",132,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"ordering"}}],[11,"fmt","std::net::addr","",133,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",133,null],[11,"eq","","",133,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"ne","","",133,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"clone","","",133,{"inputs":[{"name":"socketaddr"}],"output":{"name":"socketaddr"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",133,{"inputs":[{"name":"socketaddr"},{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",133,{"inputs":[{"name":"socketaddr"}],"output":{"name":"ipaddr"}}],[11,"port","","Returns the port number associated with this socket address.",133,{"inputs":[{"name":"socketaddr"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",134,{"inputs":[{"name":"socketaddrv4"},{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",134,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"ipv4addr"}}],[11,"port","","Returns the port number associated with this socket address.",134,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",135,{"inputs":[{"name":"socketaddrv6"},{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",135,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"ipv6addr"}}],[11,"port","","Returns the port number associated with this socket address.",135,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u16"}}],[11,"flowinfo","","Returns scope ID associated with this address, corresponding to the\n`sin6_flowinfo` field in C.",135,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"scope_id","","Returns scope ID associated with this address, corresponding to the\n`sin6_scope_id` field in C.",135,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"fmt","","",133,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",135,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",135,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",134,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"socketaddrv4"}}],[11,"clone","","",135,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"socketaddrv6"}}],[11,"eq","","",134,{"inputs":[{"name":"socketaddrv4"},{"name":"socketaddrv4"}],"output":{"name":"bool"}}],[11,"eq","","",135,{"inputs":[{"name":"socketaddrv6"},{"name":"socketaddrv6"}],"output":{"name":"bool"}}],[11,"hash","","",134,null],[11,"hash","","",135,null],[11,"to_socket_addrs","","",133,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",134,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",135,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"result"}}],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",136,{"inputs":[{"name":"tcpstream"},{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",136,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",136,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",136,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",136,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",136,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",136,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",136,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",136,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",136,null],[11,"read_to_end","","",136,{"inputs":[{"name":"tcpstream"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",136,null],[11,"flush","","",136,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",136,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",137,{"inputs":[{"name":"tcplistener"},{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",137,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",137,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","Accept a new incoming connection from this listener.",137,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",137,{"inputs":[{"name":"tcplistener"}],"output":{"name":"incoming"}}],[11,"next","","",138,{"inputs":[{"name":"incoming"}],"output":{"name":"option"}}],[11,"fmt","","",137,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",139,{"inputs":[{"name":"udpsocket"},{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",139,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",139,null],[11,"local_addr","","Returns the socket address that this socket was created from.",139,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",139,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",139,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",139,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",139,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",139,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",139,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","std::net::ip","",129,{"inputs":[{"name":"ipaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",131,{"inputs":[{"name":"ipv4addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",132,{"inputs":[{"name":"ipv6addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",134,{"inputs":[{"name":"socketaddrv4"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",135,{"inputs":[{"name":"socketaddrv6"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",133,{"inputs":[{"name":"socketaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",140,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"clone","","",140,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"addrparseerror"}}],[11,"fmt","","",140,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",140,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"str"}}],[11,"fmt","std::net","",141,{"inputs":[{"name":"shutdown"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",141,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"clone","","",141,{"inputs":[{"name":"shutdown"}],"output":{"name":"shutdown"}}],[11,"next","","",142,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"clone","std::os::linux::raw::arch","",143,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"as_raw_fd","std::fs","",90,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",90,{"inputs":[{"name":"file"},{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",90,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::tcp","",136,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",137,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::udp","",139,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_raw_fd","std::net::tcp","",136,{"inputs":[{"name":"tcpstream"},{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",137,{"inputs":[{"name":"tcplistener"},{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",139,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",136,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",137,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"into_raw_fd","std::net::udp","",139,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_vec","std::ffi::os_str","",83,{"inputs":[{"name":"osstring"},{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",83,{"inputs":[{"name":"osstring"}],"output":{"name":"vec"}}],[11,"from_bytes","","",84,null],[11,"as_bytes","","",84,null],[11,"mode","std::fs","",88,{"inputs":[{"name":"permissions"}],"output":{"name":"u32"}}],[11,"set_mode","","",88,null],[11,"from_mode","","",88,{"inputs":[{"name":"permissions"},{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",87,{"inputs":[{"name":"openoptions"},{"name":"u32"}],"output":{"name":"openoptions"}}],[11,"dev","","",86,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"ino","","",86,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"mode","","",86,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"nlink","","",86,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"uid","","",86,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"gid","","",86,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"rdev","","",86,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"size","","",86,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime","","",86,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime_nsec","","",86,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime","","",86,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime_nsec","","",86,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime","","",86,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime_nsec","","",86,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blksize","","",86,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blocks","","",86,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"is_block_device","","",89,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_char_device","","",89,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_fifo","","",89,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_socket","","",89,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ino","","",92,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"mode","","",95,{"inputs":[{"name":"dirbuilder"},{"name":"u32"}],"output":{"name":"dirbuilder"}}],[11,"uid","std::process","",144,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"gid","","",144,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"session_leader","","",144,{"inputs":[{"name":"command"},{"name":"bool"}],"output":{"name":"command"}}],[11,"signal","","",145,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"from_raw_fd","","",146,{"inputs":[{"name":"stdio"},{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",147,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",148,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",149,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",147,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",148,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",149,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"eq","std::path","",150,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ne","","",150,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"cmp","","",150,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",150,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"option"}}],[11,"lt","","",150,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"le","","",150,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"gt","","",150,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ge","","",150,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"hash","","",150,null],[11,"fmt","","",150,{"inputs":[{"name":"prefix"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",150,{"inputs":[{"name":"prefix"}],"output":{"name":"prefix"}}],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",150,{"inputs":[{"name":"prefix"}],"output":{"name":"bool"}}],[11,"fmt","","",151,{"inputs":[{"name":"state"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",151,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"option"}}],[11,"lt","","",151,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"le","","",151,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"gt","","",151,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ge","","",151,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"eq","","",151,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",151,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",151,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"fmt","","",152,{"inputs":[{"name":"prefixcomponent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",152,null],[11,"clone","","",152,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefixcomponent"}}],[11,"kind","","The parsed prefix data.",152,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefix"}}],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",152,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"osstr"}}],[11,"eq","","",152,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",152,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"option"}}],[11,"cmp","","",152,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"ordering"}}],[11,"fmt","","",153,{"inputs":[{"name":"component"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",153,null],[11,"cmp","","",153,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",153,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"option"}}],[11,"lt","","",153,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"le","","",153,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"gt","","",153,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ge","","",153,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"eq","","",153,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ne","","",153,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"clone","","",153,{"inputs":[{"name":"component"}],"output":{"name":"component"}}],[11,"as_os_str","","Extracts the underlying `OsStr` slice",153,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"as_ref","","",153,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"clone","","",154,{"inputs":[{"name":"components"}],"output":{"name":"components"}}],[11,"clone","","",155,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",154,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"peek","","Examine the next component without consuming it.",154,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"as_ref","","",154,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"as_ref","","",154,{"inputs":[{"name":"components"}],"output":{"name":"osstr"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",155,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",155,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",155,{"inputs":[{"name":"iter"}],"output":{"name":"osstr"}}],[11,"next","","",155,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",155,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",154,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"next_back","","",154,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"eq","","",154,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",154,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"option"}}],[11,"cmp","","",154,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"ordering"}}],[11,"hash","","",156,null],[11,"clone","","",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"new","","Allocates an empty `PathBuf`.",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"push","","Extends `self` with `path`.",156,null],[11,"pop","","Truncate `self` to `self.parent()`.",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",156,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",156,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"bool"}}],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"from","","",156,{"inputs":[{"name":"pathbuf"},{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",156,{"inputs":[{"name":"pathbuf"},{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",156,{"inputs":[{"name":"pathbuf"},{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",156,{"inputs":[{"name":"pathbuf"},{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",156,null],[11,"fmt","","",156,{"inputs":[{"name":"pathbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Directly wrap a string slice as a `Path` slice.",94,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",94,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `Path` is valid unicode.",94,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts a `Path` to a `Cow<str>`.",94,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",94,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",94,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_relative","","A path is *relative* if it is not absolute.",94,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"prefix","","Returns the *prefix* of a path, if any.",94,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",94,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"parent","","The path without its final component, if any.",94,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"file_name","","The final component of the path, if it is a normal file.",94,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"relative_from","","Returns a path that, when joined onto `base`, yields `self`.",94,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"option"}}],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",94,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",94,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",94,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",94,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",94,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"pathbuf"}}],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",94,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",94,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"components","","Produce an iterator over the components of the path.",94,{"inputs":[{"name":"path"}],"output":{"name":"components"}}],[11,"iter","","Produce an iterator over the path's components viewed as `OsStr` slices.",94,{"inputs":[{"name":"path"}],"output":{"name":"iter"}}],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",94,{"inputs":[{"name":"path"}],"output":{"name":"display"}}],[11,"metadata","","Gets information on the file, directory, etc at this path.",94,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","Gets information on the file, directory, etc at this path.",94,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","Returns the canonical form of a path, normalizing all components and\neliminate all symlinks.",94,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","Reads the symlink at this path.",94,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","Reads the directory at this path.",94,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","Boolean value indicator whether the underlying file exists on the local\nfilesystem. Returns false in exactly the cases where `fs::stat` fails.",94,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","Whether the underlying implementation (be it a file path, or something\nelse) points at a \"regular file\" on the FS. Will return false for paths\nto non-existent locations or directories or other non-regular files\n(named pipes, etc). Follows links when making this determination.",94,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","Whether the underlying implementation (be it a file path, or something\nelse) is pointing at a directory in the underlying FS. Will return\nfalse for paths to non-existent locations or if the item is not a\ndirectory (eg files, named pipes, etc). Follows links when making this\ndetermination.",94,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"deref","","",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"borrow","","",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"into_cow","","",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","","",94,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"eq","","",156,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",156,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"cmp","","",156,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"ordering"}}],[11,"as_ref","","",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstr"}}],[11,"into","","",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"hash","","",94,null],[11,"as_ref","","",94,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"fmt","","",94,{"inputs":[{"name":"path"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",157,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",157,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",94,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",94,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[11,"cmp","","",94,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"ordering"}}],[11,"as_ref","","",94,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"as_ref","std::ffi::os_str","",84,{"inputs":[{"name":"osstr"}],"output":{"name":"path"}}],[11,"as_ref","","",83,{"inputs":[{"name":"osstring"}],"output":{"name":"path"}}],[11,"as_ref","collections::string","",85,{"inputs":[{"name":"string"}],"output":{"name":"path"}}],[11,"as_ref","std::path","",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"write","std::process","",147,null],[11,"flush","","",147,{"inputs":[{"name":"childstdin"}],"output":{"name":"result"}}],[11,"read","","",148,null],[11,"read","","",149,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",144,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",144,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"args","","Add multiple arguments to pass to the program.",144,null],[11,"env","","Inserts or updates an environment variable mapping.",144,{"inputs":[{"name":"command"},{"name":"k"},{"name":"v"}],"output":{"name":"command"}}],[11,"env_remove","","Removes an environment variable mapping.",144,{"inputs":[{"name":"command"},{"name":"k"}],"output":{"name":"command"}}],[11,"env_clear","","Clears the entire environment map for the child process.",144,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"current_dir","","Sets the working directory for the child process.",144,{"inputs":[{"name":"command"},{"name":"p"}],"output":{"name":"command"}}],[11,"stdin","","Configuration for the child process's stdin handle (file descriptor 0).",144,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stdout","","Configuration for the child process's stdout handle (file descriptor 1).",144,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stderr","","Configuration for the child process's stderr handle (file descriptor 2).",144,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"spawn","","Executes the command as a child process, returning a handle to it.",144,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",144,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",144,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",144,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",158,{"inputs":[{"name":"output"}],"output":{"name":"output"}}],[11,"eq","","",158,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"ne","","",158,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",146,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",146,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",146,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"fmt","","",145,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",145,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",145,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",145,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",145,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","Returns the exit code of the process, if any.",145,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",145,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",159,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"id","","Returns the OS-assigned process identifier associated with this child.",159,{"inputs":[{"name":"child"}],"output":{"name":"u32"}}],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",159,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning a `Output`\ninstance.",159,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"clone","std::sync::mpsc::blocking","",160,{"inputs":[{"name":"signaltoken"}],"output":{"name":"signaltoken"}}],[11,"signal","","",160,{"inputs":[{"name":"signaltoken"}],"output":{"name":"bool"}}],[11,"cast_to_usize","","Convert to an unsafe usize value. Useful for storing in a pipe's state\nflag.",160,{"inputs":[{"name":"signaltoken"}],"output":{"name":"usize"}}],[11,"cast_from_usize","","Convert from an unsafe usize value. Useful for retrieving a pipe's state\nflag.",160,{"inputs":[{"name":"signaltoken"},{"name":"usize"}],"output":{"name":"signaltoken"}}],[11,"wait","","",161,null],[11,"new","std::sync::mpsc::oneshot","",162,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",162,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"sent","","",162,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"recv","","",162,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",162,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"upgrade","","",162,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"drop_chan","","",162,null],[11,"drop_port","","",162,null],[11,"can_recv","","",162,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",162,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",162,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop","","",162,null],[11,"eq","std::sync::mpsc::select","",163,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"ne","","",163,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new selection structure. This set is initially empty.",164,{"inputs":[{"name":"select"}],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",164,{"inputs":[{"name":"select"},{"name":"receiver"}],"output":{"name":"handle"}}],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",164,{"inputs":[{"name":"select"}],"output":{"name":"usize"}}],[11,"id","","Retrieves the id of this handle.",165,{"inputs":[{"name":"handle"}],"output":{"name":"usize"}}],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",165,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",165,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",165,null],[11,"drop","","",164,null],[11,"drop","","",165,null],[11,"next","","",166,{"inputs":[{"name":"packets"}],"output":{"name":"option"}}],[11,"new","std::sync::mpsc::shared","",167,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"postinit_lock","","",167,{"inputs":[{"name":"packet"}],"output":{"name":"mutexguard"}}],[11,"inherit_blocker","","",167,null],[11,"send","","",167,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",167,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",167,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",167,null],[11,"drop_chan","","",167,null],[11,"drop_port","","",167,null],[11,"can_recv","","",167,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",167,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",167,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"drop","","",167,null],[11,"new","std::sync::mpsc::stream","",168,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",168,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"upgrade","","",168,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"recv","","",168,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",168,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop_chan","","",168,null],[11,"drop_port","","",168,null],[11,"can_recv","","",168,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",168,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",168,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"result"}}],[11,"drop","","",168,null],[11,"fmt","std::sync::mpsc::sync","",169,{"inputs":[{"name":"failure"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",170,{"inputs":[{"name":"packet"},{"name":"usize"}],"output":{"name":"packet"}}],[11,"send","","",170,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","",170,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",170,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",170,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",170,null],[11,"drop_chan","","",170,null],[11,"drop_port","","",170,null],[11,"can_recv","","",170,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",170,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",170,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"drop","","",170,null],[11,"new","std::sync::mpsc::mpsc_queue","Creates a new queue that is safe to share among multiple producers and\none consumer.",171,{"inputs":[{"name":"queue"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue.",171,null],[11,"pop","","Pops some data from this queue.",171,{"inputs":[{"name":"queue"}],"output":{"name":"popresult"}}],[11,"drop","","",171,null],[11,"new","std::sync::mpsc::spsc_queue","Creates a new queue.",172,{"inputs":[{"name":"queue"},{"name":"usize"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue. Note that to use this function\nsafely, it must be externally guaranteed that there is only one pusher.",172,null],[11,"pop","","Attempts to pop a value from this queue. Remember that to use this type\nsafely you must ensure that there is only one popper at a time.",172,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"peek","","Attempts to peek at the head of the queue, returning `None` if the queue\nhas no data currently",172,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"drop","","",172,null],[11,"clone","std::sync::mpsc","",173,{"inputs":[{"name":"senderror"}],"output":{"name":"senderror"}}],[11,"eq","","",173,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",173,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"fmt","","",174,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",174,{"inputs":[{"name":"recverror"}],"output":{"name":"recverror"}}],[11,"eq","","",174,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"ne","","",174,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"fmt","","",175,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",175,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"tryrecverror"}}],[11,"eq","","",175,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"clone","","",176,{"inputs":[{"name":"trysenderror"}],"output":{"name":"trysenderror"}}],[11,"eq","","",176,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",176,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",177,{"inputs":[{"name":"sender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",177,{"inputs":[{"name":"sender"}],"output":{"name":"sender"}}],[11,"drop","","",177,null],[11,"send","","Sends a value on this synchronous channel.",178,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","Attempts to send a value on this channel without blocking.",178,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",178,{"inputs":[{"name":"syncsender"}],"output":{"name":"syncsender"}}],[11,"drop","","",178,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",179,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",179,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",179,{"inputs":[{"name":"receiver"}],"output":{"name":"iter"}}],[11,"next","","",180,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",181,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"into_iter","","",179,{"inputs":[{"name":"receiver"}],"output":{"name":"intoiter"}}],[11,"drop","","",179,null],[11,"fmt","","",173,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",173,{"inputs":[{"name":"senderror"}],"output":{"name":"str"}}],[11,"cause","","",173,{"inputs":[{"name":"senderror"}],"output":{"name":"option"}}],[11,"fmt","","",176,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",176,{"inputs":[{"name":"trysenderror"}],"output":{"name":"str"}}],[11,"cause","","",176,{"inputs":[{"name":"trysenderror"}],"output":{"name":"option"}}],[11,"fmt","","",174,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",174,{"inputs":[{"name":"recverror"}],"output":{"name":"str"}}],[11,"cause","","",174,{"inputs":[{"name":"recverror"}],"output":{"name":"option"}}],[11,"fmt","","",175,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",175,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"str"}}],[11,"cause","","",175,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"option"}}],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",182,{"inputs":[{"name":"barrier"},{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads has rendezvoused here.",182,{"inputs":[{"name":"barrier"}],"output":{"name":"barrierwaitresult"}}],[11,"is_leader","","Returns whether this thread from `wait` is the \"leader thread\".",183,{"inputs":[{"name":"barrierwaitresult"}],"output":{"name":"bool"}}],[11,"clone","std::sync::condvar","",184,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"waittimeoutresult"}}],[11,"eq","","",184,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"ne","","",184,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"fmt","","",184,{"inputs":[{"name":"waittimeoutresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"timed_out","","Returns whether the wait was known to have timed out.",184,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",185,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",185,{"inputs":[{"name":"condvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",185,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",185,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",185,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",185,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",185,null],[11,"drop","","",185,null],[11,"new","","Creates a new condition variable",186,{"inputs":[{"name":"staticcondvar"}],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",186,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",186,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",186,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",186,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",186,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",186,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",186,null],[11,"drop","std::sync::mutex","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"mutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new mutex in an unlocked state ready for use.",187,{"inputs":[{"name":"staticmutex"}],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",187,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",187,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates resources associated with this static mutex.",187,null],[11,"deref","","",188,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",188,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"drop","","",188,null],[11,"new","std::sync::once","Creates a new `Once` value.",189,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",189,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock<T>` which is unlocked.",190,{"inputs":[{"name":"rwlock"},{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",190,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",190,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",190,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",190,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",190,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",190,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",190,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"drop","","",190,null],[11,"fmt","","",190,{"inputs":[{"name":"rwlock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new rwlock.",191,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",191,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this lock with shared read access.",191,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",191,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",191,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates all resources associated with this static lock.",191,null],[11,"deref","","",192,{"inputs":[{"name":"rwlockreadguard"}],"output":{"name":"t"}}],[11,"deref","","",193,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",193,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"drop","","",192,null],[11,"drop","","",193,null],[11,"new","std::sync::semaphore","Creates a new semaphore with the initial count specified.",194,{"inputs":[{"name":"semaphore"},{"name":"isize"}],"output":{"name":"semaphore"}}],[11,"acquire","","Acquires a resource of this semaphore, blocking the current thread until\nit can do so.",194,null],[11,"release","","Release a resource from this semaphore.",194,null],[11,"access","","Acquires a resource of this semaphore, returning an RAII guard to\nrelease the semaphore when dropped.",194,{"inputs":[{"name":"semaphore"}],"output":{"name":"semaphoreguard"}}],[11,"drop","","",195,null],[11,"default","core::sync::atomic","",196,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",197,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",198,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",199,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",200,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",196,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",196,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",196,null],[11,"swap","","Stores a value into the bool, returning the old value.",196,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",196,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",196,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",196,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",196,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",196,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",197,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",197,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",197,null],[11,"swap","","Stores a value into the isize, returning the old value.",197,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",197,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",197,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",197,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",197,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",197,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",197,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",198,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",198,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",198,null],[11,"swap","","Stores a value into the usize, returning the old value.",198,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",198,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",198,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",198,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",198,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",198,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",198,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",199,null],[11,"load","","Loads a value from the pointer.",199,null],[11,"store","","Stores a value into the pointer.",199,null],[11,"swap","","Stores a value into the pointer, returning the old value.",199,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",199,null],[11,"fmt","","",198,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",197,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",196,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",199,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::time::duration","",201,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",201,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",201,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",201,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",201,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",201,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",201,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",201,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",201,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",201,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",201,{"inputs":[{"name":"duration"},{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",201,{"inputs":[{"name":"duration"},{"name":"f"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",201,{"inputs":[{"name":"duration"},{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",201,{"inputs":[{"name":"duration"},{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",201,{"inputs":[{"name":"duration"}],"output":{"name":"u64"}}],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",201,{"inputs":[{"name":"duration"}],"output":{"name":"u32"}}],[11,"add","","",201,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",201,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",201,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"div","","",201,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"new","std::sys_common::condvar","Creates a new condition variable for use.",202,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","Signals one waiter on this condition variable to wake up.",202,null],[11,"notify_all","","Awakens all current waiters on this condition variable.",202,null],[11,"wait","","Waits for a signal on the specified mutex.",202,null],[11,"wait_timeout","","Waits for a signal on the specified mutex with a timeout duration\nspecified by `dur` (a relative time into the future).",202,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","Deallocates all resources associated with this condition variable.",202,null],[11,"clone","std::sys_common::dwarf::eh","",203,{"inputs":[{"name":"ehcontext"}],"output":{"name":"ehcontext"}}],[11,"new","std::sys_common::dwarf","",204,null],[11,"read","","",204,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"t"}}],[11,"read_uleb128","","",204,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"u64"}}],[11,"read_sleb128","","",204,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"i64"}}],[11,"clone","std::sys_common::libunwind","",205,{"inputs":[{"name":"_unwind_action"}],"output":{"name":"_unwind_action"}}],[11,"clone","","",206,{"inputs":[{"name":"_unwind_reason_code"}],"output":{"name":"_unwind_reason_code"}}],[11,"new","std::sys_common::mutex","Creates a new mutex for use.",207,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","Locks the mutex blocking the current thread until it is available.",207,null],[11,"try_lock","","Attempts to lock the mutex without blocking, returning whether it was\nsuccessfully acquired or not.",207,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"unlock","","Unlocks the mutex.",207,null],[11,"destroy","","Deallocates all resources associated with this mutex.",207,null],[11,"next","std::sys_common::net","",208,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"drop","","",208,null],[11,"connect","","",209,{"inputs":[{"name":"tcpstream"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",209,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"into_socket","","",209,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"set_read_timeout","","",209,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",209,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",209,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","",209,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",209,null],[11,"write","","",209,null],[11,"peer_addr","","",209,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"socket_addr","","",209,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","",209,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"duplicate","","",209,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",209,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",210,{"inputs":[{"name":"tcplistener"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",210,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"into_socket","","",210,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"socket_addr","","",210,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","",210,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"duplicate","","",210,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"fmt","","",210,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",211,{"inputs":[{"name":"udpsocket"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",211,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"into_socket","","",211,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"socket_addr","","",211,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"recv_from","","",211,null],[11,"send_to","","",211,null],[11,"duplicate","","",211,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","",211,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",211,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",211,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","",211,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",211,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys_common::poison","",212,{"inputs":[{"name":"flag"}],"output":{"name":"flag"}}],[11,"borrow","","",212,{"inputs":[{"name":"flag"}],"output":{"name":"result"}}],[11,"done","","",212,null],[11,"get","","",212,{"inputs":[{"name":"flag"}],"output":{"name":"bool"}}],[11,"fmt","","",213,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",213,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",213,{"inputs":[{"name":"poisonerror"}],"output":{"name":"str"}}],[11,"new","","Creates a `PoisonError`.",213,{"inputs":[{"name":"poisonerror"},{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",213,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",213,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",213,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"from","","",214,{"inputs":[{"name":"trylockerror"},{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",214,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",214,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",214,{"inputs":[{"name":"trylockerror"}],"output":{"name":"str"}}],[11,"cause","","",214,{"inputs":[{"name":"trylockerror"}],"output":{"name":"option"}}],[11,"new","std::sys_common::remutex","Creates a new reentrant mutex in an unlocked state.",215,{"inputs":[{"name":"reentrantmutex"},{"name":"t"}],"output":{"name":"reentrantmutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",215,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",215,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"drop","","",215,null],[11,"fmt","","",215,{"inputs":[{"name":"reentrantmutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",216,{"inputs":[{"name":"reentrantmutexguard"}],"output":{"name":"t"}}],[11,"drop","","",216,null],[11,"new","std::sys_common::rwlock","Creates a new reader-writer lock for use.",217,{"inputs":[{"name":"rwlock"}],"output":{"name":"rwlock"}}],[11,"read","","Acquires shared access to the underlying lock, blocking the current\nthread to do so.",217,null],[11,"try_read","","Attempts to acquire shared access to this lock, returning whether it\nsucceeded or not.",217,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","Acquires write access to the underlying lock, blocking the current thread\nto do so.",217,null],[11,"try_write","","Attempts to acquire exclusive access to this lock, returning whether it\nsucceeded or not.",217,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","Unlocks previously acquired shared access to this lock.",217,null],[11,"write_unlock","","Unlocks previously acquired exclusive access to this lock.",217,null],[11,"destroy","","Destroys OS-related resources with this RWLock.",217,null],[11,"new","std::sys_common::thread_local","",218,{"inputs":[{"name":"statickey"},{"name":"option"}],"output":{"name":"statickey"}}],[11,"get","","Gets the value associated with this TLS key",218,null],[11,"set","","Sets this TLS key to a new value.",218,null],[11,"destroy","","Deallocates this OS TLS key.",218,null],[11,"new","","Creates a new managed OS TLS key.",219,{"inputs":[{"name":"key"},{"name":"option"}],"output":{"name":"key"}}],[11,"get","","See StaticKey::get",219,null],[11,"set","","See StaticKey::set",219,null],[11,"drop","","",219,null],[11,"clone","std::sys_common::wtf8","",220,{"inputs":[{"name":"codepoint"}],"output":{"name":"codepoint"}}],[11,"partial_cmp","","",220,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"option"}}],[11,"lt","","",220,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"le","","",220,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"gt","","",220,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ge","","",220,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"cmp","","",220,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"ordering"}}],[11,"eq","","",220,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ne","","",220,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"fmt","","",220,{"inputs":[{"name":"codepoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u32_unchecked","","Unsafely creates a new `CodePoint` without checking the value.",220,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"codepoint"}}],[11,"from_u32","","Creates a new `CodePoint` if the value is a valid code point.",220,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_char","","Creates a new `CodePoint` from a `char`.",220,{"inputs":[{"name":"codepoint"},{"name":"char"}],"output":{"name":"codepoint"}}],[11,"to_u32","","Returns the numeric value of the code point.",220,{"inputs":[{"name":"codepoint"}],"output":{"name":"u32"}}],[11,"to_char","","Optionally returns a Unicode scalar value for the code point.",220,{"inputs":[{"name":"codepoint"}],"output":{"name":"option"}}],[11,"to_char_lossy","","Returns a Unicode scalar value for the code point.",220,{"inputs":[{"name":"codepoint"}],"output":{"name":"char"}}],[11,"clone","","",221,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"partial_cmp","","",221,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"option"}}],[11,"lt","","",221,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"le","","",221,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"gt","","",221,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ge","","",221,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"cmp","","",221,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"ordering"}}],[11,"eq","","",221,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ne","","",221,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"from_str","","Creates a WTF-8 slice from a UTF-8 `&str` slice.",222,{"inputs":[{"name":"wtf8"},{"name":"str"}],"output":{"name":"wtf8"}}],[11,"len","","Returns the length, in WTF-8 bytes.",222,{"inputs":[{"name":"wtf8"}],"output":{"name":"usize"}}],[11,"ascii_byte_at","","Returns the code point at `position` if it is in the ASCII range,\nor `b'\\xFF' otherwise.",222,{"inputs":[{"name":"wtf8"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"code_points","","Returns an iterator for the string’s code points.",222,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8codepoints"}}],[11,"as_str","","Tries to convert the string to UTF-8 and return a `&str` slice.",222,{"inputs":[{"name":"wtf8"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Lossily converts the string to UTF-8.\nReturns a UTF-8 `&str` slice if the contents are well-formed in UTF-8.",222,{"inputs":[{"name":"wtf8"}],"output":{"name":"cow"}}],[11,"encode_wide","","Converts the WTF-8 string to potentially ill-formed UTF-16\nand return an iterator of 16-bit code units.",222,{"inputs":[{"name":"wtf8"}],"output":{"name":"encodewide"}}],[11,"deref","","",221,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"fmt","","",221,{"inputs":[{"name":"wtf8buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new, empty WTF-8 string.",221,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"with_capacity","","Creates a new, empty WTF-8 string with pre-allocated capacity for `n` bytes.",221,{"inputs":[{"name":"wtf8buf"},{"name":"usize"}],"output":{"name":"wtf8buf"}}],[11,"from_string","","Creates a WTF-8 string from a UTF-8 `String`.",221,{"inputs":[{"name":"wtf8buf"},{"name":"string"}],"output":{"name":"wtf8buf"}}],[11,"from_str","","Creates a WTF-8 string from a UTF-8 `&str` slice.",221,{"inputs":[{"name":"wtf8buf"},{"name":"str"}],"output":{"name":"wtf8buf"}}],[11,"from_wide","","Creates a WTF-8 string from a potentially ill-formed UTF-16 slice of 16-bit code units.",221,null],[11,"as_slice","","",221,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `Wtf8Buf`.\nThe collection may reserve more space to avoid frequent reallocations.",221,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without reallocating.",221,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"usize"}}],[11,"push_str","","Append a UTF-8 slice at the end of the string.",221,null],[11,"push_wtf8","","Append a WTF-8 slice at the end of the string.",221,null],[11,"push_char","","Append a Unicode scalar value at the end of the string.",221,null],[11,"push","","Append a code point at the end of the string.",221,null],[11,"truncate","","Shortens a string to the specified length.",221,null],[11,"into_string","","Consumes the WTF-8 string and tries to convert it to UTF-8.",221,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"result"}}],[11,"into_string_lossy","","Consumes the WTF-8 string and converts it lossily to UTF-8.",221,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"string"}}],[11,"from_iter","","",221,{"inputs":[{"name":"wtf8buf"},{"name":"t"}],"output":{"name":"wtf8buf"}}],[11,"extend","","",221,null],[11,"partial_cmp","","",222,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"option"}}],[11,"lt","","",222,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"le","","",222,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"gt","","",222,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ge","","",222,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"eq","","",222,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ne","","",222,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"cmp","","",222,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"ordering"}}],[11,"fmt","","",222,{"inputs":[{"name":"wtf8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",222,{"inputs":[{"name":"wtf8"},{"name":"range"}],"output":{"name":"wtf8"}}],[11,"index","","",222,{"inputs":[{"name":"wtf8"},{"name":"rangefrom"}],"output":{"name":"wtf8"}}],[11,"index","","",222,{"inputs":[{"name":"wtf8"},{"name":"rangeto"}],"output":{"name":"wtf8"}}],[11,"index","","",222,{"inputs":[{"name":"wtf8"},{"name":"rangefull"}],"output":{"name":"wtf8"}}],[11,"clone","","",223,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"wtf8codepoints"}}],[11,"next","","",223,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"option"}}],[11,"size_hint","","",223,null],[11,"clone","","",224,{"inputs":[{"name":"encodewide"}],"output":{"name":"encodewide"}}],[11,"next","","",224,{"inputs":[{"name":"encodewide"}],"output":{"name":"option"}}],[11,"size_hint","","",224,null],[11,"hash","","",220,null],[11,"hash","","",221,null],[11,"hash","","",222,null],[11,"is_ascii","","",222,{"inputs":[{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"to_ascii_uppercase","","",222,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"to_ascii_lowercase","","",222,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"eq_ignore_ascii_case","","",222,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"make_ascii_uppercase","","",222,null],[11,"make_ascii_lowercase","","",222,null],[11,"new","std::sys::condvar","",225,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","",225,null],[11,"notify_all","","",225,null],[11,"wait","","",225,null],[11,"wait_timeout","","",225,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","",225,null],[11,"new","std::sys::fd","",226,{"inputs":[{"name":"filedesc"},{"name":"i32"}],"output":{"name":"filedesc"}}],[11,"raw","","",226,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"into_raw","","Extracts the actual filedescriptor without closing it.",226,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"read","","",226,null],[11,"write","","",226,null],[11,"set_cloexec","","",226,null],[11,"drop","","",226,null],[11,"clone","std::sys::fs","",227,{"inputs":[{"name":"fileattr"}],"output":{"name":"fileattr"}}],[11,"clone","","",228,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",229,{"inputs":[{"name":"filepermissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",229,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"ne","","",229,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"clone","","",229,{"inputs":[{"name":"filepermissions"}],"output":{"name":"filepermissions"}}],[11,"hash","","",230,null],[11,"eq","","",230,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",230,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",230,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"size","","",227,{"inputs":[{"name":"fileattr"}],"output":{"name":"u64"}}],[11,"perm","","",227,{"inputs":[{"name":"fileattr"}],"output":{"name":"filepermissions"}}],[11,"file_type","","",227,{"inputs":[{"name":"fileattr"}],"output":{"name":"filetype"}}],[11,"as_raw_stat","std::fs","",86,{"inputs":[{"name":"metadata"}],"output":{"name":"stat"}}],[11,"readonly","std::sys::fs","",229,{"inputs":[{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","",229,null],[11,"mode","","",229,{"inputs":[{"name":"filepermissions"}],"output":{"name":"u32"}}],[11,"is_dir","","",230,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","",230,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","",230,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is","","",230,{"inputs":[{"name":"filetype"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"next","","",231,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"drop","","",232,null],[11,"path","","",233,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"file_name","","",233,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"metadata","","",233,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","",233,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"ino","","",233,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"new","","",228,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","",228,null],[11,"write","","",228,null],[11,"append","","",228,null],[11,"truncate","","",228,null],[11,"create","","",228,null],[11,"mode","","",228,null],[11,"open","","",234,{"inputs":[{"name":"file"},{"name":"path"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"open_c","","",234,{"inputs":[{"name":"file"},{"name":"cstr"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"file_attr","","",234,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fsync","","",234,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"datasync","","",234,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"truncate","","",234,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read","","",234,null],[11,"write","","",234,null],[11,"flush","","",234,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",234,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fd","","",234,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",234,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"new","","",235,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"mkdir","","",235,{"inputs":[{"name":"dirbuilder"},{"name":"path"}],"output":{"name":"result"}}],[11,"set_mode","","",235,null],[11,"fmt","","",234,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys::mutex","",236,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","",236,null],[11,"unlock","","",236,null],[11,"try_lock","","",236,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"destroy","","",236,null],[11,"uninitialized","","",237,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"reentrantmutex"}}],[11,"init","","",237,null],[11,"lock","","",237,null],[11,"try_lock","","",237,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"bool"}}],[11,"unlock","","",237,null],[11,"destroy","","",237,null],[11,"new","std::sys::net","",238,{"inputs":[{"name":"socket"},{"name":"socketaddr"},{"name":"i32"}],"output":{"name":"result"}}],[11,"accept","","",238,null],[11,"duplicate","","",238,{"inputs":[{"name":"socket"}],"output":{"name":"result"}}],[11,"read","","",238,null],[11,"set_timeout","","",238,{"inputs":[{"name":"socket"},{"name":"option"},{"name":"i32"}],"output":{"name":"result"}}],[11,"timeout","","",238,{"inputs":[{"name":"socket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"next","std::sys::os","",239,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",239,null],[11,"fmt","","",240,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",240,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",240,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",241,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",241,null],[11,"len","","",241,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",242,{"inputs":[{"name":"env"}],"output":{"name":"option"}}],[11,"size_hint","","",242,null],[11,"hash","std::sys::os_str","",243,null],[11,"clone","","",243,{"inputs":[{"name":"buf"}],"output":{"name":"buf"}}],[11,"fmt","","",244,{"inputs":[{"name":"slice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",243,{"inputs":[{"name":"buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_string","","",243,{"inputs":[{"name":"buf"},{"name":"string"}],"output":{"name":"buf"}}],[11,"as_slice","","",243,{"inputs":[{"name":"buf"}],"output":{"name":"slice"}}],[11,"into_string","","",243,{"inputs":[{"name":"buf"}],"output":{"name":"result"}}],[11,"push_slice","","",243,null],[11,"from_str","","",244,{"inputs":[{"name":"slice"},{"name":"str"}],"output":{"name":"slice"}}],[11,"to_str","","",244,{"inputs":[{"name":"slice"}],"output":{"name":"option"}}],[11,"to_string_lossy","","",244,{"inputs":[{"name":"slice"}],"output":{"name":"cow"}}],[11,"to_owned","","",244,{"inputs":[{"name":"slice"}],"output":{"name":"buf"}}],[11,"from_fd","std::sys::pipe","",245,{"inputs":[{"name":"anonpipe"},{"name":"i32"}],"output":{"name":"anonpipe"}}],[11,"read","","",245,null],[11,"write","","",245,null],[11,"raw","","",245,{"inputs":[{"name":"anonpipe"}],"output":{"name":"i32"}}],[11,"fd","","",245,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",245,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"clone","std::sys::process","",246,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"new","","",246,{"inputs":[{"name":"command"},{"name":"osstr"}],"output":{"name":"command"}}],[11,"arg","","",246,null],[11,"args","","",246,null],[11,"env","","",246,null],[11,"env_remove","","",246,null],[11,"env_clear","","",246,null],[11,"cwd","","",246,null],[11,"fmt","","",247,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",247,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",247,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",247,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","",247,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","",247,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",247,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","",248,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"spawn","","",248,{"inputs":[{"name":"process"},{"name":"command"},{"name":"stdio"},{"name":"stdio"},{"name":"stdio"}],"output":{"name":"result"}}],[11,"id","","",248,{"inputs":[{"name":"process"}],"output":{"name":"u32"}}],[11,"wait","","",248,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"try_wait","","",248,{"inputs":[{"name":"process"}],"output":{"name":"option"}}],[11,"new","std::sys::rwlock","",249,{"inputs":[{"name":"rwlock"}],"output":{"name":"rwlock"}}],[11,"read","","",249,null],[11,"try_read","","",249,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","",249,null],[11,"try_write","","",249,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","",249,null],[11,"write_unlock","","",249,null],[11,"destroy","","",249,null],[11,"new","std::sys::stack_overflow","",250,{"inputs":[{"name":"handler"}],"output":{"name":"handler"}}],[11,"drop","","",250,null],[11,"new","std::sys::thread","",251,{"inputs":[{"name":"thread"},{"name":"usize"},{"name":"box"}],"output":{"name":"result"}}],[11,"yield_now","","",251,null],[11,"set_name","","",251,null],[11,"sleep","","",251,null],[11,"join","","",251,null],[11,"drop","","",251,null],[11,"now","std::sys::time::inner","",252,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"new","std::sys::stdio","",253,{"inputs":[{"name":"stdin"}],"output":{"name":"result"}}],[11,"read","","",253,null],[11,"new","","",254,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write","","",254,null],[11,"new","","",255,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write","","",255,null],[11,"write","","",255,null],[11,"flush","","",255,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"new","std::rand::os::imp","Create a new `OsRng`.",256,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",256,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",256,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",256,null],[11,"new","std::rand::reader","Create a new `ReaderRng` from a `Read`.",257,{"inputs":[{"name":"readerrng"},{"name":"r"}],"output":{"name":"readerrng"}}],[11,"next_u32","","",257,{"inputs":[{"name":"readerrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",257,{"inputs":[{"name":"readerrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",257,null],[11,"clone","std::rand","",258,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",258,{"inputs":[{"name":"stdrng"}],"output":{"name":"result"}}],[11,"next_u32","","",258,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",258,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",258,null],[11,"from_seed","","",258,null],[11,"reseed","","",259,null],[11,"clone","","",260,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",260,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",260,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",260,null],[11,"new","alloc::rc","Constructs a new `Rc<T>`.",261,{"inputs":[{"name":"rc"},{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc<T>` has only one strong reference.\nThis will succeed even if there are outstanding weak references.",261,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",261,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Downgrades the `Rc<T>` to a `Weak<T>` reference.",261,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",261,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",261,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak<T>` values that share\nthe same inner value.",261,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc<T>` has\none strong reference and no weak references.",261,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"make_unique","","",261,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"make_mut","","Make a mutable reference into the given `Rc<T>` by cloning the inner\ndata if the `Rc<T>` doesn't have one strong reference and no weak\nreferences.",261,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",261,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Rc<T>`.",261,null],[11,"clone","","Makes a clone of the `Rc<T>`.",261,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"default","","Creates a new `Rc<T>`, with the `Default` value for `T`.",261,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc<T>`s.",261,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Rc<T>`s.",261,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Rc<T>`s.",261,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Rc<T>`s.",261,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"le","","'Less-than or equal to' comparison for two `Rc<T>`s.",261,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Rc<T>`s.",261,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ge","","'Greater-than or equal to' comparison for two `Rc<T>`s.",261,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"cmp","","Comparison for two `Rc<T>`s.",261,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"ordering"}}],[11,"hash","","",261,null],[11,"fmt","","",261,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",261,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",261,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",262,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Weak<T>`.",262,null],[11,"clone","","Makes a clone of the `Weak<T>`.",262,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"fmt","","",262,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",261,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"as_ref","","",261,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"fmt","core::cmp","",263,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",263,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",263,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",263,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",263,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",263,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",263,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"hash","core::marker","",264,null],[11,"eq","","",264,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",264,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",264,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",264,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"fmt","core::simd","",265,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",265,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",266,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",266,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",267,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",267,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",268,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",268,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",269,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",269,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",270,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",270,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",271,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",271,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",272,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",272,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",273,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",273,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",274,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",274,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"add","","",269,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"add","","",270,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"add","","",271,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"add","","",272,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"add","","",265,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"add","","",266,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"add","","",267,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"add","","",268,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"add","","",273,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"add","","",274,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"sub","","",269,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"sub","","",270,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"sub","","",271,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"sub","","",272,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"sub","","",265,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"sub","","",266,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"sub","","",267,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"sub","","",268,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"sub","","",273,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"sub","","",274,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"mul","","",269,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"mul","","",270,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"mul","","",271,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"mul","","",272,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"mul","","",265,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"mul","","",266,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"mul","","",267,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"mul","","",268,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"mul","","",273,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"mul","","",274,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"div","","",273,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"div","","",274,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"shl","","",269,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shl","","",270,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shl","","",271,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shl","","",272,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shl","","",265,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shl","","",266,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shl","","",267,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shl","","",268,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"shr","","",269,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shr","","",270,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shr","","",271,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shr","","",272,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shr","","",265,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shr","","",266,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shr","","",267,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shr","","",268,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitand","","",269,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitand","","",270,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitand","","",271,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitand","","",272,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitand","","",265,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitand","","",266,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitand","","",267,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitand","","",268,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitor","","",269,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitor","","",270,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitor","","",271,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitor","","",272,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitor","","",265,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitor","","",266,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitor","","",267,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitor","","",268,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitxor","","",269,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitxor","","",270,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitxor","","",271,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitxor","","",272,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitxor","","",265,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitxor","","",266,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitxor","","",267,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitxor","","",268,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"next","rustc_unicode::char","",275,{"inputs":[{"name":"tolowercase"}],"output":{"name":"option"}}],[11,"next","","",276,{"inputs":[{"name":"touppercase"}],"output":{"name":"option"}}],[11,"next","","",277,{"inputs":[{"name":"casemappingiter"}],"output":{"name":"option"}}],[11,"clone","","",278,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"decodeutf16"}}],[11,"next","","",278,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"option"}}],[11,"size_hint","","",278,null],[11,"borrow","collections::vec","",64,null],[11,"borrow_mut","","",64,null],[11,"eq","core::ops","",279,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",279,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",279,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",279,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",280,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",280,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",280,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",280,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",281,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",281,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",281,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",281,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",282,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",282,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",282,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",282,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::result","",283,null],[11,"fmt","","",283,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",283,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",283,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",283,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",283,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",283,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",283,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",283,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",283,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",283,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",283,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",283,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",283,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",283,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",283,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",283,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",283,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",283,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",283,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",283,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",283,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",283,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",283,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",283,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",283,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",283,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",283,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",283,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",283,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",283,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",283,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",283,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",284,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",284,null],[11,"next_back","","",284,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",284,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",285,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",285,null],[11,"next_back","","",285,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",286,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",286,null],[11,"next_back","","",286,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",283,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",287,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",287,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",287,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",287,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",287,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",287,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",287,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",288,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",288,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",288,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",288,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",289,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",289,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",289,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",289,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",289,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",289,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",289,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",289,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",289,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",290,null],[11,"clone","","",290,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",291,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",291,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",291,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",291,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",292,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",292,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",293,null],[11,"deref","","",292,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",292,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",294,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",294,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",294,null],[11,"clone","collections::str","",295,{"inputs":[{"name":"utf16units"}],"output":{"name":"utf16units"}}],[11,"next","","",295,{"inputs":[{"name":"utf16units"}],"output":{"name":"option"}}],[11,"size_hint","","",295,null],[11,"borrow","collections::string","",85,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"fmt","core::str::pattern","",296,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",296,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",296,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",296,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",297,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",298,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",297,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",297,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",297,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",299,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",299,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",299,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",299,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",299,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",299,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",299,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",299,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",300,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",300,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",300,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",300,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",300,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",300,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",300,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",300,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",301,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",301,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",301,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",301,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",301,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",301,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",301,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",301,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",302,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",302,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",303,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",303,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",304,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",304,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",302,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",302,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",302,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",302,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",302,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",305,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",305,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",306,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",306,null],[11,"matching","","",306,null],[11,"use_early_reject","","",307,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",307,null],[11,"matching","","",307,null],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",308,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",308,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",308,null],[11,"finish","","",308,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",308,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",308,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"borrow","collections::borrow","",309,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"clone","","",309,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",309,null],[11,"into_owned","","Extracts the owned data.",309,null],[11,"deref","","",309,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"cmp","","",309,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"ordering"}}],[11,"eq","","",309,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",309,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","","",309,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",309,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",309,null],[11,"into_cow","","",309,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"as_ref","","",309,{"inputs":[{"name":"cow"}],"output":{"name":"t"}}],[11,"new","collections::vec","Constructs a new, empty `Vec<T>`.",64,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec<T>` with the specified capacity.",64,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec<T>` directly from the raw components of another vector.",64,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",64,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec<T>`. The collection may reserve more space to avoid\nfrequent reallocations.",64,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec<T>`. Does nothing if the capacity is already\nsufficient.",64,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",64,null],[11,"into_boxed_slice","","Converts the vector into Box<[T]>.",64,{"inputs":[{"name":"vec"}],"output":{"name":"box"}}],[11,"truncate","","Shorten a vector, dropping excess elements.",64,null],[11,"as_slice","","Extracts a slice containing the entire vector.",64,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",64,null],[11,"set_len","","Sets the length of a vector.",64,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",64,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after position `i` one position to the right.",64,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after position `index` one position to the left.",64,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"retain","","Retains only the elements specified by the predicate.",64,null],[11,"push","","Appends an element to the back of a collection.",64,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",64,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",64,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",64,{"inputs":[{"name":"vec"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the vector, removing all values.",64,null],[11,"len","","Returns the number of elements in the vector.",64,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector contains no elements.",64,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"split_off","","Splits the collection into two at the given index.",64,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",64,null],[11,"push_all","","Appends all elements in a slice to the `Vec`.",64,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",64,null],[11,"clone","","",64,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"clone_from","","",64,null],[11,"hash","","",64,null],[11,"index","","",64,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",64,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index","","",64,null],[11,"index","","",64,null],[11,"index","","",64,null],[11,"index","","",64,null],[11,"index_mut","","",64,null],[11,"index_mut","","",64,null],[11,"index_mut","","",64,null],[11,"index_mut","","",64,null],[11,"deref","","",64,null],[11,"deref_mut","","",64,null],[11,"from_iter","","",64,{"inputs":[{"name":"vec"},{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",64,{"inputs":[{"name":"vec"}],"output":{"name":"intoiter"}}],[11,"extend","","",64,null],[11,"extend","","",64,null],[11,"eq","","",64,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","collections::borrow","",309,null],[11,"ne","","",309,null],[11,"eq","","",309,null],[11,"ne","","",309,null],[11,"eq","","",309,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",309,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","collections::vec","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"partial_cmp","","",64,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"option"}}],[11,"cmp","","",64,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"ordering"}}],[11,"drop","","",64,null],[11,"default","","",64,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"fmt","","",64,{"inputs":[{"name":"vec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",64,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_mut","","",64,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_ref","","",64,null],[11,"as_mut","","",64,null],[11,"from","","",64,null],[11,"from","","",64,{"inputs":[{"name":"vec"},{"name":"str"}],"output":{"name":"vec"}}],[11,"from_iter","collections::borrow","",309,{"inputs":[{"name":"cow"},{"name":"i"}],"output":{"name":"cow"}}],[11,"into_cow","collections::vec","",64,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"next","","",310,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",310,null],[11,"count","","",310,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next_back","","",310,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",310,null],[11,"next","","",311,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",311,null],[11,"next_back","","",311,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","","",311,null],[11,"clone","core::iter","",312,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",312,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",312,null],[11,"next_back","","",312,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",313,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",313,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",313,null],[11,"next_back","","",313,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",314,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",314,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",314,null],[11,"clone","","",315,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"clone","","",316,{"inputs":[{"name":"chainstate"}],"output":{"name":"chainstate"}}],[11,"next","","",315,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",315,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",315,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",315,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",315,null],[11,"next_back","","",315,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",317,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",317,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",317,null],[11,"next_back","","",317,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",318,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",318,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",318,null],[11,"next_back","","",318,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",319,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",319,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",319,null],[11,"next_back","","",319,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",320,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",320,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",320,null],[11,"next_back","","",320,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",321,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",321,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",321,null],[11,"nth","","",321,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",321,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",321,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",322,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",322,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",322,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",322,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",322,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",322,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",322,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",322,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",323,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",323,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",323,null],[11,"clone","","",324,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",324,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",324,null],[11,"clone","","",325,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",325,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",325,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",325,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",325,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",325,null],[11,"clone","","",326,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",326,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",326,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",326,null],[11,"clone","","",327,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",327,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",327,null],[11,"clone","","",328,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",328,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",328,null],[11,"next_back","","",328,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",329,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",329,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",329,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",329,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",329,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",329,null],[11,"next_back","","",329,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",330,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",330,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",330,null],[11,"next_back","","",330,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",331,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",281,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",280,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",331,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",331,null],[11,"clone","","",332,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",332,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",332,null],[11,"next_back","","",332,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",331,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",331,null],[11,"next","core::ops","",280,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",280,null],[11,"next_back","","",280,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",281,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",333,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",333,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",333,null],[11,"next_back","","",333,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",334,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",334,null],[11,"next_back","","",334,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",334,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",334,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",334,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",335,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",335,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",335,null],[11,"next_back","","",335,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",335,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"cmp","collections::string","",85,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",85,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"option"}}],[11,"lt","","",85,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"le","","",85,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"gt","","",85,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ge","","",85,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new string buffer initialized with the empty string.",85,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new string buffer with the given capacity.\nThe string will be able to hold exactly `capacity` bytes without\nreallocating. If `capacity` is 0, the string will not allocate.",85,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",85,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a `String`, including invalid characters.",85,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `None`\nif `v` contains any invalid data.",85,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",85,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",85,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",85,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Returns the underlying byte buffer, encoded as UTF-8.",85,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"as_str","","Extracts a string slice containing the entire string.",85,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"push_str","","Pushes the given string onto this string buffer.",85,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without\nreallocating.",85,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `String`. The collection may reserve more space to avoid\nfrequent reallocations.",85,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bytes to be\ninserted in the given `String`. Does nothing if the capacity is already\nsufficient.",85,null],[11,"shrink_to_fit","","Shrinks the capacity of this string buffer to match its length.",85,null],[11,"push","","Adds the given character to the end of the string.",85,null],[11,"as_bytes","","Works with the underlying buffer as a byte slice.",85,null],[11,"truncate","","Shortens a string to the specified length.",85,null],[11,"pop","","Removes the last character from the string buffer and returns it.\nReturns `None` if this string buffer is empty.",85,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"remove","","Removes the character from the string buffer at byte position `idx` and\nreturns it.",85,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"char"}}],[11,"insert","","Inserts a character into the string buffer at byte position `idx`.",85,null],[11,"as_mut_vec","","Views the string buffer as a mutable sequence of bytes.",85,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"len","","Returns the number of bytes in this string.",85,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the string contains no bytes",85,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"clear","","Truncates the string, returning it to 0 length.",85,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",85,{"inputs":[{"name":"string"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_boxed_str","","Converts the string into `Box<str>`.",85,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_boxed_slice","","Converts the string into `Box<str>`.",85,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_bytes","","Consumes this error, returning the bytes that were attempted to make a\n`String` with.",6,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"vec"}}],[11,"utf8_error","","Access the underlying UTF8-error that was the cause of this error.",6,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"utf8error"}}],[11,"fmt","","",6,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",85,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"clone_from","","",85,null],[11,"from_iter","","",85,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",85,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",85,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",85,null],[11,"extend","","",85,null],[11,"extend","","",85,null],[11,"extend","","",85,null],[11,"eq","","",85,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",85,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",85,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",309,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",309,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",309,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",309,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",85,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",309,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",309,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"default","collections::string","",85,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",85,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",85,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",85,null],[11,"add","","",85,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"index","","",85,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index","","",85,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index","","",85,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index","","",85,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"index_mut","","",85,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index_mut","","",85,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index_mut","","",85,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index_mut","","",85,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"deref","","",85,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"deref_mut","","",85,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"from_str","","",85,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",336,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"fmt","","",336,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",336,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"as_ref","","",85,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_ref","","",85,null],[11,"from","","",85,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",309,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",309,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",85,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"into_cow","","",85,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"write_str","","",85,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",85,{"inputs":[{"name":"string"},{"name":"char"}],"output":{"name":"result"}}],[11,"drop","","",337,null],[11,"next","","",337,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",337,null],[11,"next_back","","",337,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"fmt","libloading::os","",338,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",338,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",338,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",338,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",338,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",338,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",338,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",338,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",339,null],[11,"fmt","","",339,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",339,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",339,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",339,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",339,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"hash","core::option","",340,null],[11,"fmt","","",340,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",340,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",340,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",340,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",340,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",340,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",340,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",340,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",340,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",340,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"is_some","","Returns `true` if the option is a `Some` value",340,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",340,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",340,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",340,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",340,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",340,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",340,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",340,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",340,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",340,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",340,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",340,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",340,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",340,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",340,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",340,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",340,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",340,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",340,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",340,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",340,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",340,null],[11,"cloned","","Maps an `Option<&T>` to an `Option<T>` by cloning the contents of the\noption.",340,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",340,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","","",340,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",340,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",341,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",341,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",341,null],[11,"next_back","","",341,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",342,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",342,null],[11,"next_back","","",342,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",342,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",343,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",343,null],[11,"next_back","","",343,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",344,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",344,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",344,null],[11,"next_back","","",344,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",340,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","alloc::boxed","",345,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"exchangeheapsingleton"}}],[11,"pointer","","",346,null],[11,"make_place","","",346,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"intermediatebox"}}],[11,"finalize","","",346,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"finalize","","",1,{"inputs":[{"name":"box"},{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",345,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"intermediatebox"}}],[11,"drop","","",346,null],[11,"new","","Allocates memory on the heap and then moves `x` into it.",1,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from the raw pointer.",1,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",1,null],[11,"default","","",1,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"default","","",1,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box's contents.",1,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`'s contents into `self` without creating a new allocation.",1,null],[11,"clone","","",1,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"eq","","",1,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",1,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",1,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",1,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",1,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",1,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"next","","",1,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",1,null],[11,"next_back","","",1,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"call_once","","",1,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"call_once","","",1,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"clone","","",1,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"borrow","","",1,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"borrow_mut","","",1,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_ref","","",1,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_mut","","",1,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",347,null],[11,"get","","Dereferences the content.",347,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",347,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",347,null],[11,"fmt","","",347,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",348,null],[11,"clone","","",348,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",348,null],[11,"fmt","","",348,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","core::raw","",349,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",350,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"clone","core::fmt::rt::v1","",351,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",352,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",353,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",353,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",353,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",354,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",355,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"new","libloading::os::unix","Find and load a shared library (module).",356,{"inputs":[{"name":"library"},{"name":"p"}],"output":{"name":"result"}}],[11,"this","","Load the dynamic libraries linked into main program.",356,{"inputs":[{"name":"library"}],"output":{"name":"library"}}],[11,"get","","Get a symbol by name.",356,null],[11,"drop","","",356,{"inputs":[{"name":"library"}],"output":null}],[11,"fmt","","",356,{"inputs":[{"name":"library"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",357,{"inputs":[{"name":"symbol"}],"output":{"name":"t"}}],[11,"fmt","","",357,{"inputs":[{"name":"symbol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","std::io::error","",82,{"inputs":[{"name":"error"},{"name":"nullerror"}],"output":{"name":"error"}}],[11,"cstring_ref","std::ffi::c_str","",78,{"inputs":[{"name":"cstring"}],"output":{"name":"c_char"}}],[6,"Result","libloading","",null,null],[11,"new","","Find and load a shared library (module).",358,{"inputs":[{"name":"library"},{"name":"p"}],"output":{"name":"result"}}],[11,"get","","Get a symbol by name.",358,null],[11,"deref","","",359,{"inputs":[{"name":"symbol"}],"output":{"name":"t"}}]],"paths":[[3,"Mutex"],[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[8,"Error"],[3,"EscapeDefault"],[3,"Wrapping"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"ScopedKey"],[3,"KeyInner"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"RawBucket"],[3,"Bucket"],[3,"SafeHash"],[3,"FullBucket"],[3,"EmptyBucket"],[4,"BucketState"],[3,"GapThenFull"],[3,"RawTable"],[3,"RawBuckets"],[3,"RevMoveBuckets"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DefaultResizePolicy"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"DefaultState"],[3,"Iter"],[3,"IntoIter"],[3,"Rawlink"],[3,"LinkedList"],[3,"IterMut"],[3,"BinaryHeap"],[3,"Hole"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DynamicLibrary"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"WalkDir"],[3,"Path"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"InternalBufWriter"],[3,"Cursor"],[3,"Custom"],[4,"ErrorKind"],[4,"Repr"],[3,"Lazy"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"StdinRaw"],[3,"StdoutRaw"],[3,"StderrRaw"],[4,"Maybe"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Broadcast"],[3,"Chain"],[3,"Take"],[3,"Tee"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[4,"Prefix"],[4,"State"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"SignalToken"],[3,"WaitToken"],[3,"Packet"],[4,"StartResult"],[3,"Select"],[3,"Handle"],[3,"Packets"],[3,"Packet"],[3,"Packet"],[4,"Failure"],[3,"Packet"],[3,"Queue"],[3,"Queue"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Semaphore"],[3,"SemaphoreGuard"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Duration"],[3,"Condvar"],[3,"EHContext"],[3,"DwarfReader"],[4,"_Unwind_Action"],[4,"_Unwind_Reason_Code"],[3,"Mutex"],[3,"LookupHost"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[3,"Flag"],[3,"PoisonError"],[4,"TryLockError"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"RWLock"],[3,"StaticKey"],[3,"Key"],[3,"CodePoint"],[3,"Wtf8Buf"],[3,"Wtf8"],[3,"Wtf8CodePoints"],[3,"EncodeWide"],[3,"Condvar"],[3,"FileDesc"],[3,"FileAttr"],[3,"OpenOptions"],[3,"FilePermissions"],[3,"FileType"],[3,"ReadDir"],[3,"Dir"],[3,"DirEntry"],[3,"File"],[3,"DirBuilder"],[3,"Mutex"],[3,"ReentrantMutex"],[3,"Socket"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"Env"],[3,"Buf"],[3,"Slice"],[3,"AnonPipe"],[3,"Command"],[4,"ExitStatus"],[3,"Process"],[3,"RWLock"],[3,"Handler"],[3,"Thread"],[3,"SteadyTime"],[3,"Stdin"],[3,"Stdout"],[3,"Stderr"],[3,"OsRng"],[3,"ReaderRng"],[3,"StdRng"],[3,"ThreadRngReseeder"],[3,"ThreadRng"],[3,"Rc"],[3,"Weak"],[4,"Ordering"],[3,"PhantomData"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"ToLowercase"],[3,"ToUppercase"],[4,"CaseMappingIter"],[3,"DecodeUtf16"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"Utf16Units"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"SipHasher"],[4,"Cow"],[3,"IntoIter"],[3,"Drain"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[4,"ChainState"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[4,"ParseError"],[3,"Drain"],[8,"Any"],[3,"TypeId"],[4,"Option"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"Unique"],[3,"Shared"],[3,"Slice"],[3,"TraitObject"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Library"],[3,"Symbol"],[3,"Library"],[3,"Symbol"]]};
searchIndex['backtrace'] = {"items":[[0,"","backtrace","A library for acquiring a backtrace at runtime",null,null],[5,"trace","","Inspects the current call-stack, passing all active frames into the closure\nprovided to calculate a stack trace.",null,{"inputs":[{"name":"fnmut"}],"output":null}],[5,"resolve","","Resolve an address to a symbol, passing the symbol to the specified\nclosure.",null,null],[5,"demangle","","De-mangles a Rust symbol into a more readable version",null,{"inputs":[{"name":"write"},{"name":"str"}],"output":{"name":"result"}}],[8,"Frame","","A trait representing one frame of a backtrace, yielded to the `trace`\nfunction of this crate.",null,null],[10,"ip","","Returns the current instruction pointer of this frame.",0,null],[10,"symbol_address","","Returns the starting symbol address of the frame of this function.",0,null],[8,"Symbol","","A trait representing the resolution of a symbol in a file.",null,null],[11,"name","","Returns the name of this function as a byte array (may not always be\nvalid UTF-8).",1,{"inputs":[{"name":"symbol"}],"output":{"name":"option"}}],[11,"addr","","Returns the starting address of this function.",1,{"inputs":[{"name":"symbol"}],"output":{"name":"option"}}],[11,"filename","","Returns the file name where this function was defined.",1,{"inputs":[{"name":"symbol"}],"output":{"name":"option"}}],[11,"lineno","","Returns the line number for where this symbol is currently executing.",1,{"inputs":[{"name":"symbol"}],"output":{"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"frame"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"name","","Returns the name of this function as a byte array (may not always be\nvalid UTF-8).",1,{"inputs":[{"name":"symbol"}],"output":{"name":"option"}}],[11,"addr","","Returns the starting address of this function.",1,{"inputs":[{"name":"symbol"}],"output":{"name":"option"}}],[11,"filename","","Returns the file name where this function was defined.",1,{"inputs":[{"name":"symbol"}],"output":{"name":"option"}}],[11,"lineno","","Returns the line number for where this symbol is currently executing.",1,{"inputs":[{"name":"symbol"}],"output":{"name":"option"}}],[11,"fmt","","",1,{"inputs":[{"name":"symbol"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[8,"Frame"],[8,"Symbol"]]};
searchIndex['dylib'] = {"items":[[0,"","dylib","Dynamic library facilities.",null,null],[3,"DynamicLibrary","","",null,null],[11,"drop","","",0,{"inputs":[{"name":"dynamiclibrary"}],"output":null}],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",0,{"inputs":[{"name":"dynamiclibrary"},{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process's search path for dynamic libraries",0,{"inputs":[{"name":"dynamiclibrary"},{"name":"path"}],"output":null}],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",0,null],[11,"envvar","","Returns the environment variable for this process's dynamic library\nsearch path",0,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",0,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"vec"}}],[11,"symbol","","Access the value at the symbol of the dynamic library",0,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}]],"paths":[[3,"DynamicLibrary"]]};
searchIndex['osmesa_sys'] = {"items":[[0,"","osmesa_sys","",null,null],[3,"OsMesa","","Symbols loaded from a shared library.",null,null],[12,"OSMesaColorClamp","","",0,null],[12,"OSMesaCreateContext","","",0,null],[12,"OSMesaCreateContextExt","","",0,null],[12,"OSMesaDestroyContext","","",0,null],[12,"OSMesaGetColorBuffer","","",0,null],[12,"OSMesaGetCurrentContext","","",0,null],[12,"OSMesaGetDepthBuffer","","",0,null],[12,"OSMesaGetIntegerv","","",0,null],[12,"OSMesaGetProcAddress","","",0,null],[12,"OSMesaMakeCurrent","","",0,null],[12,"OSMesaPixelStore","","",0,null],[3,"osmesa_context","","",null,null],[5,"OSMesaColorClamp","","",null,null],[5,"OSMesaCreateContext","","",null,{"inputs":[{"name":"c_uint"},{"name":"osmesacontext"}],"output":{"name":"osmesacontext"}}],[5,"OSMesaCreateContextExt","","",null,{"inputs":[{"name":"c_uint"},{"name":"c_int"},{"name":"c_int"},{"name":"c_int"},{"name":"osmesacontext"}],"output":{"name":"osmesacontext"}}],[5,"OSMesaDestroyContext","","",null,null],[5,"OSMesaGetColorBuffer","","",null,null],[5,"OSMesaGetCurrentContext","","",null,{"inputs":[],"output":{"name":"osmesacontext"}}],[5,"OSMesaGetDepthBuffer","","",null,null],[5,"OSMesaGetIntegerv","","",null,null],[5,"OSMesaGetProcAddress","","",null,null],[5,"OSMesaMakeCurrent","","",null,null],[5,"OSMesaPixelStore","","",null,null],[6,"OSMesaContext","","",null,null],[6,"OSMESAproc","","",null,null],[17,"OSMESA_BGRA","","",null,null],[17,"OSMESA_ARGB","","",null,null],[17,"OSMESA_BGR","","",null,null],[17,"OSMESA_RGB_565","","",null,null],[17,"OSMESA_COLOR_INDEX","","",null,null],[17,"OSMESA_RGB","","",null,null],[17,"OSMESA_RGBA","","",null,null],[17,"OSMESA_WIDTH","","",null,null],[17,"OSMESA_HEIGHT","","",null,null],[17,"OSMESA_FORMAT","","",null,null],[17,"OSMESA_TYPE","","",null,null],[17,"OSMESA_MAX_WIDTH","","",null,null],[17,"OSMESA_MAX_HEIGHT","","",null,null],[17,"OSMESA_ROW_LENGTH","","",null,null],[17,"OSMESA_Y_UP","","",null,null],[11,"open","","Tries to open the dynamic library.",0,{"inputs":[{"name":"osmesa"},{"name":"path"}],"output":{"name":"result"}}],[11,"try_loading","","Try loading the static symbols linked to this library.",0,{"inputs":[{"name":"osmesa"}],"output":{"name":"result"}}]],"paths":[[3,"OsMesa"]]};
searchIndex['crossbeam'] = {"items":[[0,"","crossbeam","Support for concurrent and parallel programming.",null,null],[3,"Scope","","",null,null],[3,"ScopedJoinHandle","","A handle to a scoped thread",null,null],[5,"scope","","Create a new `scope`, for deferred destructors.",null,{"inputs":[{"name":"f"}],"output":{"name":"r"}}],[5,"spawn_unsafe","","Like `std::thread::spawn`, but without the closure bounds.",null,{"inputs":[{"name":"f"}],"output":{"name":"joinhandle"}}],[0,"mem","","Memory management for concurrent data structures",null,null],[3,"CachePadded","crossbeam::mem","Pad `T` to the length of a cacheline.",null,null],[0,"epoch","","Epoch-based memory management",null,null],[3,"Owned","crossbeam::mem::epoch","Like `Box<T>`: an owned, heap-allocated data value of type `T`.",null,null],[3,"Shared","","Like `&'a T`: a shared reference valid for lifetime `'a`.",null,null],[3,"Atomic","","Like `std::sync::atomic::AtomicPtr`.",null,null],[3,"Guard","","An RAII-style guard for pinning the current epoch.",null,null],[5,"pin","","Pin the current epoch.",null,{"inputs":[],"output":{"name":"guard"}}],[11,"new","","Move `t` to a new heap allocation.",0,{"inputs":[{"name":"owned"},{"name":"t"}],"output":{"name":"owned"}}],[11,"deref","","",0,{"inputs":[{"name":"owned"}],"output":{"name":"t"}}],[11,"deref_mut","","",0,{"inputs":[{"name":"owned"}],"output":{"name":"t"}}],[11,"eq","","",1,{"inputs":[{"name":"shared"},{"name":"shared"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"shared"},{"name":"shared"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",1,{"inputs":[{"name":"shared"}],"output":{"name":"t"}}],[11,"null","","Create a new, null atomic pointer.",2,{"inputs":[{"name":"atomic"}],"output":{"name":"atomic"}}],[11,"load","","Do an atomic load with the given memory ordering.",2,{"inputs":[{"name":"atomic"},{"name":"ordering"},{"name":"guard"}],"output":{"name":"option"}}],[11,"store","","Do an atomic store with the given memory ordering.",2,{"inputs":[{"name":"atomic"},{"name":"option"},{"name":"ordering"}],"output":null}],[11,"store_and_ref","","Do an atomic store with the given memory ordering, immediately yielding\na shared reference to the pointer that was stored.",2,{"inputs":[{"name":"atomic"},{"name":"owned"},{"name":"ordering"},{"name":"guard"}],"output":{"name":"shared"}}],[11,"store_shared","","Do an atomic store of a `Shared` pointer with the given memory ordering.",2,{"inputs":[{"name":"atomic"},{"name":"option"},{"name":"ordering"}],"output":null}],[11,"cas","","Do a compare-and-set from a `Shared` to an `Owned` pointer with the\ngiven memory ordering.",2,{"inputs":[{"name":"atomic"},{"name":"option"},{"name":"option"},{"name":"ordering"}],"output":{"name":"result"}}],[11,"cas_and_ref","","Do a compare-and-set from a `Shared` to an `Owned` pointer with the\ngiven memory ordering, immediatley acquiring a new `Shared` reference to\nthe previously-owned pointer if successful.",2,{"inputs":[{"name":"atomic"},{"name":"option"},{"name":"owned"},{"name":"ordering"},{"name":"guard"}],"output":{"name":"result"}}],[11,"cas_shared","","Do a compare-and-set from a `Shared` to another `Shared` pointer with\nthe given memory ordering.",2,{"inputs":[{"name":"atomic"},{"name":"option"},{"name":"option"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"swap","","Do an atomic swap with an `Owned` pointer with the given memory ordering.",2,{"inputs":[{"name":"atomic"},{"name":"option"},{"name":"ordering"},{"name":"guard"}],"output":{"name":"option"}}],[11,"swap_shared","","Do an atomic swap with a `Shared` pointer with the given memory ordering.",2,{"inputs":[{"name":"atomic"},{"name":"option"},{"name":"ordering"},{"name":"guard"}],"output":{"name":"option"}}],[11,"unlinked","","Assert that the value is no longer reachable from a lock-free data\nstructure and should be collected when sufficient epochs have passed.",3,{"inputs":[{"name":"guard"},{"name":"shared"}],"output":null}],[11,"migrate_garbage","","Move the thread-local garbage into the global set of garbage.",3,{"inputs":[{"name":"guard"}],"output":null}],[11,"drop","","",3,{"inputs":[{"name":"guard"}],"output":null}],[11,"zeroed","crossbeam::mem","A const fn equivalent to mem::zeroed().",4,{"inputs":[{"name":"cachepadded"}],"output":{"name":"cachepadded"}}],[11,"new","","Wrap `t` with cacheline padding.",4,{"inputs":[{"name":"cachepadded"},{"name":"t"}],"output":{"name":"cachepadded"}}],[11,"deref","","",4,{"inputs":[{"name":"cachepadded"}],"output":{"name":"t"}}],[11,"deref_mut","","",4,{"inputs":[{"name":"cachepadded"}],"output":{"name":"t"}}],[8,"ZerosValid","","Types for which mem::zeroed() is safe.",null,null],[0,"sync","crossbeam","Synchronization primitives.",null,null],[3,"MsQueue","crossbeam::sync","A Michael-Scott lock-free queue.",null,null],[3,"AtomicOption","","",null,null],[3,"TreiberStack","","Treiber's lock-free stack.",null,null],[3,"SegQueue","","A Michael-Scott queue that allocates \"segments\" (arrays of nodes)\nfor efficiency.",null,null],[11,"new","","",5,{"inputs":[{"name":"atomicoption"}],"output":{"name":"atomicoption"}}],[11,"swap_box","","",5,{"inputs":[{"name":"atomicoption"},{"name":"box"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"swap","","",5,{"inputs":[{"name":"atomicoption"},{"name":"t"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"take","","",5,{"inputs":[{"name":"atomicoption"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"new","","Create a new, empty queue.",6,{"inputs":[{"name":"msqueue"}],"output":{"name":"msqueue"}}],[11,"push","","Add `t` to the back of the queue.",6,{"inputs":[{"name":"msqueue"},{"name":"t"}],"output":null}],[11,"pop","","Attempt to dequeue from the front.",6,{"inputs":[{"name":"msqueue"}],"output":{"name":"option"}}],[11,"new","","Crate a new, empty stack.",7,{"inputs":[{"name":"treiberstack"}],"output":{"name":"treiberstack"}}],[11,"push","","Push `t` on top of the stack.",7,{"inputs":[{"name":"treiberstack"},{"name":"t"}],"output":null}],[11,"pop","","Attempt to pop the top element of the stack.",7,{"inputs":[{"name":"treiberstack"}],"output":{"name":"option"}}],[11,"new","","Create a new, empty queue.",8,{"inputs":[{"name":"segqueue"}],"output":{"name":"segqueue"}}],[11,"push","","Add `t` to the back of the queue.",8,{"inputs":[{"name":"segqueue"},{"name":"t"}],"output":null}],[11,"pop","","Attempt to dequeue from the front.",8,{"inputs":[{"name":"segqueue"}],"output":{"name":"option"}}],[11,"defer","crossbeam","Schedule code to be executed when exiting the scope.",9,{"inputs":[{"name":"scope"},{"name":"f"}],"output":null}],[11,"spawn","","Create a scoped thread.",9,{"inputs":[{"name":"scope"},{"name":"f"}],"output":{"name":"scopedjoinhandle"}}],[11,"join","","Join the scoped thread, returning the result it produced.",10,{"inputs":[{"name":"scopedjoinhandle"}],"output":{"name":"t"}}],[11,"thread","","Get the underlying thread handle.",10,{"inputs":[{"name":"scopedjoinhandle"}],"output":{"name":"thread"}}],[11,"drop","","",9,{"inputs":[{"name":"scope"}],"output":null}]],"paths":[[3,"Owned"],[3,"Shared"],[3,"Atomic"],[3,"Guard"],[3,"CachePadded"],[3,"AtomicOption"],[3,"MsQueue"],[3,"TreiberStack"],[3,"SegQueue"],[3,"Scope"],[3,"ScopedJoinHandle"]]};
searchIndex['petgraph'] = {"items":[[0,"","petgraph","**petgraph** is a graph data structure library.",null,null],[4,"EdgeDirection","","Edge direction",null,null],[13,"Outgoing","","An `Outgoing` edge is an outward edge *from* the current node.",0,null],[13,"Incoming","","An `Incoming` edge is an inbound edge *to* the current node.",0,null],[4,"Directed","","Marker type for a directed graph.",null,null],[4,"Undirected","","Marker type for an undirected graph.",null,null],[0,"algo","","Graph algorithms.",null,null],[5,"is_isomorphic","petgraph::algo","Return `true` if the graphs `g0` and `g1` are isomorphic.",null,{"inputs":[{"name":"graph"},{"name":"graph"}],"output":{"name":"bool"}}],[5,"is_isomorphic_matching","","Return `true` if the graphs `g0` and `g1` are isomorphic.",null,{"inputs":[{"name":"graph"},{"name":"graph"},{"name":"f"},{"name":"g"}],"output":{"name":"bool"}}],[5,"dijkstra","","Dijkstra's shortest path algorithm.",null,{"inputs":[{"name":"g"},{"name":"nodeid"},{"name":"option"},{"name":"f"}],"output":{"name":"hashmap"}}],[5,"is_cyclic_undirected","","Return `true` if the input graph contains a cycle.",null,{"inputs":[{"name":"graph"}],"output":{"name":"bool"}}],[5,"is_cyclic","","**Deprecated: Renamed to `is_cyclic_undirected`.**",null,{"inputs":[{"name":"graph"}],"output":{"name":"bool"}}],[5,"is_cyclic_directed","","Return `true` if the input directed graph contains a cycle.",null,{"inputs":[{"name":"graph"}],"output":{"name":"bool"}}],[5,"toposort","","Perform a topological sort of a directed graph.",null,{"inputs":[{"name":"graph"}],"output":{"name":"vec"}}],[5,"scc","","Compute the *strongly connected components* using Kosaraju's algorithm.",null,{"inputs":[{"name":"graph"}],"output":{"name":"vec"}}],[5,"connected_components","","Return the number of connected components of the graph.",null,{"inputs":[{"name":"graph"}],"output":{"name":"usize"}}],[5,"min_spanning_tree","","Compute a *minimum spanning tree* of a graph.",null,{"inputs":[{"name":"graph"}],"output":{"name":"graph"}}],[0,"graphmap","petgraph","`GraphMap<N, E>` is an undirected graph where node values are mapping keys.",null,null],[3,"GraphMap","petgraph::graphmap","`GraphMap<N, E>` is an undirected graph, with generic node values `N` and edge weights `E`.",null,null],[3,"Nodes","","",null,null],[3,"Neighbors","","",null,null],[3,"Edges","","",null,null],[3,"AllEdges","","",null,null],[3,"Ptr","","A reference that is hashed and compared by its pointer value.",null,null],[8,"NodeTrait","","A trait group for `GraphMap`'s node identifier.",null,null],[11,"clone","","",1,{"inputs":[{"name":"graphmap"}],"output":{"name":"graphmap"}}],[11,"fmt","","",1,{"inputs":[{"name":"graphmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `GraphMap`.",1,{"inputs":[{"name":"graphmap"}],"output":{"name":"self"}}],[11,"with_capacity","","Create a new `GraphMap` with estimated capacity.",1,{"inputs":[{"name":"graphmap"},{"name":"usize"},{"name":"usize"}],"output":{"name":"self"}}],[11,"capacity","","Return the current node and edge capacity of the graph.",1,null],[11,"from_edges","","Create a new `GraphMap` from an iterable of edges.",1,{"inputs":[{"name":"graphmap"},{"name":"i"}],"output":{"name":"self"}}],[11,"node_count","","Return the number of nodes in the graph.",1,{"inputs":[{"name":"graphmap"}],"output":{"name":"usize"}}],[11,"edge_count","","Return the number of edges in the graph.",1,{"inputs":[{"name":"graphmap"}],"output":{"name":"usize"}}],[11,"clear","","Remove all nodes and edges",1,{"inputs":[{"name":"graphmap"}],"output":null}],[11,"add_node","","Add node `n` to the graph.",1,{"inputs":[{"name":"graphmap"},{"name":"n"}],"output":{"name":"n"}}],[11,"remove_node","","Return `true` if node `n` was removed.",1,{"inputs":[{"name":"graphmap"},{"name":"n"}],"output":{"name":"bool"}}],[11,"contains_node","","Return `true` if the node is contained in the graph.",1,{"inputs":[{"name":"graphmap"},{"name":"n"}],"output":{"name":"bool"}}],[11,"add_edge","","Add an edge connecting `a` and `b` to the graph, with associated\ndata `weight`.",1,{"inputs":[{"name":"graphmap"},{"name":"n"},{"name":"n"},{"name":"e"}],"output":{"name":"option"}}],[11,"remove_edge","","Remove edge from `a` to `b` from the graph and return the edge weight.",1,{"inputs":[{"name":"graphmap"},{"name":"n"},{"name":"n"}],"output":{"name":"option"}}],[11,"contains_edge","","Return `true` if the edge connecting `a` with `b` is contained in the graph.",1,{"inputs":[{"name":"graphmap"},{"name":"n"},{"name":"n"}],"output":{"name":"bool"}}],[11,"nodes","","Return an iterator over the nodes of the graph.",1,{"inputs":[{"name":"graphmap"}],"output":{"name":"nodes"}}],[11,"neighbors","","Return an iterator over the nodes that are connected with `from` by edges.",1,{"inputs":[{"name":"graphmap"},{"name":"n"}],"output":{"name":"neighbors"}}],[11,"edges","","Return an iterator over the nodes that are connected with `from` by edges,\npaired with the edge weight.",1,{"inputs":[{"name":"graphmap"},{"name":"n"}],"output":{"name":"edges"}}],[11,"edge_weight","","Return a reference to the edge weight connecting `a` with `b`, or\n`None` if the edge does not exist in the graph.",1,{"inputs":[{"name":"graphmap"},{"name":"n"},{"name":"n"}],"output":{"name":"option"}}],[11,"edge_weight_mut","","Return a mutable reference to the edge weight connecting `a` with `b`, or\n`None` if the edge does not exist in the graph.",1,{"inputs":[{"name":"graphmap"},{"name":"n"},{"name":"n"}],"output":{"name":"option"}}],[11,"all_edges","","Return an iterator over all edges of the graph with their weight in arbitrary order.",1,{"inputs":[{"name":"graphmap"}],"output":{"name":"alledges"}}],[11,"from_iter","","",1,{"inputs":[{"name":"graphmap"},{"name":"i"}],"output":{"name":"self"}}],[11,"extend","","",1,{"inputs":[{"name":"graphmap"},{"name":"i"}],"output":null}],[11,"next","","",2,{"inputs":[{"name":"nodes"}],"output":{"name":"option"}}],[11,"size_hint","","",2,null],[11,"next","","",3,{"inputs":[{"name":"neighbors"}],"output":{"name":"option"}}],[11,"size_hint","","",3,null],[11,"next_back","","",3,{"inputs":[{"name":"neighbors"}],"output":{"name":"option"}}],[11,"clone","","",3,{"inputs":[{"name":"neighbors"}],"output":{"name":"self"}}],[11,"next","","",4,{"inputs":[{"name":"edges"}],"output":{"name":"option"}}],[11,"next","","",5,{"inputs":[{"name":"alledges"}],"output":{"name":"option"}}],[11,"index","","",1,null],[11,"index_mut","","",1,null],[11,"default","","",1,{"inputs":[{"name":"graphmap"}],"output":{"name":"self"}}],[11,"clone","","",6,{"inputs":[{"name":"ptr"}],"output":{"name":"self"}}],[11,"eq","","Ptr compares by pointer equality, i.e if they point to the same value",6,{"inputs":[{"name":"ptr"},{"name":"ptr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"ptr"},{"name":"ptr"}],"output":{"name":"option"}}],[11,"cmp","","Ptr is ordered by pointer value, i.e. an arbitrary but stable and total order.",6,{"inputs":[{"name":"ptr"},{"name":"ptr"}],"output":{"name":"ordering"}}],[11,"deref","","",6,{"inputs":[{"name":"ptr"}],"output":{"name":"t"}}],[11,"hash","","",6,{"inputs":[{"name":"ptr"},{"name":"h"}],"output":null}],[11,"fmt","","",6,{"inputs":[{"name":"ptr"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"graph","petgraph","`Graph<N, E, Ty, Ix>` is a graph datastructure using an adjacency list representation.",null,null],[3,"NodeIndex","petgraph::graph","Node identifier.",null,null],[3,"EdgeIndex","","Edge identifier.",null,null],[3,"Node","","The graph's node type.",null,null],[12,"weight","","Associated node data.",7,null],[3,"Edge","","The graph's edge type.",null,null],[12,"weight","","Associated edge data.",8,null],[3,"Graph","","`Graph<N, E, Ty, Ix>` is a graph datastructure using an adjacency list representation.",null,null],[3,"Externals","","An iterator over either the nodes without edges to them or from them.",null,null],[3,"Neighbors","","Iterator over the neighbors of a node.",null,null],[3,"Edges","","Iterator over the edges of a node.",null,null],[3,"NodeWeightsMut","","Iterator yielding mutable access to all node weights.",null,null],[3,"EdgeWeightsMut","","Iterator yielding mutable access to all edge weights.",null,null],[3,"WalkNeighbors","","A “walker” object that can be used to step through the edge list of a node.",null,null],[3,"WalkEdges","","**Deprecated.**",null,null],[3,"NodeIndices","","Iterator over the node indices of a graph.",null,null],[3,"EdgeIndices","","Iterator over the edge indices of a graph.",null,null],[5,"node_index","","Short version of `NodeIndex::new`",null,{"inputs":[{"name":"usize"}],"output":{"name":"nodeindex"}}],[5,"edge_index","","Short version of `EdgeIndex::new`",null,{"inputs":[{"name":"usize"}],"output":{"name":"edgeindex"}}],[6,"DefIndex","","The default integer type for node and edge indices in `Graph`.\n`u32` is the default to reduce the size of the graph's data and improve\nperformance in the common case.",null,null],[8,"IndexType","","Trait for the unsigned integer type used for node and edge indices.",null,null],[10,"new","","",9,{"inputs":[{"name":"indextype"},{"name":"usize"}],"output":{"name":"self"}}],[10,"index","","",9,{"inputs":[{"name":"indextype"}],"output":{"name":"usize"}}],[10,"max","","",9,{"inputs":[{"name":"indextype"}],"output":{"name":"self"}}],[8,"GraphIndex","","A  `GraphIndex` is a node or edge index.",null,null],[11,"hash","","",10,null],[11,"cmp","","",10,{"inputs":[{"name":"nodeindex"},{"name":"nodeindex"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",10,{"inputs":[{"name":"nodeindex"},{"name":"nodeindex"}],"output":{"name":"option"}}],[11,"lt","","",10,{"inputs":[{"name":"nodeindex"},{"name":"nodeindex"}],"output":{"name":"bool"}}],[11,"le","","",10,{"inputs":[{"name":"nodeindex"},{"name":"nodeindex"}],"output":{"name":"bool"}}],[11,"gt","","",10,{"inputs":[{"name":"nodeindex"},{"name":"nodeindex"}],"output":{"name":"bool"}}],[11,"ge","","",10,{"inputs":[{"name":"nodeindex"},{"name":"nodeindex"}],"output":{"name":"bool"}}],[11,"eq","","",10,{"inputs":[{"name":"nodeindex"},{"name":"nodeindex"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"nodeindex"},{"name":"nodeindex"}],"output":{"name":"bool"}}],[11,"fmt","","",10,{"inputs":[{"name":"nodeindex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"nodeindex"}],"output":{"name":"nodeindex"}}],[11,"new","","",10,{"inputs":[{"name":"nodeindex"},{"name":"usize"}],"output":{"name":"self"}}],[11,"index","","",10,{"inputs":[{"name":"nodeindex"}],"output":{"name":"usize"}}],[11,"end","","",10,{"inputs":[{"name":"nodeindex"}],"output":{"name":"self"}}],[11,"from","","",10,{"inputs":[{"name":"nodeindex"},{"name":"ix"}],"output":{"name":"self"}}],[11,"hash","","",11,null],[11,"cmp","","",11,{"inputs":[{"name":"edgeindex"},{"name":"edgeindex"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",11,{"inputs":[{"name":"edgeindex"},{"name":"edgeindex"}],"output":{"name":"option"}}],[11,"lt","","",11,{"inputs":[{"name":"edgeindex"},{"name":"edgeindex"}],"output":{"name":"bool"}}],[11,"le","","",11,{"inputs":[{"name":"edgeindex"},{"name":"edgeindex"}],"output":{"name":"bool"}}],[11,"gt","","",11,{"inputs":[{"name":"edgeindex"},{"name":"edgeindex"}],"output":{"name":"bool"}}],[11,"ge","","",11,{"inputs":[{"name":"edgeindex"},{"name":"edgeindex"}],"output":{"name":"bool"}}],[11,"eq","","",11,{"inputs":[{"name":"edgeindex"},{"name":"edgeindex"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"edgeindex"},{"name":"edgeindex"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"edgeindex"}],"output":{"name":"edgeindex"}}],[11,"new","","",11,{"inputs":[{"name":"edgeindex"},{"name":"usize"}],"output":{"name":"self"}}],[11,"index","","",11,{"inputs":[{"name":"edgeindex"}],"output":{"name":"usize"}}],[11,"end","","An invalid `EdgeIndex` used to denote absence of an edge, for example\nto end an adjacency list.",11,{"inputs":[{"name":"edgeindex"}],"output":{"name":"self"}}],[11,"fmt","","",11,{"inputs":[{"name":"edgeindex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"node"}],"output":{"name":"node"}}],[11,"fmt","","",7,{"inputs":[{"name":"node"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next_edge","","Accessor for data structure internals: the first edge in the given direction.",7,{"inputs":[{"name":"node"},{"name":"edgedirection"}],"output":{"name":"edgeindex"}}],[11,"clone","","",8,{"inputs":[{"name":"edge"}],"output":{"name":"edge"}}],[11,"fmt","","",8,{"inputs":[{"name":"edge"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next_edge","","Accessor for data structure internals: the next edge for the given direction.",8,{"inputs":[{"name":"edge"},{"name":"edgedirection"}],"output":{"name":"edgeindex"}}],[11,"source","","Return the source node index.",8,{"inputs":[{"name":"edge"}],"output":{"name":"nodeindex"}}],[11,"target","","Return the target node index.",8,{"inputs":[{"name":"edge"}],"output":{"name":"nodeindex"}}],[11,"clone","","",12,{"inputs":[{"name":"graph"}],"output":{"name":"self"}}],[11,"fmt","","",12,{"inputs":[{"name":"graph"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `Graph` with directed edges.",12,{"inputs":[{"name":"graph"}],"output":{"name":"self"}}],[11,"new_undirected","","Create a new `Graph` with undirected edges.",12,{"inputs":[{"name":"graph"}],"output":{"name":"self"}}],[11,"with_capacity","","Create a new `Graph` with estimated capacity.",12,{"inputs":[{"name":"graph"},{"name":"usize"},{"name":"usize"}],"output":{"name":"self"}}],[11,"capacity","","Return the current node and edge capacity of the graph.",12,null],[11,"node_count","","Return the number of nodes (vertices) in the graph.",12,{"inputs":[{"name":"graph"}],"output":{"name":"usize"}}],[11,"edge_count","","Return the number of edges in the graph.",12,{"inputs":[{"name":"graph"}],"output":{"name":"usize"}}],[11,"is_directed","","Whether the graph has directed edges or not.",12,{"inputs":[{"name":"graph"}],"output":{"name":"bool"}}],[11,"add_node","","Add a node (also called vertex) with associated data `weight` to the graph.",12,{"inputs":[{"name":"graph"},{"name":"n"}],"output":{"name":"nodeindex"}}],[11,"node_weight","","Access the weight for node `a`.",12,{"inputs":[{"name":"graph"},{"name":"nodeindex"}],"output":{"name":"option"}}],[11,"node_weight_mut","","Access the weight for node `a`, mutably.",12,{"inputs":[{"name":"graph"},{"name":"nodeindex"}],"output":{"name":"option"}}],[11,"add_edge","","Add an edge from `a` to `b` to the graph, with its associated\ndata `weight`.",12,{"inputs":[{"name":"graph"},{"name":"nodeindex"},{"name":"nodeindex"},{"name":"e"}],"output":{"name":"edgeindex"}}],[11,"update_edge","","Add or update an edge from `a` to `b`.\nIf the edge already exists, its weight is updated.",12,{"inputs":[{"name":"graph"},{"name":"nodeindex"},{"name":"nodeindex"},{"name":"e"}],"output":{"name":"edgeindex"}}],[11,"edge_weight","","Access the weight for edge `e`.",12,{"inputs":[{"name":"graph"},{"name":"edgeindex"}],"output":{"name":"option"}}],[11,"edge_weight_mut","","Access the weight for edge `e`, mutably.",12,{"inputs":[{"name":"graph"},{"name":"edgeindex"}],"output":{"name":"option"}}],[11,"edge_endpoints","","Access the source and target nodes for `e`.",12,{"inputs":[{"name":"graph"},{"name":"edgeindex"}],"output":{"name":"option"}}],[11,"remove_node","","Remove `a` from the graph if it exists, and return its weight.\nIf it doesn't exist in the graph, return `None`.",12,{"inputs":[{"name":"graph"},{"name":"nodeindex"}],"output":{"name":"option"}}],[11,"remove_edge","","Remove an edge and return its edge weight, or `None` if it didn't exist.",12,{"inputs":[{"name":"graph"},{"name":"edgeindex"}],"output":{"name":"option"}}],[11,"neighbors","","Return an iterator of all nodes with an edge starting from `a`.",12,{"inputs":[{"name":"graph"},{"name":"nodeindex"}],"output":{"name":"neighbors"}}],[11,"neighbors_directed","","Return an iterator of all neighbors that have an edge between them and `a`,\nin the specified direction.\nIf the graph's edges are undirected, this is equivalent to *.neighbors(a)*.",12,{"inputs":[{"name":"graph"},{"name":"nodeindex"},{"name":"edgedirection"}],"output":{"name":"neighbors"}}],[11,"neighbors_undirected","","Return an iterator of all neighbors that have an edge between them and `a`,\nin either direction.\nIf the graph's edges are undirected, this is equivalent to *.neighbors(a)*.",12,{"inputs":[{"name":"graph"},{"name":"nodeindex"}],"output":{"name":"neighbors"}}],[11,"edges","","Return an iterator over the neighbors of node `a`, paired with their respective edge\nweights.",12,{"inputs":[{"name":"graph"},{"name":"nodeindex"}],"output":{"name":"edges"}}],[11,"edges_directed","","Return an iterator of all neighbors that have an edge between them and `a`,\nin the specified direction, paired with the respective edge weights.",12,{"inputs":[{"name":"graph"},{"name":"nodeindex"},{"name":"edgedirection"}],"output":{"name":"edges"}}],[11,"find_edge","","Lookup an edge from `a` to `b`.",12,{"inputs":[{"name":"graph"},{"name":"nodeindex"},{"name":"nodeindex"}],"output":{"name":"option"}}],[11,"find_edge_undirected","","Lookup an edge between `a` and `b`, in either direction.",12,{"inputs":[{"name":"graph"},{"name":"nodeindex"},{"name":"nodeindex"}],"output":{"name":"option"}}],[11,"externals","","Return an iterator over either the nodes without edges to them\n(`Incoming`) or from them (`Outgoing`).",12,{"inputs":[{"name":"graph"},{"name":"edgedirection"}],"output":{"name":"externals"}}],[11,"node_indices","","Return an iterator over the node indices of the graph",12,{"inputs":[{"name":"graph"}],"output":{"name":"nodeindices"}}],[11,"node_weights_mut","","Return an iterator yielding mutable access to all node weights.",12,{"inputs":[{"name":"graph"}],"output":{"name":"nodeweightsmut"}}],[11,"edge_indices","","Return an iterator over the edge indices of the graph",12,{"inputs":[{"name":"graph"}],"output":{"name":"edgeindices"}}],[11,"edge_weights_mut","","Return an iterator yielding mutable access to all edge weights.",12,{"inputs":[{"name":"graph"}],"output":{"name":"edgeweightsmut"}}],[11,"raw_nodes","","Access the internal node array.",12,null],[11,"raw_edges","","Access the internal edge array.",12,null],[11,"first_edge","","Accessor for data structure internals: the first edge in the given direction.",12,{"inputs":[{"name":"graph"},{"name":"nodeindex"},{"name":"edgedirection"}],"output":{"name":"option"}}],[11,"next_edge","","Accessor for data structure internals: the next edge for the given direction.",12,{"inputs":[{"name":"graph"},{"name":"edgeindex"},{"name":"edgedirection"}],"output":{"name":"option"}}],[11,"walk_edges_directed","","**Deprecated:** Use [`.neighbors_directed(a, dir).detach()`][1] instead.",12,{"inputs":[{"name":"graph"},{"name":"nodeindex"},{"name":"edgedirection"}],"output":{"name":"walkedges"}}],[11,"index_twice_mut","","Index the `Graph` by two indices, any combination of\nnode or edge indices is fine.",12,null],[11,"reverse","","Reverse the direction of all edges",12,{"inputs":[{"name":"graph"}],"output":null}],[11,"clear","","Remove all nodes and edges",12,{"inputs":[{"name":"graph"}],"output":null}],[11,"clear_edges","","Remove all edges",12,{"inputs":[{"name":"graph"}],"output":null}],[11,"retain_nodes","","Keep all nodes that return `true` from the `visit` closure,\nremove the others.",12,{"inputs":[{"name":"graph"},{"name":"f"}],"output":null}],[11,"retain_edges","","Keep all edges that return `true` from the `visit` closure,\nremove the others.",12,{"inputs":[{"name":"graph"},{"name":"f"}],"output":null}],[11,"from_edges","","Create a new `Graph` from an iterable of edges.",12,{"inputs":[{"name":"graph"},{"name":"i"}],"output":{"name":"self"}}],[11,"extend_with_edges","","Extend the graph from an iterable of edges.",12,{"inputs":[{"name":"graph"},{"name":"i"}],"output":null}],[11,"map","","Create a new `Graph` by mapping node and edge weights.",12,{"inputs":[{"name":"graph"},{"name":"f"},{"name":"g"}],"output":{"name":"graph"}}],[11,"filter_map","","Create a new `Graph` by mapping nodes and edges.\nA node or edge may be mapped to `None` to exclude it from\nthe resulting graph.",12,{"inputs":[{"name":"graph"},{"name":"f"},{"name":"g"}],"output":{"name":"graph"}}],[11,"into_edge_type","","Convert the graph into either undirected or directed. No edge adjustments\nare done, so you may want to go over the result to remove or add edges.",12,{"inputs":[{"name":"graph"}],"output":{"name":"graph"}}],[11,"next","","",13,{"inputs":[{"name":"externals"}],"output":{"name":"option"}}],[11,"next","","",14,{"inputs":[{"name":"neighbors"}],"output":{"name":"option"}}],[11,"clone","","",14,{"inputs":[{"name":"neighbors"}],"output":{"name":"self"}}],[11,"detach","","Return a “walker” object that can be used to step through the\nneighbors and edges from the origin node.",14,{"inputs":[{"name":"neighbors"}],"output":{"name":"walkneighbors"}}],[11,"next","","",15,{"inputs":[{"name":"edges"}],"output":{"name":"option"}}],[11,"clone","","",15,{"inputs":[{"name":"edges"}],"output":{"name":"self"}}],[11,"next","","",16,{"inputs":[{"name":"nodeweightsmut"}],"output":{"name":"option"}}],[11,"size_hint","","",16,null],[11,"next","","",17,{"inputs":[{"name":"edgeweightsmut"}],"output":{"name":"option"}}],[11,"size_hint","","",17,null],[11,"index","","",12,{"inputs":[{"name":"graph"},{"name":"nodeindex"}],"output":{"name":"n"}}],[11,"index_mut","","",12,{"inputs":[{"name":"graph"},{"name":"nodeindex"}],"output":{"name":"n"}}],[11,"index","","",12,{"inputs":[{"name":"graph"},{"name":"edgeindex"}],"output":{"name":"e"}}],[11,"index_mut","","",12,{"inputs":[{"name":"graph"},{"name":"edgeindex"}],"output":{"name":"e"}}],[11,"default","","",12,{"inputs":[{"name":"graph"}],"output":{"name":"self"}}],[11,"index","","",10,{"inputs":[{"name":"nodeindex"}],"output":{"name":"usize"}}],[11,"is_node_index","","",10,{"inputs":[{"name":"nodeindex"}],"output":{"name":"bool"}}],[11,"index","","",11,{"inputs":[{"name":"edgeindex"}],"output":{"name":"usize"}}],[11,"is_node_index","","",11,{"inputs":[{"name":"edgeindex"}],"output":{"name":"bool"}}],[11,"clone","","",18,{"inputs":[{"name":"walkneighbors"}],"output":{"name":"self"}}],[11,"next","","Step to the next edge and its endpoint node in the walk for graph `g`.",18,{"inputs":[{"name":"walkneighbors"},{"name":"graph"}],"output":{"name":"option"}}],[11,"next_node","","",18,{"inputs":[{"name":"walkneighbors"},{"name":"graph"}],"output":{"name":"option"}}],[11,"next_edge","","",18,{"inputs":[{"name":"walkneighbors"},{"name":"graph"}],"output":{"name":"option"}}],[11,"fmt","","",19,{"inputs":[{"name":"walkedges"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"walkedges"}],"output":{"name":"walkedges"}}],[11,"next","","Fetch the next edge index in the walk for graph `g`.",19,{"inputs":[{"name":"walkedges"},{"name":"graph"}],"output":{"name":"option"}}],[11,"next_neighbor","","Fetch the next edge index and the next node index in the walk for graph `g`.",19,{"inputs":[{"name":"walkedges"},{"name":"graph"}],"output":{"name":"option"}}],[11,"fmt","","",20,{"inputs":[{"name":"nodeindices"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"nodeindices"}],"output":{"name":"nodeindices"}}],[11,"next","","",20,{"inputs":[{"name":"nodeindices"}],"output":{"name":"option"}}],[11,"size_hint","","",20,null],[11,"next_back","","",20,{"inputs":[{"name":"nodeindices"}],"output":{"name":"option"}}],[11,"fmt","","",21,{"inputs":[{"name":"edgeindices"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"edgeindices"}],"output":{"name":"edgeindices"}}],[11,"next","","",21,{"inputs":[{"name":"edgeindices"}],"output":{"name":"option"}}],[11,"size_hint","","",21,null],[11,"next_back","","",21,{"inputs":[{"name":"edgeindices"}],"output":{"name":"option"}}],[0,"dot","petgraph","Simple graphviz dot file format output.",null,null],[3,"Dot","petgraph::dot","`Dot` implements output to graphviz .dot format for a graph.",null,null],[4,"Config","","`Dot` configuration.",null,null],[13,"NodeIndexLabel","","Use indices for node labels.",22,null],[13,"EdgeIndexLabel","","Use indices for edge labels.",22,null],[13,"EdgeNoLabel","","Use no edge labels.",22,null],[11,"new","","Create a `Dot` formatting wrapper with default configuration.",23,{"inputs":[{"name":"dot"},{"name":"g"}],"output":{"name":"self"}}],[11,"with_config","","Create a `Dot` formatting wrapper with custom configuration.",23,null],[11,"eq","","",22,{"inputs":[{"name":"config"},{"name":"config"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"config"},{"name":"config"}],"output":{"name":"bool"}}],[11,"fmt","","",22,{"inputs":[{"name":"config"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",23,{"inputs":[{"name":"dot"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",23,{"inputs":[{"name":"dot"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",23,{"inputs":[{"name":"dot"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",23,{"inputs":[{"name":"dot"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"visit","petgraph","Graph visitor algorithms.",null,null],[3,"AsUndirected","petgraph::visit","Wrapper type for walking the graph as if it is undirected",null,null],[3,"Reversed","","Wrapper type for walking the graph as if all edges are reversed.",null,null],[3,"Dfs","","A depth first search (DFS) of a graph.",null,null],[12,"stack","","The stack of nodes to visit",24,null],[12,"discovered","","The map of discovered nodes",24,null],[3,"DfsIter","","An iterator for a depth first traversal of a graph.",null,null],[3,"Bfs","","A breadth first search (BFS) of a graph.",null,null],[12,"stack","","The queue of nodes to visit",25,null],[12,"discovered","","The map of discovered nodes",25,null],[3,"BfsIter","","An iterator for a breadth first traversal of a graph.",null,null],[3,"Topo","","A topological order traversal for a graph.",null,null],[8,"Graphlike","","Base trait for graphs that defines the node identifier.",null,null],[16,"NodeId","","",26,null],[8,"NeighborIter","","NeighborIter gives access to the neighbors iterator.",null,null],[16,"Iter","","",27,null],[10,"neighbors","","Return an iterator that visits all neighbors of the node **n**.",27,{"inputs":[{"name":"neighboriter"},{"name":"nodeid"}],"output":{"name":"iter"}}],[8,"NeighborsDirected","","NeighborsDirected gives access to neighbors of both `Incoming` and `Outgoing`\nedges of a node.",null,null],[16,"NeighborsDirected","","",28,null],[10,"neighbors_directed","","Return an iterator that visits all neighbors of the node **n**.",28,{"inputs":[{"name":"neighborsdirected"},{"name":"nodeid"},{"name":"edgedirection"}],"output":{"name":"neighborsdirected"}}],[8,"Externals","","Externals returns an iterator of all nodes that either have either no\nincoming or no outgoing edges.",null,null],[16,"Externals","","",29,null],[10,"externals","","Return an iterator of all nodes with no edges in the given direction",29,{"inputs":[{"name":"externals"},{"name":"edgedirection"}],"output":{"name":"externals"}}],[8,"VisitMap","","A mapping for storing the visited status for NodeId `N`.",null,null],[10,"visit","","Return **true** if the value is not already present.",30,{"inputs":[{"name":"visitmap"},{"name":"n"}],"output":{"name":"bool"}}],[10,"is_visited","","",30,{"inputs":[{"name":"visitmap"},{"name":"n"}],"output":{"name":"bool"}}],[8,"Visitable","","A graph that can create a visitor map.",null,null],[16,"Map","","",31,null],[10,"visit_map","","",31,{"inputs":[{"name":"visitable"}],"output":{"name":"map"}}],[8,"Revisitable","","A graph that can reset and resize its visitor map.",null,null],[10,"reset_map","","",32,{"inputs":[{"name":"revisitable"},{"name":"map"}],"output":null}],[8,"GetAdjacencyMatrix","","Create or access the adjacency matrix of a graph",null,null],[16,"AdjMatrix","","",33,null],[10,"adjacency_matrix","","",33,{"inputs":[{"name":"getadjacencymatrix"}],"output":{"name":"adjmatrix"}}],[10,"is_adjacent","","",33,{"inputs":[{"name":"getadjacencymatrix"},{"name":"adjmatrix"},{"name":"nodeid"},{"name":"nodeid"}],"output":{"name":"bool"}}],[11,"neighbors","petgraph::graph","",12,{"inputs":[{"name":"graph"},{"name":"nodeindex"}],"output":{"name":"neighbors"}}],[11,"neighbors","petgraph::graphmap","",1,{"inputs":[{"name":"graphmap"},{"name":"n"}],"output":{"name":"neighbors"}}],[11,"neighbors","petgraph::visit","",34,{"inputs":[{"name":"asundirected"},{"name":"nodeindex"}],"output":{"name":"neighbors"}}],[11,"neighbors","","",35,{"inputs":[{"name":"reversed"},{"name":"nodeindex"}],"output":{"name":"neighbors"}}],[11,"neighbors_directed","petgraph::graph","",12,{"inputs":[{"name":"graph"},{"name":"nodeindex"},{"name":"edgedirection"}],"output":{"name":"neighbors"}}],[11,"neighbors_directed","petgraph::visit","",35,{"inputs":[{"name":"reversed"},{"name":"nodeid"},{"name":"edgedirection"}],"output":{"name":"neighborsdirected"}}],[11,"externals","petgraph::graph","",12,{"inputs":[{"name":"graph"},{"name":"edgedirection"}],"output":{"name":"externals"}}],[11,"externals","petgraph::visit","",35,{"inputs":[{"name":"reversed"},{"name":"edgedirection"}],"output":{"name":"externals"}}],[11,"visit","fixedbitset","",36,{"inputs":[{"name":"fixedbitset"},{"name":"nodeindex"}],"output":{"name":"bool"}}],[11,"is_visited","","",36,{"inputs":[{"name":"fixedbitset"},{"name":"nodeindex"}],"output":{"name":"bool"}}],[11,"visit","","",36,{"inputs":[{"name":"fixedbitset"},{"name":"edgeindex"}],"output":{"name":"bool"}}],[11,"is_visited","","",36,{"inputs":[{"name":"fixedbitset"},{"name":"edgeindex"}],"output":{"name":"bool"}}],[11,"visit","std::collections::hash::set","",37,{"inputs":[{"name":"hashset"},{"name":"n"}],"output":{"name":"bool"}}],[11,"is_visited","","",37,{"inputs":[{"name":"hashset"},{"name":"n"}],"output":{"name":"bool"}}],[11,"visit_map","petgraph::graph","",12,{"inputs":[{"name":"graph"}],"output":{"name":"fixedbitset"}}],[11,"reset_map","","",12,{"inputs":[{"name":"graph"},{"name":"map"}],"output":null}],[11,"reset_map","petgraph::visit","",35,{"inputs":[{"name":"reversed"},{"name":"map"}],"output":null}],[11,"visit_map","petgraph::graphmap","",1,{"inputs":[{"name":"graphmap"}],"output":{"name":"hashset"}}],[11,"reset_map","","",1,{"inputs":[{"name":"graphmap"},{"name":"map"}],"output":null}],[11,"visit_map","petgraph::visit","",34,{"inputs":[{"name":"asundirected"}],"output":{"name":"map"}}],[11,"visit_map","","",35,{"inputs":[{"name":"reversed"}],"output":{"name":"map"}}],[11,"adjacency_matrix","petgraph::graphmap","",1,{"inputs":[{"name":"graphmap"}],"output":null}],[11,"is_adjacent","","",1,null],[11,"fmt","petgraph::visit","",24,{"inputs":[{"name":"dfs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"dfs"}],"output":{"name":"dfs"}}],[11,"new","","Create a new **Dfs**, using the graph's visitor map, and put **start**\nin the stack of nodes to visit.",24,{"inputs":[{"name":"dfs"},{"name":"g"},{"name":"n"}],"output":{"name":"self"}}],[11,"empty","","Create a new **Dfs** using the graph's visitor map, and no stack.",24,{"inputs":[{"name":"dfs"},{"name":"g"}],"output":{"name":"self"}}],[11,"move_to","","Keep the discovered map, but clear the visit stack and restart\nthe dfs from a particular node.",24,{"inputs":[{"name":"dfs"},{"name":"n"}],"output":null}],[11,"next","","Return the next node in the dfs, or **None** if the traversal is done.",24,{"inputs":[{"name":"dfs"},{"name":"g"}],"output":{"name":"option"}}],[11,"new","","",38,{"inputs":[{"name":"dfsiter"},{"name":"g"},{"name":"nodeid"}],"output":{"name":"self"}}],[11,"move_to","","Keep the discovered map, but clear the visit stack and restart\nthe DFS traversal from a particular node.",38,{"inputs":[{"name":"dfsiter"},{"name":"nodeid"}],"output":null}],[11,"next","","",38,{"inputs":[{"name":"dfsiter"}],"output":{"name":"option"}}],[11,"size_hint","","",38,null],[11,"clone","","",38,{"inputs":[{"name":"dfsiter"}],"output":{"name":"self"}}],[11,"clone","","",25,{"inputs":[{"name":"bfs"}],"output":{"name":"bfs"}}],[11,"new","","Create a new **Bfs**, using the graph's visitor map, and put **start**\nin the stack of nodes to visit.",25,{"inputs":[{"name":"bfs"},{"name":"g"},{"name":"n"}],"output":{"name":"self"}}],[11,"next","","Return the next node in the dfs, or **None** if the traversal is done.",25,{"inputs":[{"name":"bfs"},{"name":"g"}],"output":{"name":"option"}}],[11,"new","","",39,{"inputs":[{"name":"bfsiter"},{"name":"g"},{"name":"nodeid"}],"output":{"name":"self"}}],[11,"next","","",39,{"inputs":[{"name":"bfsiter"}],"output":{"name":"option"}}],[11,"size_hint","","",39,null],[11,"clone","","",39,{"inputs":[{"name":"bfsiter"}],"output":{"name":"self"}}],[11,"clone","","",40,{"inputs":[{"name":"topo"}],"output":{"name":"topo"}}],[11,"new","","Create a new **Topo**, using the graph's visitor map, and put all\ninitial nodes in the to visit list.",40,{"inputs":[{"name":"topo"},{"name":"g"}],"output":{"name":"self"}}],[11,"reset","","Clear visited state, and put all initial nodes in the to visit list.",40,{"inputs":[{"name":"topo"},{"name":"g"}],"output":null}],[11,"next","","Return the next node in the current topological order traversal, or\n`None` if the traversal is at end.",40,{"inputs":[{"name":"topo"},{"name":"g"}],"output":{"name":"option"}}],[0,"unionfind","petgraph","`UnionFind<K>` is a disjoint-set data structure.",null,null],[3,"UnionFind","petgraph::unionfind","`UnionFind<K>` is a disjoint-set data structure. It tracks set membership of *n* elements\nindexed from *0* to *n - 1*. The scalar type is `K` which must be an unsigned integer type.",null,null],[11,"clone","","",41,{"inputs":[{"name":"unionfind"}],"output":{"name":"unionfind"}}],[11,"fmt","","",41,{"inputs":[{"name":"unionfind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `UnionFind` of `n` disjoint sets.",41,{"inputs":[{"name":"unionfind"},{"name":"usize"}],"output":{"name":"self"}}],[11,"find","","Return the representative for `x`.",41,{"inputs":[{"name":"unionfind"},{"name":"k"}],"output":{"name":"k"}}],[11,"find_mut","","Return the representative for `x`.",41,{"inputs":[{"name":"unionfind"},{"name":"k"}],"output":{"name":"k"}}],[11,"union","","Unify the two sets containing `x` and `y`.",41,{"inputs":[{"name":"unionfind"},{"name":"k"},{"name":"k"}],"output":{"name":"bool"}}],[11,"into_labeling","","Return a vector mapping each element to its representative.",41,{"inputs":[{"name":"unionfind"}],"output":{"name":"vec"}}],[11,"adjacency_matrix","petgraph::graph","",12,{"inputs":[{"name":"graph"}],"output":{"name":"fixedbitset"}}],[11,"is_adjacent","","",12,{"inputs":[{"name":"graph"},{"name":"fixedbitset"},{"name":"nodeindex"},{"name":"nodeindex"}],"output":{"name":"bool"}}],[8,"EdgeType","petgraph","A graph's edge type determines whether is has directed edges or not.",null,null],[10,"is_directed","","",42,{"inputs":[{"name":"edgetype"}],"output":{"name":"bool"}}],[8,"IntoWeightedEdge","","Convert an element like `(i, j)` or `(i, j, w)` into\na triple of source, target, edge weight.",null,null],[16,"NodeId","","",43,null],[10,"into_weighted_edge","","",43,null],[11,"hash","","",0,null],[11,"cmp","","",0,{"inputs":[{"name":"edgedirection"},{"name":"edgedirection"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"edgedirection"},{"name":"edgedirection"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"edgedirection"},{"name":"edgedirection"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"edgedirection"},{"name":"edgedirection"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"edgedirection"},{"name":"edgedirection"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"edgedirection"},{"name":"edgedirection"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"edgedirection"},{"name":"edgedirection"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"edgedirection"},{"name":"edgedirection"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"edgedirection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"edgedirection"}],"output":{"name":"edgedirection"}}],[11,"opposite","","Return the opposite `EdgeDirection`.",0,{"inputs":[{"name":"edgedirection"}],"output":{"name":"edgedirection"}}],[11,"fmt","","",44,{"inputs":[{"name":"directed"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",44,{"inputs":[{"name":"directed"}],"output":{"name":"directed"}}],[11,"fmt","","",45,{"inputs":[{"name":"undirected"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",45,{"inputs":[{"name":"undirected"}],"output":{"name":"undirected"}}],[11,"is_directed","","",44,{"inputs":[{"name":"directed"}],"output":{"name":"bool"}}],[11,"is_directed","","",45,{"inputs":[{"name":"undirected"}],"output":{"name":"bool"}}]],"paths":[[4,"EdgeDirection"],[3,"GraphMap"],[3,"Nodes"],[3,"Neighbors"],[3,"Edges"],[3,"AllEdges"],[3,"Ptr"],[3,"Node"],[3,"Edge"],[8,"IndexType"],[3,"NodeIndex"],[3,"EdgeIndex"],[3,"Graph"],[3,"Externals"],[3,"Neighbors"],[3,"Edges"],[3,"NodeWeightsMut"],[3,"EdgeWeightsMut"],[3,"WalkNeighbors"],[3,"WalkEdges"],[3,"NodeIndices"],[3,"EdgeIndices"],[4,"Config"],[3,"Dot"],[3,"Dfs"],[3,"Bfs"],[8,"Graphlike"],[8,"NeighborIter"],[8,"NeighborsDirected"],[8,"Externals"],[8,"VisitMap"],[8,"Visitable"],[8,"Revisitable"],[8,"GetAdjacencyMatrix"],[3,"AsUndirected"],[3,"Reversed"],[3,"FixedBitSet"],[3,"HashSet"],[3,"DfsIter"],[3,"BfsIter"],[3,"Topo"],[3,"UnionFind"],[8,"EdgeType"],[8,"IntoWeightedEdge"],[4,"Directed"],[4,"Undirected"]]};
searchIndex['shared_library'] = {"items":[[0,"","shared_library","",null,null],[4,"LoadingError","","Error that can happen while loading the shared library.",null,null],[13,"LibraryNotFound","","",0,null],[12,"descr","shared_library::LoadingError","",0,null],[13,"SymbolNotFound","shared_library","One of the symbols could not be found in the library.",0,null],[12,"symbol","shared_library::LoadingError","The symbol.",0,null],[0,"dynamic_library","shared_library","Dynamic library facilities.",null,null],[3,"DynamicLibrary","shared_library::dynamic_library","",null,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",1,{"inputs":[{"name":"mutex"},{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this mutex, returning the underlying data.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"from","alloc::boxed","",2,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"box"},{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",3,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"str"}}],[11,"description","","",4,{"inputs":[{"name":"utf8error"}],"output":{"name":"str"}}],[11,"description","core::num","",5,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"description","core::num::dec2flt","",6,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"str"}}],[11,"description","collections::string","",7,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"str"}}],[11,"description","","",8,{"inputs":[{"name":"fromutf16error"}],"output":{"name":"str"}}],[11,"is","shared_library::dynamic_library","Returns true if the boxed type is the same as `T`",9,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",9,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",9,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",9,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"next","std::ascii","",10,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",10,null],[11,"next_back","","",10,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"shl","core::num","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"clone","std::thread::local","",12,{"inputs":[{"name":"localkeystate"}],"output":{"name":"localkeystate"}}],[11,"eq","","",12,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"with","","Acquires a reference to the value in this TLS key.",13,{"inputs":[{"name":"localkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"state","","Query the current state of this key.",13,{"inputs":[{"name":"localkey"}],"output":{"name":"localkeystate"}}],[11,"new","std::thread::local::imp","",14,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"get","","",14,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"set","std::thread::scoped_tls","Inserts a value into this scoped thread local storage slot for a\nduration of a closure.",15,{"inputs":[{"name":"scopedkey"},{"name":"t"},{"name":"f"}],"output":{"name":"r"}}],[11,"with","","Gets a value out of this scoped variable.",15,{"inputs":[{"name":"scopedkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"is_set","","Test whether this TLS key has been `set` for the current thread.",15,{"inputs":[{"name":"scopedkey"}],"output":{"name":"bool"}}],[11,"new","std::thread::scoped_tls::imp","",16,{"inputs":[{"name":"keyinner"}],"output":{"name":"keyinner"}}],[11,"set","","",16,null],[11,"get","","",16,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",17,{"inputs":[{"name":"builder"}],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",17,{"inputs":[{"name":"builder"},{"name":"string"}],"output":{"name":"builder"}}],[11,"stack_size","","Sets the size of the stack for the new thread.",17,{"inputs":[{"name":"builder"},{"name":"usize"}],"output":{"name":"builder"}}],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",17,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"thread"}],"output":{"name":"thread"}}],[11,"unpark","","Atomically makes the handle's token available if it is not already.",18,null],[11,"name","","Gets the thread's name.",18,{"inputs":[{"name":"thread"}],"output":{"name":"option"}}],[11,"fmt","","",18,{"inputs":[{"name":"thread"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",18,{"inputs":[{"name":"thread"},{"name":"option"}],"output":{"name":"thread"}}],[11,"thread","","Extracts a handle to the underlying thread",19,{"inputs":[{"name":"joinhandle"}],"output":{"name":"thread"}}],[11,"join","","Waits for the associated thread to finish.",19,{"inputs":[{"name":"joinhandle"}],"output":{"name":"result"}}],[11,"clone","std::collections::hash::table","",20,{"inputs":[{"name":"rawbucket"}],"output":{"name":"rawbucket"}}],[11,"clone","","",21,{"inputs":[{"name":"bucket"}],"output":{"name":"bucket"}}],[11,"clone","","",22,{"inputs":[{"name":"safehash"}],"output":{"name":"safehash"}}],[11,"eq","","",22,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"inspect","","Peek at the hash value, which is guaranteed to be non-zero.",22,{"inputs":[{"name":"safehash"}],"output":{"name":"u64"}}],[11,"table","","Borrow a reference to the table.",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"table","","Borrow a reference to the table.",24,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",24,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",21,{"inputs":[{"name":"bucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",21,{"inputs":[{"name":"bucket"}],"output":{"name":"usize"}}],[11,"new","","",21,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"safehash"}],"output":{"name":"bucket"}}],[11,"at_index","","",21,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"usize"}],"output":{"name":"bucket"}}],[11,"first","","",21,{"inputs":[{"name":"bucket"},{"name":"m"}],"output":{"name":"bucket"}}],[11,"peek","","Reads a bucket at a given index, returning an enum indicating whether\nit's initialized or not. You need to match on this enum to get\nthe appropriate types to call most of the other functions in\nthis module.",21,{"inputs":[{"name":"bucket"}],"output":{"name":"bucketstate"}}],[11,"next","","Modifies the bucket pointer in place to make it point to the next slot.",21,null],[11,"next","","",24,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",24,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"gap_peek","","",24,{"inputs":[{"name":"emptybucket"}],"output":{"name":"option"}}],[11,"put","","Puts given key and value pair, along with the key's hash,\ninto this bucket in the hashtable. Note how `self` is 'moved' into\nthis function, because this slot will no longer be empty when\nwe return! A `FullBucket` is returned for later use, pointing to\nthe newly-filled slot in the hashtable.",24,{"inputs":[{"name":"emptybucket"},{"name":"safehash"},{"name":"k"},{"name":"v"}],"output":{"name":"fullbucket"}}],[11,"next","","",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"distance","","Get the distance between this bucket and the 'ideal' location\nas determined by the key's hash stored in it.",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"hash","","",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"safehash"}}],[11,"read","","Gets references to the key and value at a given index.",23,null],[11,"take","","Removes this bucket's key and value from the hashtable.",23,null],[11,"replace","","",23,null],[11,"read_mut","","Gets mutable references to the key and value at a given index.",23,null],[11,"into_refs","","Exchange a bucket state for immutable references into the table.\nBecause the underlying reference to the table is also consumed,\nno further changes to the structure of the table are possible;\nin exchange for this, the returned references have a longer lifetime\nthan the references returned by `read()`.",23,null],[11,"into_mut_refs","","This works similarly to `into_refs`, exchanging a bucket state\nfor mutable references into the table.",23,null],[11,"expect_full","","",25,{"inputs":[{"name":"bucketstate"}],"output":{"name":"fullbucket"}}],[11,"full","","",26,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"fullbucket"}}],[11,"shift","","",26,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"option"}}],[11,"new","","Creates a new raw table from a given capacity. All buckets are\ninitially empty.",27,{"inputs":[{"name":"rawtable"},{"name":"usize"}],"output":{"name":"rawtable"}}],[11,"capacity","","The hashtable's capacity, similar to a vector's.",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"size","","The number of elements ever `put` in the hashtable, minus the number\nof elements ever `take`n.",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"iter","","",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"iter"}}],[11,"iter_mut","","",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"itermut"}}],[11,"into_iter","","",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"intoiter"}}],[11,"drain","","",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"drain"}}],[11,"clone","","",28,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"rawbuckets"}}],[11,"next","","",28,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"option"}}],[11,"next","","",29,{"inputs":[{"name":"revmovebuckets"}],"output":{"name":"option"}}],[11,"clone","","",30,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",30,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",30,null],[11,"len","","",30,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",31,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",31,null],[11,"len","","",31,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",32,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",32,null],[11,"len","","",32,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",33,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",33,null],[11,"len","","",33,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"drop","","",33,null],[11,"clone","","",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"rawtable"}}],[11,"drop","","",27,null],[11,"clone","std::collections::hash::map","",34,{"inputs":[{"name":"defaultresizepolicy"}],"output":{"name":"defaultresizepolicy"}}],[11,"clone","","",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"new","","Creates an empty HashMap.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",35,{"inputs":[{"name":"hashmap"},{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hash_state","","Creates an empty hashmap which will use the given hasher to hash keys.",35,{"inputs":[{"name":"hashmap"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",35,{"inputs":[{"name":"hashmap"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",35,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",35,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&'a K`.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"keys"}}],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&'a V`.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"values"}}],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&'a K, &'a V)`.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&'a K, &'a mut V)`.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"itermut"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",35,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"len","","Returns the number of elements in the map.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"drain"}}],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",35,null],[11,"get","","Returns a reference to the value corresponding to the key.",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map.",35,{"inputs":[{"name":"hashmap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",35,{"inputs":[{"name":"hashmap"},{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"fmt","","",35,{"inputs":[{"name":"hashmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"index","","",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"v"}}],[11,"clone","","",36,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",37,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",38,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"intoiter"}}],[11,"next","","",36,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",36,null],[11,"len","","",36,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",39,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",39,null],[11,"len","","",39,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",40,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",40,null],[11,"len","","",40,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",37,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",37,null],[11,"len","","",37,{"inputs":[{"name":"keys"}],"output":{"name":"usize"}}],[11,"next","","",38,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",38,null],[11,"len","","",38,{"inputs":[{"name":"values"}],"output":{"name":"usize"}}],[11,"next","","",41,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",41,null],[11,"len","","",41,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",42,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",42,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",43,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",43,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",43,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry, and returns the entry's old value",43,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value out of the entry, and returns it",43,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it",44,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","","",35,{"inputs":[{"name":"hashmap"},{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",35,null],[11,"extend","","",35,null],[11,"clone","","",45,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",45,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"hasher","","",45,{"inputs":[{"name":"randomstate"}],"output":{"name":"siphasher"}}],[11,"default","","",45,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"get","","",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"take","","",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"replace","","",35,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"option"}}],[11,"clone","std::collections::hash::set","",46,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"new","","Creates an empty HashSet.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",46,{"inputs":[{"name":"hashset"},{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hash_state","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",46,{"inputs":[{"name":"hashset"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",46,{"inputs":[{"name":"hashset"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",46,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",46,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &'a T.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"iter"}}],[11,"difference","","Visit the values representing the difference.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visit the values representing the intersection.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"intersection"}}],[11,"union","","Visit the values representing the union.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"bool"}}],[11,"drain","","Clears the set, returning all elements in an iterator.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"drain"}}],[11,"clear","","Clears the set, removing all values.",46,null],[11,"contains","","Returns `true` if the set contains a value.",46,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",46,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set.",46,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",46,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"option"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",46,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",46,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"fmt","","",46,{"inputs":[{"name":"hashset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",46,{"inputs":[{"name":"hashset"},{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",46,null],[11,"extend","","",46,null],[11,"default","","",46,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"intoiter"}}],[11,"clone","","",47,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",47,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",47,null],[11,"len","","",47,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",48,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",48,null],[11,"len","","",48,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",49,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",49,null],[11,"len","","",49,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"clone","","",50,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"next","","",50,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",50,null],[11,"clone","","",51,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"next","","",51,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",51,null],[11,"clone","","",52,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",52,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",52,null],[11,"clone","","",53,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"next","","",53,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",53,null],[11,"hasher","std::collections::hash::state","",54,{"inputs":[{"name":"defaultstate"}],"output":{"name":"h"}}],[11,"clone","","",54,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"default","","",54,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"clone","collections::linked_list","",55,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",56,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"from","","",57,{"inputs":[{"name":"rawlink"},{"name":"option"}],"output":{"name":"rawlink"}}],[11,"clone","","",57,{"inputs":[{"name":"rawlink"}],"output":{"name":"rawlink"}}],[11,"default","","",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",58,null],[11,"iter","","Provides a forward iterator.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"iter"}}],[11,"iter_mut","","Provides a forward iterator with mutable references.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"itermut"}}],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of the `LinkedList`.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"usize"}}],[11,"clear","","Removes all elements from the `LinkedList`.",58,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_front","","Adds an element first in the list.",58,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_back","","Appends an element to the back of a list",58,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",58,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"linkedlist"}}],[11,"drop","","",58,null],[11,"next","","",55,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",55,null],[11,"next_back","","",55,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",59,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"next_back","","",59,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",59,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",59,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",56,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",56,null],[11,"next_back","","",56,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","",58,{"inputs":[{"name":"linkedlist"},{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"intoiter"}}],[11,"extend","","",58,null],[11,"extend","","",58,null],[11,"eq","","",58,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",58,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"cmp","","",58,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"ordering"}}],[11,"clone","","",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"fmt","","",58,{"inputs":[{"name":"linkedlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",58,null],[11,"clone","collections::binary_heap","",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"clone_from","","",60,null],[11,"default","","",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"fmt","","",60,{"inputs":[{"name":"binaryheap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",60,{"inputs":[{"name":"binaryheap"},{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"from_vec","","Creates a `BinaryHeap` from a vector. This is sometimes called\n`heapifying` the vector.",60,{"inputs":[{"name":"binaryheap"},{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"iter"}}],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",60,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",60,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",60,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"push","","Pushes an item onto the binary heap.",60,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",60,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"t"}}],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",60,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"option"}}],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of the binary heap.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"is_empty","","Checks if the binary heap is empty.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"drain"}}],[11,"clear","","Drops all items from the binary heap.",60,null],[11,"drop","","",61,null],[11,"clone","","",62,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",62,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",62,null],[11,"next_back","","",62,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",63,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"next_back","","",63,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"next","","",64,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"next_back","","",64,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"from","","",60,{"inputs":[{"name":"binaryheap"},{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",65,{"inputs":[{"name":"vec"},{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",60,{"inputs":[{"name":"binaryheap"},{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",60,{"inputs":[{"name":"binaryheap"}],"output":{"name":"intoiter"}}],[11,"extend","","",60,null],[11,"extend","","",60,null],[11,"clone","collections::vec_deque","",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"drop","","",66,null],[11,"default","","",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap","","Swaps elements at indices `i` and `j`.",66,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",66,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",66,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",66,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",66,null],[11,"iter","","Returns a front-to-back iterator.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"itermut"}}],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",66,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",66,null],[11,"len","","Returns the number of elements in the `VecDeque`.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the buffer contains no elements",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items from start to end. The element\nrange is removed even if the iterator is not consumed until the end.",66,{"inputs":[{"name":"vecdeque"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the buffer, removing all values.",66,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"push_front","","Inserts an element first in the sequence.",66,null],[11,"push_back","","Appends an element to the back of a buffer",66,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_back_remove","","deprecated",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_front_remove","","deprecated",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",66,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"split_off","","Splits the collection into two at the given index.",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",66,null],[11,"retain","","Retains only the elements specified by the predicate.",66,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",66,null],[11,"clone","","",67,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",67,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",67,null],[11,"next_back","","",67,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",68,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",68,null],[11,"next_back","","",68,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",69,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",69,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",69,null],[11,"next_back","","",69,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",70,null],[11,"next","","",70,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",70,null],[11,"next_back","","",70,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"eq","","",66,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",66,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"cmp","","",66,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"ordering"}}],[11,"hash","","",66,null],[11,"index","","",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"index_mut","","",66,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"from_iter","","",66,{"inputs":[{"name":"vecdeque"},{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",66,{"inputs":[{"name":"vecdeque"}],"output":{"name":"intoiter"}}],[11,"extend","","",66,null],[11,"extend","","",66,null],[11,"fmt","","",66,{"inputs":[{"name":"vecdeque"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","std::dynamic_lib","",71,null],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",71,{"inputs":[{"name":"dynamiclibrary"},{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process's search path for dynamic libraries",71,null],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",71,null],[11,"envvar","","Returns the environment variable for this process's dynamic library\nsearch path",71,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",71,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"vec"}}],[11,"symbol","","Accesses the value at the symbol of the dynamic library.",71,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}],[11,"next","std::env","",72,{"inputs":[{"name":"vars"}],"output":{"name":"option"}}],[11,"size_hint","","",72,null],[11,"next","","",73,{"inputs":[{"name":"varsos"}],"output":{"name":"option"}}],[11,"size_hint","","",73,null],[11,"clone","","",74,{"inputs":[{"name":"varerror"}],"output":{"name":"varerror"}}],[11,"eq","","",74,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"fmt","","",74,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",74,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",74,{"inputs":[{"name":"varerror"}],"output":{"name":"str"}}],[11,"next","","",75,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",75,null],[11,"fmt","","",76,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",76,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",76,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",77,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",77,null],[11,"len","","",77,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",78,{"inputs":[{"name":"argsos"}],"output":{"name":"option"}}],[11,"size_hint","","",78,null],[11,"len","","",78,{"inputs":[{"name":"argsos"}],"output":{"name":"usize"}}],[11,"clone","std::ffi::c_str","",79,{"inputs":[{"name":"cstring"}],"output":{"name":"cstring"}}],[11,"hash","","",79,null],[11,"cmp","","",79,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",79,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"option"}}],[11,"lt","","",79,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"le","","",79,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"gt","","",79,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ge","","",79,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"eq","","",79,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"hash","","",80,null],[11,"fmt","","",81,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",81,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"ne","","",81,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"clone","","",81,{"inputs":[{"name":"nulerror"}],"output":{"name":"nulerror"}}],[11,"fmt","","",82,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",82,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"ne","","",82,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"clone","","",82,{"inputs":[{"name":"intostringerror"}],"output":{"name":"intostringerror"}}],[11,"new","","Creates a new C-compatible string from a container of bytes.",79,{"inputs":[{"name":"cstring"},{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",79,{"inputs":[{"name":"cstring"},{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_ptr","","Retakes ownership of a CString that was transferred to C.",79,null],[11,"from_raw","","Retakes ownership of a CString that was transferred to C.",79,null],[11,"into_ptr","","Transfers ownership of the string to a C caller.",79,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",79,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",79,{"inputs":[{"name":"cstring"}],"output":{"name":"result"}}],[11,"into_bytes","","Returns the underlying byte buffer.",79,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",79,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",79,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",79,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",80,null],[11,"as_ptr","","Returns the inner pointer to this C string.",80,null],[11,"to_bytes","","Converts this C string to a byte slice.",80,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",80,null],[11,"to_str","","Yields a `&str` slice if the `CStr` contains valid UTF-8.",80,{"inputs":[{"name":"cstr"}],"output":{"name":"result"}}],[11,"to_string_lossy","","Converts a `CStr` into a `Cow<str>`.",80,{"inputs":[{"name":"cstr"}],"output":{"name":"cow"}}],[11,"deref","","",79,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"fmt","","",79,{"inputs":[{"name":"cstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",80,{"inputs":[{"name":"cstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",79,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",81,{"inputs":[{"name":"nulerror"}],"output":{"name":"usize"}}],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",81,{"inputs":[{"name":"nulerror"}],"output":{"name":"vec"}}],[11,"description","","",81,{"inputs":[{"name":"nulerror"}],"output":{"name":"str"}}],[11,"fmt","","",81,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","std::io::error","",83,{"inputs":[{"name":"error"},{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",82,{"inputs":[{"name":"intostringerror"}],"output":{"name":"cstring"}}],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",82,{"inputs":[{"name":"intostringerror"}],"output":{"name":"utf8error"}}],[11,"description","","",82,{"inputs":[{"name":"intostringerror"}],"output":{"name":"str"}}],[11,"fmt","","",82,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",80,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",80,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"option"}}],[11,"cmp","","",80,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"ordering"}}],[11,"to_owned","","",80,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"clone","std::ffi::os_str","",84,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"new","","Constructs a new empty `OsString`.",84,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"from_bytes","","Constructs an `OsString` from a byte sequence.",84,{"inputs":[{"name":"osstring"},{"name":"b"}],"output":{"name":"option"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",84,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",84,{"inputs":[{"name":"osstring"}],"output":{"name":"result"}}],[11,"push","","Extends the string with the given `&OsStr` slice.",84,null],[11,"from","","",84,{"inputs":[{"name":"osstring"},{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",84,{"inputs":[{"name":"osstring"},{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",84,{"inputs":[{"name":"osstring"},{"name":"rangefull"}],"output":{"name":"osstr"}}],[11,"new","","Coerces into an `OsStr` slice.",85,{"inputs":[{"name":"osstr"},{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `OsStr` is valid unicode.",85,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow<str>`.",85,{"inputs":[{"name":"osstr"}],"output":{"name":"cow"}}],[11,"to_os_string","","Copies the slice into an owned `OsString`.",85,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"to_bytes","","Yields this `OsStr` as a byte slice.",85,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_cstring","","Creates a `CString` containing this `OsStr` data.",85,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"deref","","",84,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"fmt","","",84,{"inputs":[{"name":"osstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",84,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","","",84,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",84,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"lt","","",84,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"le","","",84,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"gt","","",84,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"ge","","",84,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",84,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",84,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"ordering"}}],[11,"hash","","",84,null],[11,"eq","","",85,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","","",85,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",85,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"lt","","",85,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"le","","",85,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"gt","","",85,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"ge","","",85,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",85,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",85,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"ordering"}}],[11,"hash","","",85,null],[11,"fmt","","",85,{"inputs":[{"name":"osstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",84,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"to_owned","","",85,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"as_ref","","",85,{"inputs":[{"name":"osstr"}],"output":{"name":"osstr"}}],[11,"as_ref","","",84,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"as_ref","collections::string","",86,{"inputs":[{"name":"string"}],"output":{"name":"osstr"}}],[11,"clone","std::fs","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"metadata"}}],[11,"clone","","",88,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",89,{"inputs":[{"name":"permissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",89,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"clone","","",89,{"inputs":[{"name":"permissions"}],"output":{"name":"permissions"}}],[11,"hash","","",90,null],[11,"eq","","",90,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",90,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"open","","Attempts to open a file in read-only mode.",91,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",91,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",91,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",91,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",91,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"metadata","","Queries metadata about the underlying file.",91,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fmt","","",91,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",91,null],[11,"read_to_end","","",91,{"inputs":[{"name":"file"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",91,null],[11,"flush","","",91,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",91,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"new","","Creates a blank net set of options ready for configuration.",88,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",88,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"write","","Sets the option for write access.",88,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"append","","Sets the option for the append mode.",88,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"truncate","","Sets the option for truncating a previous file.",88,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create","","Sets the option for creating a new file.",88,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"open","","Opens a file at `path` with the options specified by `self`.",88,{"inputs":[{"name":"openoptions"},{"name":"p"}],"output":{"name":"result"}}],[11,"file_type","","Returns the file type for this metadata.",87,{"inputs":[{"name":"metadata"}],"output":{"name":"filetype"}}],[11,"is_dir","","Returns whether this metadata is for a directory.",87,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether this metadata is for a regular file.",87,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"permissions","","Returns the permissions of the file this metadata is for.",87,{"inputs":[{"name":"metadata"}],"output":{"name":"permissions"}}],[11,"readonly","","Returns whether these permissions describe a readonly file.",89,{"inputs":[{"name":"permissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",89,null],[11,"is_dir","","Test whether this file type represents a directory.",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","Test whether this file type represents a regular file.",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","Test whether this file type represents a symbolic link.",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"next","","",92,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"path","","Returns the full path to the file that this entry represents.",93,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"metadata","","Return the metadata for the file that this entry points at.",93,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","Return the file type for the file that this entry points at.",93,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",93,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"next","","",94,{"inputs":[{"name":"walkdir"}],"output":{"name":"option"}}],[11,"metadata","std::path","",95,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","",95,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","",95,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","",95,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","",95,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","",95,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","",95,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","",95,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"new","std::fs","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",96,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",96,{"inputs":[{"name":"dirbuilder"},{"name":"bool"}],"output":{"name":"dirbuilder"}}],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",96,{"inputs":[{"name":"dirbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",97,{"inputs":[{"name":"bufreader"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",97,{"inputs":[{"name":"bufreader"},{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",97,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_mut","","Gets a mutable reference to the underlying reader.",97,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",97,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"read","","",97,null],[11,"fill_buf","","",97,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"consume","","",97,null],[11,"fmt","","",97,{"inputs":[{"name":"bufreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",97,{"inputs":[{"name":"bufreader"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fmt","","",98,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",99,{"inputs":[{"name":"bufwriter"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",99,{"inputs":[{"name":"bufwriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",99,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",99,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",99,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"write","","",99,null],[11,"flush","","",99,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"fmt","","",99,{"inputs":[{"name":"bufwriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",99,{"inputs":[{"name":"bufwriter"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"drop","","",99,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",98,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"into_inner","","Returns the buffered writer instance which generated the error.",98,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"w"}}],[11,"from","std::io::error","",83,{"inputs":[{"name":"error"},{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",98,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"str"}}],[11,"fmt","","",98,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `LineWriter`.",100,{"inputs":[{"name":"linewriter"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",100,{"inputs":[{"name":"linewriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",100,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",100,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",100,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"write","","",100,null],[11,"flush","","",100,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"fmt","","",100,{"inputs":[{"name":"linewriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",101,null],[11,"fmt","std::io::cursor","",102,{"inputs":[{"name":"cursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",102,{"inputs":[{"name":"cursor"}],"output":{"name":"cursor"}}],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",102,{"inputs":[{"name":"cursor"},{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",102,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",102,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",102,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"position","","Returns the current position of this cursor.",102,{"inputs":[{"name":"cursor"}],"output":{"name":"u64"}}],[11,"set_position","","Sets the position of this cursor.",102,null],[11,"seek","","",102,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"read","","",102,null],[11,"fill_buf","","",102,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",102,null],[11,"write","","",102,null],[11,"flush","","",102,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",102,null],[11,"flush","","",102,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",102,null],[11,"flush","","",102,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"fmt","std::io::error","",83,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",103,{"inputs":[{"name":"custom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",104,{"inputs":[{"name":"errorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",104,{"inputs":[{"name":"errorkind"}],"output":{"name":"errorkind"}}],[11,"eq","","",104,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",104,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",83,{"inputs":[{"name":"error"},{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",83,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",83,{"inputs":[{"name":"error"},{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",83,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",83,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",83,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",83,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",83,{"inputs":[{"name":"error"}],"output":{"name":"errorkind"}}],[11,"fmt","","",105,{"inputs":[{"name":"repr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",83,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",83,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",83,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"read","alloc::boxed","",2,null],[11,"read_to_end","","",2,{"inputs":[{"name":"box"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",2,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",2,null],[11,"write","","",2,null],[11,"flush","","",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"write_all","","",2,null],[11,"write_fmt","","",2,{"inputs":[{"name":"box"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"seek","","",2,{"inputs":[{"name":"box"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fill_buf","","",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"consume","","",2,null],[11,"read_until","","",2,{"inputs":[{"name":"box"},{"name":"u8"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_line","","",2,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","collections::vec","",65,null],[11,"write_all","","",65,null],[11,"flush","","",65,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"new","std::io::lazy","",106,null],[11,"get","","",106,{"inputs":[{"name":"lazy"}],"output":{"name":"option"}}],[11,"read","std::io::util","",107,null],[11,"fill_buf","","",107,{"inputs":[{"name":"empty"}],"output":{"name":"result"}}],[11,"consume","","",107,null],[11,"read","","",108,null],[11,"write","","",109,null],[11,"flush","","",109,{"inputs":[{"name":"sink"}],"output":{"name":"result"}}],[11,"read","std::io::stdio","",110,null],[11,"write","","",111,null],[11,"flush","","",111,{"inputs":[{"name":"stdoutraw"}],"output":{"name":"result"}}],[11,"write","","",112,null],[11,"flush","","",112,{"inputs":[{"name":"stderrraw"}],"output":{"name":"result"}}],[11,"write","","",113,null],[11,"flush","","",113,{"inputs":[{"name":"maybe"}],"output":{"name":"result"}}],[11,"read","","",113,null],[11,"lock","","Locks this handle to the standard input stream, returning a readable\nguard.",114,{"inputs":[{"name":"stdin"}],"output":{"name":"stdinlock"}}],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",114,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",114,null],[11,"read_to_end","","",114,{"inputs":[{"name":"stdin"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",114,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",114,null],[11,"read","","",115,null],[11,"read_to_end","","",115,{"inputs":[{"name":"stdinlock"},{"name":"vec"}],"output":{"name":"result"}}],[11,"fill_buf","","",115,{"inputs":[{"name":"stdinlock"}],"output":{"name":"result"}}],[11,"consume","","",115,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",116,{"inputs":[{"name":"stdout"}],"output":{"name":"stdoutlock"}}],[11,"write","","",116,null],[11,"flush","","",116,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write_all","","",116,null],[11,"write_fmt","","",116,{"inputs":[{"name":"stdout"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",117,null],[11,"flush","","",117,{"inputs":[{"name":"stdoutlock"}],"output":{"name":"result"}}],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",118,{"inputs":[{"name":"stderr"}],"output":{"name":"stderrlock"}}],[11,"write","","",118,null],[11,"flush","","",118,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write_all","","",118,null],[11,"write_fmt","","",118,{"inputs":[{"name":"stderr"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",119,null],[11,"flush","","",119,{"inputs":[{"name":"stderrlock"}],"output":{"name":"result"}}],[11,"fmt","std::io","",120,{"inputs":[{"name":"seekfrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",120,{"inputs":[{"name":"seekfrom"}],"output":{"name":"seekfrom"}}],[11,"eq","","",120,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"ne","","",120,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"write","","",121,null],[11,"flush","","",121,{"inputs":[{"name":"broadcast"}],"output":{"name":"result"}}],[11,"read","","",122,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",123,{"inputs":[{"name":"take"}],"output":{"name":"u64"}}],[11,"read","","",123,null],[11,"fill_buf","","",123,{"inputs":[{"name":"take"}],"output":{"name":"result"}}],[11,"consume","","",123,null],[11,"read","","",124,null],[11,"next","","",125,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"fmt","","",126,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",127,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"description","","",126,{"inputs":[{"name":"charserror"}],"output":{"name":"str"}}],[11,"cause","","",126,{"inputs":[{"name":"charserror"}],"output":{"name":"option"}}],[11,"fmt","","",126,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",128,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next","","",129,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"cmp","std::net::ip","",130,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",130,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"option"}}],[11,"lt","","",130,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"le","","",130,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"gt","","",130,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ge","","",130,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"hash","","",130,null],[11,"fmt","","",130,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",130,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ne","","",130,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"clone","","",130,{"inputs":[{"name":"ipaddr"}],"output":{"name":"ipaddr"}}],[11,"fmt","","",131,{"inputs":[{"name":"ipv6multicastscope"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",131,null],[11,"clone","","",131,{"inputs":[{"name":"ipv6multicastscope"}],"output":{"name":"ipv6multicastscope"}}],[11,"eq","","",131,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"ne","","",131,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",132,{"inputs":[{"name":"ipv4addr"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",132,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address 0.0.0.0.",132,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",132,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_private","","Returns true if this is a private address.",132,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",132,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",132,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_multicast","","Returns true if this is a multicast address.",132,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_broadcast","","Returns true if this is a broadcast address.",132,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",132,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",132,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",132,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"fmt","","",130,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",132,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",132,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",132,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv4addr"}}],[11,"eq","","",132,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"hash","","",132,null],[11,"partial_cmp","","",132,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"option"}}],[11,"cmp","","",132,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"ordering"}}],[11,"from","","",132,{"inputs":[{"name":"ipv4addr"},{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",133,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",133,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address ::.",133,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (::1).",133,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",133,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",133,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",133,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",133,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",133,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"multicast_scope","","Returns the address's multicast scope if the address is multicast.",133,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"is_multicast","","Returns true if this is a multicast address.",133,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",133,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"fmt","","",133,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",133,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",133,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6addr"}}],[11,"eq","","",133,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"hash","","",133,null],[11,"partial_cmp","","",133,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"cmp","","",133,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"ordering"}}],[11,"fmt","std::net::addr","",134,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",134,null],[11,"eq","","",134,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"ne","","",134,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"clone","","",134,{"inputs":[{"name":"socketaddr"}],"output":{"name":"socketaddr"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",134,{"inputs":[{"name":"socketaddr"},{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",134,{"inputs":[{"name":"socketaddr"}],"output":{"name":"ipaddr"}}],[11,"port","","Returns the port number associated with this socket address.",134,{"inputs":[{"name":"socketaddr"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",135,{"inputs":[{"name":"socketaddrv4"},{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",135,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"ipv4addr"}}],[11,"port","","Returns the port number associated with this socket address.",135,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",136,{"inputs":[{"name":"socketaddrv6"},{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",136,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"ipv6addr"}}],[11,"port","","Returns the port number associated with this socket address.",136,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u16"}}],[11,"flowinfo","","Returns scope ID associated with this address, corresponding to the\n`sin6_flowinfo` field in C.",136,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"scope_id","","Returns scope ID associated with this address, corresponding to the\n`sin6_scope_id` field in C.",136,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"fmt","","",134,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",135,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",135,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",136,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",136,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",135,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"socketaddrv4"}}],[11,"clone","","",136,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"socketaddrv6"}}],[11,"eq","","",135,{"inputs":[{"name":"socketaddrv4"},{"name":"socketaddrv4"}],"output":{"name":"bool"}}],[11,"eq","","",136,{"inputs":[{"name":"socketaddrv6"},{"name":"socketaddrv6"}],"output":{"name":"bool"}}],[11,"hash","","",135,null],[11,"hash","","",136,null],[11,"to_socket_addrs","","",134,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",135,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",136,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"result"}}],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",137,{"inputs":[{"name":"tcpstream"},{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",137,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",137,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",137,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",137,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",137,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",137,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",137,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",137,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",137,null],[11,"read_to_end","","",137,{"inputs":[{"name":"tcpstream"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",137,null],[11,"flush","","",137,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",137,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",138,{"inputs":[{"name":"tcplistener"},{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",138,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",138,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","Accept a new incoming connection from this listener.",138,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",138,{"inputs":[{"name":"tcplistener"}],"output":{"name":"incoming"}}],[11,"next","","",139,{"inputs":[{"name":"incoming"}],"output":{"name":"option"}}],[11,"fmt","","",138,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",140,{"inputs":[{"name":"udpsocket"},{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",140,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",140,null],[11,"local_addr","","Returns the socket address that this socket was created from.",140,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",140,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",140,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",140,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",140,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",140,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","std::net::ip","",130,{"inputs":[{"name":"ipaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",132,{"inputs":[{"name":"ipv4addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",133,{"inputs":[{"name":"ipv6addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",135,{"inputs":[{"name":"socketaddrv4"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",136,{"inputs":[{"name":"socketaddrv6"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",134,{"inputs":[{"name":"socketaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",141,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"clone","","",141,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"addrparseerror"}}],[11,"fmt","","",141,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",141,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",141,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"str"}}],[11,"fmt","std::net","",142,{"inputs":[{"name":"shutdown"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",142,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"clone","","",142,{"inputs":[{"name":"shutdown"}],"output":{"name":"shutdown"}}],[11,"next","","",143,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"clone","std::os::linux::raw::arch","",144,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"as_raw_fd","std::fs","",91,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",91,{"inputs":[{"name":"file"},{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",91,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::tcp","",137,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",138,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::udp","",140,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_raw_fd","std::net::tcp","",137,{"inputs":[{"name":"tcpstream"},{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",138,{"inputs":[{"name":"tcplistener"},{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",140,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",137,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",138,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"into_raw_fd","std::net::udp","",140,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_vec","std::ffi::os_str","",84,{"inputs":[{"name":"osstring"},{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",84,{"inputs":[{"name":"osstring"}],"output":{"name":"vec"}}],[11,"from_bytes","","",85,null],[11,"as_bytes","","",85,null],[11,"mode","std::fs","",89,{"inputs":[{"name":"permissions"}],"output":{"name":"u32"}}],[11,"set_mode","","",89,null],[11,"from_mode","","",89,{"inputs":[{"name":"permissions"},{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",88,{"inputs":[{"name":"openoptions"},{"name":"u32"}],"output":{"name":"openoptions"}}],[11,"dev","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"ino","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"mode","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"nlink","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"uid","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"gid","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"rdev","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"size","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime_nsec","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime_nsec","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime_nsec","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blksize","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blocks","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"is_block_device","","",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_char_device","","",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_fifo","","",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_socket","","",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ino","","",93,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"mode","","",96,{"inputs":[{"name":"dirbuilder"},{"name":"u32"}],"output":{"name":"dirbuilder"}}],[11,"uid","std::process","",145,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"gid","","",145,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"session_leader","","",145,{"inputs":[{"name":"command"},{"name":"bool"}],"output":{"name":"command"}}],[11,"signal","","",146,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"from_raw_fd","","",147,{"inputs":[{"name":"stdio"},{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",148,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",149,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",150,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",148,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",149,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",150,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"eq","std::path","",151,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ne","","",151,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"cmp","","",151,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",151,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"option"}}],[11,"lt","","",151,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"le","","",151,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"gt","","",151,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ge","","",151,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"hash","","",151,null],[11,"fmt","","",151,{"inputs":[{"name":"prefix"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",151,{"inputs":[{"name":"prefix"}],"output":{"name":"prefix"}}],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",151,{"inputs":[{"name":"prefix"}],"output":{"name":"bool"}}],[11,"fmt","","",152,{"inputs":[{"name":"state"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",152,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"option"}}],[11,"lt","","",152,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"le","","",152,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"gt","","",152,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ge","","",152,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"eq","","",152,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",152,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",152,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"fmt","","",153,{"inputs":[{"name":"prefixcomponent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",153,null],[11,"clone","","",153,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefixcomponent"}}],[11,"kind","","The parsed prefix data.",153,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefix"}}],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",153,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"osstr"}}],[11,"eq","","",153,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",153,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"option"}}],[11,"cmp","","",153,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"ordering"}}],[11,"fmt","","",154,{"inputs":[{"name":"component"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",154,null],[11,"cmp","","",154,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",154,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"option"}}],[11,"lt","","",154,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"le","","",154,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"gt","","",154,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ge","","",154,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"eq","","",154,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ne","","",154,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"clone","","",154,{"inputs":[{"name":"component"}],"output":{"name":"component"}}],[11,"as_os_str","","Extracts the underlying `OsStr` slice",154,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"as_ref","","",154,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"clone","","",155,{"inputs":[{"name":"components"}],"output":{"name":"components"}}],[11,"clone","","",156,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",155,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"peek","","Examine the next component without consuming it.",155,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"as_ref","","",155,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"as_ref","","",155,{"inputs":[{"name":"components"}],"output":{"name":"osstr"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",156,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",156,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",156,{"inputs":[{"name":"iter"}],"output":{"name":"osstr"}}],[11,"next","","",156,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",156,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",155,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"next_back","","",155,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"eq","","",155,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",155,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"option"}}],[11,"cmp","","",155,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"ordering"}}],[11,"hash","","",157,null],[11,"clone","","",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"new","","Allocates an empty `PathBuf`.",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"push","","Extends `self` with `path`.",157,null],[11,"pop","","Truncate `self` to `self.parent()`.",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",157,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",157,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"bool"}}],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"from","","",157,{"inputs":[{"name":"pathbuf"},{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",157,{"inputs":[{"name":"pathbuf"},{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",157,{"inputs":[{"name":"pathbuf"},{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",157,{"inputs":[{"name":"pathbuf"},{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",157,null],[11,"fmt","","",157,{"inputs":[{"name":"pathbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Directly wrap a string slice as a `Path` slice.",95,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",95,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `Path` is valid unicode.",95,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts a `Path` to a `Cow<str>`.",95,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",95,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",95,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_relative","","A path is *relative* if it is not absolute.",95,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"prefix","","Returns the *prefix* of a path, if any.",95,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",95,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"parent","","The path without its final component, if any.",95,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"file_name","","The final component of the path, if it is a normal file.",95,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"relative_from","","Returns a path that, when joined onto `base`, yields `self`.",95,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"option"}}],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",95,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",95,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",95,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",95,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",95,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"pathbuf"}}],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",95,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",95,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"components","","Produce an iterator over the components of the path.",95,{"inputs":[{"name":"path"}],"output":{"name":"components"}}],[11,"iter","","Produce an iterator over the path's components viewed as `OsStr` slices.",95,{"inputs":[{"name":"path"}],"output":{"name":"iter"}}],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",95,{"inputs":[{"name":"path"}],"output":{"name":"display"}}],[11,"metadata","","Gets information on the file, directory, etc at this path.",95,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","Gets information on the file, directory, etc at this path.",95,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","Returns the canonical form of a path, normalizing all components and\neliminate all symlinks.",95,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","Reads the symlink at this path.",95,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","Reads the directory at this path.",95,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","Boolean value indicator whether the underlying file exists on the local\nfilesystem. Returns false in exactly the cases where `fs::stat` fails.",95,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","Whether the underlying implementation (be it a file path, or something\nelse) points at a \"regular file\" on the FS. Will return false for paths\nto non-existent locations or directories or other non-regular files\n(named pipes, etc). Follows links when making this determination.",95,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","Whether the underlying implementation (be it a file path, or something\nelse) is pointing at a directory in the underlying FS. Will return\nfalse for paths to non-existent locations or if the item is not a\ndirectory (eg files, named pipes, etc). Follows links when making this\ndetermination.",95,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"deref","","",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"borrow","","",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"into_cow","","",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","","",95,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"eq","","",157,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",157,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"cmp","","",157,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"ordering"}}],[11,"as_ref","","",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstr"}}],[11,"into","","",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"hash","","",95,null],[11,"as_ref","","",95,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"fmt","","",95,{"inputs":[{"name":"path"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",158,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",158,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",95,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",95,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[11,"cmp","","",95,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"ordering"}}],[11,"as_ref","","",95,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"as_ref","std::ffi::os_str","",85,{"inputs":[{"name":"osstr"}],"output":{"name":"path"}}],[11,"as_ref","","",84,{"inputs":[{"name":"osstring"}],"output":{"name":"path"}}],[11,"as_ref","collections::string","",86,{"inputs":[{"name":"string"}],"output":{"name":"path"}}],[11,"as_ref","std::path","",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"write","std::process","",148,null],[11,"flush","","",148,{"inputs":[{"name":"childstdin"}],"output":{"name":"result"}}],[11,"read","","",149,null],[11,"read","","",150,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",145,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",145,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"args","","Add multiple arguments to pass to the program.",145,null],[11,"env","","Inserts or updates an environment variable mapping.",145,{"inputs":[{"name":"command"},{"name":"k"},{"name":"v"}],"output":{"name":"command"}}],[11,"env_remove","","Removes an environment variable mapping.",145,{"inputs":[{"name":"command"},{"name":"k"}],"output":{"name":"command"}}],[11,"env_clear","","Clears the entire environment map for the child process.",145,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"current_dir","","Sets the working directory for the child process.",145,{"inputs":[{"name":"command"},{"name":"p"}],"output":{"name":"command"}}],[11,"stdin","","Configuration for the child process's stdin handle (file descriptor 0).",145,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stdout","","Configuration for the child process's stdout handle (file descriptor 1).",145,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stderr","","Configuration for the child process's stderr handle (file descriptor 2).",145,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"spawn","","Executes the command as a child process, returning a handle to it.",145,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",145,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",145,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",145,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",159,{"inputs":[{"name":"output"}],"output":{"name":"output"}}],[11,"eq","","",159,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"ne","","",159,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",147,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",147,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",147,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"fmt","","",146,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",146,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",146,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",146,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","Returns the exit code of the process, if any.",146,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",146,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",160,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"id","","Returns the OS-assigned process identifier associated with this child.",160,{"inputs":[{"name":"child"}],"output":{"name":"u32"}}],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",160,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning a `Output`\ninstance.",160,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"clone","std::sync::mpsc::blocking","",161,{"inputs":[{"name":"signaltoken"}],"output":{"name":"signaltoken"}}],[11,"signal","","",161,{"inputs":[{"name":"signaltoken"}],"output":{"name":"bool"}}],[11,"cast_to_usize","","Convert to an unsafe usize value. Useful for storing in a pipe's state\nflag.",161,{"inputs":[{"name":"signaltoken"}],"output":{"name":"usize"}}],[11,"cast_from_usize","","Convert from an unsafe usize value. Useful for retrieving a pipe's state\nflag.",161,{"inputs":[{"name":"signaltoken"},{"name":"usize"}],"output":{"name":"signaltoken"}}],[11,"wait","","",162,null],[11,"new","std::sync::mpsc::oneshot","",163,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",163,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"sent","","",163,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"recv","","",163,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",163,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"upgrade","","",163,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"drop_chan","","",163,null],[11,"drop_port","","",163,null],[11,"can_recv","","",163,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",163,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",163,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop","","",163,null],[11,"eq","std::sync::mpsc::select","",164,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"ne","","",164,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new selection structure. This set is initially empty.",165,{"inputs":[{"name":"select"}],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",165,{"inputs":[{"name":"select"},{"name":"receiver"}],"output":{"name":"handle"}}],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",165,{"inputs":[{"name":"select"}],"output":{"name":"usize"}}],[11,"id","","Retrieves the id of this handle.",166,{"inputs":[{"name":"handle"}],"output":{"name":"usize"}}],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",166,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",166,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",166,null],[11,"drop","","",165,null],[11,"drop","","",166,null],[11,"next","","",167,{"inputs":[{"name":"packets"}],"output":{"name":"option"}}],[11,"new","std::sync::mpsc::shared","",168,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"postinit_lock","","",168,{"inputs":[{"name":"packet"}],"output":{"name":"mutexguard"}}],[11,"inherit_blocker","","",168,null],[11,"send","","",168,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",168,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",168,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",168,null],[11,"drop_chan","","",168,null],[11,"drop_port","","",168,null],[11,"can_recv","","",168,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",168,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",168,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"drop","","",168,null],[11,"new","std::sync::mpsc::stream","",169,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",169,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"upgrade","","",169,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"recv","","",169,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",169,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop_chan","","",169,null],[11,"drop_port","","",169,null],[11,"can_recv","","",169,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",169,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",169,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"result"}}],[11,"drop","","",169,null],[11,"fmt","std::sync::mpsc::sync","",170,{"inputs":[{"name":"failure"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",171,{"inputs":[{"name":"packet"},{"name":"usize"}],"output":{"name":"packet"}}],[11,"send","","",171,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","",171,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",171,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",171,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",171,null],[11,"drop_chan","","",171,null],[11,"drop_port","","",171,null],[11,"can_recv","","",171,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",171,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",171,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"drop","","",171,null],[11,"new","std::sync::mpsc::mpsc_queue","Creates a new queue that is safe to share among multiple producers and\none consumer.",172,{"inputs":[{"name":"queue"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue.",172,null],[11,"pop","","Pops some data from this queue.",172,{"inputs":[{"name":"queue"}],"output":{"name":"popresult"}}],[11,"drop","","",172,null],[11,"new","std::sync::mpsc::spsc_queue","Creates a new queue.",173,{"inputs":[{"name":"queue"},{"name":"usize"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue. Note that to use this function\nsafely, it must be externally guaranteed that there is only one pusher.",173,null],[11,"pop","","Attempts to pop a value from this queue. Remember that to use this type\nsafely you must ensure that there is only one popper at a time.",173,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"peek","","Attempts to peek at the head of the queue, returning `None` if the queue\nhas no data currently",173,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"drop","","",173,null],[11,"clone","std::sync::mpsc","",174,{"inputs":[{"name":"senderror"}],"output":{"name":"senderror"}}],[11,"eq","","",174,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",174,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"fmt","","",175,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",175,{"inputs":[{"name":"recverror"}],"output":{"name":"recverror"}}],[11,"eq","","",175,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"fmt","","",176,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",176,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"tryrecverror"}}],[11,"eq","","",176,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"ne","","",176,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"clone","","",177,{"inputs":[{"name":"trysenderror"}],"output":{"name":"trysenderror"}}],[11,"eq","","",177,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",177,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",178,{"inputs":[{"name":"sender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",178,{"inputs":[{"name":"sender"}],"output":{"name":"sender"}}],[11,"drop","","",178,null],[11,"send","","Sends a value on this synchronous channel.",179,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","Attempts to send a value on this channel without blocking.",179,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",179,{"inputs":[{"name":"syncsender"}],"output":{"name":"syncsender"}}],[11,"drop","","",179,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",180,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",180,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",180,{"inputs":[{"name":"receiver"}],"output":{"name":"iter"}}],[11,"next","","",181,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",182,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"into_iter","","",180,{"inputs":[{"name":"receiver"}],"output":{"name":"intoiter"}}],[11,"drop","","",180,null],[11,"fmt","","",174,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",174,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",174,{"inputs":[{"name":"senderror"}],"output":{"name":"str"}}],[11,"cause","","",174,{"inputs":[{"name":"senderror"}],"output":{"name":"option"}}],[11,"fmt","","",177,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",177,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",177,{"inputs":[{"name":"trysenderror"}],"output":{"name":"str"}}],[11,"cause","","",177,{"inputs":[{"name":"trysenderror"}],"output":{"name":"option"}}],[11,"fmt","","",175,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",175,{"inputs":[{"name":"recverror"}],"output":{"name":"str"}}],[11,"cause","","",175,{"inputs":[{"name":"recverror"}],"output":{"name":"option"}}],[11,"fmt","","",176,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",176,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"str"}}],[11,"cause","","",176,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"option"}}],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",183,{"inputs":[{"name":"barrier"},{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads has rendezvoused here.",183,{"inputs":[{"name":"barrier"}],"output":{"name":"barrierwaitresult"}}],[11,"is_leader","","Returns whether this thread from `wait` is the \"leader thread\".",184,{"inputs":[{"name":"barrierwaitresult"}],"output":{"name":"bool"}}],[11,"clone","std::sync::condvar","",185,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"waittimeoutresult"}}],[11,"eq","","",185,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"ne","","",185,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"fmt","","",185,{"inputs":[{"name":"waittimeoutresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"timed_out","","Returns whether the wait was known to have timed out.",185,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",186,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",186,{"inputs":[{"name":"condvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",186,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",186,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",186,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",186,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",186,null],[11,"drop","","",186,null],[11,"new","","Creates a new condition variable",187,{"inputs":[{"name":"staticcondvar"}],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",187,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",187,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",187,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",187,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",187,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",187,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",187,null],[11,"drop","std::sync::mutex","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"mutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new mutex in an unlocked state ready for use.",188,{"inputs":[{"name":"staticmutex"}],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",188,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",188,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates resources associated with this static mutex.",188,null],[11,"deref","","",189,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",189,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"drop","","",189,null],[11,"new","std::sync::once","Creates a new `Once` value.",190,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",190,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock<T>` which is unlocked.",191,{"inputs":[{"name":"rwlock"},{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",191,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",191,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",191,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",191,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",191,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",191,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",191,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"drop","","",191,null],[11,"fmt","","",191,{"inputs":[{"name":"rwlock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new rwlock.",192,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",192,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this lock with shared read access.",192,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",192,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",192,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates all resources associated with this static lock.",192,null],[11,"deref","","",193,{"inputs":[{"name":"rwlockreadguard"}],"output":{"name":"t"}}],[11,"deref","","",194,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",194,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"drop","","",193,null],[11,"drop","","",194,null],[11,"new","std::sync::semaphore","Creates a new semaphore with the initial count specified.",195,{"inputs":[{"name":"semaphore"},{"name":"isize"}],"output":{"name":"semaphore"}}],[11,"acquire","","Acquires a resource of this semaphore, blocking the current thread until\nit can do so.",195,null],[11,"release","","Release a resource from this semaphore.",195,null],[11,"access","","Acquires a resource of this semaphore, returning an RAII guard to\nrelease the semaphore when dropped.",195,{"inputs":[{"name":"semaphore"}],"output":{"name":"semaphoreguard"}}],[11,"drop","","",196,null],[11,"default","core::sync::atomic","",197,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",198,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",199,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",200,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",201,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",197,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",197,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",197,null],[11,"swap","","Stores a value into the bool, returning the old value.",197,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",197,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",197,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",197,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",197,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",197,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",198,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",198,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",198,null],[11,"swap","","Stores a value into the isize, returning the old value.",198,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",198,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",198,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",198,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",198,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",198,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",198,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",199,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",199,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",199,null],[11,"swap","","Stores a value into the usize, returning the old value.",199,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",199,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",199,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",199,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",199,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",199,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",199,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",200,null],[11,"load","","Loads a value from the pointer.",200,null],[11,"store","","Stores a value into the pointer.",200,null],[11,"swap","","Stores a value into the pointer, returning the old value.",200,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",200,null],[11,"fmt","","",199,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",198,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",197,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",200,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::time::duration","",202,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",202,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",202,{"inputs":[{"name":"duration"},{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",202,{"inputs":[{"name":"duration"},{"name":"f"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",202,{"inputs":[{"name":"duration"},{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",202,{"inputs":[{"name":"duration"},{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",202,{"inputs":[{"name":"duration"}],"output":{"name":"u64"}}],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",202,{"inputs":[{"name":"duration"}],"output":{"name":"u32"}}],[11,"add","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",202,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",202,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"div","","",202,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"new","std::sys_common::condvar","Creates a new condition variable for use.",203,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","Signals one waiter on this condition variable to wake up.",203,null],[11,"notify_all","","Awakens all current waiters on this condition variable.",203,null],[11,"wait","","Waits for a signal on the specified mutex.",203,null],[11,"wait_timeout","","Waits for a signal on the specified mutex with a timeout duration\nspecified by `dur` (a relative time into the future).",203,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","Deallocates all resources associated with this condition variable.",203,null],[11,"clone","std::sys_common::dwarf::eh","",204,{"inputs":[{"name":"ehcontext"}],"output":{"name":"ehcontext"}}],[11,"new","std::sys_common::dwarf","",205,null],[11,"read","","",205,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"t"}}],[11,"read_uleb128","","",205,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"u64"}}],[11,"read_sleb128","","",205,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"i64"}}],[11,"clone","std::sys_common::libunwind","",206,{"inputs":[{"name":"_unwind_action"}],"output":{"name":"_unwind_action"}}],[11,"clone","","",207,{"inputs":[{"name":"_unwind_reason_code"}],"output":{"name":"_unwind_reason_code"}}],[11,"new","std::sys_common::mutex","Creates a new mutex for use.",208,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","Locks the mutex blocking the current thread until it is available.",208,null],[11,"try_lock","","Attempts to lock the mutex without blocking, returning whether it was\nsuccessfully acquired or not.",208,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"unlock","","Unlocks the mutex.",208,null],[11,"destroy","","Deallocates all resources associated with this mutex.",208,null],[11,"next","std::sys_common::net","",209,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"drop","","",209,null],[11,"connect","","",210,{"inputs":[{"name":"tcpstream"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",210,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"into_socket","","",210,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"set_read_timeout","","",210,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",210,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",210,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","",210,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",210,null],[11,"write","","",210,null],[11,"peer_addr","","",210,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"socket_addr","","",210,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","",210,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"duplicate","","",210,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",210,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",211,{"inputs":[{"name":"tcplistener"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",211,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"into_socket","","",211,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"socket_addr","","",211,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","",211,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"duplicate","","",211,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"fmt","","",211,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",212,{"inputs":[{"name":"udpsocket"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",212,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"into_socket","","",212,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"socket_addr","","",212,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"recv_from","","",212,null],[11,"send_to","","",212,null],[11,"duplicate","","",212,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","",212,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",212,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",212,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","",212,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",212,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys_common::poison","",213,{"inputs":[{"name":"flag"}],"output":{"name":"flag"}}],[11,"borrow","","",213,{"inputs":[{"name":"flag"}],"output":{"name":"result"}}],[11,"done","","",213,null],[11,"get","","",213,{"inputs":[{"name":"flag"}],"output":{"name":"bool"}}],[11,"fmt","","",214,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",214,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",214,{"inputs":[{"name":"poisonerror"}],"output":{"name":"str"}}],[11,"new","","Creates a `PoisonError`.",214,{"inputs":[{"name":"poisonerror"},{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",214,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",214,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",214,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"from","","",215,{"inputs":[{"name":"trylockerror"},{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",215,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",215,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",215,{"inputs":[{"name":"trylockerror"}],"output":{"name":"str"}}],[11,"cause","","",215,{"inputs":[{"name":"trylockerror"}],"output":{"name":"option"}}],[11,"new","std::sys_common::remutex","Creates a new reentrant mutex in an unlocked state.",216,{"inputs":[{"name":"reentrantmutex"},{"name":"t"}],"output":{"name":"reentrantmutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",216,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",216,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"drop","","",216,null],[11,"fmt","","",216,{"inputs":[{"name":"reentrantmutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",217,{"inputs":[{"name":"reentrantmutexguard"}],"output":{"name":"t"}}],[11,"drop","","",217,null],[11,"new","std::sys_common::rwlock","Creates a new reader-writer lock for use.",218,{"inputs":[{"name":"rwlock"}],"output":{"name":"rwlock"}}],[11,"read","","Acquires shared access to the underlying lock, blocking the current\nthread to do so.",218,null],[11,"try_read","","Attempts to acquire shared access to this lock, returning whether it\nsucceeded or not.",218,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","Acquires write access to the underlying lock, blocking the current thread\nto do so.",218,null],[11,"try_write","","Attempts to acquire exclusive access to this lock, returning whether it\nsucceeded or not.",218,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","Unlocks previously acquired shared access to this lock.",218,null],[11,"write_unlock","","Unlocks previously acquired exclusive access to this lock.",218,null],[11,"destroy","","Destroys OS-related resources with this RWLock.",218,null],[11,"new","std::sys_common::thread_local","",219,{"inputs":[{"name":"statickey"},{"name":"option"}],"output":{"name":"statickey"}}],[11,"get","","Gets the value associated with this TLS key",219,null],[11,"set","","Sets this TLS key to a new value.",219,null],[11,"destroy","","Deallocates this OS TLS key.",219,null],[11,"new","","Creates a new managed OS TLS key.",220,{"inputs":[{"name":"key"},{"name":"option"}],"output":{"name":"key"}}],[11,"get","","See StaticKey::get",220,null],[11,"set","","See StaticKey::set",220,null],[11,"drop","","",220,null],[11,"clone","std::sys_common::wtf8","",221,{"inputs":[{"name":"codepoint"}],"output":{"name":"codepoint"}}],[11,"partial_cmp","","",221,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"option"}}],[11,"lt","","",221,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"le","","",221,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"gt","","",221,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ge","","",221,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"cmp","","",221,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"ordering"}}],[11,"eq","","",221,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ne","","",221,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"fmt","","",221,{"inputs":[{"name":"codepoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u32_unchecked","","Unsafely creates a new `CodePoint` without checking the value.",221,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"codepoint"}}],[11,"from_u32","","Creates a new `CodePoint` if the value is a valid code point.",221,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_char","","Creates a new `CodePoint` from a `char`.",221,{"inputs":[{"name":"codepoint"},{"name":"char"}],"output":{"name":"codepoint"}}],[11,"to_u32","","Returns the numeric value of the code point.",221,{"inputs":[{"name":"codepoint"}],"output":{"name":"u32"}}],[11,"to_char","","Optionally returns a Unicode scalar value for the code point.",221,{"inputs":[{"name":"codepoint"}],"output":{"name":"option"}}],[11,"to_char_lossy","","Returns a Unicode scalar value for the code point.",221,{"inputs":[{"name":"codepoint"}],"output":{"name":"char"}}],[11,"clone","","",222,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"partial_cmp","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"option"}}],[11,"lt","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"le","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"gt","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ge","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"cmp","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"ordering"}}],[11,"eq","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ne","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"from_str","","Creates a WTF-8 slice from a UTF-8 `&str` slice.",223,{"inputs":[{"name":"wtf8"},{"name":"str"}],"output":{"name":"wtf8"}}],[11,"len","","Returns the length, in WTF-8 bytes.",223,{"inputs":[{"name":"wtf8"}],"output":{"name":"usize"}}],[11,"ascii_byte_at","","Returns the code point at `position` if it is in the ASCII range,\nor `b'\\xFF' otherwise.",223,{"inputs":[{"name":"wtf8"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"code_points","","Returns an iterator for the string’s code points.",223,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8codepoints"}}],[11,"as_str","","Tries to convert the string to UTF-8 and return a `&str` slice.",223,{"inputs":[{"name":"wtf8"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Lossily converts the string to UTF-8.\nReturns a UTF-8 `&str` slice if the contents are well-formed in UTF-8.",223,{"inputs":[{"name":"wtf8"}],"output":{"name":"cow"}}],[11,"encode_wide","","Converts the WTF-8 string to potentially ill-formed UTF-16\nand return an iterator of 16-bit code units.",223,{"inputs":[{"name":"wtf8"}],"output":{"name":"encodewide"}}],[11,"deref","","",222,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"fmt","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new, empty WTF-8 string.",222,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"with_capacity","","Creates a new, empty WTF-8 string with pre-allocated capacity for `n` bytes.",222,{"inputs":[{"name":"wtf8buf"},{"name":"usize"}],"output":{"name":"wtf8buf"}}],[11,"from_string","","Creates a WTF-8 string from a UTF-8 `String`.",222,{"inputs":[{"name":"wtf8buf"},{"name":"string"}],"output":{"name":"wtf8buf"}}],[11,"from_str","","Creates a WTF-8 string from a UTF-8 `&str` slice.",222,{"inputs":[{"name":"wtf8buf"},{"name":"str"}],"output":{"name":"wtf8buf"}}],[11,"from_wide","","Creates a WTF-8 string from a potentially ill-formed UTF-16 slice of 16-bit code units.",222,null],[11,"as_slice","","",222,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `Wtf8Buf`.\nThe collection may reserve more space to avoid frequent reallocations.",222,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without reallocating.",222,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"usize"}}],[11,"push_str","","Append a UTF-8 slice at the end of the string.",222,null],[11,"push_wtf8","","Append a WTF-8 slice at the end of the string.",222,null],[11,"push_char","","Append a Unicode scalar value at the end of the string.",222,null],[11,"push","","Append a code point at the end of the string.",222,null],[11,"truncate","","Shortens a string to the specified length.",222,null],[11,"into_string","","Consumes the WTF-8 string and tries to convert it to UTF-8.",222,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"result"}}],[11,"into_string_lossy","","Consumes the WTF-8 string and converts it lossily to UTF-8.",222,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"string"}}],[11,"from_iter","","",222,{"inputs":[{"name":"wtf8buf"},{"name":"t"}],"output":{"name":"wtf8buf"}}],[11,"extend","","",222,null],[11,"partial_cmp","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"option"}}],[11,"lt","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"le","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"gt","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ge","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"eq","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ne","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"cmp","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"ordering"}}],[11,"fmt","","",223,{"inputs":[{"name":"wtf8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",223,{"inputs":[{"name":"wtf8"},{"name":"range"}],"output":{"name":"wtf8"}}],[11,"index","","",223,{"inputs":[{"name":"wtf8"},{"name":"rangefrom"}],"output":{"name":"wtf8"}}],[11,"index","","",223,{"inputs":[{"name":"wtf8"},{"name":"rangeto"}],"output":{"name":"wtf8"}}],[11,"index","","",223,{"inputs":[{"name":"wtf8"},{"name":"rangefull"}],"output":{"name":"wtf8"}}],[11,"clone","","",224,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"wtf8codepoints"}}],[11,"next","","",224,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"option"}}],[11,"size_hint","","",224,null],[11,"clone","","",225,{"inputs":[{"name":"encodewide"}],"output":{"name":"encodewide"}}],[11,"next","","",225,{"inputs":[{"name":"encodewide"}],"output":{"name":"option"}}],[11,"size_hint","","",225,null],[11,"hash","","",221,null],[11,"hash","","",222,null],[11,"hash","","",223,null],[11,"is_ascii","","",223,{"inputs":[{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"to_ascii_uppercase","","",223,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"to_ascii_lowercase","","",223,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"eq_ignore_ascii_case","","",223,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"make_ascii_uppercase","","",223,null],[11,"make_ascii_lowercase","","",223,null],[11,"new","std::sys::condvar","",226,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","",226,null],[11,"notify_all","","",226,null],[11,"wait","","",226,null],[11,"wait_timeout","","",226,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","",226,null],[11,"new","std::sys::fd","",227,{"inputs":[{"name":"filedesc"},{"name":"i32"}],"output":{"name":"filedesc"}}],[11,"raw","","",227,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"into_raw","","Extracts the actual filedescriptor without closing it.",227,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"read","","",227,null],[11,"write","","",227,null],[11,"set_cloexec","","",227,null],[11,"drop","","",227,null],[11,"clone","std::sys::fs","",228,{"inputs":[{"name":"fileattr"}],"output":{"name":"fileattr"}}],[11,"clone","","",229,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",230,{"inputs":[{"name":"filepermissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",230,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"ne","","",230,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"clone","","",230,{"inputs":[{"name":"filepermissions"}],"output":{"name":"filepermissions"}}],[11,"hash","","",231,null],[11,"eq","","",231,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",231,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",231,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"size","","",228,{"inputs":[{"name":"fileattr"}],"output":{"name":"u64"}}],[11,"perm","","",228,{"inputs":[{"name":"fileattr"}],"output":{"name":"filepermissions"}}],[11,"file_type","","",228,{"inputs":[{"name":"fileattr"}],"output":{"name":"filetype"}}],[11,"as_raw_stat","std::fs","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"stat"}}],[11,"readonly","std::sys::fs","",230,{"inputs":[{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","",230,null],[11,"mode","","",230,{"inputs":[{"name":"filepermissions"}],"output":{"name":"u32"}}],[11,"is_dir","","",231,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","",231,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","",231,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is","","",231,{"inputs":[{"name":"filetype"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"next","","",232,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"drop","","",233,null],[11,"path","","",234,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"file_name","","",234,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"metadata","","",234,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","",234,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"ino","","",234,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"new","","",229,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","",229,null],[11,"write","","",229,null],[11,"append","","",229,null],[11,"truncate","","",229,null],[11,"create","","",229,null],[11,"mode","","",229,null],[11,"open","","",235,{"inputs":[{"name":"file"},{"name":"path"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"open_c","","",235,{"inputs":[{"name":"file"},{"name":"cstr"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"file_attr","","",235,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fsync","","",235,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"datasync","","",235,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"truncate","","",235,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read","","",235,null],[11,"write","","",235,null],[11,"flush","","",235,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",235,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fd","","",235,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",235,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"new","","",236,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"mkdir","","",236,{"inputs":[{"name":"dirbuilder"},{"name":"path"}],"output":{"name":"result"}}],[11,"set_mode","","",236,null],[11,"fmt","","",235,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys::mutex","",237,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","",237,null],[11,"unlock","","",237,null],[11,"try_lock","","",237,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"destroy","","",237,null],[11,"uninitialized","","",238,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"reentrantmutex"}}],[11,"init","","",238,null],[11,"lock","","",238,null],[11,"try_lock","","",238,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"bool"}}],[11,"unlock","","",238,null],[11,"destroy","","",238,null],[11,"new","std::sys::net","",239,{"inputs":[{"name":"socket"},{"name":"socketaddr"},{"name":"i32"}],"output":{"name":"result"}}],[11,"accept","","",239,null],[11,"duplicate","","",239,{"inputs":[{"name":"socket"}],"output":{"name":"result"}}],[11,"read","","",239,null],[11,"set_timeout","","",239,{"inputs":[{"name":"socket"},{"name":"option"},{"name":"i32"}],"output":{"name":"result"}}],[11,"timeout","","",239,{"inputs":[{"name":"socket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"next","std::sys::os","",240,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",240,null],[11,"fmt","","",241,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",241,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",241,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",242,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",242,null],[11,"len","","",242,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",243,{"inputs":[{"name":"env"}],"output":{"name":"option"}}],[11,"size_hint","","",243,null],[11,"hash","std::sys::os_str","",244,null],[11,"clone","","",244,{"inputs":[{"name":"buf"}],"output":{"name":"buf"}}],[11,"fmt","","",245,{"inputs":[{"name":"slice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",244,{"inputs":[{"name":"buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_string","","",244,{"inputs":[{"name":"buf"},{"name":"string"}],"output":{"name":"buf"}}],[11,"as_slice","","",244,{"inputs":[{"name":"buf"}],"output":{"name":"slice"}}],[11,"into_string","","",244,{"inputs":[{"name":"buf"}],"output":{"name":"result"}}],[11,"push_slice","","",244,null],[11,"from_str","","",245,{"inputs":[{"name":"slice"},{"name":"str"}],"output":{"name":"slice"}}],[11,"to_str","","",245,{"inputs":[{"name":"slice"}],"output":{"name":"option"}}],[11,"to_string_lossy","","",245,{"inputs":[{"name":"slice"}],"output":{"name":"cow"}}],[11,"to_owned","","",245,{"inputs":[{"name":"slice"}],"output":{"name":"buf"}}],[11,"from_fd","std::sys::pipe","",246,{"inputs":[{"name":"anonpipe"},{"name":"i32"}],"output":{"name":"anonpipe"}}],[11,"read","","",246,null],[11,"write","","",246,null],[11,"raw","","",246,{"inputs":[{"name":"anonpipe"}],"output":{"name":"i32"}}],[11,"fd","","",246,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",246,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"clone","std::sys::process","",247,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"new","","",247,{"inputs":[{"name":"command"},{"name":"osstr"}],"output":{"name":"command"}}],[11,"arg","","",247,null],[11,"args","","",247,null],[11,"env","","",247,null],[11,"env_remove","","",247,null],[11,"env_clear","","",247,null],[11,"cwd","","",247,null],[11,"fmt","","",248,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",248,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",248,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",248,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","",248,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","",248,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",248,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","",249,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"spawn","","",249,{"inputs":[{"name":"process"},{"name":"command"},{"name":"stdio"},{"name":"stdio"},{"name":"stdio"}],"output":{"name":"result"}}],[11,"id","","",249,{"inputs":[{"name":"process"}],"output":{"name":"u32"}}],[11,"wait","","",249,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"try_wait","","",249,{"inputs":[{"name":"process"}],"output":{"name":"option"}}],[11,"new","std::sys::rwlock","",250,{"inputs":[{"name":"rwlock"}],"output":{"name":"rwlock"}}],[11,"read","","",250,null],[11,"try_read","","",250,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","",250,null],[11,"try_write","","",250,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","",250,null],[11,"write_unlock","","",250,null],[11,"destroy","","",250,null],[11,"new","std::sys::stack_overflow","",251,{"inputs":[{"name":"handler"}],"output":{"name":"handler"}}],[11,"drop","","",251,null],[11,"new","std::sys::thread","",252,{"inputs":[{"name":"thread"},{"name":"usize"},{"name":"box"}],"output":{"name":"result"}}],[11,"yield_now","","",252,null],[11,"set_name","","",252,null],[11,"sleep","","",252,null],[11,"join","","",252,null],[11,"drop","","",252,null],[11,"now","std::sys::time::inner","",253,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"new","std::sys::stdio","",254,{"inputs":[{"name":"stdin"}],"output":{"name":"result"}}],[11,"read","","",254,null],[11,"new","","",255,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write","","",255,null],[11,"new","","",256,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write","","",256,null],[11,"write","","",256,null],[11,"flush","","",256,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"new","std::rand::os::imp","Create a new `OsRng`.",257,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",257,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",257,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",257,null],[11,"new","std::rand::reader","Create a new `ReaderRng` from a `Read`.",258,{"inputs":[{"name":"readerrng"},{"name":"r"}],"output":{"name":"readerrng"}}],[11,"next_u32","","",258,{"inputs":[{"name":"readerrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",258,{"inputs":[{"name":"readerrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",258,null],[11,"clone","std::rand","",259,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",259,{"inputs":[{"name":"stdrng"}],"output":{"name":"result"}}],[11,"next_u32","","",259,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",259,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",259,null],[11,"from_seed","","",259,null],[11,"reseed","","",260,null],[11,"clone","","",261,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",261,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",261,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",261,null],[11,"new","alloc::rc","Constructs a new `Rc<T>`.",262,{"inputs":[{"name":"rc"},{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc<T>` has only one strong reference.\nThis will succeed even if there are outstanding weak references.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Downgrades the `Rc<T>` to a `Weak<T>` reference.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak<T>` values that share\nthe same inner value.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc<T>` has\none strong reference and no weak references.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"make_unique","","",262,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"make_mut","","Make a mutable reference into the given `Rc<T>` by cloning the inner\ndata if the `Rc<T>` doesn't have one strong reference and no weak\nreferences.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",262,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Rc<T>`.",262,null],[11,"clone","","Makes a clone of the `Rc<T>`.",262,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"default","","Creates a new `Rc<T>`, with the `Default` value for `T`.",262,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc<T>`s.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Rc<T>`s.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Rc<T>`s.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Rc<T>`s.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"le","","'Less-than or equal to' comparison for two `Rc<T>`s.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Rc<T>`s.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ge","","'Greater-than or equal to' comparison for two `Rc<T>`s.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"cmp","","Comparison for two `Rc<T>`s.",262,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"ordering"}}],[11,"hash","","",262,null],[11,"fmt","","",262,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",262,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",262,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",263,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Weak<T>`.",263,null],[11,"clone","","Makes a clone of the `Weak<T>`.",263,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"fmt","","",263,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",262,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"as_ref","","",262,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"fmt","core::cmp","",264,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",264,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",264,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",264,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",264,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",264,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",264,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"hash","core::marker","",265,null],[11,"eq","","",265,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",265,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",265,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",265,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"fmt","core::simd","",266,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",266,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",267,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",267,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",268,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",268,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",269,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",269,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",270,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",270,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",271,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",271,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",272,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",272,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",273,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",273,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",274,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",274,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",275,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",275,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"add","","",270,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"add","","",271,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"add","","",272,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"add","","",273,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"add","","",266,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"add","","",267,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"add","","",268,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"add","","",269,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"add","","",274,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"add","","",275,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"sub","","",270,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"sub","","",271,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"sub","","",272,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"sub","","",273,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"sub","","",266,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"sub","","",267,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"sub","","",268,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"sub","","",269,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"sub","","",274,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"sub","","",275,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"mul","","",270,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"mul","","",271,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"mul","","",272,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"mul","","",273,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"mul","","",266,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"mul","","",267,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"mul","","",268,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"mul","","",269,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"mul","","",274,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"mul","","",275,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"div","","",274,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"div","","",275,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"shl","","",270,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shl","","",271,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shl","","",272,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shl","","",273,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shl","","",266,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shl","","",267,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shl","","",268,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shl","","",269,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"shr","","",270,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shr","","",271,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shr","","",272,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shr","","",273,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shr","","",266,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shr","","",267,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shr","","",268,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shr","","",269,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitand","","",270,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitand","","",271,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitand","","",272,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitand","","",273,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitand","","",266,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitand","","",267,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitand","","",268,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitand","","",269,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitor","","",270,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitor","","",271,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitor","","",272,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitor","","",273,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitor","","",266,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitor","","",267,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitor","","",268,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitor","","",269,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitxor","","",270,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitxor","","",271,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitxor","","",272,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitxor","","",273,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitxor","","",266,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitxor","","",267,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitxor","","",268,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitxor","","",269,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"next","rustc_unicode::char","",276,{"inputs":[{"name":"tolowercase"}],"output":{"name":"option"}}],[11,"next","","",277,{"inputs":[{"name":"touppercase"}],"output":{"name":"option"}}],[11,"next","","",278,{"inputs":[{"name":"casemappingiter"}],"output":{"name":"option"}}],[11,"clone","","",279,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"decodeutf16"}}],[11,"next","","",279,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"option"}}],[11,"size_hint","","",279,null],[11,"borrow","collections::vec","",65,null],[11,"borrow_mut","","",65,null],[11,"eq","core::ops","",280,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",280,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",280,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",280,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",281,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",281,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",281,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",281,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",282,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",282,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",282,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",282,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",283,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",283,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",283,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",283,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::result","",284,null],[11,"fmt","","",284,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",284,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",284,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",284,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",284,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",284,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",284,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",284,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",284,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",284,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",284,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",284,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",284,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",284,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",284,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",284,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",284,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",284,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",284,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",284,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",284,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",284,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",284,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",285,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",285,null],[11,"next_back","","",285,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",285,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",286,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",286,null],[11,"next_back","","",286,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",287,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",287,null],[11,"next_back","","",287,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",284,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",288,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",288,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",288,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",288,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",288,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",288,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",288,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",289,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",289,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",289,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",289,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",290,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",290,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",290,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",290,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",290,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",290,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",290,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",290,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",290,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",291,null],[11,"clone","","",291,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",292,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",292,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",292,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",292,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",293,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",293,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",294,null],[11,"deref","","",293,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",293,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",295,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",295,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",295,null],[11,"clone","collections::str","",296,{"inputs":[{"name":"utf16units"}],"output":{"name":"utf16units"}}],[11,"next","","",296,{"inputs":[{"name":"utf16units"}],"output":{"name":"option"}}],[11,"size_hint","","",296,null],[11,"borrow","collections::string","",86,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"fmt","core::str::pattern","",297,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",297,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",297,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",297,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",298,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",299,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",298,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",298,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",298,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",300,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",300,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",300,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",300,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",300,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",300,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",300,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",300,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",301,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",301,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",301,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",301,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",301,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",301,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",301,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",301,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",302,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",302,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",302,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",302,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",302,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",302,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",302,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",302,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",303,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",303,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",304,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",304,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",305,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",305,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",303,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",303,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",303,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",303,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",303,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",306,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",306,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",307,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",307,null],[11,"matching","","",307,null],[11,"use_early_reject","","",308,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",308,null],[11,"matching","","",308,null],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",309,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",309,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",309,null],[11,"finish","","",309,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",309,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",309,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"borrow","collections::borrow","",310,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"clone","","",310,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",310,null],[11,"into_owned","","Extracts the owned data.",310,null],[11,"deref","","",310,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"cmp","","",310,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"ordering"}}],[11,"eq","","",310,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",310,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","","",310,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",310,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",310,null],[11,"into_cow","","",310,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"as_ref","","",310,{"inputs":[{"name":"cow"}],"output":{"name":"t"}}],[11,"new","collections::vec","Constructs a new, empty `Vec<T>`.",65,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec<T>` with the specified capacity.",65,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec<T>` directly from the raw components of another vector.",65,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",65,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec<T>`. The collection may reserve more space to avoid\nfrequent reallocations.",65,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec<T>`. Does nothing if the capacity is already\nsufficient.",65,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",65,null],[11,"into_boxed_slice","","Converts the vector into Box<[T]>.",65,{"inputs":[{"name":"vec"}],"output":{"name":"box"}}],[11,"truncate","","Shorten a vector, dropping excess elements.",65,null],[11,"as_slice","","Extracts a slice containing the entire vector.",65,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",65,null],[11,"set_len","","Sets the length of a vector.",65,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",65,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after position `i` one position to the right.",65,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after position `index` one position to the left.",65,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"retain","","Retains only the elements specified by the predicate.",65,null],[11,"push","","Appends an element to the back of a collection.",65,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",65,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",65,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",65,{"inputs":[{"name":"vec"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the vector, removing all values.",65,null],[11,"len","","Returns the number of elements in the vector.",65,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector contains no elements.",65,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"split_off","","Splits the collection into two at the given index.",65,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",65,null],[11,"push_all","","Appends all elements in a slice to the `Vec`.",65,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",65,null],[11,"clone","","",65,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"clone_from","","",65,null],[11,"hash","","",65,null],[11,"index","","",65,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",65,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index","","",65,null],[11,"index","","",65,null],[11,"index","","",65,null],[11,"index","","",65,null],[11,"index_mut","","",65,null],[11,"index_mut","","",65,null],[11,"index_mut","","",65,null],[11,"index_mut","","",65,null],[11,"deref","","",65,null],[11,"deref_mut","","",65,null],[11,"from_iter","","",65,{"inputs":[{"name":"vec"},{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",65,{"inputs":[{"name":"vec"}],"output":{"name":"intoiter"}}],[11,"extend","","",65,null],[11,"extend","","",65,null],[11,"eq","","",65,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","collections::borrow","",310,null],[11,"ne","","",310,null],[11,"eq","","",310,null],[11,"ne","","",310,null],[11,"eq","","",310,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",310,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","collections::vec","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"partial_cmp","","",65,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"option"}}],[11,"cmp","","",65,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"ordering"}}],[11,"drop","","",65,null],[11,"default","","",65,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"fmt","","",65,{"inputs":[{"name":"vec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",65,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_mut","","",65,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_ref","","",65,null],[11,"as_mut","","",65,null],[11,"from","","",65,null],[11,"from","","",65,{"inputs":[{"name":"vec"},{"name":"str"}],"output":{"name":"vec"}}],[11,"from_iter","collections::borrow","",310,{"inputs":[{"name":"cow"},{"name":"i"}],"output":{"name":"cow"}}],[11,"into_cow","collections::vec","",65,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"next","","",311,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",311,null],[11,"count","","",311,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next_back","","",311,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",311,null],[11,"next","","",312,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",312,null],[11,"next_back","","",312,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","","",312,null],[11,"clone","core::iter","",313,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",313,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",313,null],[11,"next_back","","",313,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",314,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",314,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",314,null],[11,"next_back","","",314,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",315,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",315,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",315,null],[11,"clone","","",316,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"clone","","",317,{"inputs":[{"name":"chainstate"}],"output":{"name":"chainstate"}}],[11,"next","","",316,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",316,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",316,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",316,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",316,null],[11,"next_back","","",316,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",318,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",318,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",318,null],[11,"next_back","","",318,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",319,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",319,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",319,null],[11,"next_back","","",319,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",320,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",320,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",320,null],[11,"next_back","","",320,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",321,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",321,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",321,null],[11,"next_back","","",321,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",322,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",322,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",322,null],[11,"nth","","",322,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",322,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",322,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",323,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",323,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",323,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",323,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",323,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",323,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",323,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",323,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",324,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",324,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",324,null],[11,"clone","","",325,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",325,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",325,null],[11,"clone","","",326,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",326,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",326,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",326,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",326,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",326,null],[11,"clone","","",327,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",327,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",327,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",327,null],[11,"clone","","",328,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",328,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",328,null],[11,"clone","","",329,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",329,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",329,null],[11,"next_back","","",329,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",330,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",330,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",330,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",330,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",330,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",330,null],[11,"next_back","","",330,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",331,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",331,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",331,null],[11,"next_back","","",331,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",332,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",282,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",281,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",332,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",332,null],[11,"clone","","",333,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",333,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",333,null],[11,"next_back","","",333,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",332,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",332,null],[11,"next","core::ops","",281,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",281,null],[11,"next_back","","",281,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",282,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",334,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",334,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",334,null],[11,"next_back","","",334,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",335,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",335,null],[11,"next_back","","",335,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",335,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",335,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",335,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",336,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",336,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",336,null],[11,"next_back","","",336,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",336,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"cmp","collections::string","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"option"}}],[11,"lt","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"le","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"gt","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ge","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new string buffer initialized with the empty string.",86,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new string buffer with the given capacity.\nThe string will be able to hold exactly `capacity` bytes without\nreallocating. If `capacity` is 0, the string will not allocate.",86,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",86,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a `String`, including invalid characters.",86,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `None`\nif `v` contains any invalid data.",86,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",86,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",86,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",86,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Returns the underlying byte buffer, encoded as UTF-8.",86,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"as_str","","Extracts a string slice containing the entire string.",86,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"push_str","","Pushes the given string onto this string buffer.",86,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without\nreallocating.",86,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `String`. The collection may reserve more space to avoid\nfrequent reallocations.",86,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bytes to be\ninserted in the given `String`. Does nothing if the capacity is already\nsufficient.",86,null],[11,"shrink_to_fit","","Shrinks the capacity of this string buffer to match its length.",86,null],[11,"push","","Adds the given character to the end of the string.",86,null],[11,"as_bytes","","Works with the underlying buffer as a byte slice.",86,null],[11,"truncate","","Shortens a string to the specified length.",86,null],[11,"pop","","Removes the last character from the string buffer and returns it.\nReturns `None` if this string buffer is empty.",86,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"remove","","Removes the character from the string buffer at byte position `idx` and\nreturns it.",86,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"char"}}],[11,"insert","","Inserts a character into the string buffer at byte position `idx`.",86,null],[11,"as_mut_vec","","Views the string buffer as a mutable sequence of bytes.",86,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"len","","Returns the number of bytes in this string.",86,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the string contains no bytes",86,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"clear","","Truncates the string, returning it to 0 length.",86,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",86,{"inputs":[{"name":"string"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_boxed_str","","Converts the string into `Box<str>`.",86,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_boxed_slice","","Converts the string into `Box<str>`.",86,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_bytes","","Consumes this error, returning the bytes that were attempted to make a\n`String` with.",7,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"vec"}}],[11,"utf8_error","","Access the underlying UTF8-error that was the cause of this error.",7,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"utf8error"}}],[11,"fmt","","",7,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",86,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"clone_from","","",86,null],[11,"from_iter","","",86,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",86,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",86,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",86,null],[11,"extend","","",86,null],[11,"extend","","",86,null],[11,"extend","","",86,null],[11,"eq","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",310,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",310,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",310,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",310,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",86,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",310,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",310,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"default","collections::string","",86,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",86,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",86,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",86,null],[11,"add","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"index","","",86,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index","","",86,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index","","",86,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index","","",86,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"index_mut","","",86,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index_mut","","",86,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index_mut","","",86,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index_mut","","",86,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"deref","","",86,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"deref_mut","","",86,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"from_str","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",337,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"fmt","","",337,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",337,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"as_ref","","",86,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_ref","","",86,null],[11,"from","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",310,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",310,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",86,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"into_cow","","",86,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"write_str","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",86,{"inputs":[{"name":"string"},{"name":"char"}],"output":{"name":"result"}}],[11,"drop","","",338,null],[11,"next","","",338,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",338,null],[11,"next_back","","",338,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"fmt","shared_library::dynamic_library","",339,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",339,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",339,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",339,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",339,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",339,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",339,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",339,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",340,null],[11,"fmt","","",340,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",340,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",340,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",340,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",340,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"hash","core::option","",341,null],[11,"fmt","","",341,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",341,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"is_some","","Returns `true` if the option is a `Some` value",341,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",341,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",341,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",341,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",341,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",341,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",341,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",341,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",341,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",341,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",341,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",341,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",341,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",341,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",341,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",341,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",341,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",341,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",341,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",341,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",341,null],[11,"cloned","","Maps an `Option<&T>` to an `Option<T>` by cloning the contents of the\noption.",341,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",341,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","","",341,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",341,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",342,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",342,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",342,null],[11,"next_back","","",342,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",343,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",343,null],[11,"next_back","","",343,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",343,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",344,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",344,null],[11,"next_back","","",344,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",345,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",345,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",345,null],[11,"next_back","","",345,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",341,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","alloc::boxed","",346,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"exchangeheapsingleton"}}],[11,"pointer","","",347,null],[11,"make_place","","",347,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"intermediatebox"}}],[11,"finalize","","",347,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"finalize","","",2,{"inputs":[{"name":"box"},{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",346,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"intermediatebox"}}],[11,"drop","","",347,null],[11,"new","","Allocates memory on the heap and then moves `x` into it.",2,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from the raw pointer.",2,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",2,null],[11,"default","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"default","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box's contents.",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`'s contents into `self` without creating a new allocation.",2,null],[11,"clone","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"eq","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",2,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"next","","",2,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",2,null],[11,"next_back","","",2,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"call_once","","",2,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"call_once","","",2,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"clone","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"borrow","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"borrow_mut","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_ref","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_mut","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",348,null],[11,"get","","Dereferences the content.",348,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",348,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",348,null],[11,"fmt","","",348,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",349,null],[11,"clone","","",349,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",349,null],[11,"fmt","","",349,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","core::raw","",350,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",351,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"clone","core::fmt::rt::v1","",352,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",353,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",354,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",354,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",354,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",355,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",356,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"drop","shared_library::dynamic_library","",357,{"inputs":[{"name":"dynamiclibrary"}],"output":null}],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",357,{"inputs":[{"name":"dynamiclibrary"},{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process's search path for dynamic libraries",357,{"inputs":[{"name":"dynamiclibrary"},{"name":"path"}],"output":null}],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",357,null],[11,"envvar","","Returns the environment variable for this process's dynamic library\nsearch path",357,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",357,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"vec"}}],[11,"symbol","","Access the value at the symbol of the dynamic library",357,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}],[11,"clone","shared_library","",0,{"inputs":[{"name":"loadingerror"}],"output":{"name":"loadingerror"}}],[11,"fmt","","",0,{"inputs":[{"name":"loadingerror"},{"name":"formatter"}],"output":{"name":"result"}}],[14,"shared_library!","","",null,null]],"paths":[[4,"LoadingError"],[3,"Mutex"],[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[8,"Error"],[3,"EscapeDefault"],[3,"Wrapping"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"ScopedKey"],[3,"KeyInner"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"RawBucket"],[3,"Bucket"],[3,"SafeHash"],[3,"FullBucket"],[3,"EmptyBucket"],[4,"BucketState"],[3,"GapThenFull"],[3,"RawTable"],[3,"RawBuckets"],[3,"RevMoveBuckets"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DefaultResizePolicy"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"DefaultState"],[3,"Iter"],[3,"IntoIter"],[3,"Rawlink"],[3,"LinkedList"],[3,"IterMut"],[3,"BinaryHeap"],[3,"Hole"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DynamicLibrary"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"WalkDir"],[3,"Path"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"InternalBufWriter"],[3,"Cursor"],[3,"Custom"],[4,"ErrorKind"],[4,"Repr"],[3,"Lazy"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"StdinRaw"],[3,"StdoutRaw"],[3,"StderrRaw"],[4,"Maybe"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Broadcast"],[3,"Chain"],[3,"Take"],[3,"Tee"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[4,"Prefix"],[4,"State"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"SignalToken"],[3,"WaitToken"],[3,"Packet"],[4,"StartResult"],[3,"Select"],[3,"Handle"],[3,"Packets"],[3,"Packet"],[3,"Packet"],[4,"Failure"],[3,"Packet"],[3,"Queue"],[3,"Queue"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Semaphore"],[3,"SemaphoreGuard"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Duration"],[3,"Condvar"],[3,"EHContext"],[3,"DwarfReader"],[4,"_Unwind_Action"],[4,"_Unwind_Reason_Code"],[3,"Mutex"],[3,"LookupHost"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[3,"Flag"],[3,"PoisonError"],[4,"TryLockError"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"RWLock"],[3,"StaticKey"],[3,"Key"],[3,"CodePoint"],[3,"Wtf8Buf"],[3,"Wtf8"],[3,"Wtf8CodePoints"],[3,"EncodeWide"],[3,"Condvar"],[3,"FileDesc"],[3,"FileAttr"],[3,"OpenOptions"],[3,"FilePermissions"],[3,"FileType"],[3,"ReadDir"],[3,"Dir"],[3,"DirEntry"],[3,"File"],[3,"DirBuilder"],[3,"Mutex"],[3,"ReentrantMutex"],[3,"Socket"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"Env"],[3,"Buf"],[3,"Slice"],[3,"AnonPipe"],[3,"Command"],[4,"ExitStatus"],[3,"Process"],[3,"RWLock"],[3,"Handler"],[3,"Thread"],[3,"SteadyTime"],[3,"Stdin"],[3,"Stdout"],[3,"Stderr"],[3,"OsRng"],[3,"ReaderRng"],[3,"StdRng"],[3,"ThreadRngReseeder"],[3,"ThreadRng"],[3,"Rc"],[3,"Weak"],[4,"Ordering"],[3,"PhantomData"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"ToLowercase"],[3,"ToUppercase"],[4,"CaseMappingIter"],[3,"DecodeUtf16"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"Utf16Units"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"SipHasher"],[4,"Cow"],[3,"IntoIter"],[3,"Drain"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[4,"ChainState"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[4,"ParseError"],[3,"Drain"],[8,"Any"],[3,"TypeId"],[4,"Option"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"Unique"],[3,"Shared"],[3,"Slice"],[3,"TraitObject"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"DynamicLibrary"]]};
searchIndex['smallvec'] = {"items":[[0,"","smallvec","Small vectors in various sizes. These store a certain number of elements inline and fall back\nto the heap for larger allocations.",null,null],[3,"SmallVecMoveIterator","","",null,null],[3,"SmallVec","","",null,null],[6,"SmallVec1","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec2","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec4","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec8","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec16","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec24","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec32","","Deprecated alias to ease transition from an earlier version.",null,null],[8,"VecLike","","",null,null],[10,"len","","",0,{"inputs":[{"name":"veclike"}],"output":{"name":"usize"}}],[10,"push","","",0,{"inputs":[{"name":"veclike"},{"name":"t"}],"output":null}],[8,"Array","","",null,null],[16,"Item","","",1,null],[10,"size","","",1,{"inputs":[{"name":"array"}],"output":{"name":"usize"}}],[10,"ptr","","",1,null],[10,"ptr_mut","","",1,null],[11,"len","collections::vec","",2,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"push","","",2,{"inputs":[{"name":"vec"},{"name":"t"}],"output":null}],[11,"next","smallvec","",3,{"inputs":[{"name":"smallvecmoveiterator"}],"output":{"name":"option"}}],[11,"drop","","",3,{"inputs":[{"name":"smallvecmoveiterator"}],"output":null}],[11,"inline_size","","",4,{"inputs":[{"name":"smallvec"}],"output":{"name":"usize"}}],[11,"len","","",4,{"inputs":[{"name":"smallvec"}],"output":{"name":"usize"}}],[11,"is_empty","","",4,{"inputs":[{"name":"smallvec"}],"output":{"name":"bool"}}],[11,"capacity","","",4,{"inputs":[{"name":"smallvec"}],"output":{"name":"usize"}}],[11,"spilled","","",4,{"inputs":[{"name":"smallvec"}],"output":{"name":"bool"}}],[11,"into_iter","","NB: For efficiency reasons (avoiding making a second copy of the inline elements), this\nactually clears out the original array instead of moving it.\nFIXME: Rename this to `drain`? It’s more like `Vec::drain` than `Vec::into_iter`.",4,{"inputs":[{"name":"smallvec"}],"output":{"name":"smallvecmoveiterator"}}],[11,"push","","",4,{"inputs":[{"name":"smallvec"},{"name":"item"}],"output":null}],[11,"push_all_move","","",4,{"inputs":[{"name":"smallvec"},{"name":"v"}],"output":null}],[11,"pop","","",4,{"inputs":[{"name":"smallvec"}],"output":{"name":"option"}}],[11,"grow","","",4,{"inputs":[{"name":"smallvec"},{"name":"usize"}],"output":null}],[11,"deref","","",4,null],[11,"deref_mut","","",4,null],[11,"index","","",4,{"inputs":[{"name":"smallvec"},{"name":"usize"}],"output":{"name":"item"}}],[11,"index_mut","","",4,{"inputs":[{"name":"smallvec"},{"name":"usize"}],"output":{"name":"item"}}],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"len","","",4,{"inputs":[{"name":"smallvec"}],"output":{"name":"usize"}}],[11,"push","","",4,{"inputs":[{"name":"smallvec"},{"name":"item"}],"output":null}],[11,"from_iter","","",4,{"inputs":[{"name":"smallvec"},{"name":"i"}],"output":{"name":"smallvec"}}],[11,"extend","","",4,{"inputs":[{"name":"smallvec"},{"name":"i"}],"output":null}],[11,"fmt","","",4,{"inputs":[{"name":"smallvec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",4,{"inputs":[{"name":"smallvec"}],"output":{"name":"smallvec"}}],[11,"drop","","",4,{"inputs":[{"name":"smallvec"}],"output":null}],[11,"clone","","",4,{"inputs":[{"name":"smallvec"}],"output":{"name":"smallvec"}}]],"paths":[[8,"VecLike"],[8,"Array"],[3,"Vec"],[3,"SmallVecMoveIterator"],[3,"SmallVec"]]};
searchIndex['memmap'] = {"items":[[0,"","memmap","A cross-platform Rust API for memory maps.",null,null],[3,"MmapOptions","","",null,null],[12,"stack","","Indicates that the memory map should be suitable for a stack.",0,null],[3,"Mmap","","A memory-mapped buffer.",null,null],[3,"MmapView","","A view of a memory map.",null,null],[3,"MmapViewSync","","A thread-safe view of a memory map.",null,null],[4,"Protection","","Memory map protection.",null,null],[13,"Read","","A read-only memory map. Writes to the memory map will result in a panic.",1,null],[13,"ReadWrite","","A read-write memory map. Writes to the memory map will be reflected in\nthe file after a call to `Mmap::flush` or after the `Mmap` is dropped.",1,null],[13,"ReadCopy","","A read, copy-on-write memory map. Writes to the memory map will not be\ncarried through to the underlying file. It is unspecified whether\nchanges made to the file after the memory map is created will be\nvisible.",1,null],[11,"eq","","",1,{"inputs":[{"name":"protection"},{"name":"protection"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"protection"},{"name":"protection"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"protection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"protection"}],"output":{"name":"protection"}}],[11,"write","","Returns `true` if the `Protection` is writable.",1,{"inputs":[{"name":"protection"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"mmapoptions"},{"name":"mmapoptions"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"mmapoptions"},{"name":"mmapoptions"}],"output":{"name":"bool"}}],[11,"default","","",0,{"inputs":[{"name":"mmapoptions"}],"output":{"name":"mmapoptions"}}],[11,"fmt","","",0,{"inputs":[{"name":"mmapoptions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"mmapoptions"}],"output":{"name":"mmapoptions"}}],[11,"open","","Opens a file-backed memory map.",2,{"inputs":[{"name":"mmap"},{"name":"file"},{"name":"protection"}],"output":{"name":"result"}}],[11,"open_path","","Opens a file-backed memory map.",2,{"inputs":[{"name":"mmap"},{"name":"p"},{"name":"protection"}],"output":{"name":"result"}}],[11,"open_with_offset","","Opens a file-backed memory map with the specified offset and length.",2,{"inputs":[{"name":"mmap"},{"name":"file"},{"name":"protection"},{"name":"usize"},{"name":"usize"}],"output":{"name":"result"}}],[11,"anonymous","","Opens an anonymous memory map.",2,{"inputs":[{"name":"mmap"},{"name":"usize"},{"name":"protection"}],"output":{"name":"result"}}],[11,"anonymous_with_options","","Opens an anonymous memory map with the provided options.",2,{"inputs":[{"name":"mmap"},{"name":"usize"},{"name":"protection"},{"name":"mmapoptions"}],"output":{"name":"result"}}],[11,"flush","","Flushes outstanding memory map modifications to disk.",2,{"inputs":[{"name":"mmap"}],"output":{"name":"result"}}],[11,"flush_async","","Asynchronously flushes outstanding memory map modifications to disk.",2,{"inputs":[{"name":"mmap"}],"output":{"name":"result"}}],[11,"flush_range","","Flushes outstanding memory map modifications in the range to disk.",2,{"inputs":[{"name":"mmap"},{"name":"usize"},{"name":"usize"}],"output":{"name":"result"}}],[11,"flush_async_range","","Asynchronously flushes outstanding memory map modifications in the range\nto disk.",2,{"inputs":[{"name":"mmap"},{"name":"usize"},{"name":"usize"}],"output":{"name":"result"}}],[11,"len","","Returns the length of the memory map.",2,{"inputs":[{"name":"mmap"}],"output":{"name":"usize"}}],[11,"ptr","","Returns a pointer to the mapped memory.",2,null],[11,"mut_ptr","","Returns a pointer to the mapped memory.",2,null],[11,"as_slice","","Returns the memory mapped file as an immutable slice.",2,null],[11,"as_mut_slice","","Returns the memory mapped file as a mutable slice.",2,null],[11,"into_view","","Creates a splittable mmap view from the mmap.",2,{"inputs":[{"name":"mmap"}],"output":{"name":"mmapview"}}],[11,"into_view_sync","","Creates a thread-safe splittable mmap view from the mmap.",2,{"inputs":[{"name":"mmap"}],"output":{"name":"mmapviewsync"}}],[11,"split_at","","Split the view into disjoint pieces at the specified offset.",3,{"inputs":[{"name":"mmapview"},{"name":"usize"}],"output":{"name":"result"}}],[11,"restrict","","Restricts the range of the view to the provided offset and length.",3,{"inputs":[{"name":"mmapview"},{"name":"usize"},{"name":"usize"}],"output":{"name":"result"}}],[11,"flush","","Flushes outstanding view modifications to disk.",3,{"inputs":[{"name":"mmapview"}],"output":{"name":"result"}}],[11,"flush_async","","Asynchronously flushes outstanding memory map view modifications to\ndisk.",3,{"inputs":[{"name":"mmapview"}],"output":{"name":"result"}}],[11,"len","","Returns the length of the memory map view.",3,{"inputs":[{"name":"mmapview"}],"output":{"name":"usize"}}],[11,"ptr","","Returns a shared pointer to the mapped memory.",3,null],[11,"mut_ptr","","Returns a mutable pointer to the mapped memory.",3,null],[11,"as_slice","","Returns the memory mapped file as an immutable slice.",3,null],[11,"as_mut_slice","","Returns the memory mapped file as a mutable slice.",3,null],[11,"clone","","Clones the view of the memory map.",3,{"inputs":[{"name":"mmapview"}],"output":{"name":"mmapview"}}],[11,"split_at","","Split the view into disjoint pieces at the specified offset.",4,{"inputs":[{"name":"mmapviewsync"},{"name":"usize"}],"output":{"name":"result"}}],[11,"restrict","","Restricts the range of this view to the provided offset and length.",4,{"inputs":[{"name":"mmapviewsync"},{"name":"usize"},{"name":"usize"}],"output":{"name":"result"}}],[11,"flush","","Flushes outstanding view modifications to disk.",4,{"inputs":[{"name":"mmapviewsync"}],"output":{"name":"result"}}],[11,"flush_async","","Asynchronously flushes outstanding memory map view modifications to disk.",4,{"inputs":[{"name":"mmapviewsync"}],"output":{"name":"result"}}],[11,"len","","Returns the length of the memory map view.",4,{"inputs":[{"name":"mmapviewsync"}],"output":{"name":"usize"}}],[11,"ptr","","Returns a shared pointer to the mapped memory.",4,null],[11,"mut_ptr","","Returns a mutable pointer to the mapped memory.",4,null],[11,"as_slice","","Returns the memory mapped file as an immutable slice.",4,null],[11,"as_mut_slice","","Returns the memory mapped file as a mutable slice.",4,null],[11,"clone","","Clones the view of the memory map.",4,{"inputs":[{"name":"mmapviewsync"}],"output":{"name":"mmapviewsync"}}]],"paths":[[3,"MmapOptions"],[4,"Protection"],[3,"Mmap"],[3,"MmapView"],[3,"MmapViewSync"]]};
searchIndex['fs2'] = {"items":[[0,"","fs2","",null,null],[5,"lock_contended_error","","Returns the error that a call to a try lock method on a contended file will\nreturn.",null,{"inputs":[],"output":{"name":"error"}}],[5,"free_space","","Returns the number of free bytes in the file system containing the provided\npath.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"available_space","","Returns the available space in bytes to non-priveleged users in the file\nsystem containing the provided path.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"total_space","","Returns the total space in bytes in the file system containing the provided\npath.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"allocation_granularity","","Returns the filesystem's disk space allocation granularity in bytes.\nThe provided path may be for any file in the filesystem.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[8,"FileExt","","Extension trait for `File` providing duplication and locking methods.",null,null],[10,"duplicate","","Returns a duplicate instance of the file.",0,{"inputs":[{"name":"fileext"}],"output":{"name":"result"}}],[10,"allocated_size","","Returns the amount of physical space allocated for a file.",0,{"inputs":[{"name":"fileext"}],"output":{"name":"result"}}],[10,"allocate","","Ensures that at least `len` bytes of disk space are allocated for the\nfile, and the file size is at least `len` bytes. After a successful call\nto `allocate`, subsequent writes to the file within the specified length\nare guaranteed not to fail because of lack of disk space.",0,{"inputs":[{"name":"fileext"},{"name":"u64"}],"output":{"name":"result"}}],[10,"lock_shared","","Locks the file for shared usage, blocking if the file is currently\nlocked exclusively.",0,{"inputs":[{"name":"fileext"}],"output":{"name":"result"}}],[10,"lock_exclusive","","Locks the file for exclusive usage, blocking if the file is currently\nlocked.",0,{"inputs":[{"name":"fileext"}],"output":{"name":"result"}}],[10,"try_lock_shared","","Locks the file for shared usage, or returns a an error if the file is\ncurrently locked (see `lock_contended_error`).",0,{"inputs":[{"name":"fileext"}],"output":{"name":"result"}}],[10,"try_lock_exclusive","","Locks the file for shared usage, or returns a an error if the file is\ncurrently locked (see `lock_contended_error`).",0,{"inputs":[{"name":"fileext"}],"output":{"name":"result"}}],[10,"unlock","","Unlocks the file.",0,{"inputs":[{"name":"fileext"}],"output":{"name":"result"}}],[11,"duplicate","std::fs","",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"allocated_size","","",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"allocate","","",1,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"lock_shared","","",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"lock_exclusive","","",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"try_lock_shared","","",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"try_lock_exclusive","","",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"unlock","","",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}]],"paths":[[8,"FileExt"],[3,"File"]]};
searchIndex['backtrace_sys'] = {"items":[[0,"","backtrace_sys","",null,null],[4,"backtrace_state","","",null,null],[5,"backtrace_create_state","","",null,null],[5,"backtrace_syminfo","","",null,null],[5,"backtrace_pcinfo","","",null,null],[6,"backtrace_syminfo_callback","","",null,null],[6,"backtrace_full_callback","","",null,null],[6,"backtrace_error_callback","","",null,null]],"paths":[]};
searchIndex['kernel32'] = {"items":[],"paths":[]};
searchIndex['dbghelp'] = {"items":[],"paths":[]};
searchIndex['advapi32'] = {"items":[],"paths":[]};
searchIndex['winapi'] = {"items":[],"paths":[]};
searchIndex['libc'] = {"items":[[0,"","libc","Crate docs",null,null],[3,"utimbuf","","",null,null],[12,"actime","","",0,null],[12,"modtime","","",0,null],[3,"timeval","","",null,null],[12,"tv_sec","","",1,null],[12,"tv_usec","","",1,null],[3,"timespec","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_nsec","","",2,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",3,null],[12,"rlim_max","","",3,null],[3,"rusage","","",null,null],[12,"ru_utime","","",4,null],[12,"ru_stime","","",4,null],[12,"ru_maxrss","","",4,null],[12,"ru_ixrss","","",4,null],[12,"ru_idrss","","",4,null],[12,"ru_isrss","","",4,null],[12,"ru_minflt","","",4,null],[12,"ru_majflt","","",4,null],[12,"ru_nswap","","",4,null],[12,"ru_inblock","","",4,null],[12,"ru_oublock","","",4,null],[12,"ru_msgsnd","","",4,null],[12,"ru_msgrcv","","",4,null],[12,"ru_nsignals","","",4,null],[12,"ru_nvcsw","","",4,null],[12,"ru_nivcsw","","",4,null],[3,"in_addr","","",null,null],[12,"s_addr","","",5,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",6,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",7,null],[12,"imr_interface","","",7,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",8,null],[12,"ipv6mr_interface","","",8,null],[3,"hostent","","",null,null],[12,"h_name","","",9,null],[12,"h_aliases","","",9,null],[12,"h_addrtype","","",9,null],[12,"h_length","","",9,null],[12,"h_addr_list","","",9,null],[3,"iovec","","",null,null],[12,"iov_base","","",10,null],[12,"iov_len","","",10,null],[3,"pollfd","","",null,null],[12,"fd","","",11,null],[12,"events","","",11,null],[12,"revents","","",11,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",12,null],[12,"sa_data","","",12,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",13,null],[12,"sin_port","","",13,null],[12,"sin_addr","","",13,null],[12,"sin_zero","","",13,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",14,null],[12,"sin6_port","","",14,null],[12,"sin6_flowinfo","","",14,null],[12,"sin6_addr","","",14,null],[12,"sin6_scope_id","","",14,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",15,null],[12,"sun_path","","",15,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",16,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",17,null],[12,"ai_family","","",17,null],[12,"ai_socktype","","",17,null],[12,"ai_protocol","","",17,null],[12,"ai_addrlen","","",17,null],[12,"ai_addr","","",17,null],[12,"ai_canonname","","",17,null],[12,"ai_next","","",17,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",18,null],[12,"sll_protocol","","",18,null],[12,"sll_ifindex","","",18,null],[12,"sll_hatype","","",18,null],[12,"sll_pkttype","","",18,null],[12,"sll_halen","","",18,null],[12,"sll_addr","","",18,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",19,null],[12,"tm_min","","",19,null],[12,"tm_hour","","",19,null],[12,"tm_mday","","",19,null],[12,"tm_mon","","",19,null],[12,"tm_year","","",19,null],[12,"tm_wday","","",19,null],[12,"tm_yday","","",19,null],[12,"tm_isdst","","",19,null],[12,"tm_gmtoff","","",19,null],[12,"tm_zone","","",19,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",20,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",21,null],[12,"dli_fbase","","",21,null],[12,"dli_sname","","",21,null],[12,"dli_saddr","","",21,null],[3,"epoll_event","","",null,null],[12,"events","","",22,null],[12,"u64","","",22,null],[3,"utsname","","",null,null],[12,"sysname","","",23,null],[12,"nodename","","",23,null],[12,"release","","",23,null],[12,"version","","",23,null],[12,"machine","","",23,null],[12,"domainname","","",23,null],[3,"dirent","","",null,null],[12,"d_ino","","",24,null],[12,"d_off","","",24,null],[12,"d_reclen","","",24,null],[12,"d_type","","",24,null],[12,"d_name","","",24,null],[3,"dirent64","","",null,null],[12,"d_ino","","",25,null],[12,"d_off","","",25,null],[12,"d_reclen","","",25,null],[12,"d_type","","",25,null],[12,"d_name","","",25,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",26,null],[12,"rlim_max","","",26,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",27,null],[12,"gl_pathv","","",27,null],[12,"gl_offs","","",27,null],[12,"gl_flags","","",27,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",28,null],[12,"ifa_name","","",28,null],[12,"ifa_flags","","",28,null],[12,"ifa_addr","","",28,null],[12,"ifa_netmask","","",28,null],[12,"ifa_ifu","","",28,null],[12,"ifa_data","","",28,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",29,null],[12,"pw_passwd","","",29,null],[12,"pw_uid","","",29,null],[12,"pw_gid","","",29,null],[12,"pw_gecos","","",29,null],[12,"pw_dir","","",29,null],[12,"pw_shell","","",29,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",30,null],[12,"f_frsize","","",30,null],[12,"f_blocks","","",30,null],[12,"f_bfree","","",30,null],[12,"f_bavail","","",30,null],[12,"f_files","","",30,null],[12,"f_ffree","","",30,null],[12,"f_favail","","",30,null],[12,"f_fsid","","",30,null],[12,"f_flag","","",30,null],[12,"f_namemax","","",30,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",31,null],[12,"nl_pid","","",31,null],[12,"nl_groups","","",31,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",32,null],[12,"dqb_bsoftlimit","","",32,null],[12,"dqb_curspace","","",32,null],[12,"dqb_ihardlimit","","",32,null],[12,"dqb_isoftlimit","","",32,null],[12,"dqb_curinodes","","",32,null],[12,"dqb_btime","","",32,null],[12,"dqb_itime","","",32,null],[12,"dqb_valid","","",32,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",33,null],[12,"ssi_errno","","",33,null],[12,"ssi_code","","",33,null],[12,"ssi_pid","","",33,null],[12,"ssi_uid","","",33,null],[12,"ssi_fd","","",33,null],[12,"ssi_tid","","",33,null],[12,"ssi_band","","",33,null],[12,"ssi_overrun","","",33,null],[12,"ssi_trapno","","",33,null],[12,"ssi_status","","",33,null],[12,"ssi_int","","",33,null],[12,"ssi_ptr","","",33,null],[12,"ssi_utime","","",33,null],[12,"ssi_stime","","",33,null],[12,"ssi_addr","","",33,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",34,null],[12,"mq_maxmsg","","",34,null],[12,"mq_msgsize","","",34,null],[12,"mq_curmsgs","","",34,null],[3,"cpu_set_t","","",null,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",35,null],[12,"sa_mask","","",35,null],[12,"sa_flags","","",35,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",36,null],[12,"ss_flags","","",36,null],[12,"ss_size","","",36,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",37,null],[12,"si_errno","","",37,null],[12,"si_code","","",37,null],[12,"_pad","","",37,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",38,null],[12,"gl_pathv","","",38,null],[12,"gl_offs","","",38,null],[12,"gl_flags","","",38,null],[3,"ucred","","",null,null],[12,"pid","","",39,null],[12,"uid","","",39,null],[12,"gid","","",39,null],[3,"statfs","","",null,null],[12,"f_type","","",40,null],[12,"f_bsize","","",40,null],[12,"f_blocks","","",40,null],[12,"f_bfree","","",40,null],[12,"f_bavail","","",40,null],[12,"f_files","","",40,null],[12,"f_ffree","","",40,null],[12,"f_fsid","","",40,null],[12,"f_namelen","","",40,null],[12,"f_frsize","","",40,null],[3,"msghdr","","",null,null],[12,"msg_name","","",41,null],[12,"msg_namelen","","",41,null],[12,"msg_iov","","",41,null],[12,"msg_iovlen","","",41,null],[12,"msg_control","","",41,null],[12,"msg_controllen","","",41,null],[12,"msg_flags","","",41,null],[3,"termios","","",null,null],[12,"c_iflag","","",42,null],[12,"c_oflag","","",42,null],[12,"c_cflag","","",42,null],[12,"c_lflag","","",42,null],[12,"c_line","","",42,null],[12,"c_cc","","",42,null],[12,"c_ispeed","","",42,null],[12,"c_ospeed","","",42,null],[3,"flock","","",null,null],[12,"l_type","","",43,null],[12,"l_whence","","",43,null],[12,"l_start","","",43,null],[12,"l_len","","",43,null],[12,"l_pid","","",43,null],[3,"sigset_t","","",null,null],[3,"stat","","",null,null],[12,"st_dev","","",44,null],[12,"st_ino","","",44,null],[12,"st_nlink","","",44,null],[12,"st_mode","","",44,null],[12,"st_uid","","",44,null],[12,"st_gid","","",44,null],[12,"st_rdev","","",44,null],[12,"st_size","","",44,null],[12,"st_blksize","","",44,null],[12,"st_blocks","","",44,null],[12,"st_atime","","",44,null],[12,"st_atime_nsec","","",44,null],[12,"st_mtime","","",44,null],[12,"st_mtime_nsec","","",44,null],[12,"st_ctime","","",44,null],[12,"st_ctime_nsec","","",44,null],[3,"stat64","","",null,null],[12,"st_dev","","",45,null],[12,"st_ino","","",45,null],[12,"st_nlink","","",45,null],[12,"st_mode","","",45,null],[12,"st_uid","","",45,null],[12,"st_gid","","",45,null],[12,"st_rdev","","",45,null],[12,"st_size","","",45,null],[12,"st_blksize","","",45,null],[12,"st_blocks","","",45,null],[12,"st_atime","","",45,null],[12,"st_atime_nsec","","",45,null],[12,"st_mtime","","",45,null],[12,"st_mtime_nsec","","",45,null],[12,"st_ctime","","",45,null],[12,"st_ctime_nsec","","",45,null],[3,"pthread_attr_t","","",null,null],[3,"ipc_perm","","",null,null],[12,"__key","","",46,null],[12,"uid","","",46,null],[12,"gid","","",46,null],[12,"cuid","","",46,null],[12,"cgid","","",46,null],[12,"mode","","",46,null],[12,"__seq","","",46,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",47,null],[12,"shm_segsz","","",47,null],[12,"shm_atime","","",47,null],[12,"shm_dtime","","",47,null],[12,"shm_ctime","","",47,null],[12,"shm_cpid","","",47,null],[12,"shm_lpid","","",47,null],[12,"shm_nattch","","",47,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"select","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_gettime","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fstat64","","",null,null],[5,"stat64","","",null,null],[5,"open64","","",null,null],[5,"creat64","","",null,null],[5,"lseek64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"mmap64","","",null,null],[5,"lstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"readdir64_r","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"unshare","","",null,null],[5,"sethostname","","",null,null],[5,"setns","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"getnameinfo","","",null,null],[5,"eventfd","","",null,null],[5,"ptrace","","",null,null],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",48,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",48,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",48,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",48,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",48,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",48,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",48,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",48,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",48,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",48,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",48,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",48,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",48,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",48,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",48,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",48,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",48,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",48,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",48,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",48,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",48,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",48,null],[11,"cloned","","Maps an `Option<&T>` to an `Option<T>` by cloning the contents of the\noption.",48,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",48,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","core::num","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"fmt","","",49,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"eq","core::num::flt2dec::decoder","",50,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"fmt","","",50,{"inputs":[{"name":"decoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",50,{"inputs":[{"name":"decoded"}],"output":{"name":"decoded"}}],[11,"eq","","",51,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"fmt","","",51,{"inputs":[{"name":"fulldecoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",51,{"inputs":[{"name":"fulldecoded"}],"output":{"name":"fulldecoded"}}],[11,"fmt","core::num::flt2dec","",52,{"inputs":[{"name":"part"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",52,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"clone","","",52,{"inputs":[{"name":"part"}],"output":{"name":"part"}}],[11,"len","","Returns the exact byte length of given part.",52,{"inputs":[{"name":"part"}],"output":{"name":"usize"}}],[11,"write","","Writes a part into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",52,null],[11,"clone","","",53,{"inputs":[{"name":"formatted"}],"output":{"name":"formatted"}}],[11,"len","","Returns the exact byte length of combined formatted result.",53,{"inputs":[{"name":"formatted"}],"output":{"name":"usize"}}],[11,"write","","Writes all formatted parts into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",53,null],[11,"fmt","","",54,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",54,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",54,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","core::num::dec2flt::rawfp","",55,{"inputs":[{"name":"unpacked"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",55,{"inputs":[{"name":"unpacked"}],"output":{"name":"unpacked"}}],[11,"new","","",55,{"inputs":[{"name":"unpacked"},{"name":"u64"},{"name":"i16"}],"output":{"name":"unpacked"}}],[11,"fmt","core::num::dec2flt::parse","",56,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",57,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"fmt","","",57,{"inputs":[{"name":"decimal"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",57,null],[11,"eq","","",58,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"fmt","","",58,{"inputs":[{"name":"parseresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::dec2flt","",59,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",59,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",59,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",60,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",60,{"inputs":[{"name":"floaterrorkind"}],"output":{"name":"floaterrorkind"}}],[11,"fmt","","",60,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",59,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::bignum","Makes a bignum from one digit.",61,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"from_u64","","Makes a bignum from `u64` value.",61,{"inputs":[{"name":"big32x40"},{"name":"u64"}],"output":{"name":"big32x40"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",61,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",61,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",61,{"inputs":[{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",61,{"inputs":[{"name":"big32x40"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",61,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"add_small","","",61,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",61,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",61,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",61,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",61,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",61,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",61,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",61,null],[11,"eq","","",61,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",61,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"option"}}],[11,"cmp","","",61,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"ordering"}}],[11,"clone","","",61,{"inputs":[{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"fmt","","",61,{"inputs":[{"name":"big32x40"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::bignum::tests","Makes a bignum from one digit.",62,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"from_u64","","Makes a bignum from `u64` value.",62,{"inputs":[{"name":"big8x3"},{"name":"u64"}],"output":{"name":"big8x3"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",62,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",62,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",62,{"inputs":[{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",62,{"inputs":[{"name":"big8x3"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",62,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"add_small","","",62,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",62,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",62,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",62,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",62,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",62,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",62,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",62,null],[11,"eq","","",62,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",62,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"option"}}],[11,"cmp","","",62,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"ordering"}}],[11,"clone","","",62,{"inputs":[{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"fmt","","",62,{"inputs":[{"name":"big8x3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::num::diy_float","",63,{"inputs":[{"name":"fp"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",63,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"mul","","Returns a correctly rounded product of itself and `other`.",63,{"inputs":[{"name":"fp"},{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize","","Normalizes itself so that the resulting mantissa is at least `2^63`.",63,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize_to","","Normalizes itself to have the shared exponent.\nIt can only decrease the exponent (and thus increase the mantissa).",63,{"inputs":[{"name":"fp"},{"name":"i16"}],"output":{"name":"fp"}}],[11,"fmt","core::num","",64,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",64,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",64,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",65,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",65,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",65,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",66,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",66,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",66,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",67,null],[11,"fmt","","",67,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",67,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",67,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",67,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",67,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",67,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",67,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",67,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",67,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually \"non-zero\".",67,{"inputs":[{"name":"nonzero"},{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",67,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",68,null],[11,"get","","Dereferences the content.",68,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",68,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",68,null],[11,"fmt","","",68,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",69,null],[11,"clone","","",69,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",69,null],[11,"fmt","","",69,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::marker","",70,null],[11,"eq","","",70,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",70,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",70,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",70,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",71,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",71,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",71,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",72,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",72,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",72,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",73,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",73,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",73,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",74,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",74,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",74,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",75,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",75,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",75,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",75,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",75,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",75,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","libc","",76,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",76,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",76,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",76,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",76,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",76,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",76,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",76,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",77,null],[11,"fmt","","",77,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",77,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",77,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",77,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",78,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",79,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",80,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",81,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",82,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",78,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",78,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",78,null],[11,"swap","","Stores a value into the bool, returning the old value.",78,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",78,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",78,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",78,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",78,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",78,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",79,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",79,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",79,null],[11,"swap","","Stores a value into the isize, returning the old value.",79,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",79,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",79,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",79,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",79,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",79,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",79,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",80,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",80,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",80,null],[11,"swap","","Stores a value into the usize, returning the old value.",80,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",80,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",80,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",80,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",80,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",80,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",80,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",81,null],[11,"load","","Loads a value from the pointer.",81,null],[11,"store","","Stores a value into the pointer.",81,null],[11,"swap","","Stores a value into the pointer, returning the old value.",81,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",81,null],[11,"fmt","","",80,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",79,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",78,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",81,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",83,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",83,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",83,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",83,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",83,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",83,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",83,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",84,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",84,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",84,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",85,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",85,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",85,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",85,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",85,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",85,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",85,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",85,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",85,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",86,null],[11,"clone","","",86,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",87,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",87,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",87,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",87,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",88,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",88,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",89,null],[11,"deref","","",88,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",88,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",90,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",90,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",90,null],[11,"clone","core::char","",91,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",92,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",91,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"size_hint","","",91,null],[11,"clone","","",93,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",94,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",93,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",93,null],[11,"clone","core::iter","",95,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",95,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",95,null],[11,"next_back","","",95,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",96,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",96,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",96,null],[11,"next_back","","",96,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",97,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",97,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",97,null],[11,"clone","","",98,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"clone","","",99,{"inputs":[{"name":"chainstate"}],"output":{"name":"chainstate"}}],[11,"next","","",98,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",98,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",98,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",98,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",98,null],[11,"next_back","","",98,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",100,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",100,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",100,null],[11,"next_back","","",100,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",101,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",101,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",101,null],[11,"next_back","","",101,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",102,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",102,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",102,null],[11,"next_back","","",102,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",103,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",103,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",103,null],[11,"next_back","","",103,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",104,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",104,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",104,null],[11,"nth","","",104,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",104,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",104,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",105,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",105,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",105,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",105,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",105,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",105,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",105,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",105,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",106,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",106,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",106,null],[11,"clone","","",107,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",107,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",107,null],[11,"clone","","",108,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",108,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",108,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",108,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",108,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",108,null],[11,"clone","","",109,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",109,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",109,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",109,null],[11,"clone","","",110,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",110,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",110,null],[11,"clone","","",111,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",111,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",111,null],[11,"next_back","","",111,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",112,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",112,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",112,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",112,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",112,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",112,null],[11,"next_back","","",112,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",113,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",113,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",113,null],[11,"next_back","","",113,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",114,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",73,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",72,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",114,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",114,null],[11,"clone","","",115,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",115,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",115,null],[11,"next_back","","",115,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",114,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",114,null],[11,"next","core::ops","",72,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",72,null],[11,"next_back","","",72,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",73,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",116,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",116,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",116,null],[11,"next_back","","",116,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",117,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",117,null],[11,"next_back","","",117,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",117,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",117,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",117,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",118,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",118,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",118,null],[11,"next_back","","",118,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",118,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::option","",48,null],[11,"fmt","","",48,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",48,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",48,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",48,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",48,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",48,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",48,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",48,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",48,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"default","","",48,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",48,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",119,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",119,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",119,null],[11,"next_back","","",119,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",120,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",120,null],[11,"next_back","","",120,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",120,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",121,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",121,null],[11,"next_back","","",121,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",122,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",122,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",122,null],[11,"next_back","","",122,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",48,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",123,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",124,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",125,null],[11,"fmt","","",125,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",125,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",125,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",125,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",125,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",125,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",125,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",125,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",125,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",125,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",125,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",125,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",125,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",125,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",125,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",125,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",125,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",125,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",125,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",125,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",125,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",125,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",125,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",125,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",125,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",125,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",125,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",125,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",125,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",125,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",125,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",125,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",126,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",126,null],[11,"next_back","","",126,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",126,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",127,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",127,null],[11,"next_back","","",127,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",128,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",128,null],[11,"next_back","","",128,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",125,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::simd","",129,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",129,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",130,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",130,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",131,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",131,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",132,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",132,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",133,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",133,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",134,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",134,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",135,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",135,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",136,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",136,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",137,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",137,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",138,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",138,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"add","","",133,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"add","","",134,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"add","","",135,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"add","","",136,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"add","","",129,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"add","","",130,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"add","","",131,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"add","","",132,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"add","","",137,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"add","","",138,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"sub","","",133,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"sub","","",134,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"sub","","",135,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"sub","","",136,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"sub","","",129,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"sub","","",130,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"sub","","",131,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"sub","","",132,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"sub","","",137,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"sub","","",138,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"mul","","",133,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"mul","","",134,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"mul","","",135,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"mul","","",136,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"mul","","",129,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"mul","","",130,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"mul","","",131,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"mul","","",132,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"mul","","",137,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"mul","","",138,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"div","","",137,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"div","","",138,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"shl","","",133,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shl","","",134,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shl","","",135,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shl","","",136,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shl","","",129,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shl","","",130,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shl","","",131,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shl","","",132,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"shr","","",133,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shr","","",134,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shr","","",135,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shr","","",136,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shr","","",129,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shr","","",130,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shr","","",131,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shr","","",132,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitand","","",133,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitand","","",134,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitand","","",135,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitand","","",136,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitand","","",129,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitand","","",130,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitand","","",131,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitand","","",132,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitor","","",133,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitor","","",134,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitor","","",135,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitor","","",136,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitor","","",129,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitor","","",130,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitor","","",131,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitor","","",132,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitxor","","",133,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitxor","","",134,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitxor","","",135,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitxor","","",136,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitxor","","",129,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitxor","","",130,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitxor","","",131,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitxor","","",132,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",139,null],[11,"next","","",139,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",139,null],[11,"count","","",139,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",139,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",139,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",139,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",139,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",140,null],[11,"next","","",140,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",140,null],[11,"count","","",140,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",140,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",140,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",140,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",141,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",141,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",141,null],[11,"next_back","","",141,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",141,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",142,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",142,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",142,null],[11,"next_back","","",142,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",143,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",143,null],[11,"next","","",144,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",144,null],[11,"next","","",145,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",145,null],[11,"next","","",146,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",146,null],[11,"next","","",147,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",147,null],[11,"clone","","",148,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",148,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",148,null],[11,"count","","",148,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"nth","","",148,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",148,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"next_back","","",148,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"clone","","",149,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",149,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",149,null],[11,"count","","",149,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"nth","","",149,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",149,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next_back","","",149,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next","","",150,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",150,null],[11,"count","","",150,{"inputs":[{"name":"chunksmut"}],"output":{"name":"usize"}}],[11,"nth","","",150,{"inputs":[{"name":"chunksmut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",150,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"next_back","","",150,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"fmt","core::str::pattern","",151,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",151,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",151,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",151,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",152,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",153,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",152,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",152,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",152,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",154,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",154,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",154,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",154,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",154,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",154,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",154,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",154,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",155,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",155,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",155,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",155,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",155,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",155,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",155,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",155,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",156,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",156,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",156,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",156,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",156,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",156,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",156,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",156,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",157,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",157,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",158,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",158,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",159,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",159,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",157,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",157,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",157,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",157,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",157,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",160,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",160,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",161,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",161,null],[11,"matching","","",161,null],[11,"use_early_reject","","",162,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",162,null],[11,"matching","","",162,null],[11,"eq","core::str","",163,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",163,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",163,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",163,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",163,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",164,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",164,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",164,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",164,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",164,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",164,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",165,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",165,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",165,null],[11,"next_back","","",165,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",165,{"inputs":[{"name":"chars"}],"output":{"name":"str"}}],[11,"clone","","",166,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",166,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",166,null],[11,"next_back","","",166,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",166,{"inputs":[{"name":"charindices"}],"output":{"name":"str"}}],[11,"clone","","",167,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"next","","",167,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",167,null],[11,"count","","",167,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"last","","",167,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"nth","","",167,{"inputs":[{"name":"bytes"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next_back","","",167,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",167,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",168,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",169,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",169,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",170,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",170,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",169,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",170,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",171,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",171,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",172,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",172,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",171,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",172,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",173,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",174,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",174,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",175,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",175,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",176,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",177,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",177,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",178,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",178,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",177,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",178,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",179,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",180,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",180,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",181,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",181,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",180,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",181,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",182,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",182,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",182,null],[11,"next_back","","",182,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",183,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",184,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",184,null],[11,"call_mut","","",184,null],[11,"call_once","","",184,null],[11,"next","","",183,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",183,null],[11,"next_back","","",183,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",185,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",186,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",186,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",186,null],[11,"finish","","",186,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",186,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",186,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"eq","core::fmt::num","",187,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",187,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",187,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",188,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",188,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",188,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",189,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",189,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",189,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",190,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",190,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",190,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",191,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",191,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",191,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",192,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",192,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",192,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",193,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",193,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",193,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",193,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",193,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",193,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",193,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",193,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",193,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",193,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",193,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",193,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",193,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",193,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",193,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",193,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",193,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",193,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",193,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",193,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",193,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",194,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",195,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Finishes output and returns any error encountered.",195,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",196,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Finishes output and returns any error encountered.",196,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"formatter","","Returns the wrapped `Formatter`.",196,{"inputs":[{"name":"debugtuple"}],"output":{"name":"formatter"}}],[11,"finish","","",197,null],[11,"entry","","Adds a new entry to the set output.",198,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"entries","","Adds the contents of an iterator of entries to the set output.",198,{"inputs":[{"name":"debugset"},{"name":"i"}],"output":{"name":"debugset"}}],[11,"finish","","Finishes output and returns any error encountered.",198,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the list output.",199,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"entries","","Adds the contents of an iterator of entries to the list output.",199,{"inputs":[{"name":"debuglist"},{"name":"i"}],"output":{"name":"debuglist"}}],[11,"finish","","Finishes output and returns any error encountered.",199,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",200,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"entries","","Adds the contents of an iterator of entries to the map output.",200,{"inputs":[{"name":"debugmap"},{"name":"i"}],"output":{"name":"debugmap"}}],[11,"finish","","Finishes output and returns any error encountered.",200,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"clone","core::fmt::rt::v1","",201,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",202,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",203,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",203,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",203,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",204,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",205,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","core::fmt","",206,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",206,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",207,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",208,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",209,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",209,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",209,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",210,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",210,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",210,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",210,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",210,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as 'fill' whenever there is alignment",210,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",210,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",210,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",210,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"sign_plus","","Determines if the `+` flag was specified.",210,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_minus","","Determines if the `-` flag was specified.",210,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"alternate","","Determines if the `#` flag was specified.",210,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",210,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",210,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",210,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",210,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",210,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",210,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"write_str","","",210,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",210,{"inputs":[{"name":"formatter"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","",210,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"fmt","","",206,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",70,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",83,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",85,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",87,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",88,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone_from","libc::dox","Performs copy-assignment from `source`.",211,null],[11,"clone_from","libc::dox::imp","Performs copy-assignment from `source`.",211,null],[11,"clone","libc","",44,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",45,{"inputs":[{"name":"stat64"}],"output":{"name":"stat64"}}],[11,"clone","","",212,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","","",213,{"inputs":[{"name":"sigset_t"}],"output":{"name":"sigset_t"}}],[11,"clone","","",35,{"inputs":[{"name":"sigaction"}],"output":{"name":"sigaction"}}],[11,"clone","","",36,{"inputs":[{"name":"stack_t"}],"output":{"name":"stack_t"}}],[11,"clone","","",37,{"inputs":[{"name":"siginfo_t"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",38,{"inputs":[{"name":"glob64_t"}],"output":{"name":"glob64_t"}}],[11,"clone","","",39,{"inputs":[{"name":"ucred"}],"output":{"name":"ucred"}}],[11,"clone","","",40,{"inputs":[{"name":"statfs"}],"output":{"name":"statfs"}}],[11,"clone","","",41,{"inputs":[{"name":"msghdr"}],"output":{"name":"msghdr"}}],[11,"clone","","",42,{"inputs":[{"name":"termios"}],"output":{"name":"termios"}}],[11,"clone","","",43,{"inputs":[{"name":"flock"}],"output":{"name":"flock"}}],[11,"clone","","",46,{"inputs":[{"name":"ipc_perm"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",47,{"inputs":[{"name":"shmid_ds"}],"output":{"name":"shmid_ds"}}],[11,"clone","","",24,{"inputs":[{"name":"dirent"}],"output":{"name":"dirent"}}],[11,"clone","","",25,{"inputs":[{"name":"dirent64"}],"output":{"name":"dirent64"}}],[11,"clone","","",26,{"inputs":[{"name":"rlimit64"}],"output":{"name":"rlimit64"}}],[11,"clone","","",27,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",28,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",214,{"inputs":[{"name":"pthread_mutex_t"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",215,{"inputs":[{"name":"pthread_rwlock_t"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",216,{"inputs":[{"name":"pthread_mutexattr_t"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",217,{"inputs":[{"name":"pthread_cond_t"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",29,{"inputs":[{"name":"passwd"}],"output":{"name":"passwd"}}],[11,"clone","","",30,{"inputs":[{"name":"statvfs"}],"output":{"name":"statvfs"}}],[11,"clone","","",31,{"inputs":[{"name":"sockaddr_nl"}],"output":{"name":"sockaddr_nl"}}],[11,"clone","","",32,{"inputs":[{"name":"dqblk"}],"output":{"name":"dqblk"}}],[11,"clone","","",33,{"inputs":[{"name":"signalfd_siginfo"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","","",218,{"inputs":[{"name":"fsid_t"}],"output":{"name":"fsid_t"}}],[11,"clone","","",34,{"inputs":[{"name":"mq_attr"}],"output":{"name":"mq_attr"}}],[11,"clone","","",219,{"inputs":[{"name":"cpu_set_t"}],"output":{"name":"cpu_set_t"}}],[11,"clone","","",12,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",13,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",14,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",15,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",16,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",17,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",18,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",220,{"inputs":[{"name":"fd_set"}],"output":{"name":"fd_set"}}],[11,"clone","","",19,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"clone","","",20,{"inputs":[{"name":"sched_param"}],"output":{"name":"sched_param"}}],[11,"clone","","",21,{"inputs":[{"name":"dl_info"}],"output":{"name":"dl_info"}}],[11,"clone","","",22,{"inputs":[{"name":"epoll_event"}],"output":{"name":"epoll_event"}}],[11,"clone","","",23,{"inputs":[{"name":"utsname"}],"output":{"name":"utsname"}}],[11,"clone","","",0,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",1,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",2,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",3,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[11,"clone","","",4,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[11,"clone","","",5,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",6,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",7,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",8,{"inputs":[{"name":"ipv6_mreq"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",9,{"inputs":[{"name":"hostent"}],"output":{"name":"hostent"}}],[11,"clone","","",10,{"inputs":[{"name":"iovec"}],"output":{"name":"iovec"}}],[11,"clone","","",11,{"inputs":[{"name":"pollfd"}],"output":{"name":"pollfd"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"rlim_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"key_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"CBAUD","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"WNOHANG","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"NCCS","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"EXTPROC","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"FIONREAD","","",null,null],[17,"TIOCCONS","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"AF_NETLINK","","",null,null]],"paths":[[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"statvfs"],[3,"sockaddr_nl"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"stat"],[3,"stat64"],[3,"ipc_perm"],[3,"shmid_ds"],[4,"Option"],[3,"Wrapping"],[3,"Decoded"],[4,"FullDecoded"],[4,"Part"],[3,"Formatted"],[4,"Sign"],[3,"Unpacked"],[4,"Sign"],[3,"Decimal"],[4,"ParseResult"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[3,"Big32x40"],[3,"Big8x3"],[3,"Fp"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[4,"ChainState"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"CharRange"],[3,"SipHasher"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[8,"Clone"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex['gl_common'] = {"items":[[0,"","gl_common","Defines everything used by `gl_generator`.",null,null],[8,"GlFunctionsSource","","",null,null],[10,"get_proc_addr","","",0,null]],"paths":[[8,"GlFunctionsSource"]]};
searchIndex['bitflags'] = {"items":[[0,"","bitflags","A typesafe bitmask flag generator.",null,null],[14,"bitflags!","","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
searchIndex['lazy_static'] = {"items":[[0,"","lazy_static","A macro for declaring lazily evaluated statics.",null,null],[14,"lazy_static!","","",null,null]],"paths":[]};
searchIndex['byteorder'] = {"items":[[0,"","byteorder","This crate provides convenience methods for encoding and decoding numbers\nin either big-endian or little-endian order.",null,null],[4,"Error","","An error type for reading bytes.",null,null],[13,"UnexpectedEOF","","An unexpected EOF.",0,null],[13,"Io","","Any underlying IO error that occurs while reading bytes.",0,null],[4,"BigEndian","","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[11,"fmt","","",0,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"error"}}],[11,"from","std::io::error","",1,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"error"}}],[11,"fmt","byteorder","",0,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",0,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[6,"Result","","A short-hand for `result::Result<T, byteorder::Error>`.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends `Read` with methods for reading numbers. (For `std::io`.)",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from\nthe underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from\nthe underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[8,"WriteBytesExt","","Extends `Write` with methods for writing numbers. (For `std::io`.)",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u8"}],"output":{"name":"result"}}],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i8"}],"output":{"name":"result"}}],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u16"}],"output":{"name":"result"}}],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i16"}],"output":{"name":"result"}}],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i64"}],"output":{"name":"result"}}],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to\nthe underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"f32"}],"output":{"name":"result"}}],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to\nthe underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"f64"}],"output":{"name":"result"}}],[8,"ByteOrder","","ByteOrder describes types that can serialize integers as bytes.",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",4,null],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",4,null],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",4,null],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",4,null],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",4,null],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",4,null],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",4,null],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",4,null],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",4,null],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",4,null],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",4,null],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",4,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",4,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",4,null],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",4,null],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",4,null],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",4,null],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",4,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",4,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",4,null],[11,"read_u16","","",5,null],[11,"read_u32","","",5,null],[11,"read_u64","","",5,null],[11,"read_uint","","",5,null],[11,"write_u16","","",5,null],[11,"write_u32","","",5,null],[11,"write_u64","","",5,null],[11,"write_uint","","",5,null],[11,"read_u16","","",6,null],[11,"read_u32","","",6,null],[11,"read_u64","","",6,null],[11,"read_uint","","",6,null],[11,"write_u16","","",6,null],[11,"write_u32","","",6,null],[11,"write_u64","","",6,null],[11,"write_uint","","",6,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from\nthe underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from\nthe underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u8"}],"output":{"name":"result"}}],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i8"}],"output":{"name":"result"}}],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u16"}],"output":{"name":"result"}}],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i16"}],"output":{"name":"result"}}],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i64"}],"output":{"name":"result"}}],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i64"},{"name":"usize"}],"output":{"name":"result"}}],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to\nthe underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"f32"}],"output":{"name":"result"}}],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to\nthe underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"f64"}],"output":{"name":"result"}}]],"paths":[[4,"Error"],[3,"Error"],[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex['debug_builders'] = {"items":[[0,"","debug_builders","",null,null],[3,"DebugStruct","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugTuple","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugSet","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugList","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugMap","","A struct to help with `fmt::Debug` implementations.",null,null],[11,"new","","Creates a new `DebugStruct`.",0,{"inputs":[{"name":"debugstruct"},{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"field","","Adds a new field to the generated struct output.",0,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Consumes the `DebugStruct`, finishing output and returning any error\nencountered.",0,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"new","","Creates a new `DebugTuple`.",1,{"inputs":[{"name":"debugtuple"},{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"field","","Adds a new field to the generated tuple struct output.",1,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Consumes the `DebugTuple`, finishing output and returning any error\nencountered.",1,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"new","","Creates a new `DebugSet`.",2,{"inputs":[{"name":"debugset"},{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"entry","","Adds a new entry to the set output.",2,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"finish","","Consumes the `DebugSet`, finishing output and returning any error\nencountered.",2,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"new","","Creates a new `DebugList`.",3,{"inputs":[{"name":"debuglist"},{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"entry","","Adds a new entry to the set output.",3,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"finish","","Consumes the `DebugSet`, finishing output and returning any error\nencountered.",3,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"new","","Creates a new `DebugMap`.",4,{"inputs":[{"name":"debugmap"},{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"entry","","Adds a new entry to the map output.",4,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"finish","","Consumes the `DebugMap`, finishing output and returning any error\nencountered.",4,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}]],"paths":[[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"]]};
searchIndex['fixedbitset'] = {"items":[[0,"","fixedbitset","**FixedBitSet** is a simple fixed size set of bits.",null,null],[3,"FixedBitSet","","**FixedBitSet** is a simple fixed size set of bits that can\nbe enabled (1 / **true**) or disabled (0 / **false**).",null,null],[11,"hash","","",0,null],[11,"cmp","","",0,{"inputs":[{"name":"fixedbitset"},{"name":"fixedbitset"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"fixedbitset"},{"name":"fixedbitset"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"fixedbitset"},{"name":"fixedbitset"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"fixedbitset"},{"name":"fixedbitset"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"fixedbitset"},{"name":"fixedbitset"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"fixedbitset"},{"name":"fixedbitset"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"fixedbitset"},{"name":"fixedbitset"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"fixedbitset"},{"name":"fixedbitset"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"fixedbitset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"with_capacity","","Create a new **FixedBitSet** with a specific number of bits,\nall initially clear.",0,{"inputs":[{"name":"fixedbitset"},{"name":"usize"}],"output":{"name":"self"}}],[11,"grow","","Grow capacity to **bits**, all new bits initialized to zero",0,{"inputs":[{"name":"fixedbitset"},{"name":"usize"}],"output":null}],[11,"len","","Return the length of the **FixedBitSet** in bits.",0,{"inputs":[{"name":"fixedbitset"}],"output":{"name":"usize"}}],[11,"contains","","Return **true** if the bit is enabled in the **FixedBitSet**,\n**false** otherwise.",0,{"inputs":[{"name":"fixedbitset"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"clear","","Clear all bits.",0,{"inputs":[{"name":"fixedbitset"}],"output":null}],[11,"insert","","**Panics** if **bit** is out of bounds.",0,{"inputs":[{"name":"fixedbitset"},{"name":"usize"}],"output":null}],[11,"set","","**Panics** if **bit** is out of bounds.",0,{"inputs":[{"name":"fixedbitset"},{"name":"usize"},{"name":"bool"}],"output":null}],[11,"as_slice","","View the bitset as a slice of `u32` blocks",0,null],[11,"as_mut_slice","","View the bitset as a mutable slice of `u32` blocks. Writing past the bitlength in the last\nwill cause `contains` to return potentially incorrect results for bits past the bitlength.",0,null],[11,"clone","","",0,{"inputs":[{"name":"fixedbitset"}],"output":{"name":"self"}}],[11,"index","","",0,{"inputs":[{"name":"fixedbitset"},{"name":"usize"}],"output":{"name":"bool"}}]],"paths":[[3,"FixedBitSet"]]};
searchIndex['cfg_if'] = {"items":[[0,"","cfg_if","A macro for defining #[cfg] if-else statements.",null,null],[14,"cfg_if!","","",null,null]],"paths":[]};
initSearch(searchIndex);
