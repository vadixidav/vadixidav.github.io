var searchIndex = {};
searchIndex["scell"] = {"doc":"The intention of this crate is to allow the use of a `Rc&lt;RefCell&lt;T&gt;&gt;` throughout code where, after enough testing\nhas been done, the `unchecked` feature can be enabled, which will convert `SCell` into a `Rc&lt;UnsafeCell&lt;T&gt;&gt;`.","items":[[3,"SCell","scell","A smart container for objects in recursive data structures",null,null],[3,"Ref","","A reference wrapper that lets rust make the same guarentees regardless of internal type",null,null],[3,"RefMut","","A mutable reference wrapper that lets rust make the same guarentees regardless of internal type",null,null],[11,"default","","",0,{"inputs":[],"output":{"name":"scell"}}],[11,"new","","",0,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"borrow","","",0,{"inputs":[{"name":"scell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","",0,{"inputs":[{"name":"scell"}],"output":{"name":"refmut"}}],[11,"clone","","",0,{"inputs":[{"name":"scell"}],"output":{"name":"self"}}],[11,"fmt","","",0,{"inputs":[{"name":"scell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",1,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"fmt","","",1,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",2,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",2,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"fmt","","",2,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"scell"},{"name":"self"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"scell"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"scell"},{"name":"self"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"scell"},{"name":"self"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"scell"},{"name":"self"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"scell"},{"name":"self"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"scell"},{"name":"self"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"scell"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"hash","","",0,{"inputs":[{"name":"scell"},{"name":"h"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"scell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"scell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"self"}}]],"paths":[[3,"SCell"],[3,"Ref"],[3,"RefMut"]]};
initSearch(searchIndex);
